{"version":3,"sources":["webpack:///./node_modules/@asciidoctor/core/dist/browser/asciidoctor.js","webpack:///./node_modules/asciidoctor/index.js","webpack:///(webpack)/buildin/module.js"],"names":["factory","undefined","console","nil","BasicObject","_Object","Module","Class","global_object","this","global","window","log","warn","Opal","config","missing_require_severity","unsupported_features_severity","enable_stack_trace","$hasOwn","Object","hasOwnProperty","$bind","Function","prototype","bind","$setPrototype","setPrototypeOf","$slice","Array","slice","$splice","splice","unique_id","$defineProperty","object","name","initialValue","defineProperty","value","enumerable","configurable","writable","const_get_name","cref","$$const","const_lookup_ancestors","i","ii","ancestors","length","call","const_missing","skip_missing","$const_missing","isRoot","proto","create_iclass","module","iclass","create_dummy_iclass","$$is_module","$$iclasses","push","$$prototype","$$define_methods_on","props","getOwnPropertyNames","prop","chain_iclasses","iclasses","first","last","previous","current","protoToModule","$$module","$$class","is_method_body","body","$$stub","uid","id","obj","$$is_number","$$id","gvars","exit","status","DEBUG","exceptions","pop_exception","pop","inspect","$inspect","toString","truthy","val","$$is_boolean","falsy","const_get_local","result","$$is_class","TypeError","const_get_qualified","cache","cached","current_version","const_cache_version","$$const_cache","create","const_get_relative","nesting","constant","const_lookup_nesting","const_lookup_Object","const_set","$$is_a_module","$$name","$$base_module","$$","constants","inherit","modules","concat","keys","const_remove","old","$$autoload","NameError","$new","$name","allocate_class","superclass","klass","constructor","$$bridge","args","arguments","self","apply","$$constructor","$$meta","build_class_singleton_class","scope","bridged","find_existing_class","$$super","ensureSuperclassMatch","$inherited","bridge","allocate_module","find_existing_module","get_singleton_class","build_module_singletin_class","build_object_singleton_class","meta","mod","is_method","instance_methods","exclude","results","l","j","ll","method_name","method","indexOf","own_instance_methods","methods","own_methods","receiver_methods","singleton_methods","class_variables","ancestor","cvar","$$cvars","class_variable_set","append_features","includer","module_ancestors","ArgumentError","start_chain_after","end_chain_on","includer_ancestors","chain","getPrototypeOf","parent","module_iclass","next_ancestor","$$own_included_modules","own_included_modules","prepend_features","prepender","prepender_iclass","dummy_prepender","previous_parent","flush_methods_in","RuntimeError","$$own_prepended_modules","own_prepended_modules","native_klass","$$ancestors_cache_version","$$ancestors","mods","own_ancestors","included_modules","$$iclass","$$included","add_stubs","stubs","stub","existing_method","add_stub_for","stub_for","method_missing_stub","$method_missing","$$p","args_ary","ac","actual","expected","meth","block_ac","context","find_super_dispatcher","mid","current_func","defcheck","defs","super_method","jsid","$$owner","Kernel","NoMethodError","find_iter_super_dispatcher","implicit","call_jsid","$$define_meth","$$def","$$jsid","ret","returner","$v","brk","breaker","new_brk","Error","yield1","block","arg","LocalJumpError","has_mlhs","$$has_top_level_mlhs_arg","has_trailing_comma","$$has_trailing_comma_in_args","to_ary","$$is_array","yieldX","rescue","exception","candidates","candidate","JS","is_a","$$is_number_class","to_hash","$$is_hash","hash","$to_hash","ary","$to_ary","to_a","$to_a","extract_kwargs","parameters","kwargs","hash2","kwrestargs","given_args","used_args","map","key","given_map","$$smap","send","recv","lambda","$$is_lambda","def","top","defn","$$eval","displayName","$$module_function","singleton_of","$$singleton_of","$method_added","$singleton_method_added","substr","$$is_string","rdef","$$is_singleton","$singleton_method_removed","$method_removed","udef","$singleton_method_undefined","$method_undefined","alias","old_id","$$alias_of","$$arity","$$parameters","$$source_location","$$alias_name","alias_native","native_name","hash_init","$$map","$$keys","hash_clone","from_hash","$$none","$$proc","smap","len","hash_put","key_hash","bucket","last_bucket","$$by_identity","$hash","next","hash_get","hash_delete","hash_rehash","arguments_length","Hash","range","exc","Range","begin","end","excl","ivar","escape_regexp","str","replace","global_regexp","pattern","$$g","RegExp","source","multiline","ignoreCase","lastIndex","global_multiline_regexp","$$gm","loaded_features","current_dir","require_table","normalize","path","parts","part","new_parts","split","join","loaded","paths","load","severity","message","LoadError","require","to_s","$to_s","valueOf","NilClass","$nesting","$module","$truthy","$base","$parent_nesting","$Opal_bridge$1","$Opal_type_error$2","$Opal_coerce_to$3","$Opal_coerce_to$excl$4","$Opal_coerce_to$ques$5","$Opal_try_convert$6","$Opal_compare$7","$Opal_destructure$8","$Opal_respond_to$ques$9","$Opal_inspect_obj$10","$Opal_instance_variable_name$excl$11","$Opal_class_variable_name$excl$12","$Opal_const_name$excl$13","$Opal_pristine$14","type","coerced","$a","$class","$raise","$type_error","$__send__","$coerce_to","a","b","compare","include_all","test","const_name","$upcase","owner_class","method_names","$$pristine","$rb_lt","lhs","rhs","$rb_gt","$$$","$breaker","$klass","$send","$lambda","$range","$hash2","$super","$Module_allocate$1","$Module_initialize$2","$Module_$eq_eq_eq$3","$Module_$lt$4","$Module_$lt_eq$5","$Module_$gt$6","$Module_$gt_eq$7","$Module_$lt_eq_gt$8","$Module_alias_method$9","$Module_alias_native$10","$Module_ancestors$11","$Module_append_features$12","$Module_attr_accessor$13","$Module_attr_reader$14","$Module_attr_writer$15","$Module_autoload$16","$Module_class_variables$17","$Module_class_variable_get$18","$Module_class_variable_set$19","$Module_class_variable_defined$ques$20","$Module_remove_class_variable$21","$Module_constants$22","$Module_constants$23","$Module_nesting$24","$Module_const_defined$ques$25","$Module_const_get$26","$Module_const_missing$28","$Module_const_set$29","$Module_public_constant$30","$Module_define_method$31","$Module_remove_method$33","$Module_singleton_class$ques$34","$Module_include$35","$Module_included_modules$36","$Module_include$ques$37","$Module_instance_method$38","$Module_instance_methods$39","$Module_included$40","$Module_extended$41","$Module_extend_object$42","$Module_method_added$43","$Module_method_removed$44","$Module_method_undefined$45","$Module_module_eval$46","$Module_module_exec$48","$Module_method_defined$ques$49","$Module_module_function$50","$Module_name$51","$Module_prepend$52","$Module_prepend_features$53","$Module_prepended$54","$Module_remove_const$55","$Module_to_s$56","$Module_undef_method$57","$Module_instance_variables$58","$Module_dup$59","$Module_copy_class_variables$60","$Module_copy_constants$61","$iter","$to_proc","other","lt","newname","oldname","names","const$","$$nesting","$$27","$split","o","c","$$s","$const_get","full_const_name","file","$require","$$32","$case","$$unbound","$b","bound","$append_features","$included","mod2","include_super","$$module_eval","$post_args","$$47","string","_lineno","default_eval_options","compiling_options","compiled","compile","$size","arity_check","$merge","$compile","eval","block_self","func","$$full_name","base","unshift","$prepend_features","$prepended","$__id__","consts","$constants","charAt","copy","$zuper","$zuper_i","$zuper_ii","$copy_class_variables","$copy_constants","other_constants","$Class_new$1","$Class_allocate$2","$Class_inherited$3","$Class_initialize_dup$4","$Class_new$5","$Class_superclass$6","$Class_to_s$7","cls","original","$initialize_copy","$allocate","$initialize","$BasicObject_initialize$1","$BasicObject_$eq_eq$2","$BasicObject_eql$ques$3","$BasicObject___id__$4","$BasicObject___send__$5","$BasicObject_$excl$6","$BasicObject_$not_eq$7","$BasicObject_instance_eval$8","$BasicObject_instance_exec$10","$BasicObject_singleton_method_added$11","$BasicObject_singleton_method_removed$12","$BasicObject_singleton_method_undefined$13","$BasicObject_class$14","$BasicObject_method_missing$15","symbol","$$instance_eval","$$9","$rb_le","$gvars","$Kernel_method_missing$1","$Kernel_$eq_tilde$2","$Kernel_$excl_tilde$3","$Kernel_$eq_eq_eq$4","$Kernel_$lt_eq_gt$5","$Kernel_method$6","$Kernel_methods$7","$Kernel_public_methods$8","$Kernel_Array$9","$Kernel_at_exit$10","$Kernel_caller$11","$Kernel_class$12","$Kernel_copy_instance_variables$13","$Kernel_copy_singleton_methods$14","$Kernel_clone$15","$Kernel_initialize_clone$16","$Kernel_define_singleton_method$17","$Kernel_dup$18","$Kernel_initialize_dup$19","$Kernel_enum_for$20","$Kernel_equal$ques$21","$Kernel_exit$22","$Kernel_extend$23","$Kernel_hash$24","$Kernel_initialize_copy$25","$Kernel_inspect$26","$Kernel_instance_of$ques$27","$Kernel_instance_variable_defined$ques$28","$Kernel_instance_variable_get$29","$Kernel_instance_variable_set$30","$Kernel_remove_instance_variable$31","$Kernel_instance_variables$32","$Kernel_Integer$33","$Kernel_Float$34","$Kernel_Hash$35","$Kernel_is_a$ques$36","$Kernel_itself$37","$Kernel_lambda$38","$Kernel_load$39","$Kernel_loop$40","$Kernel_nil$ques$42","$Kernel_printf$43","$Kernel_proc$44","$Kernel_puts$45","$Kernel_p$46","$Kernel_print$48","$Kernel_warn$49","$Kernel_raise$50","$Kernel_rand$51","$Kernel_respond_to$ques$52","$Kernel_respond_to_missing$ques$53","$Kernel_require$54","$Kernel_require_relative$55","$Kernel_require_tree$56","$Kernel_singleton_class$57","$Kernel_sleep$58","$Kernel_srand$59","$Kernel_String$60","$Kernel_tap$61","$Kernel_to_proc$62","$Kernel_to_s$63","$Kernel_catch$64","$Kernel_throw$65","$Kernel_open$66","$Kernel_yield_self$67","$object_id","$$comparable","x","all","__at_exit__","other_singleton_class","self_singleton_class","assign","$kwargs","$copy_instance_variables","$copy_singleton_methods","$initialize_clone","$singleton_class","$initialize_dup","$pop","$call","singleton","$extend_object","$extended","base_digits","toLowerCase","_","head","flag","String","fromCharCode","parseInt","isNaN","Infinity","Math","floor","$to_int","$Integer","parseFloat","$$41","$yield","e","$err","$result","$print","strs","stdout","$puts","$length","VERBOSE","stderr","_backtrace","$exception","max","$rand","abs","$to_i","$expand_path","$join","current_file","seconds","get_time","performance","now","Date","t","seed","$new_seed","$srand","sym","$sym","$arg","$$68","$include","$Exception_new$1","$Exception_exception$2","$Exception_initialize$3","$Exception_backtrace$4","$Exception_exception$5","$Exception_message$6","$Exception_inspect$7","$Exception_set_backtrace$8","$Exception_to_s$9","stack_trace_limit","error","captureStackTrace","backtrace","stack","cloned","$clone","as_str","valid","$EINVAL_new$10","$UncaughtThrowError_initialize$11","$attr_reader","$NameError_initialize$12","$NoMethodError_initialize$13","$KeyError_initialize$14","$KeyError_receiver$15","$KeyError_key$16","receiver","$NilClass_$excl$2","$NilClass_$$3","$NilClass_$$4","$NilClass_$$5","$NilClass_$eq_eq$6","$NilClass_dup$7","$NilClass_clone$8","$NilClass_inspect$9","$NilClass_nil$ques$10","$NilClass_singleton_class$11","$NilClass_to_a$12","$NilClass_to_h$13","$NilClass_to_i$14","$NilClass_to_s$15","$NilClass_to_c$16","$NilClass_rationalize$17","$NilClass_to_r$18","$NilClass_instance_variables$19","$allocate$1","$Rational","$Boolean___id__$2","$Boolean_$excl$3","$Boolean_$$4","$Boolean_$$5","$Boolean_$$6","$Boolean_$eq_eq$7","$Boolean_singleton_class$8","$Boolean_to_s$9","$Boolean_dup$10","$Boolean_clone$11","Boolean","$Comparable_normalize$1","$Comparable_$eq_eq$2","$Comparable_$gt$3","$Comparable_$gt_eq$4","$Comparable_$lt$5","$Comparable_$lt_eq$6","$Comparable_between$ques$7","$Comparable_clamp$8","what","cmp","$normalize","min","$Regexp_$eq_eq$6","$Regexp_$eq_eq_eq$7","$Regexp_$eq_tilde$8","$Regexp_inspect$9","$Regexp_match$10","$Regexp_match$ques$11","$Regexp_$$12","$Regexp_source$13","$Regexp_options$14","$Regexp_casefold$ques$15","$escape$2","$last_match$3","$union$4","$new$5","allocated","uninitialized","n","is_first_part_array","quoted_validated","options","each_part_options","$$is_regexp","$escape","$options","$to_str","regexp","temp","$match","$begin","matches","exec","regexp_pattern","regexp_flags","chars","chars_length","char_escaped","regexp_pattern_escaped","current_char","pos","m","md","re","index","$MatchData_initialize$16","$MatchData_$$$17","$MatchData_offset$18","$MatchData_$eq_eq$19","$MatchData_begin$20","$MatchData_end$21","$MatchData_captures$22","$MatchData_inspect$23","$MatchData_length$24","$MatchData_to_a$25","$MatchData_to_s$26","$MatchData_values_at$27","match_groups","input","pre_match","post_match","group","$c","$d","values","$$is_range","$rb_divide","$rb_plus","$String___id__$1","$String_try_convert$2","$String_new$3","$String_initialize$4","$String_$percent$5","$String_$$6","$String_$plus$7","$String_$lt_eq_gt$8","$String_$eq_eq$9","$String_$eq_tilde$10","$String_$$$11","$String_b$12","$String_capitalize$13","$String_casecmp$14","$String_casecmp$ques$15","$String_center$16","$String_chars$17","$String_chomp$18","$String_chop$19","$String_chr$20","$String_clone$21","$String_dup$22","$String_count$23","$String_delete$24","$String_delete_prefix$25","$String_delete_suffix$26","$String_downcase$27","$String_each_char$28","$String_each_line$30","$String_empty$ques$31","$String_end_with$ques$32","$String_gsub$33","$String_hash$34","$String_hex$35","$String_include$ques$36","$String_index$37","$String_inspect$38","$String_intern$39","$String_lines$40","$String_length$41","$String_ljust$42","$String_lstrip$43","$String_ascii_only$ques$44","$String_match$45","$String_match$ques$46","$String_next$47","$String_oct$48","$String_ord$49","$String_partition$50","$String_reverse$51","$String_rindex$52","$String_rjust$53","$String_rpartition$54","$String_rstrip$55","$String_scan$56","$String_split$57","$String_squeeze$58","$String_start_with$ques$59","$String_strip$60","$String_sub$61","$String_sum$62","$String_swapcase$63","$String_to_f$64","$String_to_i$65","$String_to_proc$66","$String_to_s$68","$String_tr$69","$String_tr_s$70","$String_upcase$71","$String_upto$72","$String_instance_variables$73","$String__load$74","$String_unicode_normalize$75","$String_unicode_normalized$ques$76","$String_unpack$77","$String_unpack1$78","char_class_from_char_sets","sets","explode_sequences_in_character_set","set","curr_char","skip_next_dash","char_code_from","char_code_upto","char_code","charCodeAt","intersection","setA","setB","chr","neg","tmp","pos_intersection","neg_intersection","data","$format","count","$$cast","size","match","$force_encoding","toUpperCase","ascii_only","$casecmp","width","padstr","ljustified","$ljust","$ceil","rjustified","$rjust","$floor","$each_char","separator","char_class","prefix","suffix","$$29","chomped","trailing","splitted","$enum_for","$chomp","suffixes","replacement","_replacement","match_data","slashes","command","search","offset","regex","code","first_alphanum_char_index","carry","radix","tail","sep","reverse","r","_m","lastIndexOf","patterns","remaining","$captures","limit","castResult","prefixes","pow","$0","$1","$2","$$67","from","to","in_range","ch","start","subs","from_chars","from_length","to_chars","to_length","inverse","global_sub","shift","from_chars_expanded","last_from","to_chars_expanded","last_to","length_diff","pad_char","new_str","sub","last_substitute","stop","s","$succ","form","format","$rb_minus","$falsy","$Enumerable_all$ques$1","$Enumerable_any$ques$5","$Enumerable_chunk$9","$Enumerable_chunk_while$12","$Enumerable_collect$14","$Enumerable_collect_concat$16","$Enumerable_count$19","$Enumerable_cycle$23","$Enumerable_detect$25","$Enumerable_drop$27","$Enumerable_drop_while$28","$Enumerable_each_cons$29","$Enumerable_each_entry$31","$Enumerable_each_slice$33","$Enumerable_each_with_index$35","$Enumerable_each_with_object$37","$Enumerable_entries$39","$Enumerable_find_all$40","$Enumerable_find_index$42","$Enumerable_first$45","$Enumerable_grep$48","$Enumerable_grep_v$50","$Enumerable_group_by$52","$Enumerable_include$ques$54","$Enumerable_inject$56","$Enumerable_lazy$57","$Enumerable_enumerator_size$59","$Enumerable_max$60","$Enumerable_max_by$61","$Enumerable_min$63","$Enumerable_min_by$64","$Enumerable_minmax$66","$Enumerable_minmax_by$68","$Enumerable_none$ques$69","$Enumerable_one$ques$73","$Enumerable_partition$77","$Enumerable_reject$79","$Enumerable_reverse_each$81","$Enumerable_slice_before$83","$Enumerable_slice_after$85","$Enumerable_slice_when$88","$Enumerable_sort$90","$Enumerable_sort_by$92","$Enumerable_sum$97","$Enumerable_take$99","$Enumerable_take_while$100","$Enumerable_uniq$102","$Enumerable_zip$104","comparableForPattern","$$2","$$3","$$4","comparable","$destructure","$returner","$$6","$$7","$$8","$$10","$$11","$enumerator_size","yielder","accumulate","releaseAccumulate","$each","$$13","before","after","$$15","$$17","$$18","item","$flatten","$$20","$$21","$$22","$warn","$$24","param","ifnone","$$26","number","dropping","$$30","$try_convert","enum_size","buffer","element","$$34","$$36","$$38","$$43","$$44","$$46","$$49","$push","$$51","$$53","$writer","$$55","$$58","enum$","$reverse","$first","$$62","by","$compare","$$65","first_time","min_cmp","max_cmp","$$70","$$71","$$72","$$74","$$75","$$76","$$78","$$80","$$82","$$84","$dup","$$86","$$87","end_chunk","$$89","last_after","$each_cons","params","$$91","$$93","$$94","$$95","$$96","dup","initial","$$98","num","$$101","$$103","produced","$values","others","$Enumerator_for$1","$Enumerator_initialize$2","$Enumerator_each$3","$Enumerator_size$4","$Enumerator_with_index$5","$Enumerator_inspect$7","$$is_enumerator","$Generator_initialize$8","$Generator_each$9","$Yielder_initialize$10","$Yielder_yield$11","$Yielder_$lt$lt$12","$Lazy_initialize$13","$Lazy_lazy$16","$Lazy_collect$17","$Lazy_collect_concat$19","$Lazy_drop$23","$Lazy_drop_while$25","$Lazy_enum_for$27","$Lazy_find_all$28","$Lazy_grep$30","$Lazy_reject$33","$Lazy_take$35","$Lazy_take_while$37","$Lazy_inspect$39","enumerator","$$14","each_args","v","array","current_size","set_size","dropped","succeeding","$$31","taken","$rb_times","$Numeric_coerce$1","$Numeric___coerced__$2","$Numeric_$lt_eq_gt$3","$Numeric_$plus$$4","$Numeric_$minus$$5","$Numeric_$percent$6","$Numeric_abs$7","$Numeric_abs2$8","$Numeric_angle$9","$Numeric_ceil$10","$Numeric_conj$11","$Numeric_denominator$12","$Numeric_div$13","$Numeric_divmod$14","$Numeric_fdiv$15","$Numeric_floor$16","$Numeric_i$17","$Numeric_imag$18","$Numeric_integer$ques$19","$Numeric_nonzero$ques$20","$Numeric_numerator$21","$Numeric_polar$22","$Numeric_quo$23","$Numeric_real$24","$Numeric_real$ques$25","$Numeric_rect$26","$Numeric_round$27","$Numeric_to_c$28","$Numeric_to_int$29","$Numeric_truncate$30","$Numeric_zero$ques$31","$Numeric_positive$ques$32","$Numeric_negative$ques$33","$Numeric_dup$34","$Numeric_clone$35","$Numeric_finite$ques$36","$Numeric_infinite$ques$37","$Float","$coerce","$div","ndigits","$to_f","$to_r","$denominator","$Complex","$numerator","$abs","digits","$round","$truncate","$Array_$$$1","$Array_initialize$2","$Array_try_convert$3","$Array_$$4","$Array_$$5","$Array_$$6","$Array_$plus$7","$Array_$minus$8","$Array_$lt$lt$9","$Array_$lt_eq_gt$10","$Array_$eq_eq$11","$Array_$$$12","$Array_$$$eq$13","$Array_any$ques$14","$Array_assoc$15","$Array_at$16","$Array_bsearch_index$17","$Array_bsearch$18","$Array_cycle$19","$Array_clear$21","$Array_count$22","$Array_initialize_copy$23","$Array_collect$24","$Array_collect$excl$26","$Array_combination$28","$Array_repeated_combination$30","$Array_compact$32","$Array_compact$excl$33","$Array_concat$34","$Array_delete$37","$Array_delete_at$38","$Array_delete_if$39","$Array_dig$41","$Array_drop$42","$Array_dup$43","$Array_each$44","$Array_each_index$46","$Array_empty$ques$48","$Array_eql$ques$49","$Array_fetch$50","$Array_fill$51","$Array_first$52","$Array_flatten$53","$Array_flatten$excl$54","$Array_hash$55","$Array_include$ques$56","$Array_index$57","$Array_insert$58","$Array_inspect$59","$Array_join$60","$Array_keep_if$61","$Array_last$63","$Array_length$64","$Array_max$65","$Array_min$66","$Array_permutation$67","$Array_repeated_permutation$69","$Array_pop$71","$Array_product$72","$Array_push$73","$Array_rassoc$74","$Array_reject$75","$Array_reject$excl$77","$Array_replace$79","$Array_reverse$80","$Array_reverse$excl$81","$Array_reverse_each$82","$Array_rindex$84","$Array_rotate$85","$Array_rotate$excl$86","$Array_sample$89","$Array_select$90","$Array_select$excl$92","$Array_shift$94","$Array_shuffle$95","$Array_shuffle$excl$96","$Array_slice$excl$97","$Array_sort$98","$Array_sort$excl$99","$Array_sort_by$excl$100","$Array_take$102","$Array_take_while$103","$Array_to_a$104","$Array_to_h$105","$Array_transpose$106","$Array_uniq$109","$Array_uniq$excl$110","$Array_unshift$111","$Array_values_at$112","$Array_zip$115","$Array_inherited$116","$Array_instance_variables$117","$Array_pack$119","toArraySubclass","$replace","binomial_coefficient","k","$keys","converted","recursed","_eqeq","Integer","$array_slice_range","$array_slice_index_length","extra","smaller","satisfied","$$25","chosen","lev","done","iterate","$$35","$$40","idx","idxs","$$45","_eql","defaults","one","two","left","right","$end","level","_flatten","flattened","hash_ids","hash_id","member","objects","permute","offensive","output","perm","used","how_many","descending_factorial","blk","subarray","counters","lengths","arrays","resultlen","outer_loop","$$83","firstPart","lastPart","cnt","$rotate","$SampleRandom_initialize$87","$SampleRandom_rand$88","rng","random","abandon","spin","targetIndex","oldValue","$at","randgen","range_start","range_end","range_length","sort","y","$sort","$$107","row","$$108","original_length","$$113","out","elem","$$114","finish","$last","jj","$take","$$118","$pristine","$rb_ge","$Hash_$$$1","$Hash_allocate$2","$Hash_try_convert$3","$Hash_initialize$4","$Hash_$eq_eq$5","$Hash_$gt_eq$6","$Hash_$gt$8","$Hash_$lt$9","$Hash_$lt_eq$10","$Hash_$$$11","$Hash_$$$eq$12","$Hash_assoc$13","$Hash_clear$14","$Hash_clone$15","$Hash_compact$16","$Hash_compact$excl$17","$Hash_compare_by_identity$18","$Hash_compare_by_identity$ques$19","$Hash_default$20","$Hash_default$eq$21","$Hash_default_proc$22","$Hash_default_proc$eq$23","$Hash_delete$24","$Hash_delete_if$25","$Hash_dig$27","$Hash_each$28","$Hash_each_key$30","$Hash_each_value$32","$Hash_empty$ques$34","$Hash_fetch$35","$Hash_fetch_values$36","$Hash_flatten$38","$Hash_has_key$ques$39","$Hash_has_value$ques$40","$Hash_hash$41","$Hash_index$42","$Hash_indexes$43","$Hash_inspect$44","$Hash_invert$45","$Hash_keep_if$46","$Hash_keys$48","$Hash_length$49","$Hash_merge$50","$Hash_merge$excl$51","$Hash_rassoc$52","$Hash_rehash$53","$Hash_reject$54","$Hash_reject$excl$56","$Hash_replace$58","$Hash_select$59","$Hash_select$excl$61","$Hash_shift$63","$Hash_slice$64","$Hash_to_a$65","$Hash_to_h$66","$Hash_to_hash$67","$Hash_to_proc$68","$Hash_transform_keys$70","$Hash_transform_keys$excl$72","$Hash_transform_values$74","$Hash_transform_values$excl$76","$Hash_values$78","inspect_ids","argv","argc","$store","other_value","other_key","other_val","$fetch","$default","changes_were_made","identity_hash","$compare_by_identity","default_proc","proc","$arity","$$33","$$37","other_keys","$$57","$default_proc","$$60","$$69","$$73","new_key","$$77","$Number_coerce$2","$Number___id__$3","$Number_$plus$4","$Number_$minus$5","$Number_$$6","$Number_$slash$7","$Number_$percent$8","$Number_$$9","$Number_$$10","$Number_$$11","$Number_$lt$12","$Number_$lt_eq$13","$Number_$gt$14","$Number_$gt_eq$15","$Number_$lt_eq_gt$16","$Number_$lt$lt$17","$Number_$gt$gt$18","$Number_$$$19","$Number_$plus$$20","$Number_$minus$$21","$Number_$$22","$Number_$$$23","$Number_$eq_eq_eq$24","$Number_$eq_eq$25","$Number_abs$26","$Number_abs2$27","$Number_allbits$ques$28","$Number_anybits$ques$29","$Number_angle$30","$Number_bit_length$31","$Number_ceil$32","$Number_chr$33","$Number_denominator$34","$Number_downto$35","$Number_equal$ques$37","$Number_even$ques$38","$Number_floor$39","$Number_gcd$40","$Number_gcdlcm$41","$Number_integer$ques$42","$Number_is_a$ques$43","$Number_instance_of$ques$44","$Number_lcm$45","$Number_next$46","$Number_nobits$ques$47","$Number_nonzero$ques$48","$Number_numerator$49","$Number_odd$ques$50","$Number_ord$51","$Number_pow$52","$Number_pred$53","$Number_quo$54","$Number_rationalize$55","$Number_remainder$56","$Number_round$57","$Number_step$58","$Number_times$60","$Number_to_f$62","$Number_to_i$63","$Number_to_r$64","$Number_to_s$65","$Number_truncate$66","$Number_digits$67","$Number_divmod$68","$Number_upto$69","$Number_zero$ques$71","$Number_size$72","$Number_nan$ques$73","$Number_finite$ques$74","$Number_infinite$ques$75","$Number_positive$ques$76","$Number_negative$ques$77","$bridge","Number","$__coerced__","spaceship_operator","bit","mask","PI","f","factor","ceil","round","encoding","$gcd","$lcm","eps","$frexp","$ldexp","$rationalize","exp","step","$$59","positional_args","keyword_args","validateParameters","sign","stepFloatSize","err","stepSize","d","$$61","$allocate$78","$eq_eq_eq$79","$sqrt$80","sqrt","$allocate$81","$eq_eq_eq$82","MAX_VALUE","MIN_VALUE","NaN","EPSILON","$Range_initialize$1","$Range_$eq_eq$2","$Range_$eq_eq_eq$3","$Range_cover$ques$4","$Range_each$5","$Range_eql$ques$6","$Range_exclude_end$ques$7","$Range_first$8","$Range_last$9","$Range_max$10","$Range_min$11","$Range_size$12","$Range_step$13","$Range_bsearch$17","$Range_to_s$18","$Range_inspect$19","$Range_marshal_load$20","$Range_hash$21","beg_cmp","end_cmp","infinity","range_begin","$$16","coerceStepSize","enumeratorSize","$brk","$$brk","$Proc_new$1","$Proc_call$2","$Proc_to_proc$3","$Proc_lambda$ques$4","$Proc_arity$5","$Proc_source_location$6","$Proc_binding$7","$Proc_parameters$8","$Proc_curry$9","$Proc_dup$10","$$is_curried","parameter","arity","curried","original_proc","$$original_proc","$Method_initialize$1","$Method_arity$2","$Method_parameters$3","$Method_source_location$4","$Method_comments$5","$Method_call$6","$Method_unbind$7","$Method_to_proc$8","$Method_inspect$9","owner","$$comments","$source_location","$UnboundMethod_initialize$10","$UnboundMethod_arity$11","$UnboundMethod_parameters$12","$UnboundMethod_source_location$13","$UnboundMethod_comments$14","$UnboundMethod_bind$15","$UnboundMethod_inspect$16","LOADED_FEATURES","LOAD_PATH","SAFE","$$12","$Encoding_register$1","$Encoding_find$3","$Encoding_initialize$4","$Encoding_ascii_compatible$ques$5","$Encoding_dummy$ques$6","$Encoding_to_s$7","$Encoding_inspect$8","$Encoding_each_byte$9","$Encoding_getbyte$10","$Encoding_bytesize$11","ascii","dummy","register","encoding_name","$const_set","$sub","$default_external","$attr_accessor","$each_byte$13","$bytesize$14","encoded","encodeURIComponent","encoded_length","$bytes","$each_byte$16","$bytesize$17","$each_byte$19","$bytesize$20","$each_byte$22","$bytesize$23","$each_byte$25","$bytesize$26","$String_bytes$27","$String_bytesize$28","$String_each_byte$29","$String_encode$30","$String_force_encoding$31","$String_getbyte$32","$String_valid_encoding$ques$33","$each_byte","$bytesize","$find","$getbyte","$Struct_new$1","$Struct_define_struct_attribute$6","$Struct_members$9","$Struct_inherited$10","$Struct_initialize$12","$Struct_members$15","$Struct_hash$16","$Struct_$$$17","$Struct_$$$eq$18","$Struct_$eq_eq$19","$Struct_eql$ques$20","$Struct_each$21","$Struct_each_pair$24","$Struct_length$27","$Struct_to_a$28","$Struct_inspect$30","$Struct_to_h$32","$Struct_values_at$34","$Struct_dig$36","keyword_init","$unshift","$define_struct_attribute","instance","$$data","$alias_method","$$keyword_init","$members","members","$to_sym","recursed1","recursed2","struct","$$23","$each_pair","h","$IO_tty$ques$1","$IO_closed$ques$2","$IO_write$3","$IO_flush$4","tty","closed","write_proc","$Writable_$lt$lt$5","$Writable_print$6","$Writable_puts$8","$write","$String","newline","$concat","$Readable_readbyte$10","$Readable_readchar$11","$Readable_readline$12","$Readable_readpartial$13","$getc","integer","outbuf","stdin","process","write","$extend","$to_s$1","$include$2","$chdir$1","$pwd$2","$home$3","dir","prev_cwd","windows_root_rx","$absolute_path$1","$expand_path$2","$dirname$3","$basename$4","$extname$5","$exist$ques$6","$directory$ques$7","$join$9","$split$12","$coerce_to_path","$to_path","$sep_chars","basedir","sep_chars","path_abs","basedir_abs","leading_sep","new_path","$pwd","home","home_path_regexp","$home","$absolute_path","absolute","filename","last_dot_idx","$basename","$rindex","files","$gsub","$each_with_index","next_item","$Process___register_clock__$1","$Process_pid$2","$Process_times$3","$Process_clock_gettime$4","monotonic","__clocks__","$__register_clock__","hrtime","hrtime_base","us","$now","clock_id","unit","clock","ms","$Signal_trap$5","$GC_start$6","$public$35","$private$36","warnings","handle_unsupported_feature","$String_$lt$lt$1","$String_capitalize$excl$2","$String_chomp$excl$3","$String_chop$excl$4","$String_downcase$excl$5","$String_gsub$excl$6","$String_lstrip$excl$7","$String_next$excl$8","$String_reverse$excl$9","$String_slice$excl$10","$String_squeeze$excl$11","$String_strip$excl$12","$String_sub$excl$13","$String_succ$excl$14","$String_swapcase$excl$15","$String_tr$excl$16","$String_tr_s$excl$17","$String_upcase$excl$18","$String_prepend$19","$String_$$$eq$20","$String_clear$21","$String_encode$excl$22","$String_unicode_normalize$excl$23","ERROR","$Kernel_freeze$24","$Kernel_frozen$ques$25","$Kernel_taint$26","$Kernel_untaint$27","$Kernel_tainted$ques$28","$Module_public$29","$Module_private_class_method$30","$Module_private_method_defined$ques$31","$Module_private_constant$32","$Kernel_private_methods$33","$Kernel_eval$34","moduleConfig","$File_read$1","xhr","XMLHttpRequest","open","addEventListener","responseText","overrideMimeType","platform","engine","framework","ioModule","runtime","$AbstractNode_read_contents$1","$AbstractNode_generate_data_uri_from_uri$2","document","target","opts","doc","$path_resolver","$web_path","$normalize_system_path","$read_asset","$base_dir","$logger","$prepare_source_string","$read","image_uri","cache_uri","contentType","b64encoded","binary","rawText","byteCode","btoa","getResponseHeader","endsWith","$OpenURI_open_uri$1","rest","$path","$PathResolver_root$ques$1","$PreprocessorReader_resolve_include_path$1","path_resolver","include_stack","attrlist","attributes","p_target","base_dir","inc_path","relpath","ctx_dir","top_level","$posixify","$attributes","$replace_next_line","$Set_$$$1","$Set_initialize$2","$Set_dup$4","$Set_$minus$5","$Set_inspect$6","$Set_$eq_eq$7","$Set_add$9","$Set_classify$10","$Set_collect$excl$13","$Set_delete$15","$Set_delete$ques$16","$Set_delete_if$17","$Set_add$ques$20","$Set_each$21","$Set_empty$ques$22","$Set_eql$ques$23","$Set_clear$25","$Set_include$ques$26","$Set_merge$27","$Set_replace$29","$Set_size$30","$Set_subtract$31","$Set_$$33","$Set_superset$ques$34","$Set_proper_superset$ques$36","$Set_subset$ques$38","$Set_proper_subset$ques$40","$Set_to_a$42","$add","$subtract","$instance_variable_get","$delete","$$19","$clear","$$28","$$39","$Enumerable_to_set$43","$Kernel_open$1","$Kernel___dir__$2","$File_initialize$1","$File_read$2","$File_each_line$3","$File_readlines$4","eof","flags","encoding_flag_regexp","contents","lineno","res","lines","$to_enum","$each_line","$readlines","$readlines$5","$file$ques$6","$readable$ques$7","$read$8","$IO_read$9","$MatchData_$$$eq$1","$String_limit_bytesize$1","$String_unpack$2","$byteslice","$select","$_original_unpack","$URI_parse$1","$URI_path$2","$Base64_decode64$1","$Base64_encode64$2","$Base64_strict_decode64$3","$Base64_strict_encode64$4","$Base64_urlsafe_decode64$5","$Base64_urlsafe_encode64$6","encode","decode","Buffer","atob","padding","$Number_round$1","toFixed","$Asciidoctor_unpack_hex_range$1","$unpack_hex_range","$StringScanner_initialize$1","$StringScanner_beginning_of_line$ques$2","$StringScanner_scan$3","$StringScanner_scan_until$4","$StringScanner_$$$5","$StringScanner_check$6","$StringScanner_check_until$7","$StringScanner_peek$8","$StringScanner_eos$ques$9","$StringScanner_exist$ques$10","$StringScanner_skip$11","$StringScanner_skip_until$12","$StringScanner_get_byte$13","$StringScanner_match$ques$14","$StringScanner_pos$eq$15","$StringScanner_matched_size$16","$StringScanner_post_match$17","$StringScanner_pre_match$18","$StringScanner_reset$19","$StringScanner_rest$20","$StringScanner_rest$ques$21","$StringScanner_rest_size$22","$StringScanner_terminate$23","$StringScanner_unscan$24","$StringScanner_anchor$25","working","matched","prev_pos","$anchor","substring","$scan_until","match_str","match_len","$rest","$private","$$1","$instance_method","$merge$2","acc","$MatchData_names$1","$Helpers_require_library$1","$Helpers_prepare_source_array$2","$Helpers_prepare_source_string$7","$Helpers_uriish$ques$10","$Helpers_encode_uri_component$11","$Helpers_encode_spaces_in_uri$12","$Helpers_rootname$13","$Helpers_basename$14","$Helpers_extname$ques$15","$Helpers_extname$16","$Helpers_extname$17","$Helpers_mkdir_p$18","$Helpers_int_to_roman$19","$Helpers_nextval$21","$Helpers_resolve_class$22","$Helpers_class_for_name$23","$module_function","gem_name","on_failure","details","$message","$$5","leading_2_bytes","leading_bytes","$unpack","line","$encode","$rstrip","$encoding","$index","drop_ext","$extname","fallback","parent_dir","$dirname","$mkdir_p","$mkdir","$private_constant","repeat","$divmod","intval","$ord","$chr","$class_for_name","qualified_name","resolved","$Logger$1","$Logger_initialize$4","$Logger_level$eq$5","$Logger_info$6","$Logger_debug$7","$Logger_warn$8","$Logger_error$9","$Logger_fatal$10","$Logger_unknown$11","$Logger_info$ques$12","$Logger_debug$ques$13","$Logger_warn$ques$14","$Logger_error$ques$15","$Logger_fatal$ques$16","$Logger_add$17","progname","pipe","formatter","$to_h","$Formatter_call$2","$Formatter_message_as_string$3","time","msg","$strftime","$message_as_string","$backtrace","$key","$Logger_initialize$1","$Logger_add$2","max_severity","$BasicFormatter_call$3","$AutoFormattingMessage_inspect$4","sloc","$MemoryLogger$5","$MemoryLogger_initialize$7","$MemoryLogger_add$8","$MemoryLogger_clear$9","$MemoryLogger_empty$ques$10","$MemoryLogger_max_severity$11","messages","accum","$max","$NullLogger_initialize$13","$NullLogger_add$14","logger_class","$logger$15","$logger$eq$16","$memoize_logger$17","logger","$memoize_logger","new_logger","$Logging_included$18","$Logging_logger$19","$Logging_message_with_context$20","$private_class_method","into","text","$Asciidoctor$1","$Asciidoctor$2","$Substitutors_apply_subs$1","$Substitutors_apply_normal_subs$3","$Substitutors_apply_header_subs$4","$Substitutors_apply_reftext_subs$5","$Substitutors_sub_specialchars$6","$Substitutors_sub_quotes$7","$Substitutors_sub_attributes$10","$Substitutors_sub_replacements$16","$Substitutors_sub_macros$19","$Substitutors_sub_post_replacements$41","$Substitutors_sub_source$44","$Substitutors_sub_callouts$45","$Substitutors_highlight_source$47","$Substitutors_resolve_lines_to_highlight$48","$Substitutors_extract_passthroughs$50","$Substitutors_restore_passthroughs$54","$Substitutors_resolve_subs$56","$Substitutors_resolve_block_subs$58","$Substitutors_resolve_pass_subs$59","$Substitutors_expand_subs$60","$Substitutors_commit_subs$62","$Substitutors_parse_attributes$63","$Substitutors_extract_callouts$64","$Substitutors_restore_callouts$67","$Substitutors_extract_inner_passthrough$70","$Substitutors_convert_quoted_text$71","$Substitutors_do_replacement$72","$Substitutors_parse_quoted_text_attributes$73","$Substitutors_normalize_text$74","$Substitutors_split_simple_csv$75","$freeze","is_multiline","passthrus","clear_passthrus","passthroughs","passthroughs_locked","$extract_passthroughs","$sub_specialchars","$sub_quotes","$sub_attributes","$sub_replacements","$sub_macros","$highlight_source","$sub_callouts","$sub_post_replacements","$restore_passthroughs","$apply_subs","compat","$compat_mode","$convert_quoted_text","doc_attrs","drop","drop_line","drop_line_severity","drop_empty_line","attribute_undefined","attribute_missing","$shift","$store_attribute","$attribute_undefined","$downcase","$attribute_missing","$squeeze","restore","$do_replacement","found_square_bracket","found_colon","found_macroish","found_macroish_short","extensions","$extensions","$inline_macros","extension","$instance","$regexp","content","default_attrs","ext_config","inline_subs","$names","$config","$normalize_text","$parse_attributes","$process_method","$text","$expand_subs","$convert","$info","delim_idx","delim","$strip","$compact","$min","$chop","menu","items","submenus","menuitem","it","$e","posattrs","attrs","$register","$tr","primary","terms","secondary","tertiary","see_also","term","visible","see","subbed_term","$parse","$lstrip","$split_simple_csv","$partition","link_opts","mailto","mailto_text","$encode_uri_component","address","$style","reftext","refid","macro","fragment","hash_idx","fragment_len","src2src","$parse_into","$catalog","$outfilesuffix","$natural_xrefs","$resolve_id","footnote","$counter","$footnotes","$id","$$42","process_callouts","callout_rx","autonum","$attr","$callouts","$read_next_id","syntax_hl_name","linenums_mode","source_offset","syntax_hl","callout_marks","start_line_number","highlight_lines","highlighted","$syntax_highlighter","$extract_callouts","$resolve_lines_to_highlight","$highlight","$restore_callouts","$sub_source","spec","entry","negate","line_nums","$count","$uniq","$$52","compat_mode","pass_inline_char1","pass_inline_char2","pass_inline_rx","boundary","escape_count","preceding","old_behavior","passthru_key","$parse_quoted_text_attributes","$resolve_pass_subs","quoted_text","escape_mark","format_mark","$extract_inner_passthrough","pass","subbed_text","$error","subject","modifiers_present","invalid","modifier_operation","resolved_keys","resolved_key","$drop","$resolve_subs","expanded_subs","sub_group","custom_subs","default_subs","content_model","style","$resolve_block_subs","last_lineno","$$66","preamble","conums","guard","conum","guard_it","conum_it","pre","unescaped_attrs","captured","segments","more_roles","roles","$shorthand_property_syntax","normalize_whitespace","unescape_closing_square_brackets","quote_open","$AbstractNode_initialize$1","$AbstractNode_block$ques$2","$AbstractNode_inline$ques$3","$AbstractNode_converter$4","$AbstractNode_parent$eq$5","$AbstractNode_attr$6","$AbstractNode_attr$ques$7","$AbstractNode_set_attr$8","$AbstractNode_remove_attr$9","$AbstractNode_option$ques$10","$AbstractNode_set_option$11","$AbstractNode_enabled_options$12","$AbstractNode_update_attributes$15","$AbstractNode_role$16","$AbstractNode_roles$17","$AbstractNode_role$ques$18","$AbstractNode_has_role$ques$19","$AbstractNode_add_role$20","$AbstractNode_remove_role$21","$AbstractNode_reftext$22","$AbstractNode_reftext$ques$23","$AbstractNode_icon_uri$24","$AbstractNode_image_uri$25","$AbstractNode_media_uri$26","$AbstractNode_generate_data_uri$27","$AbstractNode_generate_data_uri_from_uri$28","$AbstractNode_normalize_asset_path$30","$AbstractNode_normalize_system_path$31","$AbstractNode_normalize_web_path$32","$AbstractNode_read_asset$33","$AbstractNode_read_contents$34","$AbstractNode_is_uri$ques$37","$document","node_name","$converter","default_value","fallback_name","expected_value","overwrite","new_attributes","$update","$apply_reftext_subs","icon","$image_uri","target_image","asset_dir_key","images_base","$safe","$encode_spaces_in_uri","$normalize_web_path","$generate_data_uri_from_uri","$generate_data_uri","ext","mimetype","image_path","$strict_encode64","$binread","bindata","$require_library","$content_type","asset_ref","asset_name","autocorrect","jail","$system_path","preserve_uri_target","$AbstractBlock_initialize$1","$AbstractBlock_block$ques$2","$AbstractBlock_inline$ques$3","$AbstractBlock_file$4","$AbstractBlock_lineno$5","$AbstractBlock_convert$6","$AbstractBlock_content$7","$AbstractBlock_context$eq$9","$AbstractBlock_$lt$lt$10","$AbstractBlock_blocks$ques$11","$AbstractBlock_sections$ques$12","$AbstractBlock_number$13","$AbstractBlock_find_by$14","$AbstractBlock_next_adjacent_block$15","$AbstractBlock_sections$17","$AbstractBlock_alt$19","$AbstractBlock_caption$20","$AbstractBlock_captioned_title$21","$AbstractBlock_list_marker_keyword$22","$AbstractBlock_title$23","$AbstractBlock_title$ques$24","$AbstractBlock_title$eq$25","$AbstractBlock_sub$ques$26","$AbstractBlock_remove_sub$27","$AbstractBlock_xreftext$28","$AbstractBlock_assign_caption$29","$AbstractBlock_assign_numeral$30","$AbstractBlock_reindex_sections$31","$AbstractBlock_find_by_internal$33","source_location","blocks","next_section_index","numeral","caption","converted_title","title","next_section_ordinal","header","$attr_writer","$level","$file","$lineno","$playback_attributes","$parent","selector","p","sib","$context","$items","desc","$next_adjacent_block","$blocks","$find_index","$title","list_type","$apply_title_subs","xrefstyle","quoted_title","caption_attr_name","$reftext","$sub_placeholder","caption_context","attr_name","$increment_and_store_counter","section","like","sectname","$numbered","$sectname","$numeral","$int_to_roman","$assign_numeral","$reindex_sections","$protected","any_context","context_selector","style_selector","role_selector","id_selector","verdict","$rows","$head","$body","$foot","$inner_document","$AttributeList_initialize$1","$AttributeList_parse_into$2","$AttributeList_parse$3","$AttributeList_rekey$4","$AttributeList_rekey$5","$AttributeList_parse_attribute$7","$AttributeList_parse_attribute_value$9","$AttributeList_skip_blank$10","$AttributeList_skip_delimiter$11","$AttributeList_scan_name$12","$AttributeList_scan_to_delimiter$13","$AttributeList_scan_to_quote$14","scanner","delimiter","delimiter_skip_pattern","delimiter_boundary_pattern","positional_attrs","$parse_attribute","$skip_delimiter","$rekey","single_quoted_value","skipped","resolved_name","positional_attr_name","$skip_blank","$peek","$parse_attribute_value","$get_byte","$scan_name","$scan_to_delimiter","opt","quote","$scan_to_quote","$skip","$scan","$Block_initialize$1","$Block_content$2","$Block_source$3","$Block_to_s$4","raw_source","$commit_subs","content_summary","$Callouts_initialize$1","$Callouts_register$2","$Callouts_read_next_id$3","$Callouts_callout_ids$4","$Callouts_current_list$6","$Callouts_next_list$7","$Callouts_rewind$8","$Callouts_generate_next_callout_id$9","$Callouts_generate_callout_id$10","co_index","lists","list_index","$next_list","li_ordinal","$current_list","$generate_next_callout_id","list","$generate_callout_id","$Converter_initialize$1","$Converter_convert$2","$Converter_handles$ques$3","$Converter_derive_backend_traits$4","$Converter_included$28","$autoload","$__dir__","backend","node","transform","t_basebackend","t_outfilesuffix","t_filetype","$BackendTraits_basebackend$5","$BackendTraits_filetype$6","$BackendTraits_htmlsyntax$7","$BackendTraits_outfilesuffix$8","$BackendTraits_supports_templates$9","$BackendTraits_supports_templates$ques$10","$BackendTraits_init_backend_traits$11","$BackendTraits_backend_traits$12","$BackendTraits_derive_backend_traits$13","$backend_traits","backend_traits","$derive_backend_traits","$Config_register_for$14","backends","$Factory_new$16","$Factory_default$17","$Factory_create$18","$Factory_register$19","$Factory_for$21","$Factory_create$22","$Factory_converters$23","$Factory_registry$24","converters","proxy_default","$create","converter","$registry","template_dirs","delegate_backend","$for","$CustomFactory_initialize$25","$CustomFactory_unregister_all$26","seed_registry","registry","$DefaultFactory_registry$27","$Base_convert$29","$Base_handles$ques$30","$Base_content_only$31","$Base_skip$32","ex","$node_name","$receiver","$content","$Document$1","$Document_initialize$8","$Document_parse$11","$Document_parsed$ques$14","$Document_counter$15","$Document_increment_and_store_counter$16","$Document_register$17","$Document_resolve_id$18","$Document_footnotes$ques$23","$Document_footnotes$24","$Document_callouts$25","$Document_nested$ques$26","$Document_embedded$ques$27","$Document_extensions$ques$28","$Document_source$29","$Document_source_lines$30","$Document_basebackend$ques$31","$Document_title$32","$Document_title$eq$33","$Document_doctitle$34","$Document_xreftext$35","$Document_author$36","$Document_authors$37","$Document_revdate$38","$Document_notitle$39","$Document_noheader$40","$Document_nofooter$41","$Document_first_section$42","$Document_header$ques$44","$Document_$lt$lt$45","$Document_finalize_header$46","$Document_playback_attributes$47","$Document_restore_attributes$49","$Document_set_attribute$50","$Document_delete_attribute$51","$Document_attribute_locked$ques$52","$Document_set_header_attribute$53","$Document_convert$54","$Document_write$56","$Document_content$57","$Document_docinfo$58","$Document_docinfo_processors$ques$61","$Document_to_s$62","$Document_apply_attribute_value_subs$63","$Document_limit_bytesize$64","$Document_resolve_docinfo_subs$65","$Document_create_converter$66","$Document_clear_playback_attributes$67","$Document_save_attributes$68","$Document_fill_datetime_attributes$70","$Document_update_backend_attributes$71","$Document_update_doctype_attributes$72","safe","sourcemap","reader","parsed","parent_document","catalog","reftexts","header_attributes","attributes_modified","attribute_overrides","timings","outfilesuffix","docinfo_processor_extensions","max_attribute_value_size","doctype","$AttributeEntry_initialize$2","$AttributeEntry_save_to$3","block_attributes","$Title_initialize$4","$Title_sanitized$ques$5","$Title_subtitle$ques$6","$Title_to_s$7","sanitized","subtitle","combined","main","$rpartition","$f","$g","standalone","safe_mode_name","base_dir_val","backend_val","doctype_val","parent_doc","attr_overrides","parent_doctype","initialize_extensions","to_file","safe_mode","input_mtime","initial_backend","ext_registry","ext_block","$sourcemap","syntax_highlighter","$value_for_name","$name_for_value","$update_doctype_attributes","$cursor","$restore_attributes","$update_backend_attributes","$fill_datetime_attributes","$activate","$groups","exts","$preprocessors","$tree_processors","attr_seed","attr_val","$nextval","counter_name","$save_to","$value","$logical_op_recvr_tmp_1","ref","resolved_id","$xreftext","xreftext","$source","$source_lines","$doctitle","sect","$first_section","authors","num_authors","unrooted_attributes","header_valid","$clear_playback_attributes","$save_attributes","$$48","$negate","$rewind","$apply_attribute_value_subs","$start","$doctype","$content_model","$postprocessors","$record","$write_alternate_pages","location","qualifier","docinfo","docinfo_file","docinfo_dir","docinfo_subs","docinfo_path","shared_docinfo","private_docinfo","$resolve_docinfo_subs","$docinfo_processors","$apply_header_subs","$limit_bytesize","converter_opts","doctitle_val","toc_val","toc_position_val","toc_placement_val","default_toc_position","default_toc_class","position","icons_val","basebackend","syntax_hl_factory","syntax_hls","localtime","doctime","source_date_epoch","localdate","docdate","$utc","$year","$utc_offset","new_backend","init","current_backend","current_basebackend","current_doctype","actual_backend","new_basebackend","new_filetype","htmlsyntax","current_filetype","page_width","$create_converter","$basebackend","$filetype","$htmlsyntax","new_doctype","$Inline_initialize$1","$Inline_block$ques$2","$Inline_inline$ques$3","$Inline_convert$4","$Inline_alt$5","$Inline_reftext$ques$6","$Inline_reftext$7","$Inline_xreftext$8","$List_initialize$1","$List_outline$ques$2","$List_convert$3","$List_to_s$4","$ListItem_initialize$5","$ListItem_text$ques$6","$ListItem_text$7","$ListItem_text$eq$8","$ListItem_simple$ques$9","$ListItem_compound$ques$10","$ListItem_fold_first$11","$ListItem_to_s$12","$Parser$1","$Parser$2","$Parser$3","$Parser_parse$4","$Parser_parse_document_header$5","$Parser_parse_manpage_header$6","$Parser_next_section$9","$Parser_next_block$10","$Parser_read_paragraph_lines$14","$Parser_is_delimited_block$ques$15","$Parser_build_block$16","$Parser_parse_blocks$17","$Parser_parse_list$18","$Parser_catalog_callouts$19","$Parser_catalog_inline_anchor$21","$Parser_catalog_inline_anchors$22","$Parser_catalog_inline_biblio_anchor$24","$Parser_parse_description_list$25","$Parser_parse_callout_list$26","$Parser_parse_list_item$27","$Parser_read_lines_for_list_item$28","$Parser_initialize_section$34","$Parser_is_next_line_section$ques$35","$Parser_is_next_line_doctitle$ques$36","$Parser_is_section_title$ques$37","$Parser_atx_section_title$ques$38","$Parser_setext_section_title$ques$39","$Parser_parse_section_title$40","$Parser_parse_header_metadata$41","$Parser_process_authors$46","$Parser_parse_block_metadata_lines$51","$Parser_parse_block_metadata_line$52","$Parser_process_attribute_entries$53","$Parser_process_attribute_entry$54","$Parser_store_attribute$55","$Parser_resolve_list_marker$56","$Parser_resolve_ordered_list_marker$57","$Parser_is_sibling_list_item$ques$59","$Parser_parse_table$60","$Parser_parse_colspecs$61","$Parser_parse_cellspec$65","$Parser_parse_style_attribute$66","$Parser_yield_buffered_attribute$69","$Parser_adjust_indentation$excl$70","$Parser_uniform$ques$79","$Parser_sanitize_attribute_name$80","new_section","$parse_document_header","$next_section","implicit_doctitle","block_attrs","doctitle_attr_val","l0_section_title","atx","doc_id","role","modified_attrs","$parse_block_metadata_lines","$finalize_header","$parse_section_title","$header","$parse_header_metadata","$parse_manpage_header","manvolnum","mantitle","manname","name_section_level","name_section","name_section_buffer","mannames","error_msg","$message_with_context","$cursor_at_line","$backend","$skip_blank_lines","$save","$initialize_section","$read_lines_until","$restore_save","$discard_save","intro","has_header","book","current_level","expected_next_level","expected_next_level_alt","next_level","expected_condition","block_cursor","new_block","first_block","child_block","$special","$next_block","$unwrap_standalone_preamble","block_id","text_only","block_extensions","block_macro_extensions","this_line","block_context","cloaked_context","terminator","delimited_block","indented","md_syntax","ch0","layout_break_chars","blk_ctx","blk_attrs","expanded_target","scaledwidth","block_title","report_unknown_block_macro","float_id","float_reftext","float_level","content_adjacent","admonition_name","credit_line","attribution","citetitle","language","comma_idx","block_reader","$parse_block_metadata_line","$mark","$read_line","$terminator","$masq","$debug","$cursor_at_mark","$strict_verbatim_paragraphs","$unshift_line","$markdown_syntax","$assign_caption","old_v","$parse_callout_list","$parse_list","$parse_description_list","$underline_style_section_titles","$peek_line","$generate_id","$read_paragraph_lines","$post_match","$build_block","$catalog_inline_anchors","$parse_table","$update_attributes","$catalog_callouts","$remove_sub","break_at_list","break_condition","$block_terminates_paragraph","return_match_data","masq","line_len","tip","tip_len","skip_processing","parse_as_content_model","tab_size","indent","$lines","$parse_blocks","list_block","list_rx","list_item","$parse_list_item","found","$pre_match","$advance","sibling_pattern","current_pair","next_pair","callouts","next_index","coids","$callout_ids","sibling_trait","dlist","list_term","term_text","item_text","has_text","sourcemap_assignment_deferred","ordinal","implicit_style","list_item_reader","comment_lines","subsequent_line","$catalog_inline_anchor","$catalog_inline_biblio_anchor","$set_option","$resolve_ordered_list_marker","$read_lines_for_list_item","$skip_line_comments","$unshift_lines","$fold_first","continuation","within_nested_list","detached_continuation","prev_line","nested_list_type","last_line","ctx","sect_id","sect_atx","sect_style","sect_reftext","sect_title","sect_level","sect_name","sect_special","sect_numbered","generated_id","next_lines","$peek_lines","leveloffset","line1","line2","line2_ch0","line2_len","$cursor_at_prev_line","implicit_authors","metadata","implicit_author","implicit_authorinitials","author_metadata","rev_metadata","rev_line","component","author_line","author_idx","author_key","explicit","sparse","author_override","$process_attribute_entries","$process_authors","author","name_idx","names_only","multiple","author_entry","$$50","key_map","fname","mname","lname","next_line","normal","current_style","$parse_style_attribute","$process_attribute_entry","$skip_comment_lines","con","keep_open","resolved_value","$sanitize_attribute_name","$set_attribute","$delete_attribute","marker","validate","$resolve_list_marker","table_reader","table","colspecs","explicit_colspecs","parser_ctx","loop_idx","implicit_header_boundary","implicit_header","beyond_first","next_cellspec","cell_text","$logical_op_recvr_tmp_2","$parse_colspecs","$create_columns","$close_open_cell","$parse_cellspec","$delimiter","$match_delimiter","$buffer","$keep_cell_open","$close_cell","$skip_past_delimiter","$skip_past_escaped_delimiter","$push_cellspec","$columns","$assign_column_widths","$partition_header_footer","records","$$63","specs","record","$$64","colspec","rowspec","spec_part","raw_style","parsed_attrs","parsed_style","existing_role","$yield_buffered_attribute","indent_size","full_tab_space","block_indent","new_block_indent","tab_idx","leading_tabs","spaces_added","spaces","line_indent","$PathResolver_initialize$1","$PathResolver_absolute_path$ques$2","$PathResolver_root$ques$3","$PathResolver_unc$ques$4","$PathResolver_web_root$ques$5","$PathResolver_descends_from$ques$6","$PathResolver_relative_path$7","$PathResolver_posixify$8","$PathResolver_expand_path$9","$PathResolver_partition_path$11","$PathResolver_join_path$12","$PathResolver_system_path$13","$PathResolver_web_path$16","$PathResolver_extract_uri_prefix$18","file_separator","_partition_path_web","_partition_path_sys","working_dir","$relative_path_from","path_segments","path_root","resolved_segments","$partition_path","segment","$join_path","web","posix_path","root","target_path","target_segments","jail_segments","jail_root","recheck","start_segments","start_root","unresolved_segments","warned","uri_prefix","target_root","resolved_path","$extract_uri_prefix","$Reader_initialize$4","$Reader_has_more_lines$ques$5","$Reader_empty$ques$6","$Reader_next_line_empty$ques$7","$Reader_peek_line$8","$Reader_peek_lines$9","$Reader_read_line$11","$Reader_read_lines$12","$Reader_read$13","$Reader_advance$14","$Reader_unshift_line$15","$Reader_unshift_lines$16","$Reader_replace_next_line$17","$Reader_skip_blank_lines$18","$Reader_skip_comment_lines$19","$Reader_skip_line_comments$20","$Reader_terminate$21","$Reader_read_lines_until$22","$Reader_shift$23","$Reader_unshift$24","$Reader_unshift_all$25","$Reader_cursor$26","$Reader_cursor_at_line$27","$Reader_cursor_at_mark$28","$Reader_cursor_before_mark$29","$Reader_cursor_at_prev_line$30","$Reader_mark$31","$Reader_line_info$32","$Reader_lines$33","$Reader_string$34","$Reader_source$35","$Reader_save$36","$Reader_restore_save$39","$Reader_discard_save$41","$Reader_to_s$42","$Reader_prepare_lines$43","$Reader_process_line$44","look_ahead","unescape_next_line","process_lines","mark","source_lines","saved","$Cursor_initialize$1","$Cursor_advance$2","$Cursor_line_info$3","cursor","$dir","$prepare_lines","unterminated","direct","$process_line","old_look_ahead","$unshift_all","$read_lines","line_to_restore","lines_to_restore","num_skipped","skip_comments","restore_process_lines","start_cursor","break_on_blank_lines","break_on_list_continuation","complete","line_read","line_restored","m_file","m_dir","m_path","m_lineno","$instance_variables","$instance_variable_set","$prepare_source_array","$PreprocessorReader_initialize$45","$PreprocessorReader_has_more_lines$ques$46","$PreprocessorReader_empty$ques$47","$PreprocessorReader_peek_line$48","$PreprocessorReader_push_include$49","$PreprocessorReader_include_depth$50","$PreprocessorReader_exceeds_max_depth$ques$51","$PreprocessorReader_shift$52","$PreprocessorReader_include_processors$ques$53","$PreprocessorReader_create_include_cursor$54","$PreprocessorReader_to_s$55","$PreprocessorReader_prepare_lines$57","$PreprocessorReader_process_line$58","$PreprocessorReader_preprocess_conditional_directive$59","$PreprocessorReader_preprocess_include_directive$64","$PreprocessorReader_resolve_include_path$77","$PreprocessorReader_pop_include$79","$PreprocessorReader_split_delimited_value$80","$PreprocessorReader_skip_front_matter$excl$81","$PreprocessorReader_resolve_expr_val$82","maxdepth","includes","include_processor_extensions","skipping","conditional_stack","default_include_depth","$pop_include","rel_maxdepth","curr_maxdepth","abs_maxdepth","old_leveloffset","$rootname","$include_processors","$$56","inc","front_matter","$preprocess_conditional_directive","$preprocess_include_directive","keyword","no_target","pair","skip","op","$resolve_expr_val","attr_missing","target_type","read_mode","inc_linenos","inc_tags","tag","inc_lines","inc_offset","inc_lineno","tag_stack","tags_used","active_tag","select","base_select","wildcard","missing_tags","inc_content","$resolve_include_path","$method","$split_delimited_value","linedef","tagdef","select_remaining","$push_include","dbl_co","dbl_sb","this_tag","include_cursor","$create_include_cursor","$delete_at","tag_name","tag_lineno","$relative_path","increment_linenos","original_data","quoted","$Section_initialize$1","$Section_generate_id$2","$Section_sectnum$3","$Section_xreftext$4","$Section_$lt$lt$5","$Section_to_s$6","$Section_generate_id$7","numbered","special","append","$sectnum","signifier","formal_title","no_sep","sep_sub","gen_id","ids","candidate_id","$tr_s","$unique_id_start_index","$Stylesheets_instance$1","$Stylesheets_primary_stylesheet_name$2","$Stylesheets_primary_stylesheet_data$3","$Stylesheets_embed_primary_stylesheet$4","$Stylesheets_write_primary_stylesheet$5","$Stylesheets_coderay_stylesheet_name$6","$Stylesheets_coderay_stylesheet_data$7","$Stylesheets_embed_coderay_stylesheet$8","$Stylesheets_write_coderay_stylesheet$9","$Stylesheets_pygments_stylesheet_name$10","$Stylesheets_pygments_stylesheet_data$11","$Stylesheets_embed_pygments_stylesheet$12","$Stylesheets_write_pygments_stylesheet$13","primary_stylesheet_data","__instance__","$primary_stylesheet_data","target_dir","$primary_stylesheet_name","$stylesheet_basename","$read_stylesheet","$coderay_stylesheet_data","$coderay_stylesheet_name","$pygments_stylesheet_data","$pygments_stylesheet_name","$Table_initialize$4","$Table_header_row$ques$5","$Table_create_columns$6","$Table_assign_column_widths$8","$Table_partition_header_footer$12","has_header_option","rows","columns","$Rows_initialize$1","$Rows_by_section$2","$Rows_to_h$3","foot","pcwidth","pcwidth_intval","abswidth_val","num_cols","cols","autowidth_cols","width_base","colwidth","precision","total_width","col_pcwidth","autowidth","autowidth_attrs","col","$assign_width","num_body_rows","$Column_initialize$14","$Column_assign_width$15","$Column_block$ques$16","$Column_inline$ques$17","col_abswidth","$Cell_initialize$18","$Cell_text$19","$Cell_text$eq$20","$Cell_content$21","$Cell_lines$23","$Cell_source$24","$Cell_file$25","$Cell_lineno$26","$Cell_to_s$27","inner_document","colspan","rowspan","column","in_header_row","cell_style","asciidoc","inner_document_cursor","lines_advanced","literal","normal_psv","parent_doctitle","inner_document_lines","unprocessed_line1","preprocessed_lines","$table","para","$ParserContext_initialize$28","$ParserContext_starts_with_delimiter$ques$29","$ParserContext_match_delimiter$30","$ParserContext_skip_past_delimiter$31","$ParserContext_skip_past_escaped_delimiter$32","$ParserContext_buffer_has_unclosed_quotes$ques$33","$ParserContext_take_cellspec$34","$ParserContext_push_cellspec$35","$ParserContext_keep_cell_open$36","$ParserContext_mark_cell_closed$37","$ParserContext_cell_open$ques$38","$ParserContext_cell_closed$ques$39","$ParserContext_close_open_cell$40","$ParserContext_close_cell$41","$ParserContext_close_row$44","$ParserContext_activate_rowspan$45","$ParserContext_end_of_row$ques$47","$ParserContext_effective_column_visits$48","$ParserContext_advance$49","delimiter_rx","cellspecs","cell_open","start_cursor_data","current_row","colcount","column_visits","active_rowspans","linenum","$to_set","xsv","trailing_quote","cellspec","eol","$take_cellspec","extra_cols","cell","$cursor_before_mark","$rowspan","$activate_rowspan","$colspan","$close_row","$effective_column_visits","$Writer_write$1","$VoidWriter_write$2","$Asciidoctor_load$1","$Asciidoctor_load_file$8","input_path","wrapped_ex","$ancestors","$mtime","$set_backtrace","$stack_trace","$load","$Asciidoctor_convert$1","$Asciidoctor_convert_file$2","to_dir","mkdirs","write_to_target","sibling_path","stream_output","outdir","outfile","stylesdir","stylesheet","copy_asciidoctor_stylesheet","copy_user_stylesheet","copy_syntax_hl_stylesheet","stylesoutdir","stylesheet_src","stylesheet_dest","stylesheet_data","$write_primary_stylesheet","$write_stylesheet","$HighlightJsAdapter_initialize$1","$HighlightJsAdapter_format$2","$HighlightJsAdapter_docinfo$ques$4","$HighlightJsAdapter_docinfo$5","$register_for","pre_class","lang","base_url","$SyntaxHighlighter_initialize$1","$SyntaxHighlighter_docinfo$ques$2","$SyntaxHighlighter_docinfo$3","$SyntaxHighlighter_highlight$ques$4","$SyntaxHighlighter_highlight$5","$SyntaxHighlighter_format$6","$SyntaxHighlighter_write_stylesheet$ques$7","$SyntaxHighlighter_write_stylesheet$8","$SyntaxHighlighter_included$9","$Config_register_for$10","$Factory_register$12","$Factory_for$14","$Factory_create$15","$Factory_registry$16","$CustomFactory_initialize$17","$CustomFactory_registry$18","$DefaultFactory_registry$19","$Base_format$20","class_attr_val","$Timings_initialize$1","$Timings_start$2","$Timings_record$3","$Timings_time$4","$Timings_read$6","$Timings_parse$7","$Timings_read_parse$8","$Timings_convert$9","$Timings_read_parse_convert$10","$Timings_write$11","$Timings_total$12","$Timings_print_report$13","$Timings_now$14","$Timings_now$15","timers","sum","$time","$read_parse","$read_parse_convert","$clock_gettime","$CompositeConverter_initialize$1","$CompositeConverter_convert$4","$CompositeConverter_converter_for$5","$CompositeConverter_find_converter$6","converter_cache","backend_traits_source","$composed","$init_backend_traits","$find_converter","$converter_for","$Html5Converter_initialize$1","$Html5Converter_convert$2","$Html5Converter_convert_document$3","$Html5Converter_convert_embedded$6","$Html5Converter_convert_outline$8","$Html5Converter_convert_section$10","$Html5Converter_convert_admonition$11","$Html5Converter_convert_audio$12","$Html5Converter_convert_colist$13","$Html5Converter_convert_dlist$16","$Html5Converter_convert_example$23","$Html5Converter_convert_floating_title$24","$Html5Converter_convert_image$25","$Html5Converter_convert_listing$26","$Html5Converter_convert_literal$27","$Html5Converter_convert_stem$28","$Html5Converter_convert_olist$30","$Html5Converter_convert_open$32","$Html5Converter_convert_page_break$33","$Html5Converter_convert_paragraph$34","$Html5Converter_convert_preamble$35","$Html5Converter_convert_quote$36","$Html5Converter_convert_thematic_break$37","$Html5Converter_convert_sidebar$38","$Html5Converter_convert_table$39","$Html5Converter_convert_toc$44","$Html5Converter_convert_ulist$45","$Html5Converter_convert_verse$47","$Html5Converter_convert_video$48","$Html5Converter_convert_inline_anchor$49","$Html5Converter_convert_inline_break$50","$Html5Converter_convert_inline_button$51","$Html5Converter_convert_inline_callout$52","$Html5Converter_convert_inline_footnote$53","$Html5Converter_convert_inline_image$54","$Html5Converter_convert_inline_indexterm$57","$Html5Converter_convert_inline_kbd$58","$Html5Converter_convert_inline_menu$59","$Html5Converter_convert_inline_quoted$60","$Html5Converter_read_svg_contents$61","$Html5Converter_append_boolean_attribute$63","$Html5Converter_append_link_constraint_attrs$64","$Html5Converter_encode_attribute_value$65","$Html5Converter_generate_manname_section$66","$Html5Converter_method_missing$67","void_element_slash","xml_mode","refs","syntax","$convert_inline_quoted","$convert_paragraph","$convert_inline_anchor","$convert_section","$convert_listing","$convert_literal","$convert_ulist","$convert_olist","$convert_dlist","$convert_admonition","$convert_colist","$convert_embedded","$convert_example","$convert_floating_title","$convert_image","$convert_inline_break","$convert_inline_button","$convert_inline_callout","$convert_inline_footnote","$convert_inline_image","$convert_inline_indexterm","$convert_inline_kbd","$convert_inline_menu","$convert_open","$convert_page_break","$convert_preamble","$convert_quote","$convert_sidebar","$convert_stem","$convert_table","$convert_thematic_break","$convert_verse","$convert_video","$convert_document","$convert_toc","$convert_pass","$convert_audio","br","slash","cdn_base_url","linkcss","lang_attribute","sectioned","asset_uri_scheme","icon_href","icon_type","icon_ext","webfonts","iconfont_stylesheet","docinfo_content","body_attrs","classes","eqnums_val","eqnums_opt","$docinfo","$role","$noheader","$convert_outline","$generate_manname_section","$notitle","$authors","$email","$nofooter","id_attr","toc_p","sectnumlevels","toclevels","sections","$sections","slevel","stitle","child_toc_level","$caption","$captioned_title","title_element","label","$icon_uri","xml","id_attribute","class_attribute","start_t","end_t","time_anchor","$media_uri","$append_boolean_attribute","font_icons","num_label","col_style_attribute","dt_style_attribute","dd","dt","first_term","summary_element","width_attr","height_attr","svg","img","$read_svg_contents","$alt","$encode_attribute_value","$append_link_constraint_attrs","nowrap","pre_open","pre_close","close","equation","type_attribute","start_attribute","reversed_attribute","$list_marker_keyword","title_el","toc","cite_element","attribution_element","stripes","style_attribute","styles","tablewidth","tsec","cell_tag_name","cell_class_attribute","cell_colspan_attribute","cell_rowspan_attribute","cell_style_attribute","cell_content","levels","title_id_attr","checklist","div_classes","marker_checked","marker_unchecked","ul_class_attribute","width_attribute","height_attribute","start_anchor","autoplay_param","loop_param","muted_param","rel_param_val","start_param","end_param","has_loop_param","mute_param","controls_param","fs_param","fs_attribute","modest_param","theme_param","hl_param","list_param","playlist","poster_attribute","preload_attribute","$type","$target","title_attr","caret","submenu_joiner","class_attr","old_start_tag","new_start_tag","$read_contents","dim","rel","manname_title","next_section","next_section_title","manname_id","$Processor_initialize$4","$Processor_update_config$5","$Processor_process$6","$Processor_create_section$7","$Processor_create_block$8","$Processor_create_list$9","$Processor_create_list_item$10","$Processor_create_image_block$11","$Processor_create_inline$12","$Processor_parse_content$13","$Processor_parse_attributes$14","$Processor$15","$config$1","$option$2","$enable_dsl$3","$create_block","delegate_method_name","$ProcessorDsl_option$17","$ProcessorDsl_process$18","$ProcessorDsl_process_block_given$ques$20","process_block","$binding","m_args","$DocumentProcessorDsl_prefer$21","$option","$SyntaxProcessorDsl_named$22","$SyntaxProcessorDsl_content_model$23","$SyntaxProcessorDsl_positional_attributes$24","$SyntaxProcessorDsl_default_attributes$25","$SyntaxProcessorDsl_resolve_attributes$26","$Preprocessor_process$29","$TreeProcessor_process$30","$Postprocessor_process$31","$IncludeProcessor_process$32","$IncludeProcessor_handles$ques$33","$IncludeProcessorDsl_handles$ques$34","handles_block","$DocinfoProcessor_initialize$35","$DocinfoProcessor_process$36","$DocinfoProcessorDsl_at_location$37","$BlockProcessor_initialize$38","$BlockProcessor_process$39","$BlockProcessorDsl_contexts$40","$MacroProcessor_initialize$41","$MacroProcessor_process$42","$MacroProcessorDsl_resolve_attributes$43","$BlockMacroProcessor_name$44","$InlineMacroProcessor_regexp$45","$InlineMacroProcessor_resolve_regexp$46","$resolve_regexp","$InlineMacroProcessorDsl_format$47","$InlineMacroProcessorDsl_match$48","$Extension_initialize$49","kind","$ProcessorExtension_initialize$50","process_method","$Group_activate$52","$register$51","$Registry_initialize$53","$Registry_activate$54","$Registry_preprocessor$56","$Registry_preprocessors$ques$57","$Registry_preprocessors$58","$Registry_tree_processor$59","$Registry_tree_processors$ques$60","$Registry_tree_processors$61","$Registry_postprocessor$62","$Registry_postprocessors$ques$63","$Registry_postprocessors$64","$Registry_include_processor$65","$Registry_include_processors$ques$66","$Registry_include_processors$67","$Registry_docinfo_processor$68","$Registry_docinfo_processors$ques$69","$Registry_docinfo_processors$71","$Registry_block$73","$Registry_blocks$ques$74","$Registry_registered_for_block$ques$75","$Registry_find_block_extension$76","$Registry_block_macro$77","$Registry_block_macros$ques$78","$Registry_registered_for_block_macro$ques$79","$Registry_find_block_macro_extension$80","$Registry_inline_macro$81","$Registry_inline_macros$ques$82","$Registry_registered_for_inline_macro$ques$83","$Registry_find_inline_macro_extension$84","$Registry_inline_macros$85","$Registry_prefer$86","$Registry_add_document_processor$87","$Registry_add_syntax_processor$89","$Registry_resolve_args$91","$Registry_as_symbol$92","groups","preprocessor_extensions","tree_processor_extensions","postprocessor_extensions","inline_macro_extensions","ext_groups","arg0","extensions_store","$kind","$$88","kind_class_symbol","kind_name","kind_class","kind_java_class","kind_store","processor","processor_class","processor_instance","$capitalize","$resolve_args","$enable_dsl","$resolve_class","$update_config","$$90","$as_symbol","expect","missing","$generate_name$93","$next_auto_id$94","$groups$95","$create$96","$register$97","$unregister_all$98","$unregister$99","$next_auto_id","auto_id","$generate_name","resolved_group","$$100","$Stylesheets_primary_stylesheet_data$1","$Document_fill_datetime_attributes$1","utc_offset","getYear","getUTCFullYear","getFullYear","getMonth","getUTCMonth","getDay","getUTCDate","getDate","getHours","getUTCHours","setTime","getTimezoneOffset","localyear","now_year","now_month","now_day","utc_offset_format","hours","minutes","getMinutes","getSeconds","localdatetime","mtime_year","mtime_month","mtime_day","mtime_hours","mtime_minutes","mtime_seconds","$Substitutors_sub_placeholder$1","format_string","$Parser_uniform$ques$1","$Parser_uniform$ques$2","$Factory_for$1","$Formatter_call$1","time_format","getMilliseconds","$Asciidoctor$7","$Asciidoctor$9","$Asciidoctor$11","$Asciidoctor$13","$SafeMode$1","$SafeMode_value_for_name$3","$SafeMode_name_for_value$4","$SafeMode_names$5","names_by_value","$define$6","$define","$insert","toHash","fromHash","fromHashKeys","prepareOptions","initializeClass","superClass","className","functions","defaultFunctions","argProxyFunctions","postConstructFunction","initializeFunction","constructorFunction","initialize","defaultFunctionsOverridden","functionName","userFunction","argumentsList","defaultFunctionName","defaultFunction","Asciidoctor","getCoreVersion","VERSION","getRuntime","convert","convertFile","$convert_file","loadFile","$load_file","AbstractBlock","$append","getTitle","setTitle","getCaptionedTitle","getStyle","setStyle","getSourceLocation","sourceLocation","getCaption","setCaption","getLevel","getSubstitutions","hasSubstitution","substitution","removeSubstitution","hasBlocks","getBlocks","getContent","findBy","$find_by","getLineNumber","hasSections","getSections","getNumeral","setNumeral","hasTitle","Section","setLevel","getIndex","setIndex","getSectionName","setSectionName","isSpecial","setSpecial","isNumbered","getName","Block","getSource","getSourceLines","AbstractNode","applySubstitutions","getNodeName","getAttributes","getAttribute","defaultValue","fallbackName","hasAttribute","isAttribute","expectedValue","setAttribute","$set_attr","removeAttribute","$remove_attr","getDocument","getParent","isInline","isBlock","isRole","getRole","hasRole","getRoles","$roles","addRole","$add_role","removeRole","$remove_role","isReftext","getReftext","getContext","getId","setId","isOption","setOption","getIconUri","getMediaUri","assetDirKey","getImageUri","targetImage","getConverter","readContents","readAsset","normalizeWebPath","preserveTargetUri","normalizeSystemPath","normalizeAssetPath","assetRef","assetName","autoCorrect","$normalize_asset_path","Document","getRefs","getImages","images","getLinks","links","hasFootnotes","getFootnotes","getHeader","getAuthor","$author","isNested","isEmbedded","hasExtensions","getDoctype","getBackend","isBasebackend","getDocumentTitle","doctitle","getDoctitle","getCatalog","getReferences","getRevisionDate","getRevdate","getRevisionNumber","getRevisionRemark","setHeaderAttribute","$set_header_attribute","getAuthors","Footnote","getText","ImageReference","getTarget","getImagesDirectory","imagesdir","Author","getFirstName","firstName","firstname","getMiddleName","middleName","middlename","getLastName","lastName","lastname","getInitials","initials","getEmail","email","RevisionInfo","date","remark","getNumber","getRemark","isEmpty","SafeMode","getValueForName","getNameForValue","getNames","Callouts","readNextId","getCalloutIds","getLists","getListIndex","getCurrentList","currentList","nextList","$nextList","rewind","getRevisionInfo","hasRevisionInfo","getNotitle","getNoheader","getNofooter","hasHeader","deleteAttribute","isAttributeLocked","parse","getDocinfo","docinfoLocation","hasDocinfoProcessors","incrementAndStoreCounter","counterName","counterIncrement","counter","getSafe","getCompatMode","getSourcemap","setSourcemap","getCounters","getCallouts","getBaseDir","getOptions","getOutfilesuffix","getParentDocument","parentDocument","getReader","getExtensions","Title","getMain","getCombined","getSubtitle","isSanitized","hasSubtitle","Inline","getType","List","hasItems","getItems","ListItem","setText","hasText","getMarker","setMarker","getList","$list","Reader","pushInclude","getCursor","getLines","getString","$string","hasMoreLines","peekLine","readLine","readLines","read","advance","Cursor","getFile","getDirectory","getPath","LoggerManager","getLogger","setLogger","newLogger","messageObject","initializeLoggerClass","newFormatter","Logger","initializeLoggerFormatterClass","LoggerSeverity","get","LoggerFormatter","programName","MemoryLogger","getMessages","getSeverity","Logging","createLogMessage","getMaxSeverity","getFormatter","setFormatter","getProgramName","setProgramName","RubyLogger","add","severityValue","debug","info","fatal","isDebugEnabled","isInfoEnabled","isWarnEnabled","isErrorEnabled","isFatalEnabled","NullLogger","StopIteration","Timings","printReport","outputFunction","SyntaxHighlighter","properties","propertyIdx","propertyName","SyntaxHighlighterBase","callout","for","registerFor","toBlock","registerExtension","Extensions","getGroups","unregisterAll","$unregister_all","unregister","groupNameIdx","groupSymbolNames","groupSymbolName","groupStringName","Registry","prefer","inlineMacro","includeProcessor","blockMacro","treeProcessor","postprocessor","preprocessor","docinfoProcessor","hasPreprocessors","hasTreeProcessors","hasIncludeProcessors","hasPostprocessors","hasBlockMacros","hasInlineMacros","getPreprocessors","getTreeProcessors","getIncludeProcessors","getPostprocessors","getDocinfoProcessors","getBlockMacros","getInlineMacros","getInlineMacroFor","getBlockFor","getBlockMacroFor","Processor","prepend","blockProxy","Proxy","thisArg","named","$named","createBlock","createList","$create_list","createListItem","$create_list_item","createImageBlock","$create_image_block","createParagraph","$create_paragraph","createOpenBlock","$create_open_block","createExampleBlock","$create_example_block","createPassBlock","$create_pass_block","createListingBlock","$create_listing_block","createLiteralBlock","$create_literal_block","createAnchor","$create_anchor","createInlinePass","$create_inline_pass","createInline","$create_inline","parseContent","$parse_content","parseAttributes","positionalAttributes","$positional_attrs","resolveAttributes","isArray","$resolves_attributes","resolvesAttributes","getConfig","option","BlockProcessor","defaultAttributes","$default_attributes","onContext","$on_context","onContexts","contexts","$on_contexts","parseContentAs","$parse_content_as","BlockMacroProcessor","InlineMacroProcessor","matchFormat","$match_format","IncludeProcessor","handles","$prefer","TreeProcessor","Postprocessor","Preprocessor","DocinfoProcessor","initializeProcessorClass","superclassName","atLocation","$at_location","createPostprocessor","newPostprocessor","createPreprocessor","newPreprocessor","createTreeProcessor","newTreeProcessor","createIncludeProcessor","newIncludeProcessor","createDocinfoProcessor","newDocinfoProcessor","createBlockProcessor","newBlockProcessor","createInlineMacroProcessor","newInlineMacroProcessor","createBlockMacroProcessor","newBlockMacroProcessor","Converter","ConverterFactory","Factory","ConverterBase","Base","ConverterBackendTraits","BackendTraits","buildBackendTraitsFromInstance","filetype","supports_templates","backendTraits","propertyNames","super","getDefault","Html5Converter","getVersion","exports","webpackPolyfill","deprecate","children"],"mappings":"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","file":"vendors~asciidoctor.js","sourcesContent":["/**\n * @license Asciidoctor.js 2.1.1 | MIT | https://github.com/asciidoctor/asciidoctor.js\n */\n(function(undefined) {\n  // @note\n  //   A few conventions for the documentation of this file:\n  //   1. Always use \"//\" (in contrast with \"/**/\")\n  //   2. The syntax used is Yardoc (yardoc.org), which is intended for Ruby (se below)\n  //   3. `@param` and `@return` types should be preceded by `JS.` when referring to\n  //      JavaScript constructors (e.g. `JS.Function`) otherwise Ruby is assumed.\n  //   4. `nil` and `null` being unambiguous refer to the respective\n  //      objects/values in Ruby and JavaScript\n  //   5. This is still WIP :) so please give feedback and suggestions on how\n  //      to improve or for alternative solutions\n  //\n  //   The way the code is digested before going through Yardoc is a secret kept\n  //   in the docs repo (https://github.com/opal/docs/tree/master).\n\n  var global_object = this, console;\n\n  // Detect the global object\n  if (typeof(global) !== 'undefined') { global_object = global; }\n  if (typeof(window) !== 'undefined') { global_object = window; }\n\n  // Setup a dummy console object if missing\n  if (typeof(global_object.console) === 'object') {\n    console = global_object.console;\n  } else if (global_object.console == null) {\n    console = global_object.console = {};\n  } else {\n    console = {};\n  }\n\n  if (!('log' in console)) { console.log = function () {}; }\n  if (!('warn' in console)) { console.warn = console.log; }\n\n  if (typeof(this.Opal) !== 'undefined') {\n    console.warn('Opal already loaded. Loading twice can cause troubles, please fix your setup.');\n    return this.Opal;\n  }\n\n  var nil;\n\n  // The actual class for BasicObject\n  var BasicObject;\n\n  // The actual Object class.\n  // The leading underscore is to avoid confusion with window.Object()\n  var _Object;\n\n  // The actual Module class\n  var Module;\n\n  // The actual Class class\n  var Class;\n\n  // The Opal object that is exposed globally\n  var Opal = this.Opal = {};\n\n  // This is a useful reference to global object inside ruby files\n  Opal.global = global_object;\n  global_object.Opal = Opal;\n\n  // Configure runtime behavior with regards to require and unsupported fearures\n  Opal.config = {\n    missing_require_severity: 'error',        // error, warning, ignore\n    unsupported_features_severity: 'warning', // error, warning, ignore\n    enable_stack_trace: true                  // true, false\n  }\n\n  // Minify common function calls\n  var $hasOwn       = Object.hasOwnProperty;\n  var $bind         = Function.prototype.bind;\n  var $setPrototype = Object.setPrototypeOf;\n  var $slice        = Array.prototype.slice;\n  var $splice       = Array.prototype.splice;\n\n  // Nil object id is always 4\n  var nil_id = 4;\n\n  // Generates even sequential numbers greater than 4\n  // (nil_id) to serve as unique ids for ruby objects\n  var unique_id = nil_id;\n\n  // Return next unique id\n  Opal.uid = function() {\n    unique_id += 2;\n    return unique_id;\n  };\n\n  // Retrieve or assign the id of an object\n  Opal.id = function(obj) {\n    if (obj.$$is_number) return (obj * 2)+1;\n    if (obj.$$id != null) {\n      return obj.$$id;\n    };\n    $defineProperty(obj, '$$id', Opal.uid());\n    return obj.$$id;\n  };\n\n  // Globals table\n  Opal.gvars = {};\n\n  // Exit function, this should be replaced by platform specific implementation\n  // (See nodejs and chrome for examples)\n  Opal.exit = function(status) { if (Opal.gvars.DEBUG) console.log('Exited with status '+status); };\n\n  // keeps track of exceptions for $!\n  Opal.exceptions = [];\n\n  // @private\n  // Pops an exception from the stack and updates `$!`.\n  Opal.pop_exception = function() {\n    Opal.gvars[\"!\"] = Opal.exceptions.pop() || nil;\n  }\n\n  // Inspect any kind of object, including non Ruby ones\n  Opal.inspect = function(obj) {\n    if (obj === undefined) {\n      return \"undefined\";\n    }\n    else if (obj === null) {\n      return \"null\";\n    }\n    else if (!obj.$$class) {\n      return obj.toString();\n    }\n    else {\n      return obj.$inspect();\n    }\n  }\n\n  function $defineProperty(object, name, initialValue) {\n    if (typeof(object) === \"string\") {\n      // Special case for:\n      //   s = \"string\"\n      //   def s.m; end\n      // String class is the only class that:\n      // + compiles to JS primitive\n      // + allows method definition directly on instances\n      // numbers, true, false and nil do not support it.\n      object[name] = initialValue;\n    } else {\n      Object.defineProperty(object, name, {\n        value: initialValue,\n        enumerable: false,\n        configurable: true,\n        writable: true\n      });\n    }\n  }\n\n  Opal.defineProperty = $defineProperty;\n\n  Opal.slice = $slice;\n\n\n  // Truth\n  // -----\n\n  Opal.truthy = function(val) {\n    return (val !== nil && val != null && (!val.$$is_boolean || val == true));\n  };\n\n  Opal.falsy = function(val) {\n    return (val === nil || val == null || (val.$$is_boolean && val == false))\n  };\n\n\n  // Constants\n  // ---------\n  //\n  // For future reference:\n  // - The Rails autoloading guide (http://guides.rubyonrails.org/v5.0/autoloading_and_reloading_constants.html)\n  // - @ConradIrwin's 2012 post on “Everything you ever wanted to know about constant lookup in Ruby” (http://cirw.in/blog/constant-lookup.html)\n  //\n  // Legend of MRI concepts/names:\n  // - constant reference (cref): the module/class that acts as a namespace\n  // - nesting: the namespaces wrapping the current scope, e.g. nesting inside\n  //            `module A; module B::C; end; end` is `[B::C, A]`\n\n  // Get the constant in the scope of the current cref\n  function const_get_name(cref, name) {\n    if (cref) return cref.$$const[name];\n  }\n\n  // Walk up the nesting array looking for the constant\n  function const_lookup_nesting(nesting, name) {\n    var i, ii, result, constant;\n\n    if (nesting.length === 0) return;\n\n    // If the nesting is not empty the constant is looked up in its elements\n    // and in order. The ancestors of those elements are ignored.\n    for (i = 0, ii = nesting.length; i < ii; i++) {\n      constant = nesting[i].$$const[name];\n      if (constant != null) return constant;\n    }\n  }\n\n  // Walk up the ancestors chain looking for the constant\n  function const_lookup_ancestors(cref, name) {\n    var i, ii, result, ancestors;\n\n    if (cref == null) return;\n\n    ancestors = Opal.ancestors(cref);\n\n    for (i = 0, ii = ancestors.length; i < ii; i++) {\n      if (ancestors[i].$$const && $hasOwn.call(ancestors[i].$$const, name)) {\n        return ancestors[i].$$const[name];\n      }\n    }\n  }\n\n  // Walk up Object's ancestors chain looking for the constant,\n  // but only if cref is missing or a module.\n  function const_lookup_Object(cref, name) {\n    if (cref == null || cref.$$is_module) {\n      return const_lookup_ancestors(_Object, name);\n    }\n  }\n\n  // Call const_missing if nothing else worked\n  function const_missing(cref, name, skip_missing) {\n    if (!skip_missing) {\n      return (cref || _Object).$const_missing(name);\n    }\n  }\n\n  // Look for the constant just in the current cref or call `#const_missing`\n  Opal.const_get_local = function(cref, name, skip_missing) {\n    var result;\n\n    if (cref == null) return;\n\n    if (cref === '::') cref = _Object;\n\n    if (!cref.$$is_module && !cref.$$is_class) {\n      throw new Opal.TypeError(cref.toString() + \" is not a class/module\");\n    }\n\n    result = const_get_name(cref, name);              if (result != null) return result;\n    result = const_missing(cref, name, skip_missing); if (result != null) return result;\n  }\n\n  // Look for the constant relative to a cref or call `#const_missing` (when the\n  // constant is prefixed by `::`).\n  Opal.const_get_qualified = function(cref, name, skip_missing) {\n    var result, cache, cached, current_version = Opal.const_cache_version;\n\n    if (cref == null) return;\n\n    if (cref === '::') cref = _Object;\n\n    if (!cref.$$is_module && !cref.$$is_class) {\n      throw new Opal.TypeError(cref.toString() + \" is not a class/module\");\n    }\n\n    if ((cache = cref.$$const_cache) == null) {\n      $defineProperty(cref, '$$const_cache', Object.create(null));\n      cache = cref.$$const_cache;\n    }\n    cached = cache[name];\n\n    if (cached == null || cached[0] !== current_version) {\n      ((result = const_get_name(cref, name))              != null) ||\n      ((result = const_lookup_ancestors(cref, name))      != null);\n      cache[name] = [current_version, result];\n    } else {\n      result = cached[1];\n    }\n\n    return result != null ? result : const_missing(cref, name, skip_missing);\n  };\n\n  // Initialize the top level constant cache generation counter\n  Opal.const_cache_version = 1;\n\n  // Look for the constant in the open using the current nesting and the nearest\n  // cref ancestors or call `#const_missing` (when the constant has no :: prefix).\n  Opal.const_get_relative = function(nesting, name, skip_missing) {\n    var cref = nesting[0], result, current_version = Opal.const_cache_version, cache, cached;\n\n    if ((cache = nesting.$$const_cache) == null) {\n      $defineProperty(nesting, '$$const_cache', Object.create(null));\n      cache = nesting.$$const_cache;\n    }\n    cached = cache[name];\n\n    if (cached == null || cached[0] !== current_version) {\n      ((result = const_get_name(cref, name))              != null) ||\n      ((result = const_lookup_nesting(nesting, name))     != null) ||\n      ((result = const_lookup_ancestors(cref, name))      != null) ||\n      ((result = const_lookup_Object(cref, name))         != null);\n\n      cache[name] = [current_version, result];\n    } else {\n      result = cached[1];\n    }\n\n    return result != null ? result : const_missing(cref, name, skip_missing);\n  };\n\n  // Register the constant on a cref and opportunistically set the name of\n  // unnamed classes/modules.\n  Opal.const_set = function(cref, name, value) {\n    if (cref == null || cref === '::') cref = _Object;\n\n    if (value.$$is_a_module) {\n      if (value.$$name == null || value.$$name === nil) value.$$name = name;\n      if (value.$$base_module == null) value.$$base_module = cref;\n    }\n\n    cref.$$const = (cref.$$const || Object.create(null));\n    cref.$$const[name] = value;\n\n    // Add a short helper to navigate constants manually.\n    // @example\n    //   Opal.$$.Regexp.$$.IGNORECASE\n    cref.$$ = cref.$$const;\n\n    Opal.const_cache_version++;\n\n    // Expose top level constants onto the Opal object\n    if (cref === _Object) Opal[name] = value;\n\n    // Name new class directly onto current scope (Opal.Foo.Baz = klass)\n    $defineProperty(cref, name, value);\n\n    return value;\n  };\n\n  // Get all the constants reachable from a given cref, by default will include\n  // inherited constants.\n  Opal.constants = function(cref, inherit) {\n    if (inherit == null) inherit = true;\n\n    var module, modules = [cref], module_constants, i, ii, constants = {}, constant;\n\n    if (inherit) modules = modules.concat(Opal.ancestors(cref));\n    if (inherit && cref.$$is_module) modules = modules.concat([Opal.Object]).concat(Opal.ancestors(Opal.Object));\n\n    for (i = 0, ii = modules.length; i < ii; i++) {\n      module = modules[i];\n\n      // Don not show Objects constants unless we're querying Object itself\n      if (cref !== _Object && module == _Object) break;\n\n      for (constant in module.$$const) {\n        constants[constant] = true;\n      }\n    }\n\n    return Object.keys(constants);\n  };\n\n  // Remove a constant from a cref.\n  Opal.const_remove = function(cref, name) {\n    Opal.const_cache_version++;\n\n    if (cref.$$const[name] != null) {\n      var old = cref.$$const[name];\n      delete cref.$$const[name];\n      return old;\n    }\n\n    if (cref.$$autoload != null && cref.$$autoload[name] != null) {\n      delete cref.$$autoload[name];\n      return nil;\n    }\n\n    throw Opal.NameError.$new(\"constant \"+cref+\"::\"+cref.$name()+\" not defined\");\n  };\n\n\n  // Modules & Classes\n  // -----------------\n\n  // A `class Foo; end` expression in ruby is compiled to call this runtime\n  // method which either returns an existing class of the given name, or creates\n  // a new class in the given `base` scope.\n  //\n  // If a constant with the given name exists, then we check to make sure that\n  // it is a class and also that the superclasses match. If either of these\n  // fail, then we raise a `TypeError`. Note, `superclass` may be null if one\n  // was not specified in the ruby code.\n  //\n  // We pass a constructor to this method of the form `function ClassName() {}`\n  // simply so that classes show up with nicely formatted names inside debuggers\n  // in the web browser (or node/sprockets).\n  //\n  // The `scope` is the current `self` value where the class is being created\n  // from. We use this to get the scope for where the class should be created.\n  // If `scope` is an object (not a class/module), we simple get its class and\n  // use that as the scope instead.\n  //\n  // @param scope        [Object] where the class is being created\n  // @param superclass  [Class,null] superclass of the new class (may be null)\n  // @param id          [String] the name of the class to be created\n  // @param constructor [JS.Function] function to use as constructor\n  //\n  // @return new [Class]  or existing ruby class\n  //\n  Opal.allocate_class = function(name, superclass) {\n    var klass, constructor;\n\n    if (superclass != null && superclass.$$bridge) {\n      // Inheritance from bridged classes requires\n      // calling original JS constructors\n      constructor = function() {\n        var args = $slice.call(arguments),\n            self = new ($bind.apply(superclass.$$constructor, [null].concat(args)))();\n\n        // and replacing a __proto__ manually\n        $setPrototype(self, klass.$$prototype);\n        return self;\n      }\n    } else {\n      constructor = function(){};\n    }\n\n    if (name) {\n      $defineProperty(constructor, 'displayName', '::'+name);\n    }\n\n    klass = constructor;\n\n    $defineProperty(klass, '$$name', name);\n    $defineProperty(klass, '$$constructor', constructor);\n    $defineProperty(klass, '$$prototype', constructor.prototype);\n    $defineProperty(klass, '$$const', {});\n    $defineProperty(klass, '$$is_class', true);\n    $defineProperty(klass, '$$is_a_module', true);\n    $defineProperty(klass, '$$super', superclass);\n    $defineProperty(klass, '$$cvars', {});\n    $defineProperty(klass, '$$own_included_modules', []);\n    $defineProperty(klass, '$$own_prepended_modules', []);\n    $defineProperty(klass, '$$ancestors', []);\n    $defineProperty(klass, '$$ancestors_cache_version', null);\n\n    $defineProperty(klass.$$prototype, '$$class', klass);\n\n    // By default if there are no singleton class methods\n    // __proto__ is Class.prototype\n    // Later singleton methods generate a singleton_class\n    // and inject it into ancestors chain\n    if (Opal.Class) {\n      $setPrototype(klass, Opal.Class.prototype);\n    }\n\n    if (superclass != null) {\n      $setPrototype(klass.$$prototype, superclass.$$prototype);\n\n      if (superclass.$$meta) {\n        // If superclass has metaclass then we have explicitely inherit it.\n        Opal.build_class_singleton_class(klass);\n      }\n    };\n\n    return klass;\n  }\n\n\n  function find_existing_class(scope, name) {\n    // Try to find the class in the current scope\n    var klass = const_get_name(scope, name);\n\n    // If the class exists in the scope, then we must use that\n    if (klass) {\n      // Make sure the existing constant is a class, or raise error\n      if (!klass.$$is_class) {\n        throw Opal.TypeError.$new(name + \" is not a class\");\n      }\n\n      return klass;\n    }\n  }\n\n  function ensureSuperclassMatch(klass, superclass) {\n    if (klass.$$super !== superclass) {\n      throw Opal.TypeError.$new(\"superclass mismatch for class \" + klass.$$name);\n    }\n  }\n\n  Opal.klass = function(scope, superclass, name) {\n    var bridged;\n\n    if (scope == null) {\n      // Global scope\n      scope = _Object;\n    } else if (!scope.$$is_class && !scope.$$is_module) {\n      // Scope is an object, use its class\n      scope = scope.$$class;\n    }\n\n    // If the superclass is not an Opal-generated class then we're bridging a native JS class\n    if (superclass != null && !superclass.hasOwnProperty('$$is_class')) {\n      bridged = superclass;\n      superclass = _Object;\n    }\n\n    var klass = find_existing_class(scope, name);\n\n    if (klass) {\n      if (superclass) {\n        // Make sure existing class has same superclass\n        ensureSuperclassMatch(klass, superclass);\n      }\n      return klass;\n    }\n\n    // Class doesn't exist, create a new one with given superclass...\n\n    // Not specifying a superclass means we can assume it to be Object\n    if (superclass == null) {\n      superclass = _Object;\n    }\n\n    // Create the class object (instance of Class)\n    klass = Opal.allocate_class(name, superclass);\n    Opal.const_set(scope, name, klass);\n\n    // Call .inherited() hook with new class on the superclass\n    if (superclass.$inherited) {\n      superclass.$inherited(klass);\n    }\n\n    if (bridged) {\n      Opal.bridge(bridged, klass);\n    }\n\n    return klass;\n  }\n\n  // Define new module (or return existing module). The given `scope` is basically\n  // the current `self` value the `module` statement was defined in. If this is\n  // a ruby module or class, then it is used, otherwise if the scope is a ruby\n  // object then that objects real ruby class is used (e.g. if the scope is the\n  // main object, then the top level `Object` class is used as the scope).\n  //\n  // If a module of the given name is already defined in the scope, then that\n  // instance is just returned.\n  //\n  // If there is a class of the given name in the scope, then an error is\n  // generated instead (cannot have a class and module of same name in same scope).\n  //\n  // Otherwise, a new module is created in the scope with the given name, and that\n  // new instance is returned back (to be referenced at runtime).\n  //\n  // @param  scope [Module, Class] class or module this definition is inside\n  // @param  id   [String] the name of the new (or existing) module\n  //\n  // @return [Module]\n  Opal.allocate_module = function(name) {\n    var constructor = function(){};\n    if (name) {\n      $defineProperty(constructor, 'displayName', name+'.$$constructor');\n    }\n\n    var module = constructor;\n\n    if (name)\n      $defineProperty(constructor, 'displayName', name+'.constructor');\n\n    $defineProperty(module, '$$name', name);\n    $defineProperty(module, '$$prototype', constructor.prototype);\n    $defineProperty(module, '$$const', {});\n    $defineProperty(module, '$$is_module', true);\n    $defineProperty(module, '$$is_a_module', true);\n    $defineProperty(module, '$$cvars', {});\n    $defineProperty(module, '$$iclasses', []);\n    $defineProperty(module, '$$own_included_modules', []);\n    $defineProperty(module, '$$own_prepended_modules', []);\n    $defineProperty(module, '$$ancestors', [module]);\n    $defineProperty(module, '$$ancestors_cache_version', null);\n\n    $setPrototype(module, Opal.Module.prototype);\n\n    return module;\n  }\n\n  function find_existing_module(scope, name) {\n    var module = const_get_name(scope, name);\n    if (module == null && scope === _Object) module = const_lookup_ancestors(_Object, name);\n\n    if (module) {\n      if (!module.$$is_module && module !== _Object) {\n        throw Opal.TypeError.$new(name + \" is not a module\");\n      }\n    }\n\n    return module;\n  }\n\n  Opal.module = function(scope, name) {\n    var module;\n\n    if (scope == null) {\n      // Global scope\n      scope = _Object;\n    } else if (!scope.$$is_class && !scope.$$is_module) {\n      // Scope is an object, use its class\n      scope = scope.$$class;\n    }\n\n    module = find_existing_module(scope, name);\n\n    if (module) {\n      return module;\n    }\n\n    // Module doesnt exist, create a new one...\n    module = Opal.allocate_module(name);\n    Opal.const_set(scope, name, module);\n\n    return module;\n  }\n\n  // Return the singleton class for the passed object.\n  //\n  // If the given object alredy has a singleton class, then it will be stored on\n  // the object as the `$$meta` property. If this exists, then it is simply\n  // returned back.\n  //\n  // Otherwise, a new singleton object for the class or object is created, set on\n  // the object at `$$meta` for future use, and then returned.\n  //\n  // @param object [Object] the ruby object\n  // @return [Class] the singleton class for object\n  Opal.get_singleton_class = function(object) {\n    if (object.$$meta) {\n      return object.$$meta;\n    }\n\n    if (object.hasOwnProperty('$$is_class')) {\n      return Opal.build_class_singleton_class(object);\n    } else if (object.hasOwnProperty('$$is_module')) {\n      return Opal.build_module_singletin_class(object);\n    } else {\n      return Opal.build_object_singleton_class(object);\n    }\n  };\n\n  // Build the singleton class for an existing class. Class object are built\n  // with their singleton class already in the prototype chain and inheriting\n  // from their superclass object (up to `Class` itself).\n  //\n  // NOTE: Actually in MRI a class' singleton class inherits from its\n  // superclass' singleton class which in turn inherits from Class.\n  //\n  // @param klass [Class]\n  // @return [Class]\n  Opal.build_class_singleton_class = function(klass) {\n    var superclass, meta;\n\n    if (klass.$$meta) {\n      return klass.$$meta;\n    }\n\n    // The singleton_class superclass is the singleton_class of its superclass;\n    // but BasicObject has no superclass (its `$$super` is null), thus we\n    // fallback on `Class`.\n    superclass = klass === BasicObject ? Class : Opal.get_singleton_class(klass.$$super);\n\n    meta = Opal.allocate_class(null, superclass, function(){});\n\n    $defineProperty(meta, '$$is_singleton', true);\n    $defineProperty(meta, '$$singleton_of', klass);\n    $defineProperty(klass, '$$meta', meta);\n    $setPrototype(klass, meta.$$prototype);\n    // Restoring ClassName.class\n    $defineProperty(klass, '$$class', Opal.Class);\n\n    return meta;\n  };\n\n  Opal.build_module_singletin_class = function(mod) {\n    if (mod.$$meta) {\n      return mod.$$meta;\n    }\n\n    var meta = Opal.allocate_class(null, Opal.Module, function(){});\n\n    $defineProperty(meta, '$$is_singleton', true);\n    $defineProperty(meta, '$$singleton_of', mod);\n    $defineProperty(mod, '$$meta', meta);\n    $setPrototype(mod, meta.$$prototype);\n    // Restoring ModuleName.class\n    $defineProperty(mod, '$$class', Opal.Module);\n\n    return meta;\n  }\n\n  // Build the singleton class for a Ruby (non class) Object.\n  //\n  // @param object [Object]\n  // @return [Class]\n  Opal.build_object_singleton_class = function(object) {\n    var superclass = object.$$class,\n        klass = Opal.allocate_class(nil, superclass, function(){});\n\n    $defineProperty(klass, '$$is_singleton', true);\n    $defineProperty(klass, '$$singleton_of', object);\n\n    delete klass.$$prototype.$$class;\n\n    $defineProperty(object, '$$meta', klass);\n\n    $setPrototype(object, object.$$meta.$$prototype);\n\n    return klass;\n  };\n\n  Opal.is_method = function(prop) {\n    return (prop[0] === '$' && prop[1] !== '$');\n  }\n\n  Opal.instance_methods = function(mod) {\n    var exclude = [], results = [], ancestors = Opal.ancestors(mod);\n\n    for (var i = 0, l = ancestors.length; i < l; i++) {\n      var ancestor = ancestors[i],\n          proto = ancestor.$$prototype;\n\n      if (proto.hasOwnProperty('$$dummy')) {\n        proto = proto.$$define_methods_on;\n      }\n\n      var props = Object.getOwnPropertyNames(proto);\n\n      for (var j = 0, ll = props.length; j < ll; j++) {\n        var prop = props[j];\n\n        if (Opal.is_method(prop)) {\n          var method_name = prop.slice(1),\n              method = proto[prop];\n\n          if (method.$$stub && exclude.indexOf(method_name) === -1) {\n            exclude.push(method_name);\n          }\n\n          if (!method.$$stub && results.indexOf(method_name) === -1 && exclude.indexOf(method_name) === -1) {\n            results.push(method_name);\n          }\n        }\n      }\n    }\n\n    return results;\n  }\n\n  Opal.own_instance_methods = function(mod) {\n    var results = [],\n        proto = mod.$$prototype;\n\n    if (proto.hasOwnProperty('$$dummy')) {\n      proto = proto.$$define_methods_on;\n    }\n\n    var props = Object.getOwnPropertyNames(proto);\n\n    for (var i = 0, length = props.length; i < length; i++) {\n      var prop = props[i];\n\n      if (Opal.is_method(prop)) {\n        var method = proto[prop];\n\n        if (!method.$$stub) {\n          var method_name = prop.slice(1);\n          results.push(method_name);\n        }\n      }\n    }\n\n    return results;\n  }\n\n  Opal.methods = function(obj) {\n    return Opal.instance_methods(Opal.get_singleton_class(obj));\n  }\n\n  Opal.own_methods = function(obj) {\n    return Opal.own_instance_methods(Opal.get_singleton_class(obj));\n  }\n\n  Opal.receiver_methods = function(obj) {\n    var mod = Opal.get_singleton_class(obj);\n    var singleton_methods = Opal.own_instance_methods(mod);\n    var instance_methods = Opal.own_instance_methods(mod.$$super);\n    return singleton_methods.concat(instance_methods);\n  }\n\n  // Returns an object containing all pairs of names/values\n  // for all class variables defined in provided +module+\n  // and its ancestors.\n  //\n  // @param module [Module]\n  // @return [Object]\n  Opal.class_variables = function(module) {\n    var ancestors = Opal.ancestors(module),\n        i, length = ancestors.length,\n        result = {};\n\n    for (i = length - 1; i >= 0; i--) {\n      var ancestor = ancestors[i];\n\n      for (var cvar in ancestor.$$cvars) {\n        result[cvar] = ancestor.$$cvars[cvar];\n      }\n    }\n\n    return result;\n  }\n\n  // Sets class variable with specified +name+ to +value+\n  // in provided +module+\n  //\n  // @param module [Module]\n  // @param name [String]\n  // @param value [Object]\n  Opal.class_variable_set = function(module, name, value) {\n    var ancestors = Opal.ancestors(module),\n        i, length = ancestors.length;\n\n    for (i = length - 2; i >= 0; i--) {\n      var ancestor = ancestors[i];\n\n      if ($hasOwn.call(ancestor.$$cvars, name)) {\n        ancestor.$$cvars[name] = value;\n        return value;\n      }\n    }\n\n    module.$$cvars[name] = value;\n\n    return value;\n  }\n\n  function isRoot(proto) {\n    return proto.hasOwnProperty('$$iclass') && proto.hasOwnProperty('$$root');\n  }\n\n  function own_included_modules(module) {\n    var result = [], mod, proto = Object.getPrototypeOf(module.$$prototype);\n\n    while (proto) {\n      if (proto.hasOwnProperty('$$class')) {\n        // superclass\n        break;\n      }\n      mod = protoToModule(proto);\n      if (mod) {\n        result.push(mod);\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    return result;\n  }\n\n  function own_prepended_modules(module) {\n    var result = [], mod, proto = Object.getPrototypeOf(module.$$prototype);\n\n    if (module.$$prototype.hasOwnProperty('$$dummy')) {\n      while (proto) {\n        if (proto === module.$$prototype.$$define_methods_on) {\n          break;\n        }\n\n        mod = protoToModule(proto);\n        if (mod) {\n          result.push(mod);\n        }\n\n        proto = Object.getPrototypeOf(proto);\n      }\n    }\n\n    return result;\n  }\n\n\n  // The actual inclusion of a module into a class.\n  //\n  // ## Class `$$parent` and `iclass`\n  //\n  // To handle `super` calls, every class has a `$$parent`. This parent is\n  // used to resolve the next class for a super call. A normal class would\n  // have this point to its superclass. However, if a class includes a module\n  // then this would need to take into account the module. The module would\n  // also have to then point its `$$parent` to the actual superclass. We\n  // cannot modify modules like this, because it might be included in more\n  // then one class. To fix this, we actually insert an `iclass` as the class'\n  // `$$parent` which can then point to the superclass. The `iclass` acts as\n  // a proxy to the actual module, so the `super` chain can then search it for\n  // the required method.\n  //\n  // @param module [Module] the module to include\n  // @param includer [Module] the target class to include module into\n  // @return [null]\n  Opal.append_features = function(module, includer) {\n    var module_ancestors = Opal.ancestors(module);\n    var iclasses = [];\n\n    if (module_ancestors.indexOf(includer) !== -1) {\n      throw Opal.ArgumentError.$new('cyclic include detected');\n    }\n\n    for (var i = 0, length = module_ancestors.length; i < length; i++) {\n      var ancestor = module_ancestors[i], iclass = create_iclass(ancestor);\n      $defineProperty(iclass, '$$included', true);\n      iclasses.push(iclass);\n    }\n    var includer_ancestors = Opal.ancestors(includer),\n        chain = chain_iclasses(iclasses),\n        start_chain_after,\n        end_chain_on;\n\n    if (includer_ancestors.indexOf(module) === -1) {\n      // first time include\n\n      // includer -> chain.first -> ...chain... -> chain.last -> includer.parent\n      start_chain_after = includer.$$prototype;\n      end_chain_on = Object.getPrototypeOf(includer.$$prototype);\n    } else {\n      // The module has been already included,\n      // we don't need to put it into the ancestors chain again,\n      // but this module may have new included modules.\n      // If it's true we need to copy them.\n      //\n      // The simplest way is to replace ancestors chain from\n      //          parent\n      //            |\n      //   `module` iclass (has a $$root flag)\n      //            |\n      //   ...previos chain of module.included_modules ...\n      //            |\n      //  \"next ancestor\" (has a $$root flag or is a real class)\n      //\n      // to\n      //          parent\n      //            |\n      //    `module` iclass (has a $$root flag)\n      //            |\n      //   ...regenerated chain of module.included_modules\n      //            |\n      //   \"next ancestor\" (has a $$root flag or is a real class)\n      //\n      // because there are no intermediate classes between `parent` and `next ancestor`.\n      // It doesn't break any prototypes of other objects as we don't change class references.\n\n      var proto = includer.$$prototype, parent = proto, module_iclass = Object.getPrototypeOf(parent);\n\n      while (module_iclass != null) {\n        if (isRoot(module_iclass) && module_iclass.$$module === module) {\n          break;\n        }\n\n        parent = module_iclass;\n        module_iclass = Object.getPrototypeOf(module_iclass);\n      }\n\n      var next_ancestor = Object.getPrototypeOf(module_iclass);\n\n      // skip non-root iclasses (that were recursively included)\n      while (next_ancestor.hasOwnProperty('$$iclass') && !isRoot(next_ancestor)) {\n        next_ancestor = Object.getPrototypeOf(next_ancestor);\n      }\n\n      start_chain_after = parent;\n      end_chain_on = next_ancestor;\n    }\n\n    $setPrototype(start_chain_after, chain.first);\n    $setPrototype(chain.last, end_chain_on);\n\n    // recalculate own_included_modules cache\n    includer.$$own_included_modules = own_included_modules(includer);\n\n    Opal.const_cache_version++;\n  }\n\n  Opal.prepend_features = function(module, prepender) {\n    // Here we change the ancestors chain from\n    //\n    //   prepender\n    //      |\n    //    parent\n    //\n    // to:\n    //\n    // dummy(prepender)\n    //      |\n    //  iclass(module)\n    //      |\n    // iclass(prepender)\n    //      |\n    //    parent\n    var module_ancestors = Opal.ancestors(module);\n    var iclasses = [];\n\n    if (module_ancestors.indexOf(prepender) !== -1) {\n      throw Opal.ArgumentError.$new('cyclic prepend detected');\n    }\n\n    for (var i = 0, length = module_ancestors.length; i < length; i++) {\n      var ancestor = module_ancestors[i], iclass = create_iclass(ancestor);\n      $defineProperty(iclass, '$$prepended', true);\n      iclasses.push(iclass);\n    }\n\n    var chain = chain_iclasses(iclasses),\n        dummy_prepender = prepender.$$prototype,\n        previous_parent = Object.getPrototypeOf(dummy_prepender),\n        prepender_iclass,\n        start_chain_after,\n        end_chain_on;\n\n    if (dummy_prepender.hasOwnProperty('$$dummy')) {\n      // The module already has some prepended modules\n      // which means that we don't need to make it \"dummy\"\n      prepender_iclass = dummy_prepender.$$define_methods_on;\n    } else {\n      // Making the module \"dummy\"\n      prepender_iclass = create_dummy_iclass(prepender);\n      flush_methods_in(prepender);\n      $defineProperty(dummy_prepender, '$$dummy', true);\n      $defineProperty(dummy_prepender, '$$define_methods_on', prepender_iclass);\n\n      // Converting\n      //   dummy(prepender) -> previous_parent\n      // to\n      //   dummy(prepender) -> iclass(prepender) -> previous_parent\n      $setPrototype(dummy_prepender, prepender_iclass);\n      $setPrototype(prepender_iclass, previous_parent);\n    }\n\n    var prepender_ancestors = Opal.ancestors(prepender);\n\n    if (prepender_ancestors.indexOf(module) === -1) {\n      // first time prepend\n\n      start_chain_after = dummy_prepender;\n\n      // next $$root or prepender_iclass or non-$$iclass\n      end_chain_on = Object.getPrototypeOf(dummy_prepender);\n      while (end_chain_on != null) {\n        if (\n          end_chain_on.hasOwnProperty('$$root') ||\n          end_chain_on === prepender_iclass ||\n          !end_chain_on.hasOwnProperty('$$iclass')\n        ) {\n          break;\n        }\n\n        end_chain_on = Object.getPrototypeOf(end_chain_on);\n      }\n    } else {\n      throw Opal.RuntimeError.$new(\"Prepending a module multiple times is not supported\");\n    }\n\n    $setPrototype(start_chain_after, chain.first);\n    $setPrototype(chain.last, end_chain_on);\n\n    // recalculate own_prepended_modules cache\n    prepender.$$own_prepended_modules = own_prepended_modules(prepender);\n\n    Opal.const_cache_version++;\n  }\n\n  function flush_methods_in(module) {\n    var proto = module.$$prototype,\n        props = Object.getOwnPropertyNames(proto);\n\n    for (var i = 0; i < props.length; i++) {\n      var prop = props[i];\n      if (Opal.is_method(prop)) {\n        delete proto[prop];\n      }\n    }\n  }\n\n  function create_iclass(module) {\n    var iclass = create_dummy_iclass(module);\n\n    if (module.$$is_module) {\n      module.$$iclasses.push(iclass);\n    }\n\n    return iclass;\n  }\n\n  // Dummy iclass doesn't receive updates when the module gets a new method.\n  function create_dummy_iclass(module) {\n    var iclass = {},\n        proto = module.$$prototype;\n\n    if (proto.hasOwnProperty('$$dummy')) {\n      proto = proto.$$define_methods_on;\n    }\n\n    var props = Object.getOwnPropertyNames(proto),\n        length = props.length, i;\n\n    for (i = 0; i < length; i++) {\n      var prop = props[i];\n      $defineProperty(iclass, prop, proto[prop]);\n    }\n\n    $defineProperty(iclass, '$$iclass', true);\n    $defineProperty(iclass, '$$module', module);\n\n    return iclass;\n  }\n\n  function chain_iclasses(iclasses) {\n    var length = iclasses.length, first = iclasses[0];\n\n    $defineProperty(first, '$$root', true);\n\n    if (length === 1) {\n      return { first: first, last: first };\n    }\n\n    var previous = first;\n\n    for (var i = 1; i < length; i++) {\n      var current = iclasses[i];\n      $setPrototype(previous, current);\n      previous = current;\n    }\n\n\n    return { first: iclasses[0], last: iclasses[length - 1] };\n  }\n\n  // For performance, some core Ruby classes are toll-free bridged to their\n  // native JavaScript counterparts (e.g. a Ruby Array is a JavaScript Array).\n  //\n  // This method is used to setup a native constructor (e.g. Array), to have\n  // its prototype act like a normal Ruby class. Firstly, a new Ruby class is\n  // created using the native constructor so that its prototype is set as the\n  // target for the new class. Note: all bridged classes are set to inherit\n  // from Object.\n  //\n  // Example:\n  //\n  //    Opal.bridge(self, Function);\n  //\n  // @param klass       [Class] the Ruby class to bridge\n  // @param constructor [JS.Function] native JavaScript constructor to use\n  // @return [Class] returns the passed Ruby class\n  //\n  Opal.bridge = function(native_klass, klass) {\n    if (native_klass.hasOwnProperty('$$bridge')) {\n      throw Opal.ArgumentError.$new(\"already bridged\");\n    }\n\n    var klass_to_inject, klass_reference;\n\n    klass_to_inject = klass.$$super || Opal.Object;\n    klass_reference = klass;\n    var original_prototype = klass.$$prototype;\n\n    // constructor is a JS function with a prototype chain like:\n    // - constructor\n    //   - super\n    //\n    // What we need to do is to inject our class (with its prototype chain)\n    // between constructor and super. For example, after injecting ::Object\n    // into JS String we get:\n    //\n    // - constructor (window.String)\n    //   - Opal.Object\n    //     - Opal.Kernel\n    //       - Opal.BasicObject\n    //         - super (window.Object)\n    //           - null\n    //\n    $defineProperty(native_klass, '$$bridge', klass);\n    $setPrototype(native_klass.prototype, (klass.$$super || Opal.Object).$$prototype);\n    $defineProperty(klass, '$$prototype', native_klass.prototype);\n\n    $defineProperty(klass.$$prototype, '$$class', klass);\n    $defineProperty(klass, '$$constructor', native_klass);\n    $defineProperty(klass, '$$bridge', true);\n  };\n\n  function protoToModule(proto) {\n    if (proto.hasOwnProperty('$$dummy')) {\n      return;\n    } else if (proto.hasOwnProperty('$$iclass')) {\n      return proto.$$module;\n    } else if (proto.hasOwnProperty('$$class')) {\n      return proto.$$class;\n    }\n  }\n\n  function own_ancestors(module) {\n    return module.$$own_prepended_modules.concat([module]).concat(module.$$own_included_modules);\n  }\n\n  // The Array of ancestors for a given module/class\n  Opal.ancestors = function(module) {\n    if (!module) { return []; }\n\n    if (module.$$ancestors_cache_version === Opal.const_cache_version) {\n      return module.$$ancestors;\n    }\n\n    var result = [], i, mods, length;\n\n    for (i = 0, mods = own_ancestors(module), length = mods.length; i < length; i++) {\n      result.push(mods[i]);\n    }\n\n    if (module.$$super) {\n      for (i = 0, mods = Opal.ancestors(module.$$super), length = mods.length; i < length; i++) {\n        result.push(mods[i]);\n      }\n    }\n\n    module.$$ancestors_cache_version = Opal.const_cache_version;\n    module.$$ancestors = result;\n\n    return result;\n  }\n\n  Opal.included_modules = function(module) {\n    var result = [], mod = null, proto = Object.getPrototypeOf(module.$$prototype);\n\n    for (; proto && Object.getPrototypeOf(proto); proto = Object.getPrototypeOf(proto)) {\n      mod = protoToModule(proto);\n      if (mod && mod.$$is_module && proto.$$iclass && proto.$$included) {\n        result.push(mod);\n      }\n    }\n\n    return result;\n  }\n\n\n  // Method Missing\n  // --------------\n\n  // Methods stubs are used to facilitate method_missing in opal. A stub is a\n  // placeholder function which just calls `method_missing` on the receiver.\n  // If no method with the given name is actually defined on an object, then it\n  // is obvious to say that the stub will be called instead, and then in turn\n  // method_missing will be called.\n  //\n  // When a file in ruby gets compiled to javascript, it includes a call to\n  // this function which adds stubs for every method name in the compiled file.\n  // It should then be safe to assume that method_missing will work for any\n  // method call detected.\n  //\n  // Method stubs are added to the BasicObject prototype, which every other\n  // ruby object inherits, so all objects should handle method missing. A stub\n  // is only added if the given property name (method name) is not already\n  // defined.\n  //\n  // Note: all ruby methods have a `$` prefix in javascript, so all stubs will\n  // have this prefix as well (to make this method more performant).\n  //\n  //    Opal.add_stubs([\"$foo\", \"$bar\", \"$baz=\"]);\n  //\n  // All stub functions will have a private `$$stub` property set to true so\n  // that other internal methods can detect if a method is just a stub or not.\n  // `Kernel#respond_to?` uses this property to detect a methods presence.\n  //\n  // @param stubs [Array] an array of method stubs to add\n  // @return [undefined]\n  Opal.add_stubs = function(stubs) {\n    var proto = Opal.BasicObject.$$prototype;\n\n    for (var i = 0, length = stubs.length; i < length; i++) {\n      var stub = stubs[i], existing_method = proto[stub];\n\n      if (existing_method == null || existing_method.$$stub) {\n        Opal.add_stub_for(proto, stub);\n      }\n    }\n  };\n\n  // Add a method_missing stub function to the given prototype for the\n  // given name.\n  //\n  // @param prototype [Prototype] the target prototype\n  // @param stub [String] stub name to add (e.g. \"$foo\")\n  // @return [undefined]\n  Opal.add_stub_for = function(prototype, stub) {\n    var method_missing_stub = Opal.stub_for(stub);\n    $defineProperty(prototype, stub, method_missing_stub);\n  };\n\n  // Generate the method_missing stub for a given method name.\n  //\n  // @param method_name [String] The js-name of the method to stub (e.g. \"$foo\")\n  // @return [undefined]\n  Opal.stub_for = function(method_name) {\n    function method_missing_stub() {\n      // Copy any given block onto the method_missing dispatcher\n      this.$method_missing.$$p = method_missing_stub.$$p;\n\n      // Set block property to null ready for the next call (stop false-positives)\n      method_missing_stub.$$p = null;\n\n      // call method missing with correct args (remove '$' prefix on method name)\n      var args_ary = new Array(arguments.length);\n      for(var i = 0, l = args_ary.length; i < l; i++) { args_ary[i] = arguments[i]; }\n\n      return this.$method_missing.apply(this, [method_name.slice(1)].concat(args_ary));\n    }\n\n    method_missing_stub.$$stub = true;\n\n    return method_missing_stub;\n  };\n\n\n  // Methods\n  // -------\n\n  // Arity count error dispatcher for methods\n  //\n  // @param actual [Fixnum] number of arguments given to method\n  // @param expected [Fixnum] expected number of arguments\n  // @param object [Object] owner of the method +meth+\n  // @param meth [String] method name that got wrong number of arguments\n  // @raise [ArgumentError]\n  Opal.ac = function(actual, expected, object, meth) {\n    var inspect = '';\n    if (object.$$is_a_module) {\n      inspect += object.$$name + '.';\n    }\n    else {\n      inspect += object.$$class.$$name + '#';\n    }\n    inspect += meth;\n\n    throw Opal.ArgumentError.$new('[' + inspect + '] wrong number of arguments(' + actual + ' for ' + expected + ')');\n  };\n\n  // Arity count error dispatcher for blocks\n  //\n  // @param actual [Fixnum] number of arguments given to block\n  // @param expected [Fixnum] expected number of arguments\n  // @param context [Object] context of the block definition\n  // @raise [ArgumentError]\n  Opal.block_ac = function(actual, expected, context) {\n    var inspect = \"`block in \" + context + \"'\";\n\n    throw Opal.ArgumentError.$new(inspect + ': wrong number of arguments (' + actual + ' for ' + expected + ')');\n  };\n\n  // Super dispatcher\n  Opal.find_super_dispatcher = function(obj, mid, current_func, defcheck, defs) {\n    var jsid = '$' + mid, ancestors, super_method;\n\n    if (obj.hasOwnProperty('$$meta')) {\n      ancestors = Opal.ancestors(obj.$$meta);\n    } else {\n      ancestors = Opal.ancestors(obj.$$class);\n    }\n\n    var current_index = ancestors.indexOf(current_func.$$owner);\n\n    for (var i = current_index + 1; i < ancestors.length; i++) {\n      var ancestor = ancestors[i],\n          proto = ancestor.$$prototype;\n\n      if (proto.hasOwnProperty('$$dummy')) {\n        proto = proto.$$define_methods_on;\n      }\n\n      if (proto.hasOwnProperty(jsid)) {\n        var method = proto[jsid];\n\n        if (!method.$$stub) {\n          super_method = method;\n        }\n        break;\n      }\n    }\n\n    if (!defcheck && super_method == null && Opal.Kernel.$method_missing === obj.$method_missing) {\n      // method_missing hasn't been explicitly defined\n      throw Opal.NoMethodError.$new('super: no superclass method `'+mid+\"' for \"+obj, mid);\n    }\n\n    return super_method;\n  };\n\n  // Iter dispatcher for super in a block\n  Opal.find_iter_super_dispatcher = function(obj, jsid, current_func, defcheck, implicit) {\n    var call_jsid = jsid;\n\n    if (!current_func) {\n      throw Opal.RuntimeError.$new(\"super called outside of method\");\n    }\n\n    if (implicit && current_func.$$define_meth) {\n      throw Opal.RuntimeError.$new(\"implicit argument passing of super from method defined by define_method() is not supported. Specify all arguments explicitly\");\n    }\n\n    if (current_func.$$def) {\n      call_jsid = current_func.$$jsid;\n    }\n\n    return Opal.find_super_dispatcher(obj, call_jsid, current_func, defcheck);\n  };\n\n  // Used to return as an expression. Sometimes, we can't simply return from\n  // a javascript function as if we were a method, as the return is used as\n  // an expression, or even inside a block which must \"return\" to the outer\n  // method. This helper simply throws an error which is then caught by the\n  // method. This approach is expensive, so it is only used when absolutely\n  // needed.\n  //\n  Opal.ret = function(val) {\n    Opal.returner.$v = val;\n    throw Opal.returner;\n  };\n\n  // Used to break out of a block.\n  Opal.brk = function(val, breaker) {\n    breaker.$v = val;\n    throw breaker;\n  };\n\n  // Builds a new unique breaker, this is to avoid multiple nested breaks to get\n  // in the way of each other.\n  Opal.new_brk = function() {\n    return new Error('unexpected break');\n  };\n\n  // handles yield calls for 1 yielded arg\n  Opal.yield1 = function(block, arg) {\n    if (typeof(block) !== \"function\") {\n      throw Opal.LocalJumpError.$new(\"no block given\");\n    }\n\n    var has_mlhs = block.$$has_top_level_mlhs_arg,\n        has_trailing_comma = block.$$has_trailing_comma_in_args;\n\n    if (block.length > 1 || ((has_mlhs || has_trailing_comma) && block.length === 1)) {\n      arg = Opal.to_ary(arg);\n    }\n\n    if ((block.length > 1 || (has_trailing_comma && block.length === 1)) && arg.$$is_array) {\n      return block.apply(null, arg);\n    }\n    else {\n      return block(arg);\n    }\n  };\n\n  // handles yield for > 1 yielded arg\n  Opal.yieldX = function(block, args) {\n    if (typeof(block) !== \"function\") {\n      throw Opal.LocalJumpError.$new(\"no block given\");\n    }\n\n    if (block.length > 1 && args.length === 1) {\n      if (args[0].$$is_array) {\n        return block.apply(null, args[0]);\n      }\n    }\n\n    if (!args.$$is_array) {\n      var args_ary = new Array(args.length);\n      for(var i = 0, l = args_ary.length; i < l; i++) { args_ary[i] = args[i]; }\n\n      return block.apply(null, args_ary);\n    }\n\n    return block.apply(null, args);\n  };\n\n  // Finds the corresponding exception match in candidates.  Each candidate can\n  // be a value, or an array of values.  Returns null if not found.\n  Opal.rescue = function(exception, candidates) {\n    for (var i = 0; i < candidates.length; i++) {\n      var candidate = candidates[i];\n\n      if (candidate.$$is_array) {\n        var result = Opal.rescue(exception, candidate);\n\n        if (result) {\n          return result;\n        }\n      }\n      else if (candidate === Opal.JS.Error) {\n        return candidate;\n      }\n      else if (candidate['$==='](exception)) {\n        return candidate;\n      }\n    }\n\n    return null;\n  };\n\n  Opal.is_a = function(object, klass) {\n    if (klass != null && object.$$meta === klass || object.$$class === klass) {\n      return true;\n    }\n\n    if (object.$$is_number && klass.$$is_number_class) {\n      return true;\n    }\n\n    var i, length, ancestors = Opal.ancestors(object.$$is_class ? Opal.get_singleton_class(object) : (object.$$meta || object.$$class));\n\n    for (i = 0, length = ancestors.length; i < length; i++) {\n      if (ancestors[i] === klass) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  // Helpers for extracting kwsplats\n  // Used for: { **h }\n  Opal.to_hash = function(value) {\n    if (value.$$is_hash) {\n      return value;\n    }\n    else if (value['$respond_to?']('to_hash', true)) {\n      var hash = value.$to_hash();\n      if (hash.$$is_hash) {\n        return hash;\n      }\n      else {\n        throw Opal.TypeError.$new(\"Can't convert \" + value.$$class +\n          \" to Hash (\" + value.$$class + \"#to_hash gives \" + hash.$$class + \")\");\n      }\n    }\n    else {\n      throw Opal.TypeError.$new(\"no implicit conversion of \" + value.$$class + \" into Hash\");\n    }\n  };\n\n  // Helpers for implementing multiple assignment\n  // Our code for extracting the values and assigning them only works if the\n  // return value is a JS array.\n  // So if we get an Array subclass, extract the wrapped JS array from it\n\n  // Used for: a, b = something (no splat)\n  Opal.to_ary = function(value) {\n    if (value.$$is_array) {\n      return value;\n    }\n    else if (value['$respond_to?']('to_ary', true)) {\n      var ary = value.$to_ary();\n      if (ary === nil) {\n        return [value];\n      }\n      else if (ary.$$is_array) {\n        return ary;\n      }\n      else {\n        throw Opal.TypeError.$new(\"Can't convert \" + value.$$class +\n          \" to Array (\" + value.$$class + \"#to_ary gives \" + ary.$$class + \")\");\n      }\n    }\n    else {\n      return [value];\n    }\n  };\n\n  // Used for: a, b = *something (with splat)\n  Opal.to_a = function(value) {\n    if (value.$$is_array) {\n      // A splatted array must be copied\n      return value.slice();\n    }\n    else if (value['$respond_to?']('to_a', true)) {\n      var ary = value.$to_a();\n      if (ary === nil) {\n        return [value];\n      }\n      else if (ary.$$is_array) {\n        return ary;\n      }\n      else {\n        throw Opal.TypeError.$new(\"Can't convert \" + value.$$class +\n          \" to Array (\" + value.$$class + \"#to_a gives \" + ary.$$class + \")\");\n      }\n    }\n    else {\n      return [value];\n    }\n  };\n\n  // Used for extracting keyword arguments from arguments passed to\n  // JS function. If provided +arguments+ list doesn't have a Hash\n  // as a last item, returns a blank Hash.\n  //\n  // @param parameters [Array]\n  // @return [Hash]\n  //\n  Opal.extract_kwargs = function(parameters) {\n    var kwargs = parameters[parameters.length - 1];\n    if (kwargs != null && kwargs['$respond_to?']('to_hash', true)) {\n      $splice.call(parameters, parameters.length - 1, 1);\n      return kwargs.$to_hash();\n    }\n    else {\n      return Opal.hash2([], {});\n    }\n  }\n\n  // Used to get a list of rest keyword arguments. Method takes the given\n  // keyword args, i.e. the hash literal passed to the method containing all\n  // keyword arguemnts passed to method, as well as the used args which are\n  // the names of required and optional arguments defined. This method then\n  // just returns all key/value pairs which have not been used, in a new\n  // hash literal.\n  //\n  // @param given_args [Hash] all kwargs given to method\n  // @param used_args [Object<String: true>] all keys used as named kwargs\n  // @return [Hash]\n  //\n  Opal.kwrestargs = function(given_args, used_args) {\n    var keys      = [],\n        map       = {},\n        key       = null,\n        given_map = given_args.$$smap;\n\n    for (key in given_map) {\n      if (!used_args[key]) {\n        keys.push(key);\n        map[key] = given_map[key];\n      }\n    }\n\n    return Opal.hash2(keys, map);\n  };\n\n  // Calls passed method on a ruby object with arguments and block:\n  //\n  // Can take a method or a method name.\n  //\n  // 1. When method name gets passed it invokes it by its name\n  //    and calls 'method_missing' when object doesn't have this method.\n  //    Used internally by Opal to invoke method that takes a block or a splat.\n  // 2. When method (i.e. method body) gets passed, it doesn't trigger 'method_missing'\n  //    because it doesn't know the name of the actual method.\n  //    Used internally by Opal to invoke 'super'.\n  //\n  // @example\n  //   var my_array = [1, 2, 3, 4]\n  //   Opal.send(my_array, 'length')                    # => 4\n  //   Opal.send(my_array, my_array.$length)            # => 4\n  //\n  //   Opal.send(my_array, 'reverse!')                  # => [4, 3, 2, 1]\n  //   Opal.send(my_array, my_array['$reverse!']')      # => [4, 3, 2, 1]\n  //\n  // @param recv [Object] ruby object\n  // @param method [Function, String] method body or name of the method\n  // @param args [Array] arguments that will be passed to the method call\n  // @param block [Function] ruby block\n  // @return [Object] returning value of the method call\n  Opal.send = function(recv, method, args, block) {\n    var body = (typeof(method) === 'string') ? recv['$'+method] : method;\n\n    if (body != null) {\n      if (typeof block === 'function') {\n        body.$$p = block;\n      }\n      return body.apply(recv, args);\n    }\n\n    return recv.$method_missing.apply(recv, [method].concat(args));\n  }\n\n  Opal.lambda = function(block) {\n    block.$$is_lambda = true;\n    return block;\n  }\n\n  // Used to define methods on an object. This is a helper method, used by the\n  // compiled source to define methods on special case objects when the compiler\n  // can not determine the destination object, or the object is a Module\n  // instance. This can get called by `Module#define_method` as well.\n  //\n  // ## Modules\n  //\n  // Any method defined on a module will come through this runtime helper.\n  // The method is added to the module body, and the owner of the method is\n  // set to be the module itself. This is used later when choosing which\n  // method should show on a class if more than 1 included modules define\n  // the same method. Finally, if the module is in `module_function` mode,\n  // then the method is also defined onto the module itself.\n  //\n  // ## Classes\n  //\n  // This helper will only be called for classes when a method is being\n  // defined indirectly; either through `Module#define_method`, or by a\n  // literal `def` method inside an `instance_eval` or `class_eval` body. In\n  // either case, the method is simply added to the class' prototype. A special\n  // exception exists for `BasicObject` and `Object`. These two classes are\n  // special because they are used in toll-free bridged classes. In each of\n  // these two cases, extra work is required to define the methods on toll-free\n  // bridged class' prototypes as well.\n  //\n  // ## Objects\n  //\n  // If a simple ruby object is the object, then the method is simply just\n  // defined on the object as a singleton method. This would be the case when\n  // a method is defined inside an `instance_eval` block.\n  //\n  // @param obj  [Object, Class] the actual obj to define method for\n  // @param jsid [String] the JavaScript friendly method name (e.g. '$foo')\n  // @param body [JS.Function] the literal JavaScript function used as method\n  // @return [null]\n  //\n  Opal.def = function(obj, jsid, body) {\n    // Special case for a method definition in the\n    // top-level namespace\n    if (obj === Opal.top) {\n      Opal.defn(Opal.Object, jsid, body)\n    }\n    // if instance_eval is invoked on a module/class, it sets inst_eval_mod\n    else if (!obj.$$eval && obj.$$is_a_module) {\n      Opal.defn(obj, jsid, body);\n    }\n    else {\n      Opal.defs(obj, jsid, body);\n    }\n  };\n\n  // Define method on a module or class (see Opal.def).\n  Opal.defn = function(module, jsid, body) {\n    body.displayName = jsid;\n    body.$$owner = module;\n\n    var proto = module.$$prototype;\n    if (proto.hasOwnProperty('$$dummy')) {\n      proto = proto.$$define_methods_on;\n    }\n    $defineProperty(proto, jsid, body);\n\n    if (module.$$is_module) {\n      if (module.$$module_function) {\n        Opal.defs(module, jsid, body)\n      }\n\n      for (var i = 0, iclasses = module.$$iclasses, length = iclasses.length; i < length; i++) {\n        var iclass = iclasses[i];\n        $defineProperty(iclass, jsid, body);\n      }\n    }\n\n    var singleton_of = module.$$singleton_of;\n    if (module.$method_added && !module.$method_added.$$stub && !singleton_of) {\n      module.$method_added(jsid.substr(1));\n    }\n    else if (singleton_of && singleton_of.$singleton_method_added && !singleton_of.$singleton_method_added.$$stub) {\n      singleton_of.$singleton_method_added(jsid.substr(1));\n    }\n  }\n\n  // Define a singleton method on the given object (see Opal.def).\n  Opal.defs = function(obj, jsid, body) {\n    if (obj.$$is_string || obj.$$is_number) {\n      throw Opal.TypeError.$new(\"can't define singleton\");\n    }\n    Opal.defn(Opal.get_singleton_class(obj), jsid, body)\n  };\n\n  // Called from #remove_method.\n  Opal.rdef = function(obj, jsid) {\n    if (!$hasOwn.call(obj.$$prototype, jsid)) {\n      throw Opal.NameError.$new(\"method '\" + jsid.substr(1) + \"' not defined in \" + obj.$name());\n    }\n\n    delete obj.$$prototype[jsid];\n\n    if (obj.$$is_singleton) {\n      if (obj.$$prototype.$singleton_method_removed && !obj.$$prototype.$singleton_method_removed.$$stub) {\n        obj.$$prototype.$singleton_method_removed(jsid.substr(1));\n      }\n    }\n    else {\n      if (obj.$method_removed && !obj.$method_removed.$$stub) {\n        obj.$method_removed(jsid.substr(1));\n      }\n    }\n  };\n\n  // Called from #undef_method.\n  Opal.udef = function(obj, jsid) {\n    if (!obj.$$prototype[jsid] || obj.$$prototype[jsid].$$stub) {\n      throw Opal.NameError.$new(\"method '\" + jsid.substr(1) + \"' not defined in \" + obj.$name());\n    }\n\n    Opal.add_stub_for(obj.$$prototype, jsid);\n\n    if (obj.$$is_singleton) {\n      if (obj.$$prototype.$singleton_method_undefined && !obj.$$prototype.$singleton_method_undefined.$$stub) {\n        obj.$$prototype.$singleton_method_undefined(jsid.substr(1));\n      }\n    }\n    else {\n      if (obj.$method_undefined && !obj.$method_undefined.$$stub) {\n        obj.$method_undefined(jsid.substr(1));\n      }\n    }\n  };\n\n  function is_method_body(body) {\n    return (typeof(body) === \"function\" && !body.$$stub);\n  }\n\n  Opal.alias = function(obj, name, old) {\n    var id     = '$' + name,\n        old_id = '$' + old,\n        body   = obj.$$prototype['$' + old],\n        alias;\n\n    // When running inside #instance_eval the alias refers to class methods.\n    if (obj.$$eval) {\n      return Opal.alias(Opal.get_singleton_class(obj), name, old);\n    }\n\n    if (!is_method_body(body)) {\n      var ancestor = obj.$$super;\n\n      while (typeof(body) !== \"function\" && ancestor) {\n        body     = ancestor[old_id];\n        ancestor = ancestor.$$super;\n      }\n\n      if (!is_method_body(body) && obj.$$is_module) {\n        // try to look into Object\n        body = Opal.Object.$$prototype[old_id]\n      }\n\n      if (!is_method_body(body)) {\n        throw Opal.NameError.$new(\"undefined method `\" + old + \"' for class `\" + obj.$name() + \"'\")\n      }\n    }\n\n    // If the body is itself an alias use the original body\n    // to keep the max depth at 1.\n    if (body.$$alias_of) body = body.$$alias_of;\n\n    // We need a wrapper because otherwise properties\n    // would be ovrewritten on the original body.\n    alias = function() {\n      var block = alias.$$p, args, i, ii;\n\n      args = new Array(arguments.length);\n      for(i = 0, ii = arguments.length; i < ii; i++) {\n        args[i] = arguments[i];\n      }\n\n      if (block != null) { alias.$$p = null }\n\n      return Opal.send(this, body, args, block);\n    };\n\n    // Try to make the browser pick the right name\n    alias.displayName       = name;\n    alias.length            = body.length;\n    alias.$$arity           = body.$$arity;\n    alias.$$parameters      = body.$$parameters;\n    alias.$$source_location = body.$$source_location;\n    alias.$$alias_of        = body;\n    alias.$$alias_name      = name;\n\n    Opal.defn(obj, id, alias);\n\n    return obj;\n  };\n\n  Opal.alias_native = function(obj, name, native_name) {\n    var id   = '$' + name,\n        body = obj.$$prototype[native_name];\n\n    if (typeof(body) !== \"function\" || body.$$stub) {\n      throw Opal.NameError.$new(\"undefined native method `\" + native_name + \"' for class `\" + obj.$name() + \"'\")\n    }\n\n    Opal.defn(obj, id, body);\n\n    return obj;\n  };\n\n\n  // Hashes\n  // ------\n\n  Opal.hash_init = function(hash) {\n    hash.$$smap = Object.create(null);\n    hash.$$map  = Object.create(null);\n    hash.$$keys = [];\n  };\n\n  Opal.hash_clone = function(from_hash, to_hash) {\n    to_hash.$$none = from_hash.$$none;\n    to_hash.$$proc = from_hash.$$proc;\n\n    for (var i = 0, keys = from_hash.$$keys, smap = from_hash.$$smap, len = keys.length, key, value; i < len; i++) {\n      key = keys[i];\n\n      if (key.$$is_string) {\n        value = smap[key];\n      } else {\n        value = key.value;\n        key = key.key;\n      }\n\n      Opal.hash_put(to_hash, key, value);\n    }\n  };\n\n  Opal.hash_put = function(hash, key, value) {\n    if (key.$$is_string) {\n      if (!$hasOwn.call(hash.$$smap, key)) {\n        hash.$$keys.push(key);\n      }\n      hash.$$smap[key] = value;\n      return;\n    }\n\n    var key_hash, bucket, last_bucket;\n    key_hash = hash.$$by_identity ? Opal.id(key) : key.$hash();\n\n    if (!$hasOwn.call(hash.$$map, key_hash)) {\n      bucket = {key: key, key_hash: key_hash, value: value};\n      hash.$$keys.push(bucket);\n      hash.$$map[key_hash] = bucket;\n      return;\n    }\n\n    bucket = hash.$$map[key_hash];\n\n    while (bucket) {\n      if (key === bucket.key || key['$eql?'](bucket.key)) {\n        last_bucket = undefined;\n        bucket.value = value;\n        break;\n      }\n      last_bucket = bucket;\n      bucket = bucket.next;\n    }\n\n    if (last_bucket) {\n      bucket = {key: key, key_hash: key_hash, value: value};\n      hash.$$keys.push(bucket);\n      last_bucket.next = bucket;\n    }\n  };\n\n  Opal.hash_get = function(hash, key) {\n    if (key.$$is_string) {\n      if ($hasOwn.call(hash.$$smap, key)) {\n        return hash.$$smap[key];\n      }\n      return;\n    }\n\n    var key_hash, bucket;\n    key_hash = hash.$$by_identity ? Opal.id(key) : key.$hash();\n\n    if ($hasOwn.call(hash.$$map, key_hash)) {\n      bucket = hash.$$map[key_hash];\n\n      while (bucket) {\n        if (key === bucket.key || key['$eql?'](bucket.key)) {\n          return bucket.value;\n        }\n        bucket = bucket.next;\n      }\n    }\n  };\n\n  Opal.hash_delete = function(hash, key) {\n    var i, keys = hash.$$keys, length = keys.length, value;\n\n    if (key.$$is_string) {\n      if (!$hasOwn.call(hash.$$smap, key)) {\n        return;\n      }\n\n      for (i = 0; i < length; i++) {\n        if (keys[i] === key) {\n          keys.splice(i, 1);\n          break;\n        }\n      }\n\n      value = hash.$$smap[key];\n      delete hash.$$smap[key];\n      return value;\n    }\n\n    var key_hash = key.$hash();\n\n    if (!$hasOwn.call(hash.$$map, key_hash)) {\n      return;\n    }\n\n    var bucket = hash.$$map[key_hash], last_bucket;\n\n    while (bucket) {\n      if (key === bucket.key || key['$eql?'](bucket.key)) {\n        value = bucket.value;\n\n        for (i = 0; i < length; i++) {\n          if (keys[i] === bucket) {\n            keys.splice(i, 1);\n            break;\n          }\n        }\n\n        if (last_bucket && bucket.next) {\n          last_bucket.next = bucket.next;\n        }\n        else if (last_bucket) {\n          delete last_bucket.next;\n        }\n        else if (bucket.next) {\n          hash.$$map[key_hash] = bucket.next;\n        }\n        else {\n          delete hash.$$map[key_hash];\n        }\n\n        return value;\n      }\n      last_bucket = bucket;\n      bucket = bucket.next;\n    }\n  };\n\n  Opal.hash_rehash = function(hash) {\n    for (var i = 0, length = hash.$$keys.length, key_hash, bucket, last_bucket; i < length; i++) {\n\n      if (hash.$$keys[i].$$is_string) {\n        continue;\n      }\n\n      key_hash = hash.$$keys[i].key.$hash();\n\n      if (key_hash === hash.$$keys[i].key_hash) {\n        continue;\n      }\n\n      bucket = hash.$$map[hash.$$keys[i].key_hash];\n      last_bucket = undefined;\n\n      while (bucket) {\n        if (bucket === hash.$$keys[i]) {\n          if (last_bucket && bucket.next) {\n            last_bucket.next = bucket.next;\n          }\n          else if (last_bucket) {\n            delete last_bucket.next;\n          }\n          else if (bucket.next) {\n            hash.$$map[hash.$$keys[i].key_hash] = bucket.next;\n          }\n          else {\n            delete hash.$$map[hash.$$keys[i].key_hash];\n          }\n          break;\n        }\n        last_bucket = bucket;\n        bucket = bucket.next;\n      }\n\n      hash.$$keys[i].key_hash = key_hash;\n\n      if (!$hasOwn.call(hash.$$map, key_hash)) {\n        hash.$$map[key_hash] = hash.$$keys[i];\n        continue;\n      }\n\n      bucket = hash.$$map[key_hash];\n      last_bucket = undefined;\n\n      while (bucket) {\n        if (bucket === hash.$$keys[i]) {\n          last_bucket = undefined;\n          break;\n        }\n        last_bucket = bucket;\n        bucket = bucket.next;\n      }\n\n      if (last_bucket) {\n        last_bucket.next = hash.$$keys[i];\n      }\n    }\n  };\n\n  Opal.hash = function() {\n    var arguments_length = arguments.length, args, hash, i, length, key, value;\n\n    if (arguments_length === 1 && arguments[0].$$is_hash) {\n      return arguments[0];\n    }\n\n    hash = new Opal.Hash();\n    Opal.hash_init(hash);\n\n    if (arguments_length === 1 && arguments[0].$$is_array) {\n      args = arguments[0];\n      length = args.length;\n\n      for (i = 0; i < length; i++) {\n        if (args[i].length !== 2) {\n          throw Opal.ArgumentError.$new(\"value not of length 2: \" + args[i].$inspect());\n        }\n\n        key = args[i][0];\n        value = args[i][1];\n\n        Opal.hash_put(hash, key, value);\n      }\n\n      return hash;\n    }\n\n    if (arguments_length === 1) {\n      args = arguments[0];\n      for (key in args) {\n        if ($hasOwn.call(args, key)) {\n          value = args[key];\n\n          Opal.hash_put(hash, key, value);\n        }\n      }\n\n      return hash;\n    }\n\n    if (arguments_length % 2 !== 0) {\n      throw Opal.ArgumentError.$new(\"odd number of arguments for Hash\");\n    }\n\n    for (i = 0; i < arguments_length; i += 2) {\n      key = arguments[i];\n      value = arguments[i + 1];\n\n      Opal.hash_put(hash, key, value);\n    }\n\n    return hash;\n  };\n\n  // A faster Hash creator for hashes that just use symbols and\n  // strings as keys. The map and keys array can be constructed at\n  // compile time, so they are just added here by the constructor\n  // function.\n  //\n  Opal.hash2 = function(keys, smap) {\n    var hash = new Opal.Hash();\n\n    hash.$$smap = smap;\n    hash.$$map  = Object.create(null);\n    hash.$$keys = keys;\n\n    return hash;\n  };\n\n  // Create a new range instance with first and last values, and whether the\n  // range excludes the last value.\n  //\n  Opal.range = function(first, last, exc) {\n    var range         = new Opal.Range();\n        range.begin   = first;\n        range.end     = last;\n        range.excl    = exc;\n\n    return range;\n  };\n\n  // Get the ivar name for a given name.\n  // Mostly adds a trailing $ to reserved names.\n  //\n  Opal.ivar = function(name) {\n    if (\n        // properties\n        name === \"constructor\" ||\n        name === \"displayName\" ||\n        name === \"__count__\" ||\n        name === \"__noSuchMethod__\" ||\n        name === \"__parent__\" ||\n        name === \"__proto__\" ||\n\n        // methods\n        name === \"hasOwnProperty\" ||\n        name === \"valueOf\"\n       )\n    {\n      return name + \"$\";\n    }\n\n    return name;\n  };\n\n\n  // Regexps\n  // -------\n\n  // Escape Regexp special chars letting the resulting string be used to build\n  // a new Regexp.\n  //\n  Opal.escape_regexp = function(str) {\n    return str.replace(/([-[\\]\\/{}()*+?.^$\\\\| ])/g, '\\\\$1')\n              .replace(/[\\n]/g, '\\\\n')\n              .replace(/[\\r]/g, '\\\\r')\n              .replace(/[\\f]/g, '\\\\f')\n              .replace(/[\\t]/g, '\\\\t');\n  };\n\n  // Create a global Regexp from a RegExp object and cache the result\n  // on the object itself ($$g attribute).\n  //\n  Opal.global_regexp = function(pattern) {\n    if (pattern.global) {\n      return pattern; // RegExp already has the global flag\n    }\n    if (pattern.$$g == null) {\n      pattern.$$g = new RegExp(pattern.source, (pattern.multiline ? 'gm' : 'g') + (pattern.ignoreCase ? 'i' : ''));\n    } else {\n      pattern.$$g.lastIndex = null; // reset lastIndex property\n    }\n    return pattern.$$g;\n  };\n\n  // Create a global multiline Regexp from a RegExp object and cache the result\n  // on the object itself ($$gm or $$g attribute).\n  //\n  Opal.global_multiline_regexp = function(pattern) {\n    var result;\n    if (pattern.multiline) {\n      if (pattern.global) {\n        return pattern; // RegExp already has the global and multiline flag\n      }\n      // we are using the $$g attribute because the Regexp is already multiline\n      if (pattern.$$g != null) {\n        result = pattern.$$g;\n      } else {\n        result = pattern.$$g = new RegExp(pattern.source, 'gm' + (pattern.ignoreCase ? 'i' : ''));\n      }\n    } else if (pattern.$$gm != null) {\n      result = pattern.$$gm;\n    } else {\n      result = pattern.$$gm = new RegExp(pattern.source, 'gm' + (pattern.ignoreCase ? 'i' : ''));\n    }\n    result.lastIndex = null; // reset lastIndex property\n    return result;\n  };\n\n  // Require system\n  // --------------\n\n  Opal.modules         = {};\n  Opal.loaded_features = ['corelib/runtime'];\n  Opal.current_dir     = '.';\n  Opal.require_table   = {'corelib/runtime': true};\n\n  Opal.normalize = function(path) {\n    var parts, part, new_parts = [], SEPARATOR = '/';\n\n    if (Opal.current_dir !== '.') {\n      path = Opal.current_dir.replace(/\\/*$/, '/') + path;\n    }\n\n    path = path.replace(/^\\.\\//, '');\n    path = path.replace(/\\.(rb|opal|js)$/, '');\n    parts = path.split(SEPARATOR);\n\n    for (var i = 0, ii = parts.length; i < ii; i++) {\n      part = parts[i];\n      if (part === '') continue;\n      (part === '..') ? new_parts.pop() : new_parts.push(part)\n    }\n\n    return new_parts.join(SEPARATOR);\n  };\n\n  Opal.loaded = function(paths) {\n    var i, l, path;\n\n    for (i = 0, l = paths.length; i < l; i++) {\n      path = Opal.normalize(paths[i]);\n\n      if (Opal.require_table[path]) {\n        continue;\n      }\n\n      Opal.loaded_features.push(path);\n      Opal.require_table[path] = true;\n    }\n  };\n\n  Opal.load = function(path) {\n    path = Opal.normalize(path);\n\n    Opal.loaded([path]);\n\n    var module = Opal.modules[path];\n\n    if (module) {\n      module(Opal);\n    }\n    else {\n      var severity = Opal.config.missing_require_severity;\n      var message  = 'cannot load such file -- ' + path;\n\n      if (severity === \"error\") {\n        if (Opal.LoadError) {\n          throw Opal.LoadError.$new(message)\n        } else {\n          throw message\n        }\n      }\n      else if (severity === \"warning\") {\n        console.warn('WARNING: LoadError: ' + message);\n      }\n    }\n\n    return true;\n  };\n\n  Opal.require = function(path) {\n    path = Opal.normalize(path);\n\n    if (Opal.require_table[path]) {\n      return false;\n    }\n\n    return Opal.load(path);\n  };\n\n\n  // Initialization\n  // --------------\n  function $BasicObject() {};\n  function $Object() {};\n  function $Module() {};\n  function $Class() {};\n\n  Opal.BasicObject = BasicObject = Opal.allocate_class('BasicObject', null, $BasicObject);\n  Opal.Object      = _Object     = Opal.allocate_class('Object', Opal.BasicObject, $Object);\n  Opal.Module      = Module      = Opal.allocate_class('Module', Opal.Object, $Module);\n  Opal.Class       = Class       = Opal.allocate_class('Class', Opal.Module, $Class);\n\n  $setPrototype(Opal.BasicObject, Opal.Class.$$prototype);\n  $setPrototype(Opal.Object, Opal.Class.$$prototype);\n  $setPrototype(Opal.Module, Opal.Class.$$prototype);\n  $setPrototype(Opal.Class, Opal.Class.$$prototype);\n\n  // BasicObject can reach itself, avoid const_set to skip the $$base_module logic\n  BasicObject.$$const[\"BasicObject\"] = BasicObject;\n\n  // Assign basic constants\n  Opal.const_set(_Object, \"BasicObject\",  BasicObject);\n  Opal.const_set(_Object, \"Object\",       _Object);\n  Opal.const_set(_Object, \"Module\",       Module);\n  Opal.const_set(_Object, \"Class\",        Class);\n\n  // Fix booted classes to have correct .class value\n  BasicObject.$$class = Class;\n  _Object.$$class     = Class;\n  Module.$$class      = Class;\n  Class.$$class       = Class;\n\n  // Forward .toString() to #to_s\n  $defineProperty(_Object.$$prototype, 'toString', function() {\n    var to_s = this.$to_s();\n    if (to_s.$$is_string && typeof(to_s) === 'object') {\n      // a string created using new String('string')\n      return to_s.valueOf();\n    } else {\n      return to_s;\n    }\n  });\n\n  // Make Kernel#require immediately available as it's needed to require all the\n  // other corelib files.\n  $defineProperty(_Object.$$prototype, '$require', Opal.require);\n\n  // Add a short helper to navigate constants manually.\n  // @example\n  //   Opal.$$.Regexp.$$.IGNORECASE\n  Opal.$$ = _Object.$$;\n\n  // Instantiate the main object\n  Opal.top = new _Object();\n  Opal.top.$to_s = Opal.top.$inspect = function() { return 'main' };\n\n\n  // Nil\n  function $NilClass() {};\n  Opal.NilClass = Opal.allocate_class('NilClass', Opal.Object, $NilClass);\n  Opal.const_set(_Object, 'NilClass', Opal.NilClass);\n  nil = Opal.nil = new Opal.NilClass();\n  nil.$$id = nil_id;\n  nil.call = nil.apply = function() { throw Opal.LocalJumpError.$new('no block given'); };\n\n  // Errors\n  Opal.breaker  = new Error('unexpected break (old)');\n  Opal.returner = new Error('unexpected return');\n  TypeError.$$super = Error;\n}).call(this);\nOpal.loaded([\"corelib/runtime.js\"]);\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/helpers\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$new', '$class', '$===', '$respond_to?', '$raise', '$type_error', '$__send__', '$coerce_to', '$nil?', '$<=>', '$coerce_to!', '$!=', '$[]', '$upcase']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Opal');\n\n    var $nesting = [self].concat($parent_nesting), $Opal_bridge$1, $Opal_type_error$2, $Opal_coerce_to$3, $Opal_coerce_to$excl$4, $Opal_coerce_to$ques$5, $Opal_try_convert$6, $Opal_compare$7, $Opal_destructure$8, $Opal_respond_to$ques$9, $Opal_inspect_obj$10, $Opal_instance_variable_name$excl$11, $Opal_class_variable_name$excl$12, $Opal_const_name$excl$13, $Opal_pristine$14;\n\n    \n    Opal.defs(self, '$bridge', $Opal_bridge$1 = function $$bridge(constructor, klass) {\n      var self = this;\n\n      return Opal.bridge(constructor, klass);\n    }, $Opal_bridge$1.$$arity = 2);\n    Opal.defs(self, '$type_error', $Opal_type_error$2 = function $$type_error(object, type, method, coerced) {\n      var $a, self = this;\n\n      \n      \n      if (method == null) {\n        method = nil;\n      };\n      \n      if (coerced == null) {\n        coerced = nil;\n      };\n      if ($truthy(($truthy($a = method) ? coerced : $a))) {\n        return $$($nesting, 'TypeError').$new(\"\" + \"can't convert \" + (object.$class()) + \" into \" + (type) + \" (\" + (object.$class()) + \"#\" + (method) + \" gives \" + (coerced.$class()) + \")\")\n      } else {\n        return $$($nesting, 'TypeError').$new(\"\" + \"no implicit conversion of \" + (object.$class()) + \" into \" + (type))\n      };\n    }, $Opal_type_error$2.$$arity = -3);\n    Opal.defs(self, '$coerce_to', $Opal_coerce_to$3 = function $$coerce_to(object, type, method) {\n      var self = this;\n\n      \n      if ($truthy(type['$==='](object))) {\n        return object};\n      if ($truthy(object['$respond_to?'](method))) {\n      } else {\n        self.$raise(self.$type_error(object, type))\n      };\n      return object.$__send__(method);\n    }, $Opal_coerce_to$3.$$arity = 3);\n    Opal.defs(self, '$coerce_to!', $Opal_coerce_to$excl$4 = function(object, type, method) {\n      var self = this, coerced = nil;\n\n      \n      coerced = self.$coerce_to(object, type, method);\n      if ($truthy(type['$==='](coerced))) {\n      } else {\n        self.$raise(self.$type_error(object, type, method, coerced))\n      };\n      return coerced;\n    }, $Opal_coerce_to$excl$4.$$arity = 3);\n    Opal.defs(self, '$coerce_to?', $Opal_coerce_to$ques$5 = function(object, type, method) {\n      var self = this, coerced = nil;\n\n      \n      if ($truthy(object['$respond_to?'](method))) {\n      } else {\n        return nil\n      };\n      coerced = self.$coerce_to(object, type, method);\n      if ($truthy(coerced['$nil?']())) {\n        return nil};\n      if ($truthy(type['$==='](coerced))) {\n      } else {\n        self.$raise(self.$type_error(object, type, method, coerced))\n      };\n      return coerced;\n    }, $Opal_coerce_to$ques$5.$$arity = 3);\n    Opal.defs(self, '$try_convert', $Opal_try_convert$6 = function $$try_convert(object, type, method) {\n      var self = this;\n\n      \n      if ($truthy(type['$==='](object))) {\n        return object};\n      if ($truthy(object['$respond_to?'](method))) {\n        return object.$__send__(method)\n      } else {\n        return nil\n      };\n    }, $Opal_try_convert$6.$$arity = 3);\n    Opal.defs(self, '$compare', $Opal_compare$7 = function $$compare(a, b) {\n      var self = this, compare = nil;\n\n      \n      compare = a['$<=>'](b);\n      if ($truthy(compare === nil)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (a.$class()) + \" with \" + (b.$class()) + \" failed\")};\n      return compare;\n    }, $Opal_compare$7.$$arity = 2);\n    Opal.defs(self, '$destructure', $Opal_destructure$8 = function $$destructure(args) {\n      var self = this;\n\n      \n      if (args.length == 1) {\n        return args[0];\n      }\n      else if (args.$$is_array) {\n        return args;\n      }\n      else {\n        var args_ary = new Array(args.length);\n        for(var i = 0, l = args_ary.length; i < l; i++) { args_ary[i] = args[i]; }\n\n        return args_ary;\n      }\n    \n    }, $Opal_destructure$8.$$arity = 1);\n    Opal.defs(self, '$respond_to?', $Opal_respond_to$ques$9 = function(obj, method, include_all) {\n      var self = this;\n\n      \n      \n      if (include_all == null) {\n        include_all = false;\n      };\n      \n      if (obj == null || !obj.$$class) {\n        return false;\n      }\n    ;\n      return obj['$respond_to?'](method, include_all);\n    }, $Opal_respond_to$ques$9.$$arity = -3);\n    Opal.defs(self, '$inspect_obj', $Opal_inspect_obj$10 = function $$inspect_obj(obj) {\n      var self = this;\n\n      return Opal.inspect(obj);\n    }, $Opal_inspect_obj$10.$$arity = 1);\n    Opal.defs(self, '$instance_variable_name!', $Opal_instance_variable_name$excl$11 = function(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$coerce_to!'](name, $$($nesting, 'String'), \"to_str\");\n      if ($truthy(/^@[a-zA-Z_][a-zA-Z0-9_]*?$/.test(name))) {\n      } else {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"'\" + (name) + \"' is not allowed as an instance variable name\", name))\n      };\n      return name;\n    }, $Opal_instance_variable_name$excl$11.$$arity = 1);\n    Opal.defs(self, '$class_variable_name!', $Opal_class_variable_name$excl$12 = function(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$coerce_to!'](name, $$($nesting, 'String'), \"to_str\");\n      if ($truthy(name.length < 3 || name.slice(0,2) !== '@@')) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"`\" + (name) + \"' is not allowed as a class variable name\", name))};\n      return name;\n    }, $Opal_class_variable_name$excl$12.$$arity = 1);\n    Opal.defs(self, '$const_name!', $Opal_const_name$excl$13 = function(const_name) {\n      var self = this;\n\n      \n      const_name = $$($nesting, 'Opal')['$coerce_to!'](const_name, $$($nesting, 'String'), \"to_str\");\n      if ($truthy(const_name['$[]'](0)['$!='](const_name['$[]'](0).$upcase()))) {\n        self.$raise($$($nesting, 'NameError'), \"\" + \"wrong constant name \" + (const_name))};\n      return const_name;\n    }, $Opal_const_name$excl$13.$$arity = 1);\n    Opal.defs(self, '$pristine', $Opal_pristine$14 = function $$pristine(owner_class, $a) {\n      var $post_args, method_names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      method_names = $post_args;;\n      \n      var method_name, method;\n      for (var i = method_names.length - 1; i >= 0; i--) {\n        method_name = method_names[i];\n        method = owner_class.$$prototype['$'+method_name];\n\n        if (method && !method.$$stub) {\n          method.$$pristine = true;\n        }\n      }\n    ;\n      return nil;\n    }, $Opal_pristine$14.$$arity = -2);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/module\"] = function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $lambda = Opal.lambda, $range = Opal.range, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$module_eval', '$to_proc', '$===', '$raise', '$equal?', '$<', '$>', '$nil?', '$attr_reader', '$attr_writer', '$class_variable_name!', '$new', '$const_name!', '$=~', '$inject', '$split', '$const_get', '$==', '$!~', '$start_with?', '$bind', '$call', '$class', '$append_features', '$included', '$name', '$cover?', '$size', '$merge', '$compile', '$proc', '$any?', '$prepend_features', '$prepended', '$to_s', '$__id__', '$constants', '$include?', '$copy_class_variables', '$copy_constants']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Module');\n\n    var $nesting = [self].concat($parent_nesting), $Module_allocate$1, $Module_initialize$2, $Module_$eq_eq_eq$3, $Module_$lt$4, $Module_$lt_eq$5, $Module_$gt$6, $Module_$gt_eq$7, $Module_$lt_eq_gt$8, $Module_alias_method$9, $Module_alias_native$10, $Module_ancestors$11, $Module_append_features$12, $Module_attr_accessor$13, $Module_attr_reader$14, $Module_attr_writer$15, $Module_autoload$16, $Module_class_variables$17, $Module_class_variable_get$18, $Module_class_variable_set$19, $Module_class_variable_defined$ques$20, $Module_remove_class_variable$21, $Module_constants$22, $Module_constants$23, $Module_nesting$24, $Module_const_defined$ques$25, $Module_const_get$26, $Module_const_missing$28, $Module_const_set$29, $Module_public_constant$30, $Module_define_method$31, $Module_remove_method$33, $Module_singleton_class$ques$34, $Module_include$35, $Module_included_modules$36, $Module_include$ques$37, $Module_instance_method$38, $Module_instance_methods$39, $Module_included$40, $Module_extended$41, $Module_extend_object$42, $Module_method_added$43, $Module_method_removed$44, $Module_method_undefined$45, $Module_module_eval$46, $Module_module_exec$48, $Module_method_defined$ques$49, $Module_module_function$50, $Module_name$51, $Module_prepend$52, $Module_prepend_features$53, $Module_prepended$54, $Module_remove_const$55, $Module_to_s$56, $Module_undef_method$57, $Module_instance_variables$58, $Module_dup$59, $Module_copy_class_variables$60, $Module_copy_constants$61;\n\n    \n    Opal.defs(self, '$allocate', $Module_allocate$1 = function $$allocate() {\n      var self = this;\n\n      \n      var module = Opal.allocate_module(nil, function(){});\n      // Link the prototype of Module subclasses\n      if (self !== Opal.Module) Object.setPrototypeOf(module, self.$$prototype);\n      return module;\n    \n    }, $Module_allocate$1.$$arity = 0);\n    \n    Opal.def(self, '$initialize', $Module_initialize$2 = function $$initialize() {\n      var $iter = $Module_initialize$2.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Module_initialize$2.$$p = null;\n      \n      \n      if ($iter) $Module_initialize$2.$$p = null;;\n      if ((block !== nil)) {\n        return $send(self, 'module_eval', [], block.$to_proc())\n      } else {\n        return nil\n      };\n    }, $Module_initialize$2.$$arity = 0);\n    \n    Opal.def(self, '$===', $Module_$eq_eq_eq$3 = function(object) {\n      var self = this;\n\n      \n      if ($truthy(object == null)) {\n        return false};\n      return Opal.is_a(object, self);;\n    }, $Module_$eq_eq_eq$3.$$arity = 1);\n    \n    Opal.def(self, '$<', $Module_$lt$4 = function(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Module')['$==='](other))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"compared with non class/module\")\n      };\n      \n      var working = self,\n          ancestors,\n          i, length;\n\n      if (working === other) {\n        return false;\n      }\n\n      for (i = 0, ancestors = Opal.ancestors(self), length = ancestors.length; i < length; i++) {\n        if (ancestors[i] === other) {\n          return true;\n        }\n      }\n\n      for (i = 0, ancestors = Opal.ancestors(other), length = ancestors.length; i < length; i++) {\n        if (ancestors[i] === self) {\n          return false;\n        }\n      }\n\n      return nil;\n    ;\n    }, $Module_$lt$4.$$arity = 1);\n    \n    Opal.def(self, '$<=', $Module_$lt_eq$5 = function(other) {\n      var $a, self = this;\n\n      return ($truthy($a = self['$equal?'](other)) ? $a : $rb_lt(self, other))\n    }, $Module_$lt_eq$5.$$arity = 1);\n    \n    Opal.def(self, '$>', $Module_$gt$6 = function(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Module')['$==='](other))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"compared with non class/module\")\n      };\n      return $rb_lt(other, self);\n    }, $Module_$gt$6.$$arity = 1);\n    \n    Opal.def(self, '$>=', $Module_$gt_eq$7 = function(other) {\n      var $a, self = this;\n\n      return ($truthy($a = self['$equal?'](other)) ? $a : $rb_gt(self, other))\n    }, $Module_$gt_eq$7.$$arity = 1);\n    \n    Opal.def(self, '$<=>', $Module_$lt_eq_gt$8 = function(other) {\n      var self = this, lt = nil;\n\n      \n      \n      if (self === other) {\n        return 0;\n      }\n    ;\n      if ($truthy($$($nesting, 'Module')['$==='](other))) {\n      } else {\n        return nil\n      };\n      lt = $rb_lt(self, other);\n      if ($truthy(lt['$nil?']())) {\n        return nil};\n      if ($truthy(lt)) {\n        return -1\n      } else {\n        return 1\n      };\n    }, $Module_$lt_eq_gt$8.$$arity = 1);\n    \n    Opal.def(self, '$alias_method', $Module_alias_method$9 = function $$alias_method(newname, oldname) {\n      var self = this;\n\n      \n      Opal.alias(self, newname, oldname);\n      return self;\n    }, $Module_alias_method$9.$$arity = 2);\n    \n    Opal.def(self, '$alias_native', $Module_alias_native$10 = function $$alias_native(mid, jsid) {\n      var self = this;\n\n      \n      \n      if (jsid == null) {\n        jsid = mid;\n      };\n      Opal.alias_native(self, mid, jsid);\n      return self;\n    }, $Module_alias_native$10.$$arity = -2);\n    \n    Opal.def(self, '$ancestors', $Module_ancestors$11 = function $$ancestors() {\n      var self = this;\n\n      return Opal.ancestors(self);\n    }, $Module_ancestors$11.$$arity = 0);\n    \n    Opal.def(self, '$append_features', $Module_append_features$12 = function $$append_features(includer) {\n      var self = this;\n\n      \n      Opal.append_features(self, includer);\n      return self;\n    }, $Module_append_features$12.$$arity = 1);\n    \n    Opal.def(self, '$attr_accessor', $Module_attr_accessor$13 = function $$attr_accessor($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      $send(self, 'attr_reader', Opal.to_a(names));\n      return $send(self, 'attr_writer', Opal.to_a(names));\n    }, $Module_attr_accessor$13.$$arity = -1);\n    Opal.alias(self, \"attr\", \"attr_accessor\");\n    \n    Opal.def(self, '$attr_reader', $Module_attr_reader$14 = function $$attr_reader($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      \n      var proto = self.$$prototype;\n\n      for (var i = names.length - 1; i >= 0; i--) {\n        var name = names[i],\n            id   = '$' + name,\n            ivar = Opal.ivar(name);\n\n        // the closure here is needed because name will change at the next\n        // cycle, I wish we could use let.\n        var body = (function(ivar) {\n          return function() {\n            if (this[ivar] == null) {\n              return nil;\n            }\n            else {\n              return this[ivar];\n            }\n          };\n        })(ivar);\n\n        // initialize the instance variable as nil\n        Opal.defineProperty(proto, ivar, nil);\n\n        body.$$parameters = [];\n        body.$$arity = 0;\n\n        Opal.defn(self, id, body);\n      }\n    ;\n      return nil;\n    }, $Module_attr_reader$14.$$arity = -1);\n    \n    Opal.def(self, '$attr_writer', $Module_attr_writer$15 = function $$attr_writer($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      \n      var proto = self.$$prototype;\n\n      for (var i = names.length - 1; i >= 0; i--) {\n        var name = names[i],\n            id   = '$' + name + '=',\n            ivar = Opal.ivar(name);\n\n        // the closure here is needed because name will change at the next\n        // cycle, I wish we could use let.\n        var body = (function(ivar){\n          return function(value) {\n            return this[ivar] = value;\n          }\n        })(ivar);\n\n        body.$$parameters = [['req']];\n        body.$$arity = 1;\n\n        // initialize the instance variable as nil\n        Opal.defineProperty(proto, ivar, nil);\n\n        Opal.defn(self, id, body);\n      }\n    ;\n      return nil;\n    }, $Module_attr_writer$15.$$arity = -1);\n    \n    Opal.def(self, '$autoload', $Module_autoload$16 = function $$autoload(const$, path) {\n      var self = this;\n\n      \n      if (self.$$autoload == null) self.$$autoload = {};\n      Opal.const_cache_version++;\n      self.$$autoload[const$] = path;\n      return nil;\n    \n    }, $Module_autoload$16.$$arity = 2);\n    \n    Opal.def(self, '$class_variables', $Module_class_variables$17 = function $$class_variables() {\n      var self = this;\n\n      return Object.keys(Opal.class_variables(self));\n    }, $Module_class_variables$17.$$arity = 0);\n    \n    Opal.def(self, '$class_variable_get', $Module_class_variable_get$18 = function $$class_variable_get(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$class_variable_name!'](name);\n      \n      var value = Opal.class_variables(self)[name];\n      if (value == null) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"uninitialized class variable \" + (name) + \" in \" + (self), name))\n      }\n      return value;\n    ;\n    }, $Module_class_variable_get$18.$$arity = 1);\n    \n    Opal.def(self, '$class_variable_set', $Module_class_variable_set$19 = function $$class_variable_set(name, value) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$class_variable_name!'](name);\n      return Opal.class_variable_set(self, name, value);;\n    }, $Module_class_variable_set$19.$$arity = 2);\n    \n    Opal.def(self, '$class_variable_defined?', $Module_class_variable_defined$ques$20 = function(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$class_variable_name!'](name);\n      return Opal.class_variables(self).hasOwnProperty(name);;\n    }, $Module_class_variable_defined$ques$20.$$arity = 1);\n    \n    Opal.def(self, '$remove_class_variable', $Module_remove_class_variable$21 = function $$remove_class_variable(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$class_variable_name!'](name);\n      \n      if (Opal.hasOwnProperty.call(self.$$cvars, name)) {\n        var value = self.$$cvars[name];\n        delete self.$$cvars[name];\n        return value;\n      } else {\n        self.$raise($$($nesting, 'NameError'), \"\" + \"cannot remove \" + (name) + \" for \" + (self))\n      }\n    ;\n    }, $Module_remove_class_variable$21.$$arity = 1);\n    \n    Opal.def(self, '$constants', $Module_constants$22 = function $$constants(inherit) {\n      var self = this;\n\n      \n      \n      if (inherit == null) {\n        inherit = true;\n      };\n      return Opal.constants(self, inherit);;\n    }, $Module_constants$22.$$arity = -1);\n    Opal.defs(self, '$constants', $Module_constants$23 = function $$constants(inherit) {\n      var self = this;\n\n      \n      ;\n      \n      if (inherit == null) {\n        var nesting = (self.$$nesting || []).concat(Opal.Object),\n            constant, constants = {},\n            i, ii;\n\n        for(i = 0, ii = nesting.length; i < ii; i++) {\n          for (constant in nesting[i].$$const) {\n            constants[constant] = true;\n          }\n        }\n        return Object.keys(constants);\n      } else {\n        return Opal.constants(self, inherit)\n      }\n    ;\n    }, $Module_constants$23.$$arity = -1);\n    Opal.defs(self, '$nesting', $Module_nesting$24 = function $$nesting() {\n      var self = this;\n\n      return self.$$nesting || [];\n    }, $Module_nesting$24.$$arity = 0);\n    \n    Opal.def(self, '$const_defined?', $Module_const_defined$ques$25 = function(name, inherit) {\n      var self = this;\n\n      \n      \n      if (inherit == null) {\n        inherit = true;\n      };\n      name = $$($nesting, 'Opal')['$const_name!'](name);\n      if ($truthy(name['$=~']($$$($$($nesting, 'Opal'), 'CONST_NAME_REGEXP')))) {\n      } else {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"wrong constant name \" + (name), name))\n      };\n      \n      var module, modules = [self], module_constants, i, ii;\n\n      // Add up ancestors if inherit is true\n      if (inherit) {\n        modules = modules.concat(Opal.ancestors(self));\n\n        // Add Object's ancestors if it's a module – modules have no ancestors otherwise\n        if (self.$$is_module) {\n          modules = modules.concat([Opal.Object]).concat(Opal.ancestors(Opal.Object));\n        }\n      }\n\n      for (i = 0, ii = modules.length; i < ii; i++) {\n        module = modules[i];\n        if (module.$$const[name] != null) {\n          return true;\n        }\n      }\n\n      return false;\n    ;\n    }, $Module_const_defined$ques$25.$$arity = -2);\n    \n    Opal.def(self, '$const_get', $Module_const_get$26 = function $$const_get(name, inherit) {\n      var $$27, self = this;\n\n      \n      \n      if (inherit == null) {\n        inherit = true;\n      };\n      name = $$($nesting, 'Opal')['$const_name!'](name);\n      \n      if (name.indexOf('::') === 0 && name !== '::'){\n        name = name.slice(2);\n      }\n    ;\n      if ($truthy(name.indexOf('::') != -1 && name != '::')) {\n        return $send(name.$split(\"::\"), 'inject', [self], ($$27 = function(o, c){var self = $$27.$$s || this;\n\n        \n          \n          if (o == null) {\n            o = nil;\n          };\n          \n          if (c == null) {\n            c = nil;\n          };\n          return o.$const_get(c);}, $$27.$$s = self, $$27.$$arity = 2, $$27))};\n      if ($truthy(name['$=~']($$$($$($nesting, 'Opal'), 'CONST_NAME_REGEXP')))) {\n      } else {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"wrong constant name \" + (name), name))\n      };\n      \n      if (inherit) {\n        return $$([self], name);\n      } else {\n        return Opal.const_get_local(self, name);\n      }\n    ;\n    }, $Module_const_get$26.$$arity = -2);\n    \n    Opal.def(self, '$const_missing', $Module_const_missing$28 = function $$const_missing(name) {\n      var self = this, full_const_name = nil;\n\n      \n      \n      if (self.$$autoload) {\n        var file = self.$$autoload[name];\n\n        if (file) {\n          self.$require(file);\n\n          return self.$const_get(name);\n        }\n      }\n    ;\n      full_const_name = (function() {if (self['$==']($$($nesting, 'Object'))) {\n        return name\n      } else {\n        return \"\" + (self) + \"::\" + (name)\n      }; return nil; })();\n      return self.$raise($$($nesting, 'NameError').$new(\"\" + \"uninitialized constant \" + (full_const_name), name));\n    }, $Module_const_missing$28.$$arity = 1);\n    \n    Opal.def(self, '$const_set', $Module_const_set$29 = function $$const_set(name, value) {\n      var $a, self = this;\n\n      \n      name = $$($nesting, 'Opal')['$const_name!'](name);\n      if ($truthy(($truthy($a = name['$!~']($$$($$($nesting, 'Opal'), 'CONST_NAME_REGEXP'))) ? $a : name['$start_with?'](\"::\")))) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"wrong constant name \" + (name), name))};\n      Opal.const_set(self, name, value);\n      return value;\n    }, $Module_const_set$29.$$arity = 2);\n    \n    Opal.def(self, '$public_constant', $Module_public_constant$30 = function $$public_constant(const_name) {\n      var self = this;\n\n      return nil\n    }, $Module_public_constant$30.$$arity = 1);\n    \n    Opal.def(self, '$define_method', $Module_define_method$31 = function $$define_method(name, method) {\n      var $iter = $Module_define_method$31.$$p, block = $iter || nil, $a, $$32, self = this, $case = nil;\n\n      if ($iter) $Module_define_method$31.$$p = null;\n      \n      \n      if ($iter) $Module_define_method$31.$$p = null;;\n      ;\n      if ($truthy(method === undefined && block === nil)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"tried to create a Proc object without a block\")};\n      block = ($truthy($a = block) ? $a : (function() {$case = method;\n      if ($$($nesting, 'Proc')['$===']($case)) {return method}\n      else if ($$($nesting, 'Method')['$===']($case)) {return method.$to_proc().$$unbound}\n      else if ($$($nesting, 'UnboundMethod')['$===']($case)) {return $lambda(($$32 = function($b){var self = $$32.$$s || this, $post_args, args, bound = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        bound = method.$bind(self);\n        return $send(bound, 'call', Opal.to_a(args));}, $$32.$$s = self, $$32.$$arity = -1, $$32))}\n      else {return self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + (block.$class()) + \" (expected Proc/Method)\")}})());\n      \n      var id = '$' + name;\n\n      block.$$jsid        = name;\n      block.$$s           = null;\n      block.$$def         = block;\n      block.$$define_meth = true;\n\n      Opal.defn(self, id, block);\n\n      return name;\n    ;\n    }, $Module_define_method$31.$$arity = -2);\n    \n    Opal.def(self, '$remove_method', $Module_remove_method$33 = function $$remove_method($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      \n      for (var i = 0, length = names.length; i < length; i++) {\n        Opal.rdef(self, \"$\" + names[i]);\n      }\n    ;\n      return self;\n    }, $Module_remove_method$33.$$arity = -1);\n    \n    Opal.def(self, '$singleton_class?', $Module_singleton_class$ques$34 = function() {\n      var self = this;\n\n      return !!self.$$is_singleton;\n    }, $Module_singleton_class$ques$34.$$arity = 0);\n    \n    Opal.def(self, '$include', $Module_include$35 = function $$include($a) {\n      var $post_args, mods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      mods = $post_args;;\n      \n      for (var i = mods.length - 1; i >= 0; i--) {\n        var mod = mods[i];\n\n        if (!mod.$$is_module) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((mod).$class()) + \" (expected Module)\");\n        }\n\n        (mod).$append_features(self);\n        (mod).$included(self);\n      }\n    ;\n      return self;\n    }, $Module_include$35.$$arity = -1);\n    \n    Opal.def(self, '$included_modules', $Module_included_modules$36 = function $$included_modules() {\n      var self = this;\n\n      return Opal.included_modules(self);\n    }, $Module_included_modules$36.$$arity = 0);\n    \n    Opal.def(self, '$include?', $Module_include$ques$37 = function(mod) {\n      var self = this;\n\n      \n      if (!mod.$$is_module) {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((mod).$class()) + \" (expected Module)\");\n      }\n\n      var i, ii, mod2, ancestors = Opal.ancestors(self);\n\n      for (i = 0, ii = ancestors.length; i < ii; i++) {\n        mod2 = ancestors[i];\n        if (mod2 === mod && mod2 !== self) {\n          return true;\n        }\n      }\n\n      return false;\n    \n    }, $Module_include$ques$37.$$arity = 1);\n    \n    Opal.def(self, '$instance_method', $Module_instance_method$38 = function $$instance_method(name) {\n      var self = this;\n\n      \n      var meth = self.$$prototype['$' + name];\n\n      if (!meth || meth.$$stub) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"undefined method `\" + (name) + \"' for class `\" + (self.$name()) + \"'\", name));\n      }\n\n      return $$($nesting, 'UnboundMethod').$new(self, meth.$$owner || self, meth, name);\n    \n    }, $Module_instance_method$38.$$arity = 1);\n    \n    Opal.def(self, '$instance_methods', $Module_instance_methods$39 = function $$instance_methods(include_super) {\n      var self = this;\n\n      \n      \n      if (include_super == null) {\n        include_super = true;\n      };\n      \n      if ($truthy(include_super)) {\n        return Opal.instance_methods(self);\n      } else {\n        return Opal.own_instance_methods(self);\n      }\n    ;\n    }, $Module_instance_methods$39.$$arity = -1);\n    \n    Opal.def(self, '$included', $Module_included$40 = function $$included(mod) {\n      var self = this;\n\n      return nil\n    }, $Module_included$40.$$arity = 1);\n    \n    Opal.def(self, '$extended', $Module_extended$41 = function $$extended(mod) {\n      var self = this;\n\n      return nil\n    }, $Module_extended$41.$$arity = 1);\n    \n    Opal.def(self, '$extend_object', $Module_extend_object$42 = function $$extend_object(object) {\n      var self = this;\n\n      return nil\n    }, $Module_extend_object$42.$$arity = 1);\n    \n    Opal.def(self, '$method_added', $Module_method_added$43 = function $$method_added($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Module_method_added$43.$$arity = -1);\n    \n    Opal.def(self, '$method_removed', $Module_method_removed$44 = function $$method_removed($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Module_method_removed$44.$$arity = -1);\n    \n    Opal.def(self, '$method_undefined', $Module_method_undefined$45 = function $$method_undefined($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Module_method_undefined$45.$$arity = -1);\n    \n    Opal.def(self, '$module_eval', $Module_module_eval$46 = function $$module_eval($a) {\n      var $iter = $Module_module_eval$46.$$p, block = $iter || nil, $post_args, args, $b, $$47, self = this, string = nil, file = nil, _lineno = nil, default_eval_options = nil, compiling_options = nil, compiled = nil;\n\n      if ($iter) $Module_module_eval$46.$$p = null;\n      \n      \n      if ($iter) $Module_module_eval$46.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(($truthy($b = block['$nil?']()) ? !!Opal.compile : $b))) {\n        \n        if ($truthy($range(1, 3, false)['$cover?'](args.$size()))) {\n        } else {\n          $$($nesting, 'Kernel').$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (0 for 1..3)\")\n        };\n        $b = [].concat(Opal.to_a(args)), (string = ($b[0] == null ? nil : $b[0])), (file = ($b[1] == null ? nil : $b[1])), (_lineno = ($b[2] == null ? nil : $b[2])), $b;\n        default_eval_options = $hash2([\"file\", \"eval\"], {\"file\": ($truthy($b = file) ? $b : \"(eval)\"), \"eval\": true});\n        compiling_options = Opal.hash({ arity_check: false }).$merge(default_eval_options);\n        compiled = $$($nesting, 'Opal').$compile(string, compiling_options);\n        block = $send($$($nesting, 'Kernel'), 'proc', [], ($$47 = function(){var self = $$47.$$s || this;\n\n        \n          return (function(self) {\n            return eval(compiled);\n          })(self)\n        }, $$47.$$s = self, $$47.$$arity = 0, $$47));\n      } else if ($truthy(args['$any?']())) {\n        $$($nesting, 'Kernel').$raise($$($nesting, 'ArgumentError'), \"\" + (\"\" + \"wrong number of arguments (\" + (args.$size()) + \" for 0)\") + \"\\n\\n  NOTE:If you want to enable passing a String argument please add \\\"require 'opal-parser'\\\" to your script\\n\")};\n      \n      var old = block.$$s,\n          result;\n\n      block.$$s = null;\n      result = block.apply(self, [self]);\n      block.$$s = old;\n\n      return result;\n    ;\n    }, $Module_module_eval$46.$$arity = -1);\n    Opal.alias(self, \"class_eval\", \"module_eval\");\n    \n    Opal.def(self, '$module_exec', $Module_module_exec$48 = function $$module_exec($a) {\n      var $iter = $Module_module_exec$48.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Module_module_exec$48.$$p = null;\n      \n      \n      if ($iter) $Module_module_exec$48.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      if (block === nil) {\n        self.$raise($$($nesting, 'LocalJumpError'), \"no block given\")\n      }\n\n      var block_self = block.$$s, result;\n\n      block.$$s = null;\n      result = block.apply(self, args);\n      block.$$s = block_self;\n\n      return result;\n    ;\n    }, $Module_module_exec$48.$$arity = -1);\n    Opal.alias(self, \"class_exec\", \"module_exec\");\n    \n    Opal.def(self, '$method_defined?', $Module_method_defined$ques$49 = function(method) {\n      var self = this;\n\n      \n      var body = self.$$prototype['$' + method];\n      return (!!body) && !body.$$stub;\n    \n    }, $Module_method_defined$ques$49.$$arity = 1);\n    \n    Opal.def(self, '$module_function', $Module_module_function$50 = function $$module_function($a) {\n      var $post_args, methods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      methods = $post_args;;\n      \n      if (methods.length === 0) {\n        self.$$module_function = true;\n      }\n      else {\n        for (var i = 0, length = methods.length; i < length; i++) {\n          var meth = methods[i],\n              id   = '$' + meth,\n              func = self.$$prototype[id];\n\n          Opal.defs(self, id, func);\n        }\n      }\n\n      return self;\n    ;\n    }, $Module_module_function$50.$$arity = -1);\n    \n    Opal.def(self, '$name', $Module_name$51 = function $$name() {\n      var self = this;\n\n      \n      if (self.$$full_name) {\n        return self.$$full_name;\n      }\n\n      var result = [], base = self;\n\n      while (base) {\n        // Give up if any of the ancestors is unnamed\n        if (base.$$name === nil || base.$$name == null) return nil;\n\n        result.unshift(base.$$name);\n\n        base = base.$$base_module;\n\n        if (base === Opal.Object) {\n          break;\n        }\n      }\n\n      if (result.length === 0) {\n        return nil;\n      }\n\n      return self.$$full_name = result.join('::');\n    \n    }, $Module_name$51.$$arity = 0);\n    \n    Opal.def(self, '$prepend', $Module_prepend$52 = function $$prepend($a) {\n      var $post_args, mods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      mods = $post_args;;\n      \n      if (mods.length === 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (given 0, expected 1+)\")\n      }\n\n      for (var i = mods.length - 1; i >= 0; i--) {\n        var mod = mods[i];\n\n        if (!mod.$$is_module) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((mod).$class()) + \" (expected Module)\");\n        }\n\n        (mod).$prepend_features(self);\n        (mod).$prepended(self);\n      }\n    ;\n      return self;\n    }, $Module_prepend$52.$$arity = -1);\n    \n    Opal.def(self, '$prepend_features', $Module_prepend_features$53 = function $$prepend_features(prepender) {\n      var self = this;\n\n      \n      \n      if (!self.$$is_module) {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + (self.$class()) + \" (expected Module)\");\n      }\n\n      Opal.prepend_features(self, prepender)\n    ;\n      return self;\n    }, $Module_prepend_features$53.$$arity = 1);\n    \n    Opal.def(self, '$prepended', $Module_prepended$54 = function $$prepended(mod) {\n      var self = this;\n\n      return nil\n    }, $Module_prepended$54.$$arity = 1);\n    \n    Opal.def(self, '$remove_const', $Module_remove_const$55 = function $$remove_const(name) {\n      var self = this;\n\n      return Opal.const_remove(self, name);\n    }, $Module_remove_const$55.$$arity = 1);\n    \n    Opal.def(self, '$to_s', $Module_to_s$56 = function $$to_s() {\n      var $a, self = this;\n\n      return ($truthy($a = Opal.Module.$name.call(self)) ? $a : \"\" + \"#<\" + (self.$$is_module ? 'Module' : 'Class') + \":0x\" + (self.$__id__().$to_s(16)) + \">\")\n    }, $Module_to_s$56.$$arity = 0);\n    \n    Opal.def(self, '$undef_method', $Module_undef_method$57 = function $$undef_method($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      \n      for (var i = 0, length = names.length; i < length; i++) {\n        Opal.udef(self, \"$\" + names[i]);\n      }\n    ;\n      return self;\n    }, $Module_undef_method$57.$$arity = -1);\n    \n    Opal.def(self, '$instance_variables', $Module_instance_variables$58 = function $$instance_variables() {\n      var self = this, consts = nil;\n\n      \n      consts = (Opal.Module.$$nesting = $nesting, self.$constants());\n      \n      var result = [];\n\n      for (var name in self) {\n        if (self.hasOwnProperty(name) && name.charAt(0) !== '$' && name !== 'constructor' && !consts['$include?'](name)) {\n          result.push('@' + name);\n        }\n      }\n\n      return result;\n    ;\n    }, $Module_instance_variables$58.$$arity = 0);\n    \n    Opal.def(self, '$dup', $Module_dup$59 = function $$dup() {\n      var $iter = $Module_dup$59.$$p, $yield = $iter || nil, self = this, copy = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Module_dup$59.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      copy = $send(self, Opal.find_super_dispatcher(self, 'dup', $Module_dup$59, false), $zuper, $iter);\n      copy.$copy_class_variables(self);\n      copy.$copy_constants(self);\n      return copy;\n    }, $Module_dup$59.$$arity = 0);\n    \n    Opal.def(self, '$copy_class_variables', $Module_copy_class_variables$60 = function $$copy_class_variables(other) {\n      var self = this;\n\n      \n      for (var name in other.$$cvars) {\n        self.$$cvars[name] = other.$$cvars[name];\n      }\n    \n    }, $Module_copy_class_variables$60.$$arity = 1);\n    return (Opal.def(self, '$copy_constants', $Module_copy_constants$61 = function $$copy_constants(other) {\n      var self = this;\n\n      \n      var name, other_constants = other.$$const;\n\n      for (name in other_constants) {\n        Opal.const_set(self, name, other_constants[name]);\n      }\n    \n    }, $Module_copy_constants$61.$$arity = 1), nil) && 'copy_constants';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/class\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send;\n\n  Opal.add_stubs(['$require', '$class_eval', '$to_proc', '$initialize_copy', '$allocate', '$name', '$to_s']);\n  \n  self.$require(\"corelib/module\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Class');\n\n    var $nesting = [self].concat($parent_nesting), $Class_new$1, $Class_allocate$2, $Class_inherited$3, $Class_initialize_dup$4, $Class_new$5, $Class_superclass$6, $Class_to_s$7;\n\n    \n    Opal.defs(self, '$new', $Class_new$1 = function(superclass) {\n      var $iter = $Class_new$1.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Class_new$1.$$p = null;\n      \n      \n      if ($iter) $Class_new$1.$$p = null;;\n      \n      if (superclass == null) {\n        superclass = $$($nesting, 'Object');\n      };\n      \n      if (!superclass.$$is_class) {\n        throw Opal.TypeError.$new(\"superclass must be a Class\");\n      }\n\n      var klass = Opal.allocate_class(nil, superclass);\n      superclass.$inherited(klass);\n      (function() {if ((block !== nil)) {\n        return $send((klass), 'class_eval', [], block.$to_proc())\n      } else {\n        return nil\n      }; return nil; })()\n      return klass;\n    ;\n    }, $Class_new$1.$$arity = -1);\n    \n    Opal.def(self, '$allocate', $Class_allocate$2 = function $$allocate() {\n      var self = this;\n\n      \n      var obj = new self.$$constructor();\n      obj.$$id = Opal.uid();\n      return obj;\n    \n    }, $Class_allocate$2.$$arity = 0);\n    \n    Opal.def(self, '$inherited', $Class_inherited$3 = function $$inherited(cls) {\n      var self = this;\n\n      return nil\n    }, $Class_inherited$3.$$arity = 1);\n    \n    Opal.def(self, '$initialize_dup', $Class_initialize_dup$4 = function $$initialize_dup(original) {\n      var self = this;\n\n      \n      self.$initialize_copy(original);\n      \n      self.$$name = null;\n      self.$$full_name = null;\n    ;\n    }, $Class_initialize_dup$4.$$arity = 1);\n    \n    Opal.def(self, '$new', $Class_new$5 = function($a) {\n      var $iter = $Class_new$5.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Class_new$5.$$p = null;\n      \n      \n      if ($iter) $Class_new$5.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var object = self.$allocate();\n      Opal.send(object, object.$initialize, args, block);\n      return object;\n    ;\n    }, $Class_new$5.$$arity = -1);\n    \n    Opal.def(self, '$superclass', $Class_superclass$6 = function $$superclass() {\n      var self = this;\n\n      return self.$$super || nil;\n    }, $Class_superclass$6.$$arity = 0);\n    return (Opal.def(self, '$to_s', $Class_to_s$7 = function $$to_s() {\n      var $iter = $Class_to_s$7.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Class_to_s$7.$$p = null;\n      \n      var singleton_of = self.$$singleton_of;\n\n      if (singleton_of && (singleton_of.$$is_a_module)) {\n        return \"\" + \"#<Class:\" + ((singleton_of).$name()) + \">\";\n      }\n      else if (singleton_of) {\n        // a singleton class created from an object\n        return \"\" + \"#<Class:#<\" + ((singleton_of.$$class).$name()) + \":0x\" + ((Opal.id(singleton_of)).$to_s(16)) + \">>\";\n      }\n      return $send(self, Opal.find_super_dispatcher(self, 'to_s', $Class_to_s$7, false), [], null);\n    \n    }, $Class_to_s$7.$$arity = 0), nil) && 'to_s';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/basic_object\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $range = Opal.range, $hash2 = Opal.hash2, $send = Opal.send;\n\n  Opal.add_stubs(['$==', '$!', '$nil?', '$cover?', '$size', '$raise', '$merge', '$compile', '$proc', '$any?', '$inspect', '$new']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'BasicObject');\n\n    var $nesting = [self].concat($parent_nesting), $BasicObject_initialize$1, $BasicObject_$eq_eq$2, $BasicObject_eql$ques$3, $BasicObject___id__$4, $BasicObject___send__$5, $BasicObject_$excl$6, $BasicObject_$not_eq$7, $BasicObject_instance_eval$8, $BasicObject_instance_exec$10, $BasicObject_singleton_method_added$11, $BasicObject_singleton_method_removed$12, $BasicObject_singleton_method_undefined$13, $BasicObject_class$14, $BasicObject_method_missing$15;\n\n    \n    \n    Opal.def(self, '$initialize', $BasicObject_initialize$1 = function $$initialize($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $BasicObject_initialize$1.$$arity = -1);\n    \n    Opal.def(self, '$==', $BasicObject_$eq_eq$2 = function(other) {\n      var self = this;\n\n      return self === other;\n    }, $BasicObject_$eq_eq$2.$$arity = 1);\n    \n    Opal.def(self, '$eql?', $BasicObject_eql$ques$3 = function(other) {\n      var self = this;\n\n      return self['$=='](other)\n    }, $BasicObject_eql$ques$3.$$arity = 1);\n    Opal.alias(self, \"equal?\", \"==\");\n    \n    Opal.def(self, '$__id__', $BasicObject___id__$4 = function $$__id__() {\n      var self = this;\n\n      \n      if (self.$$id != null) {\n        return self.$$id;\n      }\n      Opal.defineProperty(self, '$$id', Opal.uid());\n      return self.$$id;\n    \n    }, $BasicObject___id__$4.$$arity = 0);\n    \n    Opal.def(self, '$__send__', $BasicObject___send__$5 = function $$__send__(symbol, $a) {\n      var $iter = $BasicObject___send__$5.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $BasicObject___send__$5.$$p = null;\n      \n      \n      if ($iter) $BasicObject___send__$5.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      args = $post_args;;\n      \n      var func = self['$' + symbol]\n\n      if (func) {\n        if (block !== nil) {\n          func.$$p = block;\n        }\n\n        return func.apply(self, args);\n      }\n\n      if (block !== nil) {\n        self.$method_missing.$$p = block;\n      }\n\n      return self.$method_missing.apply(self, [symbol].concat(args));\n    ;\n    }, $BasicObject___send__$5.$$arity = -2);\n    \n    Opal.def(self, '$!', $BasicObject_$excl$6 = function() {\n      var self = this;\n\n      return false\n    }, $BasicObject_$excl$6.$$arity = 0);\n    \n    Opal.def(self, '$!=', $BasicObject_$not_eq$7 = function(other) {\n      var self = this;\n\n      return self['$=='](other)['$!']()\n    }, $BasicObject_$not_eq$7.$$arity = 1);\n    \n    Opal.def(self, '$instance_eval', $BasicObject_instance_eval$8 = function $$instance_eval($a) {\n      var $iter = $BasicObject_instance_eval$8.$$p, block = $iter || nil, $post_args, args, $b, $$9, self = this, string = nil, file = nil, _lineno = nil, default_eval_options = nil, compiling_options = nil, compiled = nil;\n\n      if ($iter) $BasicObject_instance_eval$8.$$p = null;\n      \n      \n      if ($iter) $BasicObject_instance_eval$8.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(($truthy($b = block['$nil?']()) ? !!Opal.compile : $b))) {\n        \n        if ($truthy($range(1, 3, false)['$cover?'](args.$size()))) {\n        } else {\n          $$$('::', 'Kernel').$raise($$$('::', 'ArgumentError'), \"wrong number of arguments (0 for 1..3)\")\n        };\n        $b = [].concat(Opal.to_a(args)), (string = ($b[0] == null ? nil : $b[0])), (file = ($b[1] == null ? nil : $b[1])), (_lineno = ($b[2] == null ? nil : $b[2])), $b;\n        default_eval_options = $hash2([\"file\", \"eval\"], {\"file\": ($truthy($b = file) ? $b : \"(eval)\"), \"eval\": true});\n        compiling_options = Opal.hash({ arity_check: false }).$merge(default_eval_options);\n        compiled = $$$('::', 'Opal').$compile(string, compiling_options);\n        block = $send($$$('::', 'Kernel'), 'proc', [], ($$9 = function(){var self = $$9.$$s || this;\n\n        \n          return (function(self) {\n            return eval(compiled);\n          })(self)\n        }, $$9.$$s = self, $$9.$$arity = 0, $$9));\n      } else if ($truthy(args['$any?']())) {\n        $$$('::', 'Kernel').$raise($$$('::', 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (args.$size()) + \" for 0)\")};\n      \n      var old = block.$$s,\n          result;\n\n      block.$$s = null;\n\n      // Need to pass $$eval so that method definitions know if this is\n      // being done on a class/module. Cannot be compiler driven since\n      // send(:instance_eval) needs to work.\n      if (self.$$is_a_module) {\n        self.$$eval = true;\n        try {\n          result = block.call(self, self);\n        }\n        finally {\n          self.$$eval = false;\n        }\n      }\n      else {\n        result = block.call(self, self);\n      }\n\n      block.$$s = old;\n\n      return result;\n    ;\n    }, $BasicObject_instance_eval$8.$$arity = -1);\n    \n    Opal.def(self, '$instance_exec', $BasicObject_instance_exec$10 = function $$instance_exec($a) {\n      var $iter = $BasicObject_instance_exec$10.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $BasicObject_instance_exec$10.$$p = null;\n      \n      \n      if ($iter) $BasicObject_instance_exec$10.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(block)) {\n      } else {\n        $$$('::', 'Kernel').$raise($$$('::', 'ArgumentError'), \"no block given\")\n      };\n      \n      var block_self = block.$$s,\n          result;\n\n      block.$$s = null;\n\n      if (self.$$is_a_module) {\n        self.$$eval = true;\n        try {\n          result = block.apply(self, args);\n        }\n        finally {\n          self.$$eval = false;\n        }\n      }\n      else {\n        result = block.apply(self, args);\n      }\n\n      block.$$s = block_self;\n\n      return result;\n    ;\n    }, $BasicObject_instance_exec$10.$$arity = -1);\n    \n    Opal.def(self, '$singleton_method_added', $BasicObject_singleton_method_added$11 = function $$singleton_method_added($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $BasicObject_singleton_method_added$11.$$arity = -1);\n    \n    Opal.def(self, '$singleton_method_removed', $BasicObject_singleton_method_removed$12 = function $$singleton_method_removed($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $BasicObject_singleton_method_removed$12.$$arity = -1);\n    \n    Opal.def(self, '$singleton_method_undefined', $BasicObject_singleton_method_undefined$13 = function $$singleton_method_undefined($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $BasicObject_singleton_method_undefined$13.$$arity = -1);\n    \n    Opal.def(self, '$class', $BasicObject_class$14 = function() {\n      var self = this;\n\n      return self.$$class;\n    }, $BasicObject_class$14.$$arity = 0);\n    return (Opal.def(self, '$method_missing', $BasicObject_method_missing$15 = function $$method_missing(symbol, $a) {\n      var $iter = $BasicObject_method_missing$15.$$p, block = $iter || nil, $post_args, args, self = this, message = nil;\n\n      if ($iter) $BasicObject_method_missing$15.$$p = null;\n      \n      \n      if ($iter) $BasicObject_method_missing$15.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      args = $post_args;;\n      message = (function() {if ($truthy(self.$inspect && !self.$inspect.$$stub)) {\n        return \"\" + \"undefined method `\" + (symbol) + \"' for \" + (self.$inspect()) + \":\" + (self.$$class)\n      } else {\n        return \"\" + \"undefined method `\" + (symbol) + \"' for \" + (self.$$class)\n      }; return nil; })();\n      return $$$('::', 'Kernel').$raise($$$('::', 'NoMethodError').$new(message, symbol));\n    }, $BasicObject_method_missing$15.$$arity = -2), nil) && 'method_missing';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/kernel\"] = function(Opal) {\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy, $gvars = Opal.gvars, $hash2 = Opal.hash2, $send = Opal.send, $klass = Opal.klass;\n\n  Opal.add_stubs(['$raise', '$new', '$inspect', '$!', '$=~', '$==', '$object_id', '$class', '$coerce_to?', '$<<', '$allocate', '$copy_instance_variables', '$copy_singleton_methods', '$initialize_clone', '$initialize_copy', '$define_method', '$singleton_class', '$to_proc', '$initialize_dup', '$for', '$empty?', '$pop', '$call', '$coerce_to', '$append_features', '$extend_object', '$extended', '$__id__', '$to_s', '$instance_variable_name!', '$respond_to?', '$to_int', '$coerce_to!', '$Integer', '$nil?', '$===', '$enum_for', '$result', '$any?', '$print', '$format', '$puts', '$each', '$<=', '$length', '$[]', '$exception', '$is_a?', '$rand', '$respond_to_missing?', '$try_convert!', '$expand_path', '$join', '$start_with?', '$new_seed', '$srand', '$sym', '$arg', '$open', '$include']);\n  \n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_method_missing$1, $Kernel_$eq_tilde$2, $Kernel_$excl_tilde$3, $Kernel_$eq_eq_eq$4, $Kernel_$lt_eq_gt$5, $Kernel_method$6, $Kernel_methods$7, $Kernel_public_methods$8, $Kernel_Array$9, $Kernel_at_exit$10, $Kernel_caller$11, $Kernel_class$12, $Kernel_copy_instance_variables$13, $Kernel_copy_singleton_methods$14, $Kernel_clone$15, $Kernel_initialize_clone$16, $Kernel_define_singleton_method$17, $Kernel_dup$18, $Kernel_initialize_dup$19, $Kernel_enum_for$20, $Kernel_equal$ques$21, $Kernel_exit$22, $Kernel_extend$23, $Kernel_hash$24, $Kernel_initialize_copy$25, $Kernel_inspect$26, $Kernel_instance_of$ques$27, $Kernel_instance_variable_defined$ques$28, $Kernel_instance_variable_get$29, $Kernel_instance_variable_set$30, $Kernel_remove_instance_variable$31, $Kernel_instance_variables$32, $Kernel_Integer$33, $Kernel_Float$34, $Kernel_Hash$35, $Kernel_is_a$ques$36, $Kernel_itself$37, $Kernel_lambda$38, $Kernel_load$39, $Kernel_loop$40, $Kernel_nil$ques$42, $Kernel_printf$43, $Kernel_proc$44, $Kernel_puts$45, $Kernel_p$46, $Kernel_print$48, $Kernel_warn$49, $Kernel_raise$50, $Kernel_rand$51, $Kernel_respond_to$ques$52, $Kernel_respond_to_missing$ques$53, $Kernel_require$54, $Kernel_require_relative$55, $Kernel_require_tree$56, $Kernel_singleton_class$57, $Kernel_sleep$58, $Kernel_srand$59, $Kernel_String$60, $Kernel_tap$61, $Kernel_to_proc$62, $Kernel_to_s$63, $Kernel_catch$64, $Kernel_throw$65, $Kernel_open$66, $Kernel_yield_self$67;\n\n    \n    \n    Opal.def(self, '$method_missing', $Kernel_method_missing$1 = function $$method_missing(symbol, $a) {\n      var $iter = $Kernel_method_missing$1.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Kernel_method_missing$1.$$p = null;\n      \n      \n      if ($iter) $Kernel_method_missing$1.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      args = $post_args;;\n      return self.$raise($$($nesting, 'NoMethodError').$new(\"\" + \"undefined method `\" + (symbol) + \"' for \" + (self.$inspect()), symbol, args));\n    }, $Kernel_method_missing$1.$$arity = -2);\n    \n    Opal.def(self, '$=~', $Kernel_$eq_tilde$2 = function(obj) {\n      var self = this;\n\n      return false\n    }, $Kernel_$eq_tilde$2.$$arity = 1);\n    \n    Opal.def(self, '$!~', $Kernel_$excl_tilde$3 = function(obj) {\n      var self = this;\n\n      return self['$=~'](obj)['$!']()\n    }, $Kernel_$excl_tilde$3.$$arity = 1);\n    \n    Opal.def(self, '$===', $Kernel_$eq_eq_eq$4 = function(other) {\n      var $a, self = this;\n\n      return ($truthy($a = self.$object_id()['$=='](other.$object_id())) ? $a : self['$=='](other))\n    }, $Kernel_$eq_eq_eq$4.$$arity = 1);\n    \n    Opal.def(self, '$<=>', $Kernel_$lt_eq_gt$5 = function(other) {\n      var self = this;\n\n      \n      // set guard for infinite recursion\n      self.$$comparable = true;\n\n      var x = self['$=='](other);\n\n      if (x && x !== nil) {\n        return 0;\n      }\n\n      return nil;\n    \n    }, $Kernel_$lt_eq_gt$5.$$arity = 1);\n    \n    Opal.def(self, '$method', $Kernel_method$6 = function $$method(name) {\n      var self = this;\n\n      \n      var meth = self['$' + name];\n\n      if (!meth || meth.$$stub) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"undefined method `\" + (name) + \"' for class `\" + (self.$class()) + \"'\", name));\n      }\n\n      return $$($nesting, 'Method').$new(self, meth.$$owner || self.$class(), meth, name);\n    \n    }, $Kernel_method$6.$$arity = 1);\n    \n    Opal.def(self, '$methods', $Kernel_methods$7 = function $$methods(all) {\n      var self = this;\n\n      \n      \n      if (all == null) {\n        all = true;\n      };\n      \n      if ($truthy(all)) {\n        return Opal.methods(self);\n      } else {\n        return Opal.own_methods(self);\n      }\n    ;\n    }, $Kernel_methods$7.$$arity = -1);\n    \n    Opal.def(self, '$public_methods', $Kernel_public_methods$8 = function $$public_methods(all) {\n      var self = this;\n\n      \n      \n      if (all == null) {\n        all = true;\n      };\n      \n      if ($truthy(all)) {\n        return Opal.methods(self);\n      } else {\n        return Opal.receiver_methods(self);\n      }\n    ;\n    }, $Kernel_public_methods$8.$$arity = -1);\n    \n    Opal.def(self, '$Array', $Kernel_Array$9 = function $$Array(object) {\n      var self = this;\n\n      \n      var coerced;\n\n      if (object === nil) {\n        return [];\n      }\n\n      if (object.$$is_array) {\n        return object;\n      }\n\n      coerced = $$($nesting, 'Opal')['$coerce_to?'](object, $$($nesting, 'Array'), \"to_ary\");\n      if (coerced !== nil) { return coerced; }\n\n      coerced = $$($nesting, 'Opal')['$coerce_to?'](object, $$($nesting, 'Array'), \"to_a\");\n      if (coerced !== nil) { return coerced; }\n\n      return [object];\n    \n    }, $Kernel_Array$9.$$arity = 1);\n    \n    Opal.def(self, '$at_exit', $Kernel_at_exit$10 = function $$at_exit() {\n      var $iter = $Kernel_at_exit$10.$$p, block = $iter || nil, $a, self = this;\n      if ($gvars.__at_exit__ == null) $gvars.__at_exit__ = nil;\n\n      if ($iter) $Kernel_at_exit$10.$$p = null;\n      \n      \n      if ($iter) $Kernel_at_exit$10.$$p = null;;\n      $gvars.__at_exit__ = ($truthy($a = $gvars.__at_exit__) ? $a : []);\n      return $gvars.__at_exit__['$<<'](block);\n    }, $Kernel_at_exit$10.$$arity = 0);\n    \n    Opal.def(self, '$caller', $Kernel_caller$11 = function $$caller($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return [];\n    }, $Kernel_caller$11.$$arity = -1);\n    \n    Opal.def(self, '$class', $Kernel_class$12 = function() {\n      var self = this;\n\n      return self.$$class;\n    }, $Kernel_class$12.$$arity = 0);\n    \n    Opal.def(self, '$copy_instance_variables', $Kernel_copy_instance_variables$13 = function $$copy_instance_variables(other) {\n      var self = this;\n\n      \n      var keys = Object.keys(other), i, ii, name;\n      for (i = 0, ii = keys.length; i < ii; i++) {\n        name = keys[i];\n        if (name.charAt(0) !== '$' && other.hasOwnProperty(name)) {\n          self[name] = other[name];\n        }\n      }\n    \n    }, $Kernel_copy_instance_variables$13.$$arity = 1);\n    \n    Opal.def(self, '$copy_singleton_methods', $Kernel_copy_singleton_methods$14 = function $$copy_singleton_methods(other) {\n      var self = this;\n\n      \n      var i, name, names, length;\n\n      if (other.hasOwnProperty('$$meta')) {\n        var other_singleton_class = Opal.get_singleton_class(other);\n        var self_singleton_class = Opal.get_singleton_class(self);\n        names = Object.getOwnPropertyNames(other_singleton_class.$$prototype);\n\n        for (i = 0, length = names.length; i < length; i++) {\n          name = names[i];\n          if (Opal.is_method(name)) {\n            self_singleton_class.$$prototype[name] = other_singleton_class.$$prototype[name];\n          }\n        }\n\n        self_singleton_class.$$const = Object.assign({}, other_singleton_class.$$const);\n        Object.setPrototypeOf(\n          self_singleton_class.$$prototype,\n          Object.getPrototypeOf(other_singleton_class.$$prototype)\n        );\n      }\n\n      for (i = 0, names = Object.getOwnPropertyNames(other), length = names.length; i < length; i++) {\n        name = names[i];\n        if (name.charAt(0) === '$' && name.charAt(1) !== '$' && other.hasOwnProperty(name)) {\n          self[name] = other[name];\n        }\n      }\n    \n    }, $Kernel_copy_singleton_methods$14.$$arity = 1);\n    \n    Opal.def(self, '$clone', $Kernel_clone$15 = function $$clone($kwargs) {\n      var freeze, self = this, copy = nil;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      freeze = $kwargs.$$smap[\"freeze\"];\n      if (freeze == null) {\n        freeze = true\n      };\n      copy = self.$class().$allocate();\n      copy.$copy_instance_variables(self);\n      copy.$copy_singleton_methods(self);\n      copy.$initialize_clone(self);\n      return copy;\n    }, $Kernel_clone$15.$$arity = -1);\n    \n    Opal.def(self, '$initialize_clone', $Kernel_initialize_clone$16 = function $$initialize_clone(other) {\n      var self = this;\n\n      return self.$initialize_copy(other)\n    }, $Kernel_initialize_clone$16.$$arity = 1);\n    \n    Opal.def(self, '$define_singleton_method', $Kernel_define_singleton_method$17 = function $$define_singleton_method(name, method) {\n      var $iter = $Kernel_define_singleton_method$17.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Kernel_define_singleton_method$17.$$p = null;\n      \n      \n      if ($iter) $Kernel_define_singleton_method$17.$$p = null;;\n      ;\n      return $send(self.$singleton_class(), 'define_method', [name, method], block.$to_proc());\n    }, $Kernel_define_singleton_method$17.$$arity = -2);\n    \n    Opal.def(self, '$dup', $Kernel_dup$18 = function $$dup() {\n      var self = this, copy = nil;\n\n      \n      copy = self.$class().$allocate();\n      copy.$copy_instance_variables(self);\n      copy.$initialize_dup(self);\n      return copy;\n    }, $Kernel_dup$18.$$arity = 0);\n    \n    Opal.def(self, '$initialize_dup', $Kernel_initialize_dup$19 = function $$initialize_dup(other) {\n      var self = this;\n\n      return self.$initialize_copy(other)\n    }, $Kernel_initialize_dup$19.$$arity = 1);\n    \n    Opal.def(self, '$enum_for', $Kernel_enum_for$20 = function $$enum_for($a, $b) {\n      var $iter = $Kernel_enum_for$20.$$p, block = $iter || nil, $post_args, method, args, self = this;\n\n      if ($iter) $Kernel_enum_for$20.$$p = null;\n      \n      \n      if ($iter) $Kernel_enum_for$20.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      if ($post_args.length > 0) {\n        method = $post_args[0];\n        $post_args.splice(0, 1);\n      }\n      if (method == null) {\n        method = \"each\";\n      };\n      \n      args = $post_args;;\n      return $send($$($nesting, 'Enumerator'), 'for', [self, method].concat(Opal.to_a(args)), block.$to_proc());\n    }, $Kernel_enum_for$20.$$arity = -1);\n    Opal.alias(self, \"to_enum\", \"enum_for\");\n    \n    Opal.def(self, '$equal?', $Kernel_equal$ques$21 = function(other) {\n      var self = this;\n\n      return self === other;\n    }, $Kernel_equal$ques$21.$$arity = 1);\n    \n    Opal.def(self, '$exit', $Kernel_exit$22 = function $$exit(status) {\n      var $a, self = this, block = nil;\n      if ($gvars.__at_exit__ == null) $gvars.__at_exit__ = nil;\n\n      \n      \n      if (status == null) {\n        status = true;\n      };\n      $gvars.__at_exit__ = ($truthy($a = $gvars.__at_exit__) ? $a : []);\n      while (!($truthy($gvars.__at_exit__['$empty?']()))) {\n        \n        block = $gvars.__at_exit__.$pop();\n        block.$call();\n      };\n      \n      if (status.$$is_boolean) {\n        status = status ? 0 : 1;\n      } else {\n        status = $$($nesting, 'Opal').$coerce_to(status, $$($nesting, 'Integer'), \"to_int\")\n      }\n\n      Opal.exit(status);\n    ;\n      return nil;\n    }, $Kernel_exit$22.$$arity = -1);\n    \n    Opal.def(self, '$extend', $Kernel_extend$23 = function $$extend($a) {\n      var $post_args, mods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      mods = $post_args;;\n      \n      var singleton = self.$singleton_class();\n\n      for (var i = mods.length - 1; i >= 0; i--) {\n        var mod = mods[i];\n\n        if (!mod.$$is_module) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((mod).$class()) + \" (expected Module)\");\n        }\n\n        (mod).$append_features(singleton);\n        (mod).$extend_object(self);\n        (mod).$extended(self);\n      }\n    ;\n      return self;\n    }, $Kernel_extend$23.$$arity = -1);\n    \n    Opal.def(self, '$hash', $Kernel_hash$24 = function $$hash() {\n      var self = this;\n\n      return self.$__id__()\n    }, $Kernel_hash$24.$$arity = 0);\n    \n    Opal.def(self, '$initialize_copy', $Kernel_initialize_copy$25 = function $$initialize_copy(other) {\n      var self = this;\n\n      return nil\n    }, $Kernel_initialize_copy$25.$$arity = 1);\n    \n    Opal.def(self, '$inspect', $Kernel_inspect$26 = function $$inspect() {\n      var self = this;\n\n      return self.$to_s()\n    }, $Kernel_inspect$26.$$arity = 0);\n    \n    Opal.def(self, '$instance_of?', $Kernel_instance_of$ques$27 = function(klass) {\n      var self = this;\n\n      \n      if (!klass.$$is_class && !klass.$$is_module) {\n        self.$raise($$($nesting, 'TypeError'), \"class or module required\");\n      }\n\n      return self.$$class === klass;\n    \n    }, $Kernel_instance_of$ques$27.$$arity = 1);\n    \n    Opal.def(self, '$instance_variable_defined?', $Kernel_instance_variable_defined$ques$28 = function(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$instance_variable_name!'](name);\n      return Opal.hasOwnProperty.call(self, name.substr(1));;\n    }, $Kernel_instance_variable_defined$ques$28.$$arity = 1);\n    \n    Opal.def(self, '$instance_variable_get', $Kernel_instance_variable_get$29 = function $$instance_variable_get(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$instance_variable_name!'](name);\n      \n      var ivar = self[Opal.ivar(name.substr(1))];\n\n      return ivar == null ? nil : ivar;\n    ;\n    }, $Kernel_instance_variable_get$29.$$arity = 1);\n    \n    Opal.def(self, '$instance_variable_set', $Kernel_instance_variable_set$30 = function $$instance_variable_set(name, value) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$instance_variable_name!'](name);\n      return self[Opal.ivar(name.substr(1))] = value;;\n    }, $Kernel_instance_variable_set$30.$$arity = 2);\n    \n    Opal.def(self, '$remove_instance_variable', $Kernel_remove_instance_variable$31 = function $$remove_instance_variable(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$instance_variable_name!'](name);\n      \n      var key = Opal.ivar(name.substr(1)),\n          val;\n      if (self.hasOwnProperty(key)) {\n        val = self[key];\n        delete self[key];\n        return val;\n      }\n    ;\n      return self.$raise($$($nesting, 'NameError'), \"\" + \"instance variable \" + (name) + \" not defined\");\n    }, $Kernel_remove_instance_variable$31.$$arity = 1);\n    \n    Opal.def(self, '$instance_variables', $Kernel_instance_variables$32 = function $$instance_variables() {\n      var self = this;\n\n      \n      var result = [], ivar;\n\n      for (var name in self) {\n        if (self.hasOwnProperty(name) && name.charAt(0) !== '$') {\n          if (name.substr(-1) === '$') {\n            ivar = name.slice(0, name.length - 1);\n          } else {\n            ivar = name;\n          }\n          result.push('@' + ivar);\n        }\n      }\n\n      return result;\n    \n    }, $Kernel_instance_variables$32.$$arity = 0);\n    \n    Opal.def(self, '$Integer', $Kernel_Integer$33 = function $$Integer(value, base) {\n      var self = this;\n\n      \n      ;\n      \n      var i, str, base_digits;\n\n      if (!value.$$is_string) {\n        if (base !== undefined) {\n          self.$raise($$($nesting, 'ArgumentError'), \"base specified for non string value\")\n        }\n        if (value === nil) {\n          self.$raise($$($nesting, 'TypeError'), \"can't convert nil into Integer\")\n        }\n        if (value.$$is_number) {\n          if (value === Infinity || value === -Infinity || isNaN(value)) {\n            self.$raise($$($nesting, 'FloatDomainError'), value)\n          }\n          return Math.floor(value);\n        }\n        if (value['$respond_to?'](\"to_int\")) {\n          i = value.$to_int();\n          if (i !== nil) {\n            return i;\n          }\n        }\n        return $$($nesting, 'Opal')['$coerce_to!'](value, $$($nesting, 'Integer'), \"to_i\");\n      }\n\n      if (value === \"0\") {\n        return 0;\n      }\n\n      if (base === undefined) {\n        base = 0;\n      } else {\n        base = $$($nesting, 'Opal').$coerce_to(base, $$($nesting, 'Integer'), \"to_int\");\n        if (base === 1 || base < 0 || base > 36) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid radix \" + (base))\n        }\n      }\n\n      str = value.toLowerCase();\n\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\n\n      str = str.replace(/^(\\s*[+-]?)(0[bodx]?)/, function (_, head, flag) {\n        switch (flag) {\n        case '0b':\n          if (base === 0 || base === 2) {\n            base = 2;\n            return head;\n          }\n        case '0':\n        case '0o':\n          if (base === 0 || base === 8) {\n            base = 8;\n            return head;\n          }\n        case '0d':\n          if (base === 0 || base === 10) {\n            base = 10;\n            return head;\n          }\n        case '0x':\n          if (base === 0 || base === 16) {\n            base = 16;\n            return head;\n          }\n        }\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid value for Integer(): \\\"\" + (value) + \"\\\"\")\n      });\n\n      base = (base === 0 ? 10 : base);\n\n      base_digits = '0-' + (base <= 10 ? base - 1 : '9a-' + String.fromCharCode(97 + (base - 11)));\n\n      if (!(new RegExp('^\\\\s*[+-]?[' + base_digits + ']+\\\\s*$')).test(str)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid value for Integer(): \\\"\" + (value) + \"\\\"\")\n      }\n\n      i = parseInt(str, base);\n\n      if (isNaN(i)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid value for Integer(): \\\"\" + (value) + \"\\\"\")\n      }\n\n      return i;\n    ;\n    }, $Kernel_Integer$33.$$arity = -2);\n    \n    Opal.def(self, '$Float', $Kernel_Float$34 = function $$Float(value) {\n      var self = this;\n\n      \n      var str;\n\n      if (value === nil) {\n        self.$raise($$($nesting, 'TypeError'), \"can't convert nil into Float\")\n      }\n\n      if (value.$$is_string) {\n        str = value.toString();\n\n        str = str.replace(/(\\d)_(?=\\d)/g, '$1');\n\n        //Special case for hex strings only:\n        if (/^\\s*[-+]?0[xX][0-9a-fA-F]+\\s*$/.test(str)) {\n          return self.$Integer(str);\n        }\n\n        if (!/^\\s*[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?\\s*$/.test(str)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid value for Float(): \\\"\" + (value) + \"\\\"\")\n        }\n\n        return parseFloat(str);\n      }\n\n      return $$($nesting, 'Opal')['$coerce_to!'](value, $$($nesting, 'Float'), \"to_f\");\n    \n    }, $Kernel_Float$34.$$arity = 1);\n    \n    Opal.def(self, '$Hash', $Kernel_Hash$35 = function $$Hash(arg) {\n      var $a, self = this;\n\n      \n      if ($truthy(($truthy($a = arg['$nil?']()) ? $a : arg['$==']([])))) {\n        return $hash2([], {})};\n      if ($truthy($$($nesting, 'Hash')['$==='](arg))) {\n        return arg};\n      return $$($nesting, 'Opal')['$coerce_to!'](arg, $$($nesting, 'Hash'), \"to_hash\");\n    }, $Kernel_Hash$35.$$arity = 1);\n    \n    Opal.def(self, '$is_a?', $Kernel_is_a$ques$36 = function(klass) {\n      var self = this;\n\n      \n      if (!klass.$$is_class && !klass.$$is_module) {\n        self.$raise($$($nesting, 'TypeError'), \"class or module required\");\n      }\n\n      return Opal.is_a(self, klass);\n    \n    }, $Kernel_is_a$ques$36.$$arity = 1);\n    \n    Opal.def(self, '$itself', $Kernel_itself$37 = function $$itself() {\n      var self = this;\n\n      return self\n    }, $Kernel_itself$37.$$arity = 0);\n    Opal.alias(self, \"kind_of?\", \"is_a?\");\n    \n    Opal.def(self, '$lambda', $Kernel_lambda$38 = function $$lambda() {\n      var $iter = $Kernel_lambda$38.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Kernel_lambda$38.$$p = null;\n      \n      \n      if ($iter) $Kernel_lambda$38.$$p = null;;\n      return Opal.lambda(block);;\n    }, $Kernel_lambda$38.$$arity = 0);\n    \n    Opal.def(self, '$load', $Kernel_load$39 = function $$load(file) {\n      var self = this;\n\n      \n      file = $$($nesting, 'Opal')['$coerce_to!'](file, $$($nesting, 'String'), \"to_str\");\n      return Opal.load(file);\n    }, $Kernel_load$39.$$arity = 1);\n    \n    Opal.def(self, '$loop', $Kernel_loop$40 = function $$loop() {\n      var $$41, $a, $iter = $Kernel_loop$40.$$p, $yield = $iter || nil, self = this, e = nil;\n\n      if ($iter) $Kernel_loop$40.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"loop\"], ($$41 = function(){var self = $$41.$$s || this;\n\n        return $$$($$($nesting, 'Float'), 'INFINITY')}, $$41.$$s = self, $$41.$$arity = 0, $$41))\n      };\n      while ($truthy(true)) {\n        \n        try {\n          Opal.yieldX($yield, [])\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StopIteration')])) {e = $err;\n            try {\n              return e.$result()\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };\n      };\n      return self;\n    }, $Kernel_loop$40.$$arity = 0);\n    \n    Opal.def(self, '$nil?', $Kernel_nil$ques$42 = function() {\n      var self = this;\n\n      return false\n    }, $Kernel_nil$ques$42.$$arity = 0);\n    Opal.alias(self, \"object_id\", \"__id__\");\n    \n    Opal.def(self, '$printf', $Kernel_printf$43 = function $$printf($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(args['$any?']())) {\n        self.$print($send(self, 'format', Opal.to_a(args)))};\n      return nil;\n    }, $Kernel_printf$43.$$arity = -1);\n    \n    Opal.def(self, '$proc', $Kernel_proc$44 = function $$proc() {\n      var $iter = $Kernel_proc$44.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Kernel_proc$44.$$p = null;\n      \n      \n      if ($iter) $Kernel_proc$44.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"tried to create Proc object without a block\")\n      };\n      block.$$is_lambda = false;\n      return block;\n    }, $Kernel_proc$44.$$arity = 0);\n    \n    Opal.def(self, '$puts', $Kernel_puts$45 = function $$puts($a) {\n      var $post_args, strs, self = this;\n      if ($gvars.stdout == null) $gvars.stdout = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      strs = $post_args;;\n      return $send($gvars.stdout, 'puts', Opal.to_a(strs));\n    }, $Kernel_puts$45.$$arity = -1);\n    \n    Opal.def(self, '$p', $Kernel_p$46 = function $$p($a) {\n      var $post_args, args, $$47, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      $send(args, 'each', [], ($$47 = function(obj){var self = $$47.$$s || this;\n        if ($gvars.stdout == null) $gvars.stdout = nil;\n\n      \n        \n        if (obj == null) {\n          obj = nil;\n        };\n        return $gvars.stdout.$puts(obj.$inspect());}, $$47.$$s = self, $$47.$$arity = 1, $$47));\n      if ($truthy($rb_le(args.$length(), 1))) {\n        return args['$[]'](0)\n      } else {\n        return args\n      };\n    }, $Kernel_p$46.$$arity = -1);\n    \n    Opal.def(self, '$print', $Kernel_print$48 = function $$print($a) {\n      var $post_args, strs, self = this;\n      if ($gvars.stdout == null) $gvars.stdout = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      strs = $post_args;;\n      return $send($gvars.stdout, 'print', Opal.to_a(strs));\n    }, $Kernel_print$48.$$arity = -1);\n    \n    Opal.def(self, '$warn', $Kernel_warn$49 = function $$warn($a) {\n      var $post_args, strs, $b, self = this;\n      if ($gvars.VERBOSE == null) $gvars.VERBOSE = nil;\n      if ($gvars.stderr == null) $gvars.stderr = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      strs = $post_args;;\n      if ($truthy(($truthy($b = $gvars.VERBOSE['$nil?']()) ? $b : strs['$empty?']()))) {\n        return nil\n      } else {\n        return $send($gvars.stderr, 'puts', Opal.to_a(strs))\n      };\n    }, $Kernel_warn$49.$$arity = -1);\n    \n    Opal.def(self, '$raise', $Kernel_raise$50 = function $$raise(exception, string, _backtrace) {\n      var self = this;\n      if ($gvars[\"!\"] == null) $gvars[\"!\"] = nil;\n\n      \n      ;\n      \n      if (string == null) {\n        string = nil;\n      };\n      \n      if (_backtrace == null) {\n        _backtrace = nil;\n      };\n      \n      if (exception == null && $gvars[\"!\"] !== nil) {\n        throw $gvars[\"!\"];\n      }\n      if (exception == null) {\n        exception = $$($nesting, 'RuntimeError').$new();\n      }\n      else if (exception.$$is_string) {\n        exception = $$($nesting, 'RuntimeError').$new(exception);\n      }\n      // using respond_to? and not an undefined check to avoid method_missing matching as true\n      else if (exception.$$is_class && exception['$respond_to?'](\"exception\")) {\n        exception = exception.$exception(string);\n      }\n      else if (exception['$is_a?']($$($nesting, 'Exception'))) {\n        // exception is fine\n      }\n      else {\n        exception = $$($nesting, 'TypeError').$new(\"exception class/object expected\");\n      }\n\n      if ($gvars[\"!\"] !== nil) {\n        Opal.exceptions.push($gvars[\"!\"]);\n      }\n\n      $gvars[\"!\"] = exception;\n\n      throw exception;\n    ;\n    }, $Kernel_raise$50.$$arity = -1);\n    Opal.alias(self, \"fail\", \"raise\");\n    \n    Opal.def(self, '$rand', $Kernel_rand$51 = function $$rand(max) {\n      var self = this;\n\n      \n      ;\n      \n      if (max === undefined) {\n        return $$$($$($nesting, 'Random'), 'DEFAULT').$rand();\n      }\n\n      if (max.$$is_number) {\n        if (max < 0) {\n          max = Math.abs(max);\n        }\n\n        if (max % 1 !== 0) {\n          max = max.$to_i();\n        }\n\n        if (max === 0) {\n          max = undefined;\n        }\n      }\n    ;\n      return $$$($$($nesting, 'Random'), 'DEFAULT').$rand(max);\n    }, $Kernel_rand$51.$$arity = -1);\n    \n    Opal.def(self, '$respond_to?', $Kernel_respond_to$ques$52 = function(name, include_all) {\n      var self = this;\n\n      \n      \n      if (include_all == null) {\n        include_all = false;\n      };\n      if ($truthy(self['$respond_to_missing?'](name, include_all))) {\n        return true};\n      \n      var body = self['$' + name];\n\n      if (typeof(body) === \"function\" && !body.$$stub) {\n        return true;\n      }\n    ;\n      return false;\n    }, $Kernel_respond_to$ques$52.$$arity = -2);\n    \n    Opal.def(self, '$respond_to_missing?', $Kernel_respond_to_missing$ques$53 = function(method_name, include_all) {\n      var self = this;\n\n      \n      \n      if (include_all == null) {\n        include_all = false;\n      };\n      return false;\n    }, $Kernel_respond_to_missing$ques$53.$$arity = -2);\n    \n    Opal.def(self, '$require', $Kernel_require$54 = function $$require(file) {\n      var self = this;\n\n      \n      file = $$($nesting, 'Opal')['$coerce_to!'](file, $$($nesting, 'String'), \"to_str\");\n      return Opal.require(file);\n    }, $Kernel_require$54.$$arity = 1);\n    \n    Opal.def(self, '$require_relative', $Kernel_require_relative$55 = function $$require_relative(file) {\n      var self = this;\n\n      \n      $$($nesting, 'Opal')['$try_convert!'](file, $$($nesting, 'String'), \"to_str\");\n      file = $$($nesting, 'File').$expand_path($$($nesting, 'File').$join(Opal.current_file, \"..\", file));\n      return Opal.require(file);\n    }, $Kernel_require_relative$55.$$arity = 1);\n    \n    Opal.def(self, '$require_tree', $Kernel_require_tree$56 = function $$require_tree(path) {\n      var self = this;\n\n      \n      var result = [];\n\n      path = $$($nesting, 'File').$expand_path(path)\n      path = Opal.normalize(path);\n      if (path === '.') path = '';\n      for (var name in Opal.modules) {\n        if ((name)['$start_with?'](path)) {\n          result.push([name, Opal.require(name)]);\n        }\n      }\n\n      return result;\n    \n    }, $Kernel_require_tree$56.$$arity = 1);\n    Opal.alias(self, \"send\", \"__send__\");\n    Opal.alias(self, \"public_send\", \"__send__\");\n    \n    Opal.def(self, '$singleton_class', $Kernel_singleton_class$57 = function $$singleton_class() {\n      var self = this;\n\n      return Opal.get_singleton_class(self);\n    }, $Kernel_singleton_class$57.$$arity = 0);\n    \n    Opal.def(self, '$sleep', $Kernel_sleep$58 = function $$sleep(seconds) {\n      var self = this;\n\n      \n      \n      if (seconds == null) {\n        seconds = nil;\n      };\n      \n      if (seconds === nil) {\n        self.$raise($$($nesting, 'TypeError'), \"can't convert NilClass into time interval\")\n      }\n      if (!seconds.$$is_number) {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't convert \" + (seconds.$class()) + \" into time interval\")\n      }\n      if (seconds < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"time interval must be positive\")\n      }\n      var get_time = Opal.global.performance ?\n        function() {return performance.now()} :\n        function() {return new Date()}\n\n      var t = get_time();\n      while (get_time() - t <= seconds * 1000);\n      return seconds;\n    ;\n    }, $Kernel_sleep$58.$$arity = -1);\n    \n    Opal.def(self, '$srand', $Kernel_srand$59 = function $$srand(seed) {\n      var self = this;\n\n      \n      \n      if (seed == null) {\n        seed = $$($nesting, 'Random').$new_seed();\n      };\n      return $$($nesting, 'Random').$srand(seed);\n    }, $Kernel_srand$59.$$arity = -1);\n    \n    Opal.def(self, '$String', $Kernel_String$60 = function $$String(str) {\n      var $a, self = this;\n\n      return ($truthy($a = $$($nesting, 'Opal')['$coerce_to?'](str, $$($nesting, 'String'), \"to_str\")) ? $a : $$($nesting, 'Opal')['$coerce_to!'](str, $$($nesting, 'String'), \"to_s\"))\n    }, $Kernel_String$60.$$arity = 1);\n    \n    Opal.def(self, '$tap', $Kernel_tap$61 = function $$tap() {\n      var $iter = $Kernel_tap$61.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Kernel_tap$61.$$p = null;\n      \n      \n      if ($iter) $Kernel_tap$61.$$p = null;;\n      Opal.yield1(block, self);\n      return self;\n    }, $Kernel_tap$61.$$arity = 0);\n    \n    Opal.def(self, '$to_proc', $Kernel_to_proc$62 = function $$to_proc() {\n      var self = this;\n\n      return self\n    }, $Kernel_to_proc$62.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Kernel_to_s$63 = function $$to_s() {\n      var self = this;\n\n      return \"\" + \"#<\" + (self.$class()) + \":0x\" + (self.$__id__().$to_s(16)) + \">\"\n    }, $Kernel_to_s$63.$$arity = 0);\n    \n    Opal.def(self, '$catch', $Kernel_catch$64 = function(sym) {\n      var $iter = $Kernel_catch$64.$$p, $yield = $iter || nil, self = this, e = nil;\n\n      if ($iter) $Kernel_catch$64.$$p = null;\n      try {\n        return Opal.yieldX($yield, []);\n      } catch ($err) {\n        if (Opal.rescue($err, [$$($nesting, 'UncaughtThrowError')])) {e = $err;\n          try {\n            \n            if (e.$sym()['$=='](sym)) {\n              return e.$arg()};\n            return self.$raise();\n          } finally { Opal.pop_exception() }\n        } else { throw $err; }\n      }\n    }, $Kernel_catch$64.$$arity = 1);\n    \n    Opal.def(self, '$throw', $Kernel_throw$65 = function($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return self.$raise($$($nesting, 'UncaughtThrowError'), args);\n    }, $Kernel_throw$65.$$arity = -1);\n    \n    Opal.def(self, '$open', $Kernel_open$66 = function $$open($a) {\n      var $iter = $Kernel_open$66.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Kernel_open$66.$$p = null;\n      \n      \n      if ($iter) $Kernel_open$66.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return $send($$($nesting, 'File'), 'open', Opal.to_a(args), block.$to_proc());\n    }, $Kernel_open$66.$$arity = -1);\n    \n    Opal.def(self, '$yield_self', $Kernel_yield_self$67 = function $$yield_self() {\n      var $$68, $iter = $Kernel_yield_self$67.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Kernel_yield_self$67.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"yield_self\"], ($$68 = function(){var self = $$68.$$s || this;\n\n        return 1}, $$68.$$s = self, $$68.$$arity = 0, $$68))\n      };\n      return Opal.yield1($yield, self);;\n    }, $Kernel_yield_self$67.$$arity = 0);\n  })($nesting[0], $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Object');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return self.$include($$($nesting, 'Kernel'))\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/error\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $module = Opal.module, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$new', '$clone', '$to_s', '$empty?', '$class', '$raise', '$+', '$attr_reader', '$[]', '$>', '$length', '$inspect']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Exception');\n\n    var $nesting = [self].concat($parent_nesting), $Exception_new$1, $Exception_exception$2, $Exception_initialize$3, $Exception_backtrace$4, $Exception_exception$5, $Exception_message$6, $Exception_inspect$7, $Exception_set_backtrace$8, $Exception_to_s$9;\n\n    self.$$prototype.message = nil;\n    \n    var stack_trace_limit;\n    Opal.defs(self, '$new', $Exception_new$1 = function($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var message   = (args.length > 0) ? args[0] : nil;\n      var error     = new self.$$constructor(message);\n      error.name    = self.$$name;\n      error.message = message;\n      Opal.send(error, error.$initialize, args);\n\n      // Error.captureStackTrace() will use .name and .toString to build the\n      // first line of the stack trace so it must be called after the error\n      // has been initialized.\n      // https://nodejs.org/dist/latest-v6.x/docs/api/errors.html\n      if (Opal.config.enable_stack_trace && Error.captureStackTrace) {\n        // Passing Kernel.raise will cut the stack trace from that point above\n        Error.captureStackTrace(error, stack_trace_limit);\n      }\n\n      return error;\n    ;\n    }, $Exception_new$1.$$arity = -1);\n    stack_trace_limit = self.$new;\n    Opal.defs(self, '$exception', $Exception_exception$2 = function $$exception($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return $send(self, 'new', Opal.to_a(args));\n    }, $Exception_exception$2.$$arity = -1);\n    \n    Opal.def(self, '$initialize', $Exception_initialize$3 = function $$initialize($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return self.message = (args.length > 0) ? args[0] : nil;;\n    }, $Exception_initialize$3.$$arity = -1);\n    \n    Opal.def(self, '$backtrace', $Exception_backtrace$4 = function $$backtrace() {\n      var self = this;\n\n      \n      if (self.backtrace) {\n        // nil is a valid backtrace\n        return self.backtrace;\n      }\n\n      var backtrace = self.stack;\n\n      if (typeof(backtrace) === 'string') {\n        return backtrace.split(\"\\n\").slice(0, 15);\n      }\n      else if (backtrace) {\n        return backtrace.slice(0, 15);\n      }\n\n      return [];\n    \n    }, $Exception_backtrace$4.$$arity = 0);\n    \n    Opal.def(self, '$exception', $Exception_exception$5 = function $$exception(str) {\n      var self = this;\n\n      \n      \n      if (str == null) {\n        str = nil;\n      };\n      \n      if (str === nil || self === str) {\n        return self;\n      }\n\n      var cloned = self.$clone();\n      cloned.message = str;\n      return cloned;\n    ;\n    }, $Exception_exception$5.$$arity = -1);\n    \n    Opal.def(self, '$message', $Exception_message$6 = function $$message() {\n      var self = this;\n\n      return self.$to_s()\n    }, $Exception_message$6.$$arity = 0);\n    \n    Opal.def(self, '$inspect', $Exception_inspect$7 = function $$inspect() {\n      var self = this, as_str = nil;\n\n      \n      as_str = self.$to_s();\n      if ($truthy(as_str['$empty?']())) {\n        return self.$class().$to_s()\n      } else {\n        return \"\" + \"#<\" + (self.$class().$to_s()) + \": \" + (self.$to_s()) + \">\"\n      };\n    }, $Exception_inspect$7.$$arity = 0);\n    \n    Opal.def(self, '$set_backtrace', $Exception_set_backtrace$8 = function $$set_backtrace(backtrace) {\n      var self = this;\n\n      \n      var valid = true, i, ii;\n\n      if (backtrace === nil) {\n        self.backtrace = nil;\n      } else if (backtrace.$$is_string) {\n        self.backtrace = [backtrace];\n      } else {\n        if (backtrace.$$is_array) {\n          for (i = 0, ii = backtrace.length; i < ii; i++) {\n            if (!backtrace[i].$$is_string) {\n              valid = false;\n              break;\n            }\n          }\n        } else {\n          valid = false;\n        }\n\n        if (valid === false) {\n          self.$raise($$($nesting, 'TypeError'), \"backtrace must be Array of String\")\n        }\n\n        self.backtrace = backtrace;\n      }\n\n      return backtrace;\n    \n    }, $Exception_set_backtrace$8.$$arity = 1);\n    return (Opal.def(self, '$to_s', $Exception_to_s$9 = function $$to_s() {\n      var $a, $b, self = this;\n\n      return ($truthy($a = ($truthy($b = self.message) ? self.message.$to_s() : $b)) ? $a : self.$class().$to_s())\n    }, $Exception_to_s$9.$$arity = 0), nil) && 'to_s';\n  })($nesting[0], Error, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'ScriptError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SyntaxError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'ScriptError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'LoadError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'ScriptError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NotImplementedError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'ScriptError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SystemExit');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NoMemoryError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SignalException');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Interrupt');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SecurityError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'StandardError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'EncodingError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'ZeroDivisionError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NameError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NoMethodError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'NameError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'RuntimeError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'FrozenError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'RuntimeError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'LocalJumpError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'TypeError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'ArgumentError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'IndexError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'StopIteration');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'IndexError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'KeyError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'IndexError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'RangeError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'FloatDomainError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'RangeError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'IOError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SystemCallError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Errno');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'EINVAL');\n\n      var $nesting = [self].concat($parent_nesting), $EINVAL_new$10;\n\n      return (Opal.defs(self, '$new', $EINVAL_new$10 = function(name) {\n        var $iter = $EINVAL_new$10.$$p, $yield = $iter || nil, self = this, message = nil;\n\n        if ($iter) $EINVAL_new$10.$$p = null;\n        \n        \n        if (name == null) {\n          name = nil;\n        };\n        message = \"Invalid argument\";\n        if ($truthy(name)) {\n          message = $rb_plus(message, \"\" + \" - \" + (name))};\n        return $send(self, Opal.find_super_dispatcher(self, 'new', $EINVAL_new$10, false, self.$$class.$$prototype), [message], null);\n      }, $EINVAL_new$10.$$arity = -1), nil) && 'new'\n    })($nesting[0], $$($nesting, 'SystemCallError'), $nesting)\n  })($nesting[0], $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'UncaughtThrowError');\n\n    var $nesting = [self].concat($parent_nesting), $UncaughtThrowError_initialize$11;\n\n    self.$$prototype.sym = nil;\n    \n    self.$attr_reader(\"sym\", \"arg\");\n    return (Opal.def(self, '$initialize', $UncaughtThrowError_initialize$11 = function $$initialize(args) {\n      var $iter = $UncaughtThrowError_initialize$11.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $UncaughtThrowError_initialize$11.$$p = null;\n      \n      self.sym = args['$[]'](0);\n      if ($truthy($rb_gt(args.$length(), 1))) {\n        self.arg = args['$[]'](1)};\n      return $send(self, Opal.find_super_dispatcher(self, 'initialize', $UncaughtThrowError_initialize$11, false), [\"\" + \"uncaught throw \" + (self.sym.$inspect())], null);\n    }, $UncaughtThrowError_initialize$11.$$arity = 1), nil) && 'initialize';\n  })($nesting[0], $$($nesting, 'ArgumentError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NameError');\n\n    var $nesting = [self].concat($parent_nesting), $NameError_initialize$12;\n\n    \n    self.$attr_reader(\"name\");\n    return (Opal.def(self, '$initialize', $NameError_initialize$12 = function $$initialize(message, name) {\n      var $iter = $NameError_initialize$12.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $NameError_initialize$12.$$p = null;\n      \n      \n      if (name == null) {\n        name = nil;\n      };\n      $send(self, Opal.find_super_dispatcher(self, 'initialize', $NameError_initialize$12, false), [message], null);\n      return (self.name = name);\n    }, $NameError_initialize$12.$$arity = -2), nil) && 'initialize';\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NoMethodError');\n\n    var $nesting = [self].concat($parent_nesting), $NoMethodError_initialize$13;\n\n    \n    self.$attr_reader(\"args\");\n    return (Opal.def(self, '$initialize', $NoMethodError_initialize$13 = function $$initialize(message, name, args) {\n      var $iter = $NoMethodError_initialize$13.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $NoMethodError_initialize$13.$$p = null;\n      \n      \n      if (name == null) {\n        name = nil;\n      };\n      \n      if (args == null) {\n        args = [];\n      };\n      $send(self, Opal.find_super_dispatcher(self, 'initialize', $NoMethodError_initialize$13, false), [message, name], null);\n      return (self.args = args);\n    }, $NoMethodError_initialize$13.$$arity = -2), nil) && 'initialize';\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'StopIteration');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return self.$attr_reader(\"result\")\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'KeyError');\n\n    var $nesting = [self].concat($parent_nesting), $KeyError_initialize$14, $KeyError_receiver$15, $KeyError_key$16;\n\n    self.$$prototype.receiver = self.$$prototype.key = nil;\n    \n    \n    Opal.def(self, '$initialize', $KeyError_initialize$14 = function $$initialize(message, $kwargs) {\n      var receiver, key, $iter = $KeyError_initialize$14.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $KeyError_initialize$14.$$p = null;\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      receiver = $kwargs.$$smap[\"receiver\"];\n      if (receiver == null) {\n        receiver = nil\n      };\n      \n      key = $kwargs.$$smap[\"key\"];\n      if (key == null) {\n        key = nil\n      };\n      $send(self, Opal.find_super_dispatcher(self, 'initialize', $KeyError_initialize$14, false), [message], null);\n      self.receiver = receiver;\n      return (self.key = key);\n    }, $KeyError_initialize$14.$$arity = -2);\n    \n    Opal.def(self, '$receiver', $KeyError_receiver$15 = function $$receiver() {\n      var $a, self = this;\n\n      return ($truthy($a = self.receiver) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"no receiver is available\"))\n    }, $KeyError_receiver$15.$$arity = 0);\n    return (Opal.def(self, '$key', $KeyError_key$16 = function $$key() {\n      var $a, self = this;\n\n      return ($truthy($a = self.key) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"no key is available\"))\n    }, $KeyError_key$16.$$arity = 0), nil) && 'key';\n  })($nesting[0], null, $nesting);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'JS');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Error');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      return nil\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/constants\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  \n  Opal.const_set($nesting[0], 'RUBY_PLATFORM', \"opal\");\n  Opal.const_set($nesting[0], 'RUBY_ENGINE', \"opal\");\n  Opal.const_set($nesting[0], 'RUBY_VERSION', \"2.5.1\");\n  Opal.const_set($nesting[0], 'RUBY_ENGINE_VERSION', \"0.11.99.dev\");\n  Opal.const_set($nesting[0], 'RUBY_RELEASE_DATE', \"2018-12-25\");\n  Opal.const_set($nesting[0], 'RUBY_PATCHLEVEL', 0);\n  Opal.const_set($nesting[0], 'RUBY_REVISION', 0);\n  Opal.const_set($nesting[0], 'RUBY_COPYRIGHT', \"opal - Copyright (C) 2013-2018 Adam Beynon and the Opal contributors\");\n  return Opal.const_set($nesting[0], 'RUBY_DESCRIPTION', \"\" + \"opal \" + ($$($nesting, 'RUBY_ENGINE_VERSION')) + \" (\" + ($$($nesting, 'RUBY_RELEASE_DATE')) + \" revision \" + ($$($nesting, 'RUBY_REVISION')) + \")\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"opal/base\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"corelib/runtime\");\n  self.$require(\"corelib/helpers\");\n  self.$require(\"corelib/module\");\n  self.$require(\"corelib/class\");\n  self.$require(\"corelib/basic_object\");\n  self.$require(\"corelib/kernel\");\n  self.$require(\"corelib/error\");\n  return self.$require(\"corelib/constants\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/nil\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$raise', '$name', '$new', '$>', '$length', '$Rational']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NilClass');\n\n    var $nesting = [self].concat($parent_nesting), $NilClass_$excl$2, $NilClass_$$3, $NilClass_$$4, $NilClass_$$5, $NilClass_$eq_eq$6, $NilClass_dup$7, $NilClass_clone$8, $NilClass_inspect$9, $NilClass_nil$ques$10, $NilClass_singleton_class$11, $NilClass_to_a$12, $NilClass_to_h$13, $NilClass_to_i$14, $NilClass_to_s$15, $NilClass_to_c$16, $NilClass_rationalize$17, $NilClass_to_r$18, $NilClass_instance_variables$19;\n\n    \n    self.$$prototype.$$meta = self;\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$1;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$1 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$1.$$arity = 0);\n      \n      \n      Opal.udef(self, '$' + \"new\");;\n      return nil;;\n    })(Opal.get_singleton_class(self), $nesting);\n    \n    Opal.def(self, '$!', $NilClass_$excl$2 = function() {\n      var self = this;\n\n      return true\n    }, $NilClass_$excl$2.$$arity = 0);\n    \n    Opal.def(self, '$&', $NilClass_$$3 = function(other) {\n      var self = this;\n\n      return false\n    }, $NilClass_$$3.$$arity = 1);\n    \n    Opal.def(self, '$|', $NilClass_$$4 = function(other) {\n      var self = this;\n\n      return other !== false && other !== nil;\n    }, $NilClass_$$4.$$arity = 1);\n    \n    Opal.def(self, '$^', $NilClass_$$5 = function(other) {\n      var self = this;\n\n      return other !== false && other !== nil;\n    }, $NilClass_$$5.$$arity = 1);\n    \n    Opal.def(self, '$==', $NilClass_$eq_eq$6 = function(other) {\n      var self = this;\n\n      return other === nil;\n    }, $NilClass_$eq_eq$6.$$arity = 1);\n    \n    Opal.def(self, '$dup', $NilClass_dup$7 = function $$dup() {\n      var self = this;\n\n      return nil\n    }, $NilClass_dup$7.$$arity = 0);\n    \n    Opal.def(self, '$clone', $NilClass_clone$8 = function $$clone($kwargs) {\n      var freeze, self = this;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      freeze = $kwargs.$$smap[\"freeze\"];\n      if (freeze == null) {\n        freeze = true\n      };\n      return nil;\n    }, $NilClass_clone$8.$$arity = -1);\n    \n    Opal.def(self, '$inspect', $NilClass_inspect$9 = function $$inspect() {\n      var self = this;\n\n      return \"nil\"\n    }, $NilClass_inspect$9.$$arity = 0);\n    \n    Opal.def(self, '$nil?', $NilClass_nil$ques$10 = function() {\n      var self = this;\n\n      return true\n    }, $NilClass_nil$ques$10.$$arity = 0);\n    \n    Opal.def(self, '$singleton_class', $NilClass_singleton_class$11 = function $$singleton_class() {\n      var self = this;\n\n      return $$($nesting, 'NilClass')\n    }, $NilClass_singleton_class$11.$$arity = 0);\n    \n    Opal.def(self, '$to_a', $NilClass_to_a$12 = function $$to_a() {\n      var self = this;\n\n      return []\n    }, $NilClass_to_a$12.$$arity = 0);\n    \n    Opal.def(self, '$to_h', $NilClass_to_h$13 = function $$to_h() {\n      var self = this;\n\n      return Opal.hash();\n    }, $NilClass_to_h$13.$$arity = 0);\n    \n    Opal.def(self, '$to_i', $NilClass_to_i$14 = function $$to_i() {\n      var self = this;\n\n      return 0\n    }, $NilClass_to_i$14.$$arity = 0);\n    Opal.alias(self, \"to_f\", \"to_i\");\n    \n    Opal.def(self, '$to_s', $NilClass_to_s$15 = function $$to_s() {\n      var self = this;\n\n      return \"\"\n    }, $NilClass_to_s$15.$$arity = 0);\n    \n    Opal.def(self, '$to_c', $NilClass_to_c$16 = function $$to_c() {\n      var self = this;\n\n      return $$($nesting, 'Complex').$new(0, 0)\n    }, $NilClass_to_c$16.$$arity = 0);\n    \n    Opal.def(self, '$rationalize', $NilClass_rationalize$17 = function $$rationalize($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy($rb_gt(args.$length(), 1))) {\n        self.$raise($$($nesting, 'ArgumentError'))};\n      return self.$Rational(0, 1);\n    }, $NilClass_rationalize$17.$$arity = -1);\n    \n    Opal.def(self, '$to_r', $NilClass_to_r$18 = function $$to_r() {\n      var self = this;\n\n      return self.$Rational(0, 1)\n    }, $NilClass_to_r$18.$$arity = 0);\n    return (Opal.def(self, '$instance_variables', $NilClass_instance_variables$19 = function $$instance_variables() {\n      var self = this;\n\n      return []\n    }, $NilClass_instance_variables$19.$$arity = 0), nil) && 'instance_variables';\n  })($nesting[0], null, $nesting);\n  return Opal.const_set($nesting[0], 'NIL', nil);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/boolean\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$raise', '$name']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Boolean');\n\n    var $nesting = [self].concat($parent_nesting), $Boolean___id__$2, $Boolean_$excl$3, $Boolean_$$4, $Boolean_$$5, $Boolean_$$6, $Boolean_$eq_eq$7, $Boolean_singleton_class$8, $Boolean_to_s$9, $Boolean_dup$10, $Boolean_clone$11;\n\n    \n    Opal.defineProperty(self.$$prototype, '$$is_boolean', true);\n    Opal.defineProperty(self.$$prototype, '$$meta', self);\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$1;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$1 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$1.$$arity = 0);\n      \n      \n      Opal.udef(self, '$' + \"new\");;\n      return nil;;\n    })(Opal.get_singleton_class(self), $nesting);\n    \n    Opal.def(self, '$__id__', $Boolean___id__$2 = function $$__id__() {\n      var self = this;\n\n      return self.valueOf() ? 2 : 0;\n    }, $Boolean___id__$2.$$arity = 0);\n    Opal.alias(self, \"object_id\", \"__id__\");\n    \n    Opal.def(self, '$!', $Boolean_$excl$3 = function() {\n      var self = this;\n\n      return self != true;\n    }, $Boolean_$excl$3.$$arity = 0);\n    \n    Opal.def(self, '$&', $Boolean_$$4 = function(other) {\n      var self = this;\n\n      return (self == true) ? (other !== false && other !== nil) : false;\n    }, $Boolean_$$4.$$arity = 1);\n    \n    Opal.def(self, '$|', $Boolean_$$5 = function(other) {\n      var self = this;\n\n      return (self == true) ? true : (other !== false && other !== nil);\n    }, $Boolean_$$5.$$arity = 1);\n    \n    Opal.def(self, '$^', $Boolean_$$6 = function(other) {\n      var self = this;\n\n      return (self == true) ? (other === false || other === nil) : (other !== false && other !== nil);\n    }, $Boolean_$$6.$$arity = 1);\n    \n    Opal.def(self, '$==', $Boolean_$eq_eq$7 = function(other) {\n      var self = this;\n\n      return (self == true) === other.valueOf();\n    }, $Boolean_$eq_eq$7.$$arity = 1);\n    Opal.alias(self, \"equal?\", \"==\");\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$singleton_class', $Boolean_singleton_class$8 = function $$singleton_class() {\n      var self = this;\n\n      return $$($nesting, 'Boolean')\n    }, $Boolean_singleton_class$8.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Boolean_to_s$9 = function $$to_s() {\n      var self = this;\n\n      return (self == true) ? 'true' : 'false';\n    }, $Boolean_to_s$9.$$arity = 0);\n    \n    Opal.def(self, '$dup', $Boolean_dup$10 = function $$dup() {\n      var self = this;\n\n      return self\n    }, $Boolean_dup$10.$$arity = 0);\n    return (Opal.def(self, '$clone', $Boolean_clone$11 = function $$clone($kwargs) {\n      var freeze, self = this;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      freeze = $kwargs.$$smap[\"freeze\"];\n      if (freeze == null) {\n        freeze = true\n      };\n      return self;\n    }, $Boolean_clone$11.$$arity = -1), nil) && 'clone';\n  })($nesting[0], Boolean, $nesting);\n  Opal.const_set($nesting[0], 'TrueClass', $$($nesting, 'Boolean'));\n  Opal.const_set($nesting[0], 'FalseClass', $$($nesting, 'Boolean'));\n  Opal.const_set($nesting[0], 'TRUE', true);\n  return Opal.const_set($nesting[0], 'FALSE', false);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/comparable\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$===', '$>', '$<', '$equal?', '$<=>', '$normalize', '$raise', '$class']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Comparable');\n\n    var $nesting = [self].concat($parent_nesting), $Comparable_normalize$1, $Comparable_$eq_eq$2, $Comparable_$gt$3, $Comparable_$gt_eq$4, $Comparable_$lt$5, $Comparable_$lt_eq$6, $Comparable_between$ques$7, $Comparable_clamp$8;\n\n    \n    Opal.defs(self, '$normalize', $Comparable_normalize$1 = function $$normalize(what) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](what))) {\n        return what};\n      if ($truthy($rb_gt(what, 0))) {\n        return 1};\n      if ($truthy($rb_lt(what, 0))) {\n        return -1};\n      return 0;\n    }, $Comparable_normalize$1.$$arity = 1);\n    \n    Opal.def(self, '$==', $Comparable_$eq_eq$2 = function(other) {\n      var self = this, cmp = nil;\n\n      try {\n        \n        if ($truthy(self['$equal?'](other))) {\n          return true};\n        \n      if (self[\"$<=>\"] == Opal.Kernel[\"$<=>\"]) {\n        return false;\n      }\n\n      // check for infinite recursion\n      if (self.$$comparable) {\n        delete self.$$comparable;\n        return false;\n      }\n    ;\n        if ($truthy((cmp = self['$<=>'](other)))) {\n        } else {\n          return false\n        };\n        return $$($nesting, 'Comparable').$normalize(cmp) == 0;\n      } catch ($err) {\n        if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n          try {\n            return false\n          } finally { Opal.pop_exception() }\n        } else { throw $err; }\n      }\n    }, $Comparable_$eq_eq$2.$$arity = 1);\n    \n    Opal.def(self, '$>', $Comparable_$gt$3 = function(other) {\n      var self = this, cmp = nil;\n\n      \n      if ($truthy((cmp = self['$<=>'](other)))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")\n      };\n      return $$($nesting, 'Comparable').$normalize(cmp) > 0;\n    }, $Comparable_$gt$3.$$arity = 1);\n    \n    Opal.def(self, '$>=', $Comparable_$gt_eq$4 = function(other) {\n      var self = this, cmp = nil;\n\n      \n      if ($truthy((cmp = self['$<=>'](other)))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")\n      };\n      return $$($nesting, 'Comparable').$normalize(cmp) >= 0;\n    }, $Comparable_$gt_eq$4.$$arity = 1);\n    \n    Opal.def(self, '$<', $Comparable_$lt$5 = function(other) {\n      var self = this, cmp = nil;\n\n      \n      if ($truthy((cmp = self['$<=>'](other)))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")\n      };\n      return $$($nesting, 'Comparable').$normalize(cmp) < 0;\n    }, $Comparable_$lt$5.$$arity = 1);\n    \n    Opal.def(self, '$<=', $Comparable_$lt_eq$6 = function(other) {\n      var self = this, cmp = nil;\n\n      \n      if ($truthy((cmp = self['$<=>'](other)))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")\n      };\n      return $$($nesting, 'Comparable').$normalize(cmp) <= 0;\n    }, $Comparable_$lt_eq$6.$$arity = 1);\n    \n    Opal.def(self, '$between?', $Comparable_between$ques$7 = function(min, max) {\n      var self = this;\n\n      \n      if ($rb_lt(self, min)) {\n        return false};\n      if ($rb_gt(self, max)) {\n        return false};\n      return true;\n    }, $Comparable_between$ques$7.$$arity = 2);\n    \n    Opal.def(self, '$clamp', $Comparable_clamp$8 = function $$clamp(min, max) {\n      var self = this, cmp = nil;\n\n      \n      cmp = min['$<=>'](max);\n      if ($truthy(cmp)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (min.$class()) + \" with \" + (max.$class()) + \" failed\")\n      };\n      if ($truthy($rb_gt($$($nesting, 'Comparable').$normalize(cmp), 0))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"min argument must be smaller than max argument\")};\n      if ($truthy($rb_lt($$($nesting, 'Comparable').$normalize(self['$<=>'](min)), 0))) {\n        return min};\n      if ($truthy($rb_gt($$($nesting, 'Comparable').$normalize(self['$<=>'](max)), 0))) {\n        return max};\n      return self;\n    }, $Comparable_clamp$8.$$arity = 2);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/regexp\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$nil?', '$[]', '$raise', '$escape', '$options', '$to_str', '$new', '$join', '$coerce_to!', '$!', '$match', '$coerce_to?', '$begin', '$coerce_to', '$=~', '$attr_reader', '$===', '$inspect', '$to_a']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'RegexpError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Regexp');\n\n    var $nesting = [self].concat($parent_nesting), $Regexp_$eq_eq$6, $Regexp_$eq_eq_eq$7, $Regexp_$eq_tilde$8, $Regexp_inspect$9, $Regexp_match$10, $Regexp_match$ques$11, $Regexp_$$12, $Regexp_source$13, $Regexp_options$14, $Regexp_casefold$ques$15;\n\n    \n    Opal.const_set($nesting[0], 'IGNORECASE', 1);\n    Opal.const_set($nesting[0], 'EXTENDED', 2);\n    Opal.const_set($nesting[0], 'MULTILINE', 4);\n    Opal.defineProperty(self.$$prototype, '$$is_regexp', true);\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$1, $escape$2, $last_match$3, $union$4, $new$5;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$1 = function $$allocate() {\n        var $iter = $allocate$1.$$p, $yield = $iter || nil, self = this, allocated = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $allocate$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        allocated = $send(self, Opal.find_super_dispatcher(self, 'allocate', $allocate$1, false), $zuper, $iter);\n        allocated.uninitialized = true;\n        return allocated;\n      }, $allocate$1.$$arity = 0);\n      \n      Opal.def(self, '$escape', $escape$2 = function $$escape(string) {\n        var self = this;\n\n        return Opal.escape_regexp(string);\n      }, $escape$2.$$arity = 1);\n      \n      Opal.def(self, '$last_match', $last_match$3 = function $$last_match(n) {\n        var self = this;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        \n        if (n == null) {\n          n = nil;\n        };\n        if ($truthy(n['$nil?']())) {\n          return $gvars[\"~\"]\n        } else {\n          return $gvars[\"~\"]['$[]'](n)\n        };\n      }, $last_match$3.$$arity = -1);\n      Opal.alias(self, \"quote\", \"escape\");\n      \n      Opal.def(self, '$union', $union$4 = function $$union($a) {\n        var $post_args, parts, self = this;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        parts = $post_args;;\n        \n        var is_first_part_array, quoted_validated, part, options, each_part_options;\n        if (parts.length == 0) {\n          return /(?!)/;\n        }\n        // return fast if there's only one element\n        if (parts.length == 1 && parts[0].$$is_regexp) {\n          return parts[0];\n        }\n        // cover the 2 arrays passed as arguments case\n        is_first_part_array = parts[0].$$is_array;\n        if (parts.length > 1 && is_first_part_array) {\n          self.$raise($$($nesting, 'TypeError'), \"no implicit conversion of Array into String\")\n        }\n        // deal with splat issues (related to https://github.com/opal/opal/issues/858)\n        if (is_first_part_array) {\n          parts = parts[0];\n        }\n        options = undefined;\n        quoted_validated = [];\n        for (var i=0; i < parts.length; i++) {\n          part = parts[i];\n          if (part.$$is_string) {\n            quoted_validated.push(self.$escape(part));\n          }\n          else if (part.$$is_regexp) {\n            each_part_options = (part).$options();\n            if (options != undefined && options != each_part_options) {\n              self.$raise($$($nesting, 'TypeError'), \"All expressions must use the same options\")\n            }\n            options = each_part_options;\n            quoted_validated.push('('+part.source+')');\n          }\n          else {\n            quoted_validated.push(self.$escape((part).$to_str()));\n          }\n        }\n      ;\n        return self.$new((quoted_validated).$join(\"|\"), options);\n      }, $union$4.$$arity = -1);\n      return (Opal.def(self, '$new', $new$5 = function(regexp, options) {\n        var self = this;\n\n        \n        ;\n        \n        if (regexp.$$is_regexp) {\n          return new RegExp(regexp);\n        }\n\n        regexp = $$($nesting, 'Opal')['$coerce_to!'](regexp, $$($nesting, 'String'), \"to_str\");\n\n        if (regexp.charAt(regexp.length - 1) === '\\\\' && regexp.charAt(regexp.length - 2) !== '\\\\') {\n          self.$raise($$($nesting, 'RegexpError'), \"\" + \"too short escape sequence: /\" + (regexp) + \"/\")\n        }\n\n        if (options === undefined || options['$!']()) {\n          return new RegExp(regexp);\n        }\n\n        if (options.$$is_number) {\n          var temp = '';\n          if ($$($nesting, 'IGNORECASE') & options) { temp += 'i'; }\n          if ($$($nesting, 'MULTILINE')  & options) { temp += 'm'; }\n          options = temp;\n        }\n        else {\n          options = 'i';\n        }\n\n        return new RegExp(regexp, options);\n      ;\n      }, $new$5.$$arity = -2), nil) && 'new';\n    })(Opal.get_singleton_class(self), $nesting);\n    \n    Opal.def(self, '$==', $Regexp_$eq_eq$6 = function(other) {\n      var self = this;\n\n      return other instanceof RegExp && self.toString() === other.toString();\n    }, $Regexp_$eq_eq$6.$$arity = 1);\n    \n    Opal.def(self, '$===', $Regexp_$eq_eq_eq$7 = function(string) {\n      var self = this;\n\n      return self.$match($$($nesting, 'Opal')['$coerce_to?'](string, $$($nesting, 'String'), \"to_str\")) !== nil\n    }, $Regexp_$eq_eq_eq$7.$$arity = 1);\n    \n    Opal.def(self, '$=~', $Regexp_$eq_tilde$8 = function(string) {\n      var $a, self = this;\n      if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n      return ($truthy($a = self.$match(string)) ? $gvars[\"~\"].$begin(0) : $a)\n    }, $Regexp_$eq_tilde$8.$$arity = 1);\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$inspect', $Regexp_inspect$9 = function $$inspect() {\n      var self = this;\n\n      \n      var regexp_format = /^\\/(.*)\\/([^\\/]*)$/;\n      var value = self.toString();\n      var matches = regexp_format.exec(value);\n      if (matches) {\n        var regexp_pattern = matches[1];\n        var regexp_flags = matches[2];\n        var chars = regexp_pattern.split('');\n        var chars_length = chars.length;\n        var char_escaped = false;\n        var regexp_pattern_escaped = '';\n        for (var i = 0; i < chars_length; i++) {\n          var current_char = chars[i];\n          if (!char_escaped && current_char == '/') {\n            regexp_pattern_escaped = regexp_pattern_escaped.concat('\\\\');\n          }\n          regexp_pattern_escaped = regexp_pattern_escaped.concat(current_char);\n          if (current_char == '\\\\') {\n            if (char_escaped) {\n              // does not over escape\n              char_escaped = false;\n            } else {\n              char_escaped = true;\n            }\n          } else {\n            char_escaped = false;\n          }\n        }\n        return '/' + regexp_pattern_escaped + '/' + regexp_flags;\n      } else {\n        return value;\n      }\n    \n    }, $Regexp_inspect$9.$$arity = 0);\n    \n    Opal.def(self, '$match', $Regexp_match$10 = function $$match(string, pos) {\n      var $iter = $Regexp_match$10.$$p, block = $iter || nil, self = this;\n      if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n      if ($iter) $Regexp_match$10.$$p = null;\n      \n      \n      if ($iter) $Regexp_match$10.$$p = null;;\n      ;\n      \n      if (self.uninitialized) {\n        self.$raise($$($nesting, 'TypeError'), \"uninitialized Regexp\")\n      }\n\n      if (pos === undefined) {\n        if (string === nil) return ($gvars[\"~\"] = nil);\n        var m = self.exec($$($nesting, 'Opal').$coerce_to(string, $$($nesting, 'String'), \"to_str\"));\n        if (m) {\n          ($gvars[\"~\"] = $$($nesting, 'MatchData').$new(self, m));\n          return block === nil ? $gvars[\"~\"] : Opal.yield1(block, $gvars[\"~\"]);\n        } else {\n          return ($gvars[\"~\"] = nil);\n        }\n      }\n\n      pos = $$($nesting, 'Opal').$coerce_to(pos, $$($nesting, 'Integer'), \"to_int\");\n\n      if (string === nil) {\n        return ($gvars[\"~\"] = nil);\n      }\n\n      string = $$($nesting, 'Opal').$coerce_to(string, $$($nesting, 'String'), \"to_str\");\n\n      if (pos < 0) {\n        pos += string.length;\n        if (pos < 0) {\n          return ($gvars[\"~\"] = nil);\n        }\n      }\n\n      // global RegExp maintains state, so not using self/this\n      var md, re = Opal.global_regexp(self);\n\n      while (true) {\n        md = re.exec(string);\n        if (md === null) {\n          return ($gvars[\"~\"] = nil);\n        }\n        if (md.index >= pos) {\n          ($gvars[\"~\"] = $$($nesting, 'MatchData').$new(re, md));\n          return block === nil ? $gvars[\"~\"] : Opal.yield1(block, $gvars[\"~\"]);\n        }\n        re.lastIndex = md.index + 1;\n      }\n    ;\n    }, $Regexp_match$10.$$arity = -2);\n    \n    Opal.def(self, '$match?', $Regexp_match$ques$11 = function(string, pos) {\n      var self = this;\n\n      \n      ;\n      \n      if (self.uninitialized) {\n        self.$raise($$($nesting, 'TypeError'), \"uninitialized Regexp\")\n      }\n\n      if (pos === undefined) {\n        return string === nil ? false : self.test($$($nesting, 'Opal').$coerce_to(string, $$($nesting, 'String'), \"to_str\"));\n      }\n\n      pos = $$($nesting, 'Opal').$coerce_to(pos, $$($nesting, 'Integer'), \"to_int\");\n\n      if (string === nil) {\n        return false;\n      }\n\n      string = $$($nesting, 'Opal').$coerce_to(string, $$($nesting, 'String'), \"to_str\");\n\n      if (pos < 0) {\n        pos += string.length;\n        if (pos < 0) {\n          return false;\n        }\n      }\n\n      // global RegExp maintains state, so not using self/this\n      var md, re = Opal.global_regexp(self);\n\n      md = re.exec(string);\n      if (md === null || md.index < pos) {\n        return false;\n      } else {\n        return true;\n      }\n    ;\n    }, $Regexp_match$ques$11.$$arity = -2);\n    \n    Opal.def(self, '$~', $Regexp_$$12 = function() {\n      var self = this;\n      if ($gvars._ == null) $gvars._ = nil;\n\n      return self['$=~']($gvars._)\n    }, $Regexp_$$12.$$arity = 0);\n    \n    Opal.def(self, '$source', $Regexp_source$13 = function $$source() {\n      var self = this;\n\n      return self.source;\n    }, $Regexp_source$13.$$arity = 0);\n    \n    Opal.def(self, '$options', $Regexp_options$14 = function $$options() {\n      var self = this;\n\n      \n      if (self.uninitialized) {\n        self.$raise($$($nesting, 'TypeError'), \"uninitialized Regexp\")\n      }\n      var result = 0;\n      // should be supported in IE6 according to https://msdn.microsoft.com/en-us/library/7f5z26w4(v=vs.94).aspx\n      if (self.multiline) {\n        result |= $$($nesting, 'MULTILINE');\n      }\n      if (self.ignoreCase) {\n        result |= $$($nesting, 'IGNORECASE');\n      }\n      return result;\n    \n    }, $Regexp_options$14.$$arity = 0);\n    \n    Opal.def(self, '$casefold?', $Regexp_casefold$ques$15 = function() {\n      var self = this;\n\n      return self.ignoreCase;\n    }, $Regexp_casefold$ques$15.$$arity = 0);\n    return Opal.alias(self, \"to_s\", \"source\");\n  })($nesting[0], RegExp, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'MatchData');\n\n    var $nesting = [self].concat($parent_nesting), $MatchData_initialize$16, $MatchData_$$$17, $MatchData_offset$18, $MatchData_$eq_eq$19, $MatchData_begin$20, $MatchData_end$21, $MatchData_captures$22, $MatchData_inspect$23, $MatchData_length$24, $MatchData_to_a$25, $MatchData_to_s$26, $MatchData_values_at$27;\n\n    self.$$prototype.matches = nil;\n    \n    self.$attr_reader(\"post_match\", \"pre_match\", \"regexp\", \"string\");\n    \n    Opal.def(self, '$initialize', $MatchData_initialize$16 = function $$initialize(regexp, match_groups) {\n      var self = this;\n\n      \n      $gvars[\"~\"] = self;\n      self.regexp = regexp;\n      self.begin = match_groups.index;\n      self.string = match_groups.input;\n      self.pre_match = match_groups.input.slice(0, match_groups.index);\n      self.post_match = match_groups.input.slice(match_groups.index + match_groups[0].length);\n      self.matches = [];\n      \n      for (var i = 0, length = match_groups.length; i < length; i++) {\n        var group = match_groups[i];\n\n        if (group == null) {\n          self.matches.push(nil);\n        }\n        else {\n          self.matches.push(group);\n        }\n      }\n    ;\n    }, $MatchData_initialize$16.$$arity = 2);\n    \n    Opal.def(self, '$[]', $MatchData_$$$17 = function($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return $send(self.matches, '[]', Opal.to_a(args));\n    }, $MatchData_$$$17.$$arity = -1);\n    \n    Opal.def(self, '$offset', $MatchData_offset$18 = function $$offset(n) {\n      var self = this;\n\n      \n      if (n !== 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"MatchData#offset only supports 0th element\")\n      }\n      return [self.begin, self.begin + self.matches[n].length];\n    \n    }, $MatchData_offset$18.$$arity = 1);\n    \n    Opal.def(self, '$==', $MatchData_$eq_eq$19 = function(other) {\n      var $a, $b, $c, $d, self = this;\n\n      \n      if ($truthy($$($nesting, 'MatchData')['$==='](other))) {\n      } else {\n        return false\n      };\n      return ($truthy($a = ($truthy($b = ($truthy($c = ($truthy($d = self.string == other.string) ? self.regexp.toString() == other.regexp.toString() : $d)) ? self.pre_match == other.pre_match : $c)) ? self.post_match == other.post_match : $b)) ? self.begin == other.begin : $a);\n    }, $MatchData_$eq_eq$19.$$arity = 1);\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$begin', $MatchData_begin$20 = function $$begin(n) {\n      var self = this;\n\n      \n      if (n !== 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"MatchData#begin only supports 0th element\")\n      }\n      return self.begin;\n    \n    }, $MatchData_begin$20.$$arity = 1);\n    \n    Opal.def(self, '$end', $MatchData_end$21 = function $$end(n) {\n      var self = this;\n\n      \n      if (n !== 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"MatchData#end only supports 0th element\")\n      }\n      return self.begin + self.matches[n].length;\n    \n    }, $MatchData_end$21.$$arity = 1);\n    \n    Opal.def(self, '$captures', $MatchData_captures$22 = function $$captures() {\n      var self = this;\n\n      return self.matches.slice(1)\n    }, $MatchData_captures$22.$$arity = 0);\n    \n    Opal.def(self, '$inspect', $MatchData_inspect$23 = function $$inspect() {\n      var self = this;\n\n      \n      var str = \"#<MatchData \" + (self.matches[0]).$inspect();\n\n      for (var i = 1, length = self.matches.length; i < length; i++) {\n        str += \" \" + i + \":\" + (self.matches[i]).$inspect();\n      }\n\n      return str + \">\";\n    \n    }, $MatchData_inspect$23.$$arity = 0);\n    \n    Opal.def(self, '$length', $MatchData_length$24 = function $$length() {\n      var self = this;\n\n      return self.matches.length\n    }, $MatchData_length$24.$$arity = 0);\n    Opal.alias(self, \"size\", \"length\");\n    \n    Opal.def(self, '$to_a', $MatchData_to_a$25 = function $$to_a() {\n      var self = this;\n\n      return self.matches\n    }, $MatchData_to_a$25.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $MatchData_to_s$26 = function $$to_s() {\n      var self = this;\n\n      return self.matches[0]\n    }, $MatchData_to_s$26.$$arity = 0);\n    return (Opal.def(self, '$values_at', $MatchData_values_at$27 = function $$values_at($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var i, a, index, values = [];\n\n      for (i = 0; i < args.length; i++) {\n\n        if (args[i].$$is_range) {\n          a = (args[i]).$to_a();\n          a.unshift(i, 1);\n          Array.prototype.splice.apply(args, a);\n        }\n\n        index = $$($nesting, 'Opal')['$coerce_to!'](args[i], $$($nesting, 'Integer'), \"to_int\");\n\n        if (index < 0) {\n          index += self.matches.length;\n          if (index < 0) {\n            values.push(nil);\n            continue;\n          }\n        }\n\n        values.push(self.matches[index]);\n      }\n\n      return values;\n    ;\n    }, $MatchData_values_at$27.$$arity = -1), nil) && 'values_at';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/string\"] = function(Opal) {\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$require', '$include', '$coerce_to?', '$coerce_to', '$raise', '$===', '$format', '$to_s', '$respond_to?', '$to_str', '$<=>', '$==', '$=~', '$new', '$force_encoding', '$casecmp', '$empty?', '$ljust', '$ceil', '$/', '$+', '$rjust', '$floor', '$to_a', '$each_char', '$to_proc', '$coerce_to!', '$copy_singleton_methods', '$initialize_clone', '$initialize_dup', '$enum_for', '$size', '$chomp', '$[]', '$to_i', '$each_line', '$class', '$match', '$match?', '$captures', '$proc', '$succ', '$escape']);\n  \n  self.$require(\"corelib/comparable\");\n  self.$require(\"corelib/regexp\");\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting), $String___id__$1, $String_try_convert$2, $String_new$3, $String_initialize$4, $String_$percent$5, $String_$$6, $String_$plus$7, $String_$lt_eq_gt$8, $String_$eq_eq$9, $String_$eq_tilde$10, $String_$$$11, $String_b$12, $String_capitalize$13, $String_casecmp$14, $String_casecmp$ques$15, $String_center$16, $String_chars$17, $String_chomp$18, $String_chop$19, $String_chr$20, $String_clone$21, $String_dup$22, $String_count$23, $String_delete$24, $String_delete_prefix$25, $String_delete_suffix$26, $String_downcase$27, $String_each_char$28, $String_each_line$30, $String_empty$ques$31, $String_end_with$ques$32, $String_gsub$33, $String_hash$34, $String_hex$35, $String_include$ques$36, $String_index$37, $String_inspect$38, $String_intern$39, $String_lines$40, $String_length$41, $String_ljust$42, $String_lstrip$43, $String_ascii_only$ques$44, $String_match$45, $String_match$ques$46, $String_next$47, $String_oct$48, $String_ord$49, $String_partition$50, $String_reverse$51, $String_rindex$52, $String_rjust$53, $String_rpartition$54, $String_rstrip$55, $String_scan$56, $String_split$57, $String_squeeze$58, $String_start_with$ques$59, $String_strip$60, $String_sub$61, $String_sum$62, $String_swapcase$63, $String_to_f$64, $String_to_i$65, $String_to_proc$66, $String_to_s$68, $String_tr$69, $String_tr_s$70, $String_upcase$71, $String_upto$72, $String_instance_variables$73, $String__load$74, $String_unicode_normalize$75, $String_unicode_normalized$ques$76, $String_unpack$77, $String_unpack1$78;\n\n    \n    self.$include($$($nesting, 'Comparable'));\n    \n    Opal.defineProperty(self.$$prototype, '$$is_string', true);\n\n    Opal.defineProperty(self.$$prototype, '$$cast', function(string) {\n      var klass = this.$$class;\n      if (klass.$$constructor === String) {\n        return string;\n      } else {\n        return new klass.$$constructor(string);\n      }\n    });\n  ;\n    \n    Opal.def(self, '$__id__', $String___id__$1 = function $$__id__() {\n      var self = this;\n\n      return self.toString();\n    }, $String___id__$1.$$arity = 0);\n    Opal.alias(self, \"object_id\", \"__id__\");\n    Opal.defs(self, '$try_convert', $String_try_convert$2 = function $$try_convert(what) {\n      var self = this;\n\n      return $$($nesting, 'Opal')['$coerce_to?'](what, $$($nesting, 'String'), \"to_str\")\n    }, $String_try_convert$2.$$arity = 1);\n    Opal.defs(self, '$new', $String_new$3 = function(str) {\n      var self = this;\n\n      \n      \n      if (str == null) {\n        str = \"\";\n      };\n      str = $$($nesting, 'Opal').$coerce_to(str, $$($nesting, 'String'), \"to_str\");\n      return new self.$$constructor(str);;\n    }, $String_new$3.$$arity = -1);\n    \n    Opal.def(self, '$initialize', $String_initialize$4 = function $$initialize(str) {\n      var self = this;\n\n      \n      ;\n      \n      if (str === undefined) {\n        return self;\n      }\n    ;\n      return self.$raise($$($nesting, 'NotImplementedError'), \"Mutable strings are not supported in Opal.\");\n    }, $String_initialize$4.$$arity = -1);\n    \n    Opal.def(self, '$%', $String_$percent$5 = function(data) {\n      var self = this;\n\n      if ($truthy($$($nesting, 'Array')['$==='](data))) {\n        return $send(self, 'format', [self].concat(Opal.to_a(data)))\n      } else {\n        return self.$format(self, data)\n      }\n    }, $String_$percent$5.$$arity = 1);\n    \n    Opal.def(self, '$*', $String_$$6 = function(count) {\n      var self = this;\n\n      \n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n\n      if (count < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative argument\")\n      }\n\n      if (count === 0) {\n        return self.$$cast('');\n      }\n\n      var result = '',\n          string = self.toString();\n\n      // All credit for the bit-twiddling magic code below goes to Mozilla\n      // polyfill implementation of String.prototype.repeat() posted here:\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n      if (string.length * count >= 1 << 28) {\n        self.$raise($$($nesting, 'RangeError'), \"multiply count must not overflow maximum string size\")\n      }\n\n      for (;;) {\n        if ((count & 1) === 1) {\n          result += string;\n        }\n        count >>>= 1;\n        if (count === 0) {\n          break;\n        }\n        string += string;\n      }\n\n      return self.$$cast(result);\n    \n    }, $String_$$6.$$arity = 1);\n    \n    Opal.def(self, '$+', $String_$plus$7 = function(other) {\n      var self = this;\n\n      \n      other = $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'String'), \"to_str\");\n      return self + other.$to_s();\n    }, $String_$plus$7.$$arity = 1);\n    \n    Opal.def(self, '$<=>', $String_$lt_eq_gt$8 = function(other) {\n      var self = this;\n\n      if ($truthy(other['$respond_to?'](\"to_str\"))) {\n        \n        other = other.$to_str().$to_s();\n        return self > other ? 1 : (self < other ? -1 : 0);;\n      } else {\n        \n        var cmp = other['$<=>'](self);\n\n        if (cmp === nil) {\n          return nil;\n        }\n        else {\n          return cmp > 0 ? -1 : (cmp < 0 ? 1 : 0);\n        }\n      \n      }\n    }, $String_$lt_eq_gt$8.$$arity = 1);\n    \n    Opal.def(self, '$==', $String_$eq_eq$9 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_string) {\n        return self.toString() === other.toString();\n      }\n      if ($$($nesting, 'Opal')['$respond_to?'](other, \"to_str\")) {\n        return other['$=='](self);\n      }\n      return false;\n    \n    }, $String_$eq_eq$9.$$arity = 1);\n    Opal.alias(self, \"eql?\", \"==\");\n    Opal.alias(self, \"===\", \"==\");\n    \n    Opal.def(self, '$=~', $String_$eq_tilde$10 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_string) {\n        self.$raise($$($nesting, 'TypeError'), \"type mismatch: String given\");\n      }\n\n      return other['$=~'](self);\n    \n    }, $String_$eq_tilde$10.$$arity = 1);\n    \n    Opal.def(self, '$[]', $String_$$$11 = function(index, length) {\n      var self = this;\n\n      \n      ;\n      \n      var size = self.length, exclude;\n\n      if (index.$$is_range) {\n        exclude = index.excl;\n        length  = $$($nesting, 'Opal').$coerce_to(index.end, $$($nesting, 'Integer'), \"to_int\");\n        index   = $$($nesting, 'Opal').$coerce_to(index.begin, $$($nesting, 'Integer'), \"to_int\");\n\n        if (Math.abs(index) > size) {\n          return nil;\n        }\n\n        if (index < 0) {\n          index += size;\n        }\n\n        if (length < 0) {\n          length += size;\n        }\n\n        if (!exclude) {\n          length += 1;\n        }\n\n        length = length - index;\n\n        if (length < 0) {\n          length = 0;\n        }\n\n        return self.$$cast(self.substr(index, length));\n      }\n\n\n      if (index.$$is_string) {\n        if (length != null) {\n          self.$raise($$($nesting, 'TypeError'))\n        }\n        return self.indexOf(index) !== -1 ? self.$$cast(index) : nil;\n      }\n\n\n      if (index.$$is_regexp) {\n        var match = self.match(index);\n\n        if (match === null) {\n          ($gvars[\"~\"] = nil)\n          return nil;\n        }\n\n        ($gvars[\"~\"] = $$($nesting, 'MatchData').$new(index, match))\n\n        if (length == null) {\n          return self.$$cast(match[0]);\n        }\n\n        length = $$($nesting, 'Opal').$coerce_to(length, $$($nesting, 'Integer'), \"to_int\");\n\n        if (length < 0 && -length < match.length) {\n          return self.$$cast(match[length += match.length]);\n        }\n\n        if (length >= 0 && length < match.length) {\n          return self.$$cast(match[length]);\n        }\n\n        return nil;\n      }\n\n\n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n\n      if (index < 0) {\n        index += size;\n      }\n\n      if (length == null) {\n        if (index >= size || index < 0) {\n          return nil;\n        }\n        return self.$$cast(self.substr(index, 1));\n      }\n\n      length = $$($nesting, 'Opal').$coerce_to(length, $$($nesting, 'Integer'), \"to_int\");\n\n      if (length < 0) {\n        return nil;\n      }\n\n      if (index > size || index < 0) {\n        return nil;\n      }\n\n      return self.$$cast(self.substr(index, length));\n    ;\n    }, $String_$$$11.$$arity = -2);\n    Opal.alias(self, \"byteslice\", \"[]\");\n    \n    Opal.def(self, '$b', $String_b$12 = function $$b() {\n      var self = this;\n\n      return self.$force_encoding(\"binary\")\n    }, $String_b$12.$$arity = 0);\n    \n    Opal.def(self, '$capitalize', $String_capitalize$13 = function $$capitalize() {\n      var self = this;\n\n      return self.$$cast(self.charAt(0).toUpperCase() + self.substr(1).toLowerCase());\n    }, $String_capitalize$13.$$arity = 0);\n    \n    Opal.def(self, '$casecmp', $String_casecmp$14 = function $$casecmp(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$respond_to?'](\"to_str\"))) {\n      } else {\n        return nil\n      };\n      other = $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'String'), \"to_str\").$to_s();\n      \n      var ascii_only = /^[\\x00-\\x7F]*$/;\n      if (ascii_only.test(self) && ascii_only.test(other)) {\n        self = self.toLowerCase();\n        other = other.toLowerCase();\n      }\n    ;\n      return self['$<=>'](other);\n    }, $String_casecmp$14.$$arity = 1);\n    \n    Opal.def(self, '$casecmp?', $String_casecmp$ques$15 = function(other) {\n      var self = this;\n\n      \n      var cmp = self.$casecmp(other);\n      if (cmp === nil) {\n        return nil;\n      } else {\n        return cmp === 0;\n      }\n    \n    }, $String_casecmp$ques$15.$$arity = 1);\n    \n    Opal.def(self, '$center', $String_center$16 = function $$center(width, padstr) {\n      var self = this;\n\n      \n      \n      if (padstr == null) {\n        padstr = \" \";\n      };\n      width = $$($nesting, 'Opal').$coerce_to(width, $$($nesting, 'Integer'), \"to_int\");\n      padstr = $$($nesting, 'Opal').$coerce_to(padstr, $$($nesting, 'String'), \"to_str\").$to_s();\n      if ($truthy(padstr['$empty?']())) {\n        self.$raise($$($nesting, 'ArgumentError'), \"zero width padding\")};\n      if ($truthy(width <= self.length)) {\n        return self};\n      \n      var ljustified = self.$ljust($rb_divide($rb_plus(width, self.length), 2).$ceil(), padstr),\n          rjustified = self.$rjust($rb_divide($rb_plus(width, self.length), 2).$floor(), padstr);\n\n      return self.$$cast(rjustified + ljustified.slice(self.length));\n    ;\n    }, $String_center$16.$$arity = -2);\n    \n    Opal.def(self, '$chars', $String_chars$17 = function $$chars() {\n      var $iter = $String_chars$17.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_chars$17.$$p = null;\n      \n      \n      if ($iter) $String_chars$17.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return self.$each_char().$to_a()\n      };\n      return $send(self, 'each_char', [], block.$to_proc());\n    }, $String_chars$17.$$arity = 0);\n    \n    Opal.def(self, '$chomp', $String_chomp$18 = function $$chomp(separator) {\n      var self = this;\n      if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n      \n      \n      if (separator == null) {\n        separator = $gvars[\"/\"];\n      };\n      if ($truthy(separator === nil || self.length === 0)) {\n        return self};\n      separator = $$($nesting, 'Opal')['$coerce_to!'](separator, $$($nesting, 'String'), \"to_str\").$to_s();\n      \n      var result;\n\n      if (separator === \"\\n\") {\n        result = self.replace(/\\r?\\n?$/, '');\n      }\n      else if (separator === \"\") {\n        result = self.replace(/(\\r?\\n)+$/, '');\n      }\n      else if (self.length >= separator.length) {\n        var tail = self.substr(self.length - separator.length, separator.length);\n\n        if (tail === separator) {\n          result = self.substr(0, self.length - separator.length);\n        }\n      }\n\n      if (result != null) {\n        return self.$$cast(result);\n      }\n    ;\n      return self;\n    }, $String_chomp$18.$$arity = -1);\n    \n    Opal.def(self, '$chop', $String_chop$19 = function $$chop() {\n      var self = this;\n\n      \n      var length = self.length, result;\n\n      if (length <= 1) {\n        result = \"\";\n      } else if (self.charAt(length - 1) === \"\\n\" && self.charAt(length - 2) === \"\\r\") {\n        result = self.substr(0, length - 2);\n      } else {\n        result = self.substr(0, length - 1);\n      }\n\n      return self.$$cast(result);\n    \n    }, $String_chop$19.$$arity = 0);\n    \n    Opal.def(self, '$chr', $String_chr$20 = function $$chr() {\n      var self = this;\n\n      return self.charAt(0);\n    }, $String_chr$20.$$arity = 0);\n    \n    Opal.def(self, '$clone', $String_clone$21 = function $$clone() {\n      var self = this, copy = nil;\n\n      \n      copy = self.slice();\n      copy.$copy_singleton_methods(self);\n      copy.$initialize_clone(self);\n      return copy;\n    }, $String_clone$21.$$arity = 0);\n    \n    Opal.def(self, '$dup', $String_dup$22 = function $$dup() {\n      var self = this, copy = nil;\n\n      \n      copy = self.slice();\n      copy.$initialize_dup(self);\n      return copy;\n    }, $String_dup$22.$$arity = 0);\n    \n    Opal.def(self, '$count', $String_count$23 = function $$count($a) {\n      var $post_args, sets, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      sets = $post_args;;\n      \n      if (sets.length === 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"ArgumentError: wrong number of arguments (0 for 1+)\")\n      }\n      var char_class = char_class_from_char_sets(sets);\n      if (char_class === null) {\n        return 0;\n      }\n      return self.length - self.replace(new RegExp(char_class, 'g'), '').length;\n    ;\n    }, $String_count$23.$$arity = -1);\n    \n    Opal.def(self, '$delete', $String_delete$24 = function($a) {\n      var $post_args, sets, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      sets = $post_args;;\n      \n      if (sets.length === 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"ArgumentError: wrong number of arguments (0 for 1+)\")\n      }\n      var char_class = char_class_from_char_sets(sets);\n      if (char_class === null) {\n        return self;\n      }\n      return self.$$cast(self.replace(new RegExp(char_class, 'g'), ''));\n    ;\n    }, $String_delete$24.$$arity = -1);\n    \n    Opal.def(self, '$delete_prefix', $String_delete_prefix$25 = function $$delete_prefix(prefix) {\n      var self = this;\n\n      \n      if (!prefix.$$is_string) {\n        (prefix = $$($nesting, 'Opal').$coerce_to(prefix, $$($nesting, 'String'), \"to_str\"))\n      }\n\n      if (self.slice(0, prefix.length) === prefix) {\n        return self.$$cast(self.slice(prefix.length));\n      } else {\n        return self;\n      }\n    \n    }, $String_delete_prefix$25.$$arity = 1);\n    \n    Opal.def(self, '$delete_suffix', $String_delete_suffix$26 = function $$delete_suffix(suffix) {\n      var self = this;\n\n      \n      if (!suffix.$$is_string) {\n        (suffix = $$($nesting, 'Opal').$coerce_to(suffix, $$($nesting, 'String'), \"to_str\"))\n      }\n\n      if (self.slice(self.length - suffix.length) === suffix) {\n        return self.$$cast(self.slice(0, self.length - suffix.length));\n      } else {\n        return self;\n      }\n    \n    }, $String_delete_suffix$26.$$arity = 1);\n    \n    Opal.def(self, '$downcase', $String_downcase$27 = function $$downcase() {\n      var self = this;\n\n      return self.$$cast(self.toLowerCase());\n    }, $String_downcase$27.$$arity = 0);\n    \n    Opal.def(self, '$each_char', $String_each_char$28 = function $$each_char() {\n      var $iter = $String_each_char$28.$$p, block = $iter || nil, $$29, self = this;\n\n      if ($iter) $String_each_char$28.$$p = null;\n      \n      \n      if ($iter) $String_each_char$28.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_char\"], ($$29 = function(){var self = $$29.$$s || this;\n\n        return self.$size()}, $$29.$$s = self, $$29.$$arity = 0, $$29))\n      };\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        Opal.yield1(block, self.charAt(i));\n      }\n    ;\n      return self;\n    }, $String_each_char$28.$$arity = 0);\n    \n    Opal.def(self, '$each_line', $String_each_line$30 = function $$each_line(separator) {\n      var $iter = $String_each_line$30.$$p, block = $iter || nil, self = this;\n      if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n      if ($iter) $String_each_line$30.$$p = null;\n      \n      \n      if ($iter) $String_each_line$30.$$p = null;;\n      \n      if (separator == null) {\n        separator = $gvars[\"/\"];\n      };\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"each_line\", separator)\n      };\n      \n      if (separator === nil) {\n        Opal.yield1(block, self);\n\n        return self;\n      }\n\n      separator = $$($nesting, 'Opal').$coerce_to(separator, $$($nesting, 'String'), \"to_str\")\n\n      var a, i, n, length, chomped, trailing, splitted;\n\n      if (separator.length === 0) {\n        for (a = self.split(/(\\n{2,})/), i = 0, n = a.length; i < n; i += 2) {\n          if (a[i] || a[i + 1]) {\n            var value = (a[i] || \"\") + (a[i + 1] || \"\");\n            Opal.yield1(block, self.$$cast(value));\n          }\n        }\n\n        return self;\n      }\n\n      chomped  = self.$chomp(separator);\n      trailing = self.length != chomped.length;\n      splitted = chomped.split(separator);\n\n      for (i = 0, length = splitted.length; i < length; i++) {\n        if (i < length - 1 || trailing) {\n          Opal.yield1(block, self.$$cast(splitted[i] + separator));\n        }\n        else {\n          Opal.yield1(block, self.$$cast(splitted[i]));\n        }\n      }\n    ;\n      return self;\n    }, $String_each_line$30.$$arity = -1);\n    \n    Opal.def(self, '$empty?', $String_empty$ques$31 = function() {\n      var self = this;\n\n      return self.length === 0;\n    }, $String_empty$ques$31.$$arity = 0);\n    \n    Opal.def(self, '$end_with?', $String_end_with$ques$32 = function($a) {\n      var $post_args, suffixes, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      suffixes = $post_args;;\n      \n      for (var i = 0, length = suffixes.length; i < length; i++) {\n        var suffix = $$($nesting, 'Opal').$coerce_to(suffixes[i], $$($nesting, 'String'), \"to_str\").$to_s();\n\n        if (self.length >= suffix.length &&\n            self.substr(self.length - suffix.length, suffix.length) == suffix) {\n          return true;\n        }\n      }\n    ;\n      return false;\n    }, $String_end_with$ques$32.$$arity = -1);\n    Opal.alias(self, \"equal?\", \"===\");\n    \n    Opal.def(self, '$gsub', $String_gsub$33 = function $$gsub(pattern, replacement) {\n      var $iter = $String_gsub$33.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_gsub$33.$$p = null;\n      \n      \n      if ($iter) $String_gsub$33.$$p = null;;\n      ;\n      \n      if (replacement === undefined && block === nil) {\n        return self.$enum_for(\"gsub\", pattern);\n      }\n\n      var result = '', match_data = nil, index = 0, match, _replacement;\n\n      if (pattern.$$is_regexp) {\n        pattern = Opal.global_multiline_regexp(pattern);\n      } else {\n        pattern = $$($nesting, 'Opal').$coerce_to(pattern, $$($nesting, 'String'), \"to_str\");\n        pattern = new RegExp(pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gm');\n      }\n\n      var lastIndex;\n      while (true) {\n        match = pattern.exec(self);\n\n        if (match === null) {\n          ($gvars[\"~\"] = nil)\n          result += self.slice(index);\n          break;\n        }\n\n        match_data = $$($nesting, 'MatchData').$new(pattern, match);\n\n        if (replacement === undefined) {\n          lastIndex = pattern.lastIndex;\n          _replacement = block(match[0]);\n          pattern.lastIndex = lastIndex; // save and restore lastIndex\n        }\n        else if (replacement.$$is_hash) {\n          _replacement = (replacement)['$[]'](match[0]).$to_s();\n        }\n        else {\n          if (!replacement.$$is_string) {\n            replacement = $$($nesting, 'Opal').$coerce_to(replacement, $$($nesting, 'String'), \"to_str\");\n          }\n          _replacement = replacement.replace(/([\\\\]+)([0-9+&`'])/g, function (original, slashes, command) {\n            if (slashes.length % 2 === 0) {\n              return original;\n            }\n            switch (command) {\n            case \"+\":\n              for (var i = match.length - 1; i > 0; i--) {\n                if (match[i] !== undefined) {\n                  return slashes.slice(1) + match[i];\n                }\n              }\n              return '';\n            case \"&\": return slashes.slice(1) + match[0];\n            case \"`\": return slashes.slice(1) + self.slice(0, match.index);\n            case \"'\": return slashes.slice(1) + self.slice(match.index + match[0].length);\n            default:  return slashes.slice(1) + (match[command] || '');\n            }\n          }).replace(/\\\\\\\\/g, '\\\\');\n        }\n\n        if (pattern.lastIndex === match.index) {\n          result += (_replacement + self.slice(index, match.index + 1))\n          pattern.lastIndex += 1;\n        }\n        else {\n          result += (self.slice(index, match.index) + _replacement)\n        }\n        index = pattern.lastIndex;\n      }\n\n      ($gvars[\"~\"] = match_data)\n      return self.$$cast(result);\n    ;\n    }, $String_gsub$33.$$arity = -2);\n    \n    Opal.def(self, '$hash', $String_hash$34 = function $$hash() {\n      var self = this;\n\n      return self.toString();\n    }, $String_hash$34.$$arity = 0);\n    \n    Opal.def(self, '$hex', $String_hex$35 = function $$hex() {\n      var self = this;\n\n      return self.$to_i(16)\n    }, $String_hex$35.$$arity = 0);\n    \n    Opal.def(self, '$include?', $String_include$ques$36 = function(other) {\n      var self = this;\n\n      \n      if (!other.$$is_string) {\n        (other = $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'String'), \"to_str\"))\n      }\n      return self.indexOf(other) !== -1;\n    \n    }, $String_include$ques$36.$$arity = 1);\n    \n    Opal.def(self, '$index', $String_index$37 = function $$index(search, offset) {\n      var self = this;\n\n      \n      ;\n      \n      var index,\n          match,\n          regex;\n\n      if (offset === undefined) {\n        offset = 0;\n      } else {\n        offset = $$($nesting, 'Opal').$coerce_to(offset, $$($nesting, 'Integer'), \"to_int\");\n        if (offset < 0) {\n          offset += self.length;\n          if (offset < 0) {\n            return nil;\n          }\n        }\n      }\n\n      if (search.$$is_regexp) {\n        regex = Opal.global_multiline_regexp(search);\n        while (true) {\n          match = regex.exec(self);\n          if (match === null) {\n            ($gvars[\"~\"] = nil);\n            index = -1;\n            break;\n          }\n          if (match.index >= offset) {\n            ($gvars[\"~\"] = $$($nesting, 'MatchData').$new(regex, match))\n            index = match.index;\n            break;\n          }\n          regex.lastIndex = match.index + 1;\n        }\n      } else {\n        search = $$($nesting, 'Opal').$coerce_to(search, $$($nesting, 'String'), \"to_str\");\n        if (search.length === 0 && offset > self.length) {\n          index = -1;\n        } else {\n          index = self.indexOf(search, offset);\n        }\n      }\n\n      return index === -1 ? nil : index;\n    ;\n    }, $String_index$37.$$arity = -2);\n    \n    Opal.def(self, '$inspect', $String_inspect$38 = function $$inspect() {\n      var self = this;\n\n      \n      var escapable = /[\\\\\\\"\\x00-\\x1f\\u007F-\\u009F\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n          meta = {\n            '\\u0007': '\\\\a',\n            '\\u001b': '\\\\e',\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\\v': '\\\\v',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n          },\n          escaped = self.replace(escapable, function (chr) {\n            return meta[chr] || '\\\\u' + ('0000' + chr.charCodeAt(0).toString(16).toUpperCase()).slice(-4);\n          });\n      return '\"' + escaped.replace(/\\#[\\$\\@\\{]/g, '\\\\$&') + '\"';\n    \n    }, $String_inspect$38.$$arity = 0);\n    \n    Opal.def(self, '$intern', $String_intern$39 = function $$intern() {\n      var self = this;\n\n      return self.toString();\n    }, $String_intern$39.$$arity = 0);\n    \n    Opal.def(self, '$lines', $String_lines$40 = function $$lines(separator) {\n      var $iter = $String_lines$40.$$p, block = $iter || nil, self = this, e = nil;\n      if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n      if ($iter) $String_lines$40.$$p = null;\n      \n      \n      if ($iter) $String_lines$40.$$p = null;;\n      \n      if (separator == null) {\n        separator = $gvars[\"/\"];\n      };\n      e = $send(self, 'each_line', [separator], block.$to_proc());\n      if ($truthy(block)) {\n        return self\n      } else {\n        return e.$to_a()\n      };\n    }, $String_lines$40.$$arity = -1);\n    \n    Opal.def(self, '$length', $String_length$41 = function $$length() {\n      var self = this;\n\n      return self.length;\n    }, $String_length$41.$$arity = 0);\n    \n    Opal.def(self, '$ljust', $String_ljust$42 = function $$ljust(width, padstr) {\n      var self = this;\n\n      \n      \n      if (padstr == null) {\n        padstr = \" \";\n      };\n      width = $$($nesting, 'Opal').$coerce_to(width, $$($nesting, 'Integer'), \"to_int\");\n      padstr = $$($nesting, 'Opal').$coerce_to(padstr, $$($nesting, 'String'), \"to_str\").$to_s();\n      if ($truthy(padstr['$empty?']())) {\n        self.$raise($$($nesting, 'ArgumentError'), \"zero width padding\")};\n      if ($truthy(width <= self.length)) {\n        return self};\n      \n      var index  = -1,\n          result = \"\";\n\n      width -= self.length;\n\n      while (++index < width) {\n        result += padstr;\n      }\n\n      return self.$$cast(self + result.slice(0, width));\n    ;\n    }, $String_ljust$42.$$arity = -2);\n    \n    Opal.def(self, '$lstrip', $String_lstrip$43 = function $$lstrip() {\n      var self = this;\n\n      return self.replace(/^\\s*/, '');\n    }, $String_lstrip$43.$$arity = 0);\n    \n    Opal.def(self, '$ascii_only?', $String_ascii_only$ques$44 = function() {\n      var self = this;\n\n      return self.match(/[ -~\\n]*/)[0] === self;\n    }, $String_ascii_only$ques$44.$$arity = 0);\n    \n    Opal.def(self, '$match', $String_match$45 = function $$match(pattern, pos) {\n      var $iter = $String_match$45.$$p, block = $iter || nil, $a, self = this;\n\n      if ($iter) $String_match$45.$$p = null;\n      \n      \n      if ($iter) $String_match$45.$$p = null;;\n      ;\n      if ($truthy(($truthy($a = $$($nesting, 'String')['$==='](pattern)) ? $a : pattern['$respond_to?'](\"to_str\")))) {\n        pattern = $$($nesting, 'Regexp').$new(pattern.$to_str())};\n      if ($truthy($$($nesting, 'Regexp')['$==='](pattern))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + (pattern.$class()) + \" (expected Regexp)\")\n      };\n      return $send(pattern, 'match', [self, pos], block.$to_proc());\n    }, $String_match$45.$$arity = -2);\n    \n    Opal.def(self, '$match?', $String_match$ques$46 = function(pattern, pos) {\n      var $a, self = this;\n\n      \n      ;\n      if ($truthy(($truthy($a = $$($nesting, 'String')['$==='](pattern)) ? $a : pattern['$respond_to?'](\"to_str\")))) {\n        pattern = $$($nesting, 'Regexp').$new(pattern.$to_str())};\n      if ($truthy($$($nesting, 'Regexp')['$==='](pattern))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + (pattern.$class()) + \" (expected Regexp)\")\n      };\n      return pattern['$match?'](self, pos);\n    }, $String_match$ques$46.$$arity = -2);\n    \n    Opal.def(self, '$next', $String_next$47 = function $$next() {\n      var self = this;\n\n      \n      var i = self.length;\n      if (i === 0) {\n        return self.$$cast('');\n      }\n      var result = self;\n      var first_alphanum_char_index = self.search(/[a-zA-Z0-9]/);\n      var carry = false;\n      var code;\n      while (i--) {\n        code = self.charCodeAt(i);\n        if ((code >= 48 && code <= 57) ||\n          (code >= 65 && code <= 90) ||\n          (code >= 97 && code <= 122)) {\n          switch (code) {\n          case 57:\n            carry = true;\n            code = 48;\n            break;\n          case 90:\n            carry = true;\n            code = 65;\n            break;\n          case 122:\n            carry = true;\n            code = 97;\n            break;\n          default:\n            carry = false;\n            code += 1;\n          }\n        } else {\n          if (first_alphanum_char_index === -1) {\n            if (code === 255) {\n              carry = true;\n              code = 0;\n            } else {\n              carry = false;\n              code += 1;\n            }\n          } else {\n            carry = true;\n          }\n        }\n        result = result.slice(0, i) + String.fromCharCode(code) + result.slice(i + 1);\n        if (carry && (i === 0 || i === first_alphanum_char_index)) {\n          switch (code) {\n          case 65:\n            break;\n          case 97:\n            break;\n          default:\n            code += 1;\n          }\n          if (i === 0) {\n            result = String.fromCharCode(code) + result;\n          } else {\n            result = result.slice(0, i) + String.fromCharCode(code) + result.slice(i);\n          }\n          carry = false;\n        }\n        if (!carry) {\n          break;\n        }\n      }\n      return self.$$cast(result);\n    \n    }, $String_next$47.$$arity = 0);\n    \n    Opal.def(self, '$oct', $String_oct$48 = function $$oct() {\n      var self = this;\n\n      \n      var result,\n          string = self,\n          radix = 8;\n\n      if (/^\\s*_/.test(string)) {\n        return 0;\n      }\n\n      string = string.replace(/^(\\s*[+-]?)(0[bodx]?)(.+)$/i, function (original, head, flag, tail) {\n        switch (tail.charAt(0)) {\n        case '+':\n        case '-':\n          return original;\n        case '0':\n          if (tail.charAt(1) === 'x' && flag === '0x') {\n            return original;\n          }\n        }\n        switch (flag) {\n        case '0b':\n          radix = 2;\n          break;\n        case '0':\n        case '0o':\n          radix = 8;\n          break;\n        case '0d':\n          radix = 10;\n          break;\n        case '0x':\n          radix = 16;\n          break;\n        }\n        return head + tail;\n      });\n\n      result = parseInt(string.replace(/_(?!_)/g, ''), radix);\n      return isNaN(result) ? 0 : result;\n    \n    }, $String_oct$48.$$arity = 0);\n    \n    Opal.def(self, '$ord', $String_ord$49 = function $$ord() {\n      var self = this;\n\n      return self.charCodeAt(0);\n    }, $String_ord$49.$$arity = 0);\n    \n    Opal.def(self, '$partition', $String_partition$50 = function $$partition(sep) {\n      var self = this;\n\n      \n      var i, m;\n\n      if (sep.$$is_regexp) {\n        m = sep.exec(self);\n        if (m === null) {\n          i = -1;\n        } else {\n          $$($nesting, 'MatchData').$new(sep, m);\n          sep = m[0];\n          i = m.index;\n        }\n      } else {\n        sep = $$($nesting, 'Opal').$coerce_to(sep, $$($nesting, 'String'), \"to_str\");\n        i = self.indexOf(sep);\n      }\n\n      if (i === -1) {\n        return [self, '', ''];\n      }\n\n      return [\n        self.slice(0, i),\n        self.slice(i, i + sep.length),\n        self.slice(i + sep.length)\n      ];\n    \n    }, $String_partition$50.$$arity = 1);\n    \n    Opal.def(self, '$reverse', $String_reverse$51 = function $$reverse() {\n      var self = this;\n\n      return self.split('').reverse().join('');\n    }, $String_reverse$51.$$arity = 0);\n    \n    Opal.def(self, '$rindex', $String_rindex$52 = function $$rindex(search, offset) {\n      var self = this;\n\n      \n      ;\n      \n      var i, m, r, _m;\n\n      if (offset === undefined) {\n        offset = self.length;\n      } else {\n        offset = $$($nesting, 'Opal').$coerce_to(offset, $$($nesting, 'Integer'), \"to_int\");\n        if (offset < 0) {\n          offset += self.length;\n          if (offset < 0) {\n            return nil;\n          }\n        }\n      }\n\n      if (search.$$is_regexp) {\n        m = null;\n        r = Opal.global_multiline_regexp(search);\n        while (true) {\n          _m = r.exec(self);\n          if (_m === null || _m.index > offset) {\n            break;\n          }\n          m = _m;\n          r.lastIndex = m.index + 1;\n        }\n        if (m === null) {\n          ($gvars[\"~\"] = nil)\n          i = -1;\n        } else {\n          $$($nesting, 'MatchData').$new(r, m);\n          i = m.index;\n        }\n      } else {\n        search = $$($nesting, 'Opal').$coerce_to(search, $$($nesting, 'String'), \"to_str\");\n        i = self.lastIndexOf(search, offset);\n      }\n\n      return i === -1 ? nil : i;\n    ;\n    }, $String_rindex$52.$$arity = -2);\n    \n    Opal.def(self, '$rjust', $String_rjust$53 = function $$rjust(width, padstr) {\n      var self = this;\n\n      \n      \n      if (padstr == null) {\n        padstr = \" \";\n      };\n      width = $$($nesting, 'Opal').$coerce_to(width, $$($nesting, 'Integer'), \"to_int\");\n      padstr = $$($nesting, 'Opal').$coerce_to(padstr, $$($nesting, 'String'), \"to_str\").$to_s();\n      if ($truthy(padstr['$empty?']())) {\n        self.$raise($$($nesting, 'ArgumentError'), \"zero width padding\")};\n      if ($truthy(width <= self.length)) {\n        return self};\n      \n      var chars     = Math.floor(width - self.length),\n          patterns  = Math.floor(chars / padstr.length),\n          result    = Array(patterns + 1).join(padstr),\n          remaining = chars - result.length;\n\n      return self.$$cast(result + padstr.slice(0, remaining) + self);\n    ;\n    }, $String_rjust$53.$$arity = -2);\n    \n    Opal.def(self, '$rpartition', $String_rpartition$54 = function $$rpartition(sep) {\n      var self = this;\n\n      \n      var i, m, r, _m;\n\n      if (sep.$$is_regexp) {\n        m = null;\n        r = Opal.global_multiline_regexp(sep);\n\n        while (true) {\n          _m = r.exec(self);\n          if (_m === null) {\n            break;\n          }\n          m = _m;\n          r.lastIndex = m.index + 1;\n        }\n\n        if (m === null) {\n          i = -1;\n        } else {\n          $$($nesting, 'MatchData').$new(r, m);\n          sep = m[0];\n          i = m.index;\n        }\n\n      } else {\n        sep = $$($nesting, 'Opal').$coerce_to(sep, $$($nesting, 'String'), \"to_str\");\n        i = self.lastIndexOf(sep);\n      }\n\n      if (i === -1) {\n        return ['', '', self];\n      }\n\n      return [\n        self.slice(0, i),\n        self.slice(i, i + sep.length),\n        self.slice(i + sep.length)\n      ];\n    \n    }, $String_rpartition$54.$$arity = 1);\n    \n    Opal.def(self, '$rstrip', $String_rstrip$55 = function $$rstrip() {\n      var self = this;\n\n      return self.replace(/[\\s\\u0000]*$/, '');\n    }, $String_rstrip$55.$$arity = 0);\n    \n    Opal.def(self, '$scan', $String_scan$56 = function $$scan(pattern) {\n      var $iter = $String_scan$56.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_scan$56.$$p = null;\n      \n      \n      if ($iter) $String_scan$56.$$p = null;;\n      \n      var result = [],\n          match_data = nil,\n          match;\n\n      if (pattern.$$is_regexp) {\n        pattern = Opal.global_multiline_regexp(pattern);\n      } else {\n        pattern = $$($nesting, 'Opal').$coerce_to(pattern, $$($nesting, 'String'), \"to_str\");\n        pattern = new RegExp(pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gm');\n      }\n\n      while ((match = pattern.exec(self)) != null) {\n        match_data = $$($nesting, 'MatchData').$new(pattern, match);\n        if (block === nil) {\n          match.length == 1 ? result.push(match[0]) : result.push((match_data).$captures());\n        } else {\n          match.length == 1 ? block(match[0]) : block.call(self, (match_data).$captures());\n        }\n        if (pattern.lastIndex === match.index) {\n          pattern.lastIndex += 1;\n        }\n      }\n\n      ($gvars[\"~\"] = match_data)\n\n      return (block !== nil ? self : result);\n    ;\n    }, $String_scan$56.$$arity = 1);\n    Opal.alias(self, \"size\", \"length\");\n    Opal.alias(self, \"slice\", \"[]\");\n    \n    Opal.def(self, '$split', $String_split$57 = function $$split(pattern, limit) {\n      var $a, self = this;\n      if ($gvars[\";\"] == null) $gvars[\";\"] = nil;\n\n      \n      ;\n      ;\n      \n      if (self.length === 0) {\n        return [];\n      }\n\n      if (limit === undefined) {\n        limit = 0;\n      } else {\n        limit = $$($nesting, 'Opal')['$coerce_to!'](limit, $$($nesting, 'Integer'), \"to_int\");\n        if (limit === 1) {\n          return [self];\n        }\n      }\n\n      if (pattern === undefined || pattern === nil) {\n        pattern = ($truthy($a = $gvars[\";\"]) ? $a : \" \");\n      }\n\n      var result = [],\n          string = self.toString(),\n          index = 0,\n          match,\n          i, ii;\n\n      if (pattern.$$is_regexp) {\n        pattern = Opal.global_multiline_regexp(pattern);\n      } else {\n        pattern = $$($nesting, 'Opal').$coerce_to(pattern, $$($nesting, 'String'), \"to_str\").$to_s();\n        if (pattern === ' ') {\n          pattern = /\\s+/gm;\n          string = string.replace(/^\\s+/, '');\n        } else {\n          pattern = new RegExp(pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gm');\n        }\n      }\n\n      result = string.split(pattern);\n\n      if (result.length === 1 && result[0] === string) {\n        return [self.$$cast(result[0])];\n      }\n\n      while ((i = result.indexOf(undefined)) !== -1) {\n        result.splice(i, 1);\n      }\n\n      function castResult() {\n        for (i = 0; i < result.length; i++) {\n          result[i] = self.$$cast(result[i]);\n        }\n      }\n\n      if (limit === 0) {\n        while (result[result.length - 1] === '') {\n          result.length -= 1;\n        }\n        castResult();\n        return result;\n      }\n\n      match = pattern.exec(string);\n\n      if (limit < 0) {\n        if (match !== null && match[0] === '' && pattern.source.indexOf('(?=') === -1) {\n          for (i = 0, ii = match.length; i < ii; i++) {\n            result.push('');\n          }\n        }\n        castResult();\n        return result;\n      }\n\n      if (match !== null && match[0] === '') {\n        result.splice(limit - 1, result.length - 1, result.slice(limit - 1).join(''));\n        castResult();\n        return result;\n      }\n\n      if (limit >= result.length) {\n        castResult();\n        return result;\n      }\n\n      i = 0;\n      while (match !== null) {\n        i++;\n        index = pattern.lastIndex;\n        if (i + 1 === limit) {\n          break;\n        }\n        match = pattern.exec(string);\n      }\n      result.splice(limit - 1, result.length - 1, string.slice(index));\n      castResult();\n      return result;\n    ;\n    }, $String_split$57.$$arity = -1);\n    \n    Opal.def(self, '$squeeze', $String_squeeze$58 = function $$squeeze($a) {\n      var $post_args, sets, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      sets = $post_args;;\n      \n      if (sets.length === 0) {\n        return self.$$cast(self.replace(/(.)\\1+/g, '$1'));\n      }\n      var char_class = char_class_from_char_sets(sets);\n      if (char_class === null) {\n        return self;\n      }\n      return self.$$cast(self.replace(new RegExp('(' + char_class + ')\\\\1+', 'g'), '$1'));\n    ;\n    }, $String_squeeze$58.$$arity = -1);\n    \n    Opal.def(self, '$start_with?', $String_start_with$ques$59 = function($a) {\n      var $post_args, prefixes, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      prefixes = $post_args;;\n      \n      for (var i = 0, length = prefixes.length; i < length; i++) {\n        var prefix = $$($nesting, 'Opal').$coerce_to(prefixes[i], $$($nesting, 'String'), \"to_str\").$to_s();\n\n        if (self.indexOf(prefix) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    ;\n    }, $String_start_with$ques$59.$$arity = -1);\n    \n    Opal.def(self, '$strip', $String_strip$60 = function $$strip() {\n      var self = this;\n\n      return self.replace(/^\\s*/, '').replace(/[\\s\\u0000]*$/, '');\n    }, $String_strip$60.$$arity = 0);\n    \n    Opal.def(self, '$sub', $String_sub$61 = function $$sub(pattern, replacement) {\n      var $iter = $String_sub$61.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_sub$61.$$p = null;\n      \n      \n      if ($iter) $String_sub$61.$$p = null;;\n      ;\n      \n      if (!pattern.$$is_regexp) {\n        pattern = $$($nesting, 'Opal').$coerce_to(pattern, $$($nesting, 'String'), \"to_str\");\n        pattern = new RegExp(pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\n      }\n\n      var result, match = pattern.exec(self);\n\n      if (match === null) {\n        ($gvars[\"~\"] = nil)\n        result = self.toString();\n      } else {\n        $$($nesting, 'MatchData').$new(pattern, match)\n\n        if (replacement === undefined) {\n\n          if (block === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (1 for 2)\")\n          }\n          result = self.slice(0, match.index) + block(match[0]) + self.slice(match.index + match[0].length);\n\n        } else if (replacement.$$is_hash) {\n\n          result = self.slice(0, match.index) + (replacement)['$[]'](match[0]).$to_s() + self.slice(match.index + match[0].length);\n\n        } else {\n\n          replacement = $$($nesting, 'Opal').$coerce_to(replacement, $$($nesting, 'String'), \"to_str\");\n\n          replacement = replacement.replace(/([\\\\]+)([0-9+&`'])/g, function (original, slashes, command) {\n            if (slashes.length % 2 === 0) {\n              return original;\n            }\n            switch (command) {\n            case \"+\":\n              for (var i = match.length - 1; i > 0; i--) {\n                if (match[i] !== undefined) {\n                  return slashes.slice(1) + match[i];\n                }\n              }\n              return '';\n            case \"&\": return slashes.slice(1) + match[0];\n            case \"`\": return slashes.slice(1) + self.slice(0, match.index);\n            case \"'\": return slashes.slice(1) + self.slice(match.index + match[0].length);\n            default:  return slashes.slice(1) + (match[command] || '');\n            }\n          }).replace(/\\\\\\\\/g, '\\\\');\n\n          result = self.slice(0, match.index) + replacement + self.slice(match.index + match[0].length);\n        }\n      }\n\n      return self.$$cast(result);\n    ;\n    }, $String_sub$61.$$arity = -2);\n    Opal.alias(self, \"succ\", \"next\");\n    \n    Opal.def(self, '$sum', $String_sum$62 = function $$sum(n) {\n      var self = this;\n\n      \n      \n      if (n == null) {\n        n = 16;\n      };\n      \n      n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n\n      var result = 0,\n          length = self.length,\n          i = 0;\n\n      for (; i < length; i++) {\n        result += self.charCodeAt(i);\n      }\n\n      if (n <= 0) {\n        return result;\n      }\n\n      return result & (Math.pow(2, n) - 1);\n    ;\n    }, $String_sum$62.$$arity = -1);\n    \n    Opal.def(self, '$swapcase', $String_swapcase$63 = function $$swapcase() {\n      var self = this;\n\n      \n      var str = self.replace(/([a-z]+)|([A-Z]+)/g, function($0,$1,$2) {\n        return $1 ? $0.toUpperCase() : $0.toLowerCase();\n      });\n\n      if (self.constructor === String) {\n        return str;\n      }\n\n      return self.$class().$new(str);\n    \n    }, $String_swapcase$63.$$arity = 0);\n    \n    Opal.def(self, '$to_f', $String_to_f$64 = function $$to_f() {\n      var self = this;\n\n      \n      if (self.charAt(0) === '_') {\n        return 0;\n      }\n\n      var result = parseFloat(self.replace(/_/g, ''));\n\n      if (isNaN(result) || result == Infinity || result == -Infinity) {\n        return 0;\n      }\n      else {\n        return result;\n      }\n    \n    }, $String_to_f$64.$$arity = 0);\n    \n    Opal.def(self, '$to_i', $String_to_i$65 = function $$to_i(base) {\n      var self = this;\n\n      \n      \n      if (base == null) {\n        base = 10;\n      };\n      \n      var result,\n          string = self.toLowerCase(),\n          radix = $$($nesting, 'Opal').$coerce_to(base, $$($nesting, 'Integer'), \"to_int\");\n\n      if (radix === 1 || radix < 0 || radix > 36) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid radix \" + (radix))\n      }\n\n      if (/^\\s*_/.test(string)) {\n        return 0;\n      }\n\n      string = string.replace(/^(\\s*[+-]?)(0[bodx]?)(.+)$/, function (original, head, flag, tail) {\n        switch (tail.charAt(0)) {\n        case '+':\n        case '-':\n          return original;\n        case '0':\n          if (tail.charAt(1) === 'x' && flag === '0x' && (radix === 0 || radix === 16)) {\n            return original;\n          }\n        }\n        switch (flag) {\n        case '0b':\n          if (radix === 0 || radix === 2) {\n            radix = 2;\n            return head + tail;\n          }\n          break;\n        case '0':\n        case '0o':\n          if (radix === 0 || radix === 8) {\n            radix = 8;\n            return head + tail;\n          }\n          break;\n        case '0d':\n          if (radix === 0 || radix === 10) {\n            radix = 10;\n            return head + tail;\n          }\n          break;\n        case '0x':\n          if (radix === 0 || radix === 16) {\n            radix = 16;\n            return head + tail;\n          }\n          break;\n        }\n        return original\n      });\n\n      result = parseInt(string.replace(/_(?!_)/g, ''), radix);\n      return isNaN(result) ? 0 : result;\n    ;\n    }, $String_to_i$65.$$arity = -1);\n    \n    Opal.def(self, '$to_proc', $String_to_proc$66 = function $$to_proc() {\n      var $$67, $iter = $String_to_proc$66.$$p, $yield = $iter || nil, self = this, method_name = nil;\n\n      if ($iter) $String_to_proc$66.$$p = null;\n      \n      method_name = $rb_plus(\"$\", self.valueOf());\n      return $send(self, 'proc', [], ($$67 = function($a){var self = $$67.$$s || this, $iter = $$67.$$p, block = $iter || nil, $post_args, args;\n\n      \n        \n        if ($iter) $$67.$$p = null;;\n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        \n        if (args.length === 0) {\n          self.$raise($$($nesting, 'ArgumentError'), \"no receiver given\")\n        }\n\n        var recv = args[0];\n\n        if (recv == null) recv = nil;\n\n        var body = recv[method_name];\n\n        if (!body) {\n          return recv.$method_missing.apply(recv, args);\n        }\n\n        if (typeof block === 'function') {\n          body.$$p = block;\n        }\n\n        if (args.length === 1) {\n          return body.call(recv);\n        } else {\n          return body.apply(recv, args.slice(1));\n        }\n      ;}, $$67.$$s = self, $$67.$$arity = -1, $$67));\n    }, $String_to_proc$66.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $String_to_s$68 = function $$to_s() {\n      var self = this;\n\n      return self.toString();\n    }, $String_to_s$68.$$arity = 0);\n    Opal.alias(self, \"to_str\", \"to_s\");\n    Opal.alias(self, \"to_sym\", \"intern\");\n    \n    Opal.def(self, '$tr', $String_tr$69 = function $$tr(from, to) {\n      var self = this;\n\n      \n      from = $$($nesting, 'Opal').$coerce_to(from, $$($nesting, 'String'), \"to_str\").$to_s();\n      to = $$($nesting, 'Opal').$coerce_to(to, $$($nesting, 'String'), \"to_str\").$to_s();\n      \n      if (from.length == 0 || from === to) {\n        return self;\n      }\n\n      var i, in_range, c, ch, start, end, length;\n      var subs = {};\n      var from_chars = from.split('');\n      var from_length = from_chars.length;\n      var to_chars = to.split('');\n      var to_length = to_chars.length;\n\n      var inverse = false;\n      var global_sub = null;\n      if (from_chars[0] === '^' && from_chars.length > 1) {\n        inverse = true;\n        from_chars.shift();\n        global_sub = to_chars[to_length - 1]\n        from_length -= 1;\n      }\n\n      var from_chars_expanded = [];\n      var last_from = null;\n      in_range = false;\n      for (i = 0; i < from_length; i++) {\n        ch = from_chars[i];\n        if (last_from == null) {\n          last_from = ch;\n          from_chars_expanded.push(ch);\n        }\n        else if (ch === '-') {\n          if (last_from === '-') {\n            from_chars_expanded.push('-');\n            from_chars_expanded.push('-');\n          }\n          else if (i == from_length - 1) {\n            from_chars_expanded.push('-');\n          }\n          else {\n            in_range = true;\n          }\n        }\n        else if (in_range) {\n          start = last_from.charCodeAt(0);\n          end = ch.charCodeAt(0);\n          if (start > end) {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (String.fromCharCode(start)) + \"-\" + (String.fromCharCode(end)) + \"\\\" in string transliteration\")\n          }\n          for (c = start + 1; c < end; c++) {\n            from_chars_expanded.push(String.fromCharCode(c));\n          }\n          from_chars_expanded.push(ch);\n          in_range = null;\n          last_from = null;\n        }\n        else {\n          from_chars_expanded.push(ch);\n        }\n      }\n\n      from_chars = from_chars_expanded;\n      from_length = from_chars.length;\n\n      if (inverse) {\n        for (i = 0; i < from_length; i++) {\n          subs[from_chars[i]] = true;\n        }\n      }\n      else {\n        if (to_length > 0) {\n          var to_chars_expanded = [];\n          var last_to = null;\n          in_range = false;\n          for (i = 0; i < to_length; i++) {\n            ch = to_chars[i];\n            if (last_to == null) {\n              last_to = ch;\n              to_chars_expanded.push(ch);\n            }\n            else if (ch === '-') {\n              if (last_to === '-') {\n                to_chars_expanded.push('-');\n                to_chars_expanded.push('-');\n              }\n              else if (i == to_length - 1) {\n                to_chars_expanded.push('-');\n              }\n              else {\n                in_range = true;\n              }\n            }\n            else if (in_range) {\n              start = last_to.charCodeAt(0);\n              end = ch.charCodeAt(0);\n              if (start > end) {\n                self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (String.fromCharCode(start)) + \"-\" + (String.fromCharCode(end)) + \"\\\" in string transliteration\")\n              }\n              for (c = start + 1; c < end; c++) {\n                to_chars_expanded.push(String.fromCharCode(c));\n              }\n              to_chars_expanded.push(ch);\n              in_range = null;\n              last_to = null;\n            }\n            else {\n              to_chars_expanded.push(ch);\n            }\n          }\n\n          to_chars = to_chars_expanded;\n          to_length = to_chars.length;\n        }\n\n        var length_diff = from_length - to_length;\n        if (length_diff > 0) {\n          var pad_char = (to_length > 0 ? to_chars[to_length - 1] : '');\n          for (i = 0; i < length_diff; i++) {\n            to_chars.push(pad_char);\n          }\n        }\n\n        for (i = 0; i < from_length; i++) {\n          subs[from_chars[i]] = to_chars[i];\n        }\n      }\n\n      var new_str = ''\n      for (i = 0, length = self.length; i < length; i++) {\n        ch = self.charAt(i);\n        var sub = subs[ch];\n        if (inverse) {\n          new_str += (sub == null ? global_sub : ch);\n        }\n        else {\n          new_str += (sub != null ? sub : ch);\n        }\n      }\n      return self.$$cast(new_str);\n    ;\n    }, $String_tr$69.$$arity = 2);\n    \n    Opal.def(self, '$tr_s', $String_tr_s$70 = function $$tr_s(from, to) {\n      var self = this;\n\n      \n      from = $$($nesting, 'Opal').$coerce_to(from, $$($nesting, 'String'), \"to_str\").$to_s();\n      to = $$($nesting, 'Opal').$coerce_to(to, $$($nesting, 'String'), \"to_str\").$to_s();\n      \n      if (from.length == 0) {\n        return self;\n      }\n\n      var i, in_range, c, ch, start, end, length;\n      var subs = {};\n      var from_chars = from.split('');\n      var from_length = from_chars.length;\n      var to_chars = to.split('');\n      var to_length = to_chars.length;\n\n      var inverse = false;\n      var global_sub = null;\n      if (from_chars[0] === '^' && from_chars.length > 1) {\n        inverse = true;\n        from_chars.shift();\n        global_sub = to_chars[to_length - 1]\n        from_length -= 1;\n      }\n\n      var from_chars_expanded = [];\n      var last_from = null;\n      in_range = false;\n      for (i = 0; i < from_length; i++) {\n        ch = from_chars[i];\n        if (last_from == null) {\n          last_from = ch;\n          from_chars_expanded.push(ch);\n        }\n        else if (ch === '-') {\n          if (last_from === '-') {\n            from_chars_expanded.push('-');\n            from_chars_expanded.push('-');\n          }\n          else if (i == from_length - 1) {\n            from_chars_expanded.push('-');\n          }\n          else {\n            in_range = true;\n          }\n        }\n        else if (in_range) {\n          start = last_from.charCodeAt(0);\n          end = ch.charCodeAt(0);\n          if (start > end) {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (String.fromCharCode(start)) + \"-\" + (String.fromCharCode(end)) + \"\\\" in string transliteration\")\n          }\n          for (c = start + 1; c < end; c++) {\n            from_chars_expanded.push(String.fromCharCode(c));\n          }\n          from_chars_expanded.push(ch);\n          in_range = null;\n          last_from = null;\n        }\n        else {\n          from_chars_expanded.push(ch);\n        }\n      }\n\n      from_chars = from_chars_expanded;\n      from_length = from_chars.length;\n\n      if (inverse) {\n        for (i = 0; i < from_length; i++) {\n          subs[from_chars[i]] = true;\n        }\n      }\n      else {\n        if (to_length > 0) {\n          var to_chars_expanded = [];\n          var last_to = null;\n          in_range = false;\n          for (i = 0; i < to_length; i++) {\n            ch = to_chars[i];\n            if (last_from == null) {\n              last_from = ch;\n              to_chars_expanded.push(ch);\n            }\n            else if (ch === '-') {\n              if (last_to === '-') {\n                to_chars_expanded.push('-');\n                to_chars_expanded.push('-');\n              }\n              else if (i == to_length - 1) {\n                to_chars_expanded.push('-');\n              }\n              else {\n                in_range = true;\n              }\n            }\n            else if (in_range) {\n              start = last_from.charCodeAt(0);\n              end = ch.charCodeAt(0);\n              if (start > end) {\n                self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (String.fromCharCode(start)) + \"-\" + (String.fromCharCode(end)) + \"\\\" in string transliteration\")\n              }\n              for (c = start + 1; c < end; c++) {\n                to_chars_expanded.push(String.fromCharCode(c));\n              }\n              to_chars_expanded.push(ch);\n              in_range = null;\n              last_from = null;\n            }\n            else {\n              to_chars_expanded.push(ch);\n            }\n          }\n\n          to_chars = to_chars_expanded;\n          to_length = to_chars.length;\n        }\n\n        var length_diff = from_length - to_length;\n        if (length_diff > 0) {\n          var pad_char = (to_length > 0 ? to_chars[to_length - 1] : '');\n          for (i = 0; i < length_diff; i++) {\n            to_chars.push(pad_char);\n          }\n        }\n\n        for (i = 0; i < from_length; i++) {\n          subs[from_chars[i]] = to_chars[i];\n        }\n      }\n      var new_str = ''\n      var last_substitute = null\n      for (i = 0, length = self.length; i < length; i++) {\n        ch = self.charAt(i);\n        var sub = subs[ch]\n        if (inverse) {\n          if (sub == null) {\n            if (last_substitute == null) {\n              new_str += global_sub;\n              last_substitute = true;\n            }\n          }\n          else {\n            new_str += ch;\n            last_substitute = null;\n          }\n        }\n        else {\n          if (sub != null) {\n            if (last_substitute == null || last_substitute !== sub) {\n              new_str += sub;\n              last_substitute = sub;\n            }\n          }\n          else {\n            new_str += ch;\n            last_substitute = null;\n          }\n        }\n      }\n      return self.$$cast(new_str);\n    ;\n    }, $String_tr_s$70.$$arity = 2);\n    \n    Opal.def(self, '$upcase', $String_upcase$71 = function $$upcase() {\n      var self = this;\n\n      return self.$$cast(self.toUpperCase());\n    }, $String_upcase$71.$$arity = 0);\n    \n    Opal.def(self, '$upto', $String_upto$72 = function $$upto(stop, excl) {\n      var $iter = $String_upto$72.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_upto$72.$$p = null;\n      \n      \n      if ($iter) $String_upto$72.$$p = null;;\n      \n      if (excl == null) {\n        excl = false;\n      };\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"upto\", stop, excl)\n      };\n      stop = $$($nesting, 'Opal').$coerce_to(stop, $$($nesting, 'String'), \"to_str\");\n      \n      var a, b, s = self.toString();\n\n      if (s.length === 1 && stop.length === 1) {\n\n        a = s.charCodeAt(0);\n        b = stop.charCodeAt(0);\n\n        while (a <= b) {\n          if (excl && a === b) {\n            break;\n          }\n\n          block(String.fromCharCode(a));\n\n          a += 1;\n        }\n\n      } else if (parseInt(s, 10).toString() === s && parseInt(stop, 10).toString() === stop) {\n\n        a = parseInt(s, 10);\n        b = parseInt(stop, 10);\n\n        while (a <= b) {\n          if (excl && a === b) {\n            break;\n          }\n\n          block(a.toString());\n\n          a += 1;\n        }\n\n      } else {\n\n        while (s.length <= stop.length && s <= stop) {\n          if (excl && s === stop) {\n            break;\n          }\n\n          block(s);\n\n          s = (s).$succ();\n        }\n\n      }\n      return self;\n    ;\n    }, $String_upto$72.$$arity = -2);\n    \n    function char_class_from_char_sets(sets) {\n      function explode_sequences_in_character_set(set) {\n        var result = '',\n            i, len = set.length,\n            curr_char,\n            skip_next_dash,\n            char_code_from,\n            char_code_upto,\n            char_code;\n        for (i = 0; i < len; i++) {\n          curr_char = set.charAt(i);\n          if (curr_char === '-' && i > 0 && i < (len - 1) && !skip_next_dash) {\n            char_code_from = set.charCodeAt(i - 1);\n            char_code_upto = set.charCodeAt(i + 1);\n            if (char_code_from > char_code_upto) {\n              self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (char_code_from) + \"-\" + (char_code_upto) + \"\\\" in string transliteration\")\n            }\n            for (char_code = char_code_from + 1; char_code < char_code_upto + 1; char_code++) {\n              result += String.fromCharCode(char_code);\n            }\n            skip_next_dash = true;\n            i++;\n          } else {\n            skip_next_dash = (curr_char === '\\\\');\n            result += curr_char;\n          }\n        }\n        return result;\n      }\n\n      function intersection(setA, setB) {\n        if (setA.length === 0) {\n          return setB;\n        }\n        var result = '',\n            i, len = setA.length,\n            chr;\n        for (i = 0; i < len; i++) {\n          chr = setA.charAt(i);\n          if (setB.indexOf(chr) !== -1) {\n            result += chr;\n          }\n        }\n        return result;\n      }\n\n      var i, len, set, neg, chr, tmp,\n          pos_intersection = '',\n          neg_intersection = '';\n\n      for (i = 0, len = sets.length; i < len; i++) {\n        set = $$($nesting, 'Opal').$coerce_to(sets[i], $$($nesting, 'String'), \"to_str\");\n        neg = (set.charAt(0) === '^' && set.length > 1);\n        set = explode_sequences_in_character_set(neg ? set.slice(1) : set);\n        if (neg) {\n          neg_intersection = intersection(neg_intersection, set);\n        } else {\n          pos_intersection = intersection(pos_intersection, set);\n        }\n      }\n\n      if (pos_intersection.length > 0 && neg_intersection.length > 0) {\n        tmp = '';\n        for (i = 0, len = pos_intersection.length; i < len; i++) {\n          chr = pos_intersection.charAt(i);\n          if (neg_intersection.indexOf(chr) === -1) {\n            tmp += chr;\n          }\n        }\n        pos_intersection = tmp;\n        neg_intersection = '';\n      }\n\n      if (pos_intersection.length > 0) {\n        return '[' + $$($nesting, 'Regexp').$escape(pos_intersection) + ']';\n      }\n\n      if (neg_intersection.length > 0) {\n        return '[^' + $$($nesting, 'Regexp').$escape(neg_intersection) + ']';\n      }\n\n      return null;\n    }\n  ;\n    \n    Opal.def(self, '$instance_variables', $String_instance_variables$73 = function $$instance_variables() {\n      var self = this;\n\n      return []\n    }, $String_instance_variables$73.$$arity = 0);\n    Opal.defs(self, '$_load', $String__load$74 = function $$_load($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return $send(self, 'new', Opal.to_a(args));\n    }, $String__load$74.$$arity = -1);\n    \n    Opal.def(self, '$unicode_normalize', $String_unicode_normalize$75 = function $$unicode_normalize(form) {\n      var self = this;\n\n      \n      ;\n      return self.toString();;\n    }, $String_unicode_normalize$75.$$arity = -1);\n    \n    Opal.def(self, '$unicode_normalized?', $String_unicode_normalized$ques$76 = function(form) {\n      var self = this;\n\n      \n      ;\n      return true;\n    }, $String_unicode_normalized$ques$76.$$arity = -1);\n    \n    Opal.def(self, '$unpack', $String_unpack$77 = function $$unpack(format) {\n      var self = this;\n\n      return self.$raise(\"To use String#unpack, you must first require 'corelib/string/unpack'.\")\n    }, $String_unpack$77.$$arity = 1);\n    return (Opal.def(self, '$unpack1', $String_unpack1$78 = function $$unpack1(format) {\n      var self = this;\n\n      return self.$raise(\"To use String#unpack1, you must first require 'corelib/string/unpack'.\")\n    }, $String_unpack1$78.$$arity = 1), nil) && 'unpack1';\n  })($nesting[0], String, $nesting);\n  return Opal.const_set($nesting[0], 'Symbol', $$($nesting, 'String'));\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/enumerable\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy, $send = Opal.send, $falsy = Opal.falsy, $hash2 = Opal.hash2, $lambda = Opal.lambda;\n\n  Opal.add_stubs(['$each', '$public_send', '$destructure', '$to_enum', '$enumerator_size', '$new', '$yield', '$raise', '$slice_when', '$!', '$enum_for', '$flatten', '$map', '$warn', '$proc', '$==', '$nil?', '$respond_to?', '$coerce_to!', '$>', '$*', '$coerce_to', '$try_convert', '$<', '$+', '$-', '$ceil', '$/', '$size', '$__send__', '$length', '$<=', '$[]', '$push', '$<<', '$[]=', '$===', '$inspect', '$<=>', '$first', '$reverse', '$sort', '$to_proc', '$compare', '$call', '$dup', '$to_a', '$sort!', '$map!', '$key?', '$values', '$zip']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Enumerable');\n\n    var $nesting = [self].concat($parent_nesting), $Enumerable_all$ques$1, $Enumerable_any$ques$5, $Enumerable_chunk$9, $Enumerable_chunk_while$12, $Enumerable_collect$14, $Enumerable_collect_concat$16, $Enumerable_count$19, $Enumerable_cycle$23, $Enumerable_detect$25, $Enumerable_drop$27, $Enumerable_drop_while$28, $Enumerable_each_cons$29, $Enumerable_each_entry$31, $Enumerable_each_slice$33, $Enumerable_each_with_index$35, $Enumerable_each_with_object$37, $Enumerable_entries$39, $Enumerable_find_all$40, $Enumerable_find_index$42, $Enumerable_first$45, $Enumerable_grep$48, $Enumerable_grep_v$50, $Enumerable_group_by$52, $Enumerable_include$ques$54, $Enumerable_inject$56, $Enumerable_lazy$57, $Enumerable_enumerator_size$59, $Enumerable_max$60, $Enumerable_max_by$61, $Enumerable_min$63, $Enumerable_min_by$64, $Enumerable_minmax$66, $Enumerable_minmax_by$68, $Enumerable_none$ques$69, $Enumerable_one$ques$73, $Enumerable_partition$77, $Enumerable_reject$79, $Enumerable_reverse_each$81, $Enumerable_slice_before$83, $Enumerable_slice_after$85, $Enumerable_slice_when$88, $Enumerable_sort$90, $Enumerable_sort_by$92, $Enumerable_sum$97, $Enumerable_take$99, $Enumerable_take_while$100, $Enumerable_uniq$102, $Enumerable_zip$104;\n\n    \n    \n    function comparableForPattern(value) {\n      if (value.length === 0) {\n        value = [nil];\n      }\n\n      if (value.length > 1) {\n        value = [value];\n      }\n\n      return value;\n    }\n  ;\n    \n    Opal.def(self, '$all?', $Enumerable_all$ques$1 = function(pattern) {try {\n\n      var $iter = $Enumerable_all$ques$1.$$p, block = $iter || nil, $$2, $$3, $$4, self = this;\n\n      if ($iter) $Enumerable_all$ques$1.$$p = null;\n      \n      \n      if ($iter) $Enumerable_all$ques$1.$$p = null;;\n      ;\n      if ($truthy(pattern !== undefined)) {\n        $send(self, 'each', [], ($$2 = function($a){var self = $$2.$$s || this, $post_args, value, comparable = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          comparable = comparableForPattern(value);\n          if ($truthy($send(pattern, 'public_send', [\"===\"].concat(Opal.to_a(comparable))))) {\n            return nil\n          } else {\n            Opal.ret(false)\n          };}, $$2.$$s = self, $$2.$$arity = -1, $$2))\n      } else if ((block !== nil)) {\n        $send(self, 'each', [], ($$3 = function($a){var self = $$3.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n            return nil\n          } else {\n            Opal.ret(false)\n          };}, $$3.$$s = self, $$3.$$arity = -1, $$3))\n      } else {\n        $send(self, 'each', [], ($$4 = function($a){var self = $$4.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy($$($nesting, 'Opal').$destructure(value))) {\n            return nil\n          } else {\n            Opal.ret(false)\n          };}, $$4.$$s = self, $$4.$$arity = -1, $$4))\n      };\n      return true;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_all$ques$1.$$arity = -1);\n    \n    Opal.def(self, '$any?', $Enumerable_any$ques$5 = function(pattern) {try {\n\n      var $iter = $Enumerable_any$ques$5.$$p, block = $iter || nil, $$6, $$7, $$8, self = this;\n\n      if ($iter) $Enumerable_any$ques$5.$$p = null;\n      \n      \n      if ($iter) $Enumerable_any$ques$5.$$p = null;;\n      ;\n      if ($truthy(pattern !== undefined)) {\n        $send(self, 'each', [], ($$6 = function($a){var self = $$6.$$s || this, $post_args, value, comparable = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          comparable = comparableForPattern(value);\n          if ($truthy($send(pattern, 'public_send', [\"===\"].concat(Opal.to_a(comparable))))) {\n            Opal.ret(true)\n          } else {\n            return nil\n          };}, $$6.$$s = self, $$6.$$arity = -1, $$6))\n      } else if ((block !== nil)) {\n        $send(self, 'each', [], ($$7 = function($a){var self = $$7.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n            Opal.ret(true)\n          } else {\n            return nil\n          };}, $$7.$$s = self, $$7.$$arity = -1, $$7))\n      } else {\n        $send(self, 'each', [], ($$8 = function($a){var self = $$8.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy($$($nesting, 'Opal').$destructure(value))) {\n            Opal.ret(true)\n          } else {\n            return nil\n          };}, $$8.$$s = self, $$8.$$arity = -1, $$8))\n      };\n      return false;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_any$ques$5.$$arity = -1);\n    \n    Opal.def(self, '$chunk', $Enumerable_chunk$9 = function $$chunk() {\n      var $iter = $Enumerable_chunk$9.$$p, block = $iter || nil, $$10, $$11, self = this;\n\n      if ($iter) $Enumerable_chunk$9.$$p = null;\n      \n      \n      if ($iter) $Enumerable_chunk$9.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'to_enum', [\"chunk\"], ($$10 = function(){var self = $$10.$$s || this;\n\n        return self.$enumerator_size()}, $$10.$$s = self, $$10.$$arity = 0, $$10))\n      };\n      return $send($$$('::', 'Enumerator'), 'new', [], ($$11 = function(yielder){var self = $$11.$$s || this;\n\n      \n        \n        if (yielder == null) {\n          yielder = nil;\n        };\n        \n        var previous = nil, accumulate = [];\n\n        function releaseAccumulate() {\n          if (accumulate.length > 0) {\n            yielder.$yield(previous, accumulate)\n          }\n        }\n\n        self.$each.$$p = function(value) {\n          var key = Opal.yield1(block, value);\n\n          if (key === nil) {\n            releaseAccumulate();\n            accumulate = [];\n            previous = nil;\n          } else {\n            if (previous === nil || previous === key) {\n              accumulate.push(value);\n            } else {\n              releaseAccumulate();\n              accumulate = [value];\n            }\n\n            previous = key;\n          }\n        }\n\n        self.$each();\n\n        releaseAccumulate();\n      ;}, $$11.$$s = self, $$11.$$arity = 1, $$11));\n    }, $Enumerable_chunk$9.$$arity = 0);\n    \n    Opal.def(self, '$chunk_while', $Enumerable_chunk_while$12 = function $$chunk_while() {\n      var $iter = $Enumerable_chunk_while$12.$$p, block = $iter || nil, $$13, self = this;\n\n      if ($iter) $Enumerable_chunk_while$12.$$p = null;\n      \n      \n      if ($iter) $Enumerable_chunk_while$12.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"no block given\")\n      };\n      return $send(self, 'slice_when', [], ($$13 = function(before, after){var self = $$13.$$s || this;\n\n      \n        \n        if (before == null) {\n          before = nil;\n        };\n        \n        if (after == null) {\n          after = nil;\n        };\n        return Opal.yieldX(block, [before, after])['$!']();}, $$13.$$s = self, $$13.$$arity = 2, $$13));\n    }, $Enumerable_chunk_while$12.$$arity = 0);\n    \n    Opal.def(self, '$collect', $Enumerable_collect$14 = function $$collect() {\n      var $iter = $Enumerable_collect$14.$$p, block = $iter || nil, $$15, self = this;\n\n      if ($iter) $Enumerable_collect$14.$$p = null;\n      \n      \n      if ($iter) $Enumerable_collect$14.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"collect\"], ($$15 = function(){var self = $$15.$$s || this;\n\n        return self.$enumerator_size()}, $$15.$$s = self, $$15.$$arity = 0, $$15))\n      };\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        var value = Opal.yieldX(block, arguments);\n\n        result.push(value);\n      };\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_collect$14.$$arity = 0);\n    \n    Opal.def(self, '$collect_concat', $Enumerable_collect_concat$16 = function $$collect_concat() {\n      var $iter = $Enumerable_collect_concat$16.$$p, block = $iter || nil, $$17, $$18, self = this;\n\n      if ($iter) $Enumerable_collect_concat$16.$$p = null;\n      \n      \n      if ($iter) $Enumerable_collect_concat$16.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"collect_concat\"], ($$17 = function(){var self = $$17.$$s || this;\n\n        return self.$enumerator_size()}, $$17.$$s = self, $$17.$$arity = 0, $$17))\n      };\n      return $send(self, 'map', [], ($$18 = function(item){var self = $$18.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return Opal.yield1(block, item);;}, $$18.$$s = self, $$18.$$arity = 1, $$18)).$flatten(1);\n    }, $Enumerable_collect_concat$16.$$arity = 0);\n    \n    Opal.def(self, '$count', $Enumerable_count$19 = function $$count(object) {\n      var $iter = $Enumerable_count$19.$$p, block = $iter || nil, $$20, $$21, $$22, self = this, result = nil;\n\n      if ($iter) $Enumerable_count$19.$$p = null;\n      \n      \n      if ($iter) $Enumerable_count$19.$$p = null;;\n      ;\n      result = 0;\n      \n      if (object != null && block !== nil) {\n        self.$warn(\"warning: given block not used\")\n      }\n    ;\n      if ($truthy(object != null)) {\n        block = $send(self, 'proc', [], ($$20 = function($a){var self = $$20.$$s || this, $post_args, args;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $$($nesting, 'Opal').$destructure(args)['$=='](object);}, $$20.$$s = self, $$20.$$arity = -1, $$20))\n      } else if ($truthy(block['$nil?']())) {\n        block = $send(self, 'proc', [], ($$21 = function(){var self = $$21.$$s || this;\n\n        return true}, $$21.$$s = self, $$21.$$arity = 0, $$21))};\n      $send(self, 'each', [], ($$22 = function($a){var self = $$22.$$s || this, $post_args, args;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        if ($truthy(Opal.yieldX(block, args))) {\n          return result++;\n        } else {\n          return nil\n        };}, $$22.$$s = self, $$22.$$arity = -1, $$22));\n      return result;\n    }, $Enumerable_count$19.$$arity = -1);\n    \n    Opal.def(self, '$cycle', $Enumerable_cycle$23 = function $$cycle(n) {\n      var $iter = $Enumerable_cycle$23.$$p, block = $iter || nil, $$24, self = this;\n\n      if ($iter) $Enumerable_cycle$23.$$p = null;\n      \n      \n      if ($iter) $Enumerable_cycle$23.$$p = null;;\n      \n      if (n == null) {\n        n = nil;\n      };\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"cycle\", n], ($$24 = function(){var self = $$24.$$s || this;\n\n        if ($truthy(n['$nil?']())) {\n            if ($truthy(self['$respond_to?'](\"size\"))) {\n              return $$$($$($nesting, 'Float'), 'INFINITY')\n            } else {\n              return nil\n            }\n          } else {\n            \n            n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n            if ($truthy($rb_gt(n, 0))) {\n              return $rb_times(self.$enumerator_size(), n)\n            } else {\n              return 0\n            };\n          }}, $$24.$$s = self, $$24.$$arity = 0, $$24))\n      };\n      if ($truthy(n['$nil?']())) {\n      } else {\n        \n        n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(n <= 0)) {\n          return nil};\n      };\n      \n      var result,\n          all = [], i, length, value;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        all.push(param);\n      }\n\n      self.$each();\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      if (all.length === 0) {\n        return nil;\n      }\n\n      if (n === nil) {\n        while (true) {\n          for (i = 0, length = all.length; i < length; i++) {\n            value = Opal.yield1(block, all[i]);\n          }\n        }\n      }\n      else {\n        while (n > 1) {\n          for (i = 0, length = all.length; i < length; i++) {\n            value = Opal.yield1(block, all[i]);\n          }\n\n          n--;\n        }\n      }\n    ;\n    }, $Enumerable_cycle$23.$$arity = -1);\n    \n    Opal.def(self, '$detect', $Enumerable_detect$25 = function $$detect(ifnone) {try {\n\n      var $iter = $Enumerable_detect$25.$$p, block = $iter || nil, $$26, self = this;\n\n      if ($iter) $Enumerable_detect$25.$$p = null;\n      \n      \n      if ($iter) $Enumerable_detect$25.$$p = null;;\n      ;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"detect\", ifnone)\n      };\n      $send(self, 'each', [], ($$26 = function($a){var self = $$26.$$s || this, $post_args, args, value = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        value = $$($nesting, 'Opal').$destructure(args);\n        if ($truthy(Opal.yield1(block, value))) {\n          Opal.ret(value)\n        } else {\n          return nil\n        };}, $$26.$$s = self, $$26.$$arity = -1, $$26));\n      \n      if (ifnone !== undefined) {\n        if (typeof(ifnone) === 'function') {\n          return ifnone();\n        } else {\n          return ifnone;\n        }\n      }\n    ;\n      return nil;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_detect$25.$$arity = -1);\n    \n    Opal.def(self, '$drop', $Enumerable_drop$27 = function $$drop(number) {\n      var self = this;\n\n      \n      number = $$($nesting, 'Opal').$coerce_to(number, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(number < 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"attempt to drop negative size\")};\n      \n      var result  = [],\n          current = 0;\n\n      self.$each.$$p = function() {\n        if (number <= current) {\n          result.push($$($nesting, 'Opal').$destructure(arguments));\n        }\n\n        current++;\n      };\n\n      self.$each()\n\n      return result;\n    ;\n    }, $Enumerable_drop$27.$$arity = 1);\n    \n    Opal.def(self, '$drop_while', $Enumerable_drop_while$28 = function $$drop_while() {\n      var $iter = $Enumerable_drop_while$28.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_drop_while$28.$$p = null;\n      \n      \n      if ($iter) $Enumerable_drop_while$28.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"drop_while\")\n      };\n      \n      var result   = [],\n          dropping = true;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments);\n\n        if (dropping) {\n          var value = Opal.yield1(block, param);\n\n          if ($falsy(value)) {\n            dropping = false;\n            result.push(param);\n          }\n        }\n        else {\n          result.push(param);\n        }\n      };\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_drop_while$28.$$arity = 0);\n    \n    Opal.def(self, '$each_cons', $Enumerable_each_cons$29 = function $$each_cons(n) {\n      var $iter = $Enumerable_each_cons$29.$$p, block = $iter || nil, $$30, self = this;\n\n      if ($iter) $Enumerable_each_cons$29.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_cons$29.$$p = null;;\n      if ($truthy(arguments.length != 1)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" for 1)\")};\n      n = $$($nesting, 'Opal').$try_convert(n, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(n <= 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"invalid size\")};\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_cons\", n], ($$30 = function(){var self = $$30.$$s || this, $a, enum_size = nil;\n\n        \n          enum_size = self.$enumerator_size();\n          if ($truthy(enum_size['$nil?']())) {\n            return nil\n          } else if ($truthy(($truthy($a = enum_size['$=='](0)) ? $a : $rb_lt(enum_size, n)))) {\n            return 0\n          } else {\n            return $rb_plus($rb_minus(enum_size, n), 1)\n          };}, $$30.$$s = self, $$30.$$arity = 0, $$30))\n      };\n      \n      var buffer = [], result = nil;\n\n      self.$each.$$p = function() {\n        var element = $$($nesting, 'Opal').$destructure(arguments);\n        buffer.push(element);\n        if (buffer.length > n) {\n          buffer.shift();\n        }\n        if (buffer.length == n) {\n          Opal.yield1(block, buffer.slice(0, n));\n        }\n      }\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_each_cons$29.$$arity = 1);\n    \n    Opal.def(self, '$each_entry', $Enumerable_each_entry$31 = function $$each_entry($a) {\n      var $iter = $Enumerable_each_entry$31.$$p, block = $iter || nil, $post_args, data, $$32, self = this;\n\n      if ($iter) $Enumerable_each_entry$31.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_entry$31.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      data = $post_args;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'to_enum', [\"each_entry\"].concat(Opal.to_a(data)), ($$32 = function(){var self = $$32.$$s || this;\n\n        return self.$enumerator_size()}, $$32.$$s = self, $$32.$$arity = 0, $$32))\n      };\n      \n      self.$each.$$p = function() {\n        var item = $$($nesting, 'Opal').$destructure(arguments);\n\n        Opal.yield1(block, item);\n      }\n\n      self.$each.apply(self, data);\n\n      return self;\n    ;\n    }, $Enumerable_each_entry$31.$$arity = -1);\n    \n    Opal.def(self, '$each_slice', $Enumerable_each_slice$33 = function $$each_slice(n) {\n      var $iter = $Enumerable_each_slice$33.$$p, block = $iter || nil, $$34, self = this;\n\n      if ($iter) $Enumerable_each_slice$33.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_slice$33.$$p = null;;\n      n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(n <= 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"invalid slice size\")};\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_slice\", n], ($$34 = function(){var self = $$34.$$s || this;\n\n        if ($truthy(self['$respond_to?'](\"size\"))) {\n            return $rb_divide(self.$size(), n).$ceil()\n          } else {\n            return nil\n          }}, $$34.$$s = self, $$34.$$arity = 0, $$34))\n      };\n      \n      var result,\n          slice = []\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments);\n\n        slice.push(param);\n\n        if (slice.length === n) {\n          Opal.yield1(block, slice);\n          slice = [];\n        }\n      };\n\n      self.$each();\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      // our \"last\" group, if smaller than n then won't have been yielded\n      if (slice.length > 0) {\n        Opal.yield1(block, slice);\n      }\n    ;\n      return nil;\n    }, $Enumerable_each_slice$33.$$arity = 1);\n    \n    Opal.def(self, '$each_with_index', $Enumerable_each_with_index$35 = function $$each_with_index($a) {\n      var $iter = $Enumerable_each_with_index$35.$$p, block = $iter || nil, $post_args, args, $$36, self = this;\n\n      if ($iter) $Enumerable_each_with_index$35.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_with_index$35.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_with_index\"].concat(Opal.to_a(args)), ($$36 = function(){var self = $$36.$$s || this;\n\n        return self.$enumerator_size()}, $$36.$$s = self, $$36.$$arity = 0, $$36))\n      };\n      \n      var result,\n          index = 0;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments);\n\n        block(param, index);\n\n        index++;\n      };\n\n      self.$each.apply(self, args);\n\n      if (result !== undefined) {\n        return result;\n      }\n    ;\n      return self;\n    }, $Enumerable_each_with_index$35.$$arity = -1);\n    \n    Opal.def(self, '$each_with_object', $Enumerable_each_with_object$37 = function $$each_with_object(object) {\n      var $iter = $Enumerable_each_with_object$37.$$p, block = $iter || nil, $$38, self = this;\n\n      if ($iter) $Enumerable_each_with_object$37.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_with_object$37.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_with_object\", object], ($$38 = function(){var self = $$38.$$s || this;\n\n        return self.$enumerator_size()}, $$38.$$s = self, $$38.$$arity = 0, $$38))\n      };\n      \n      var result;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments);\n\n        block(param, object);\n      };\n\n      self.$each();\n\n      if (result !== undefined) {\n        return result;\n      }\n    ;\n      return object;\n    }, $Enumerable_each_with_object$37.$$arity = 1);\n    \n    Opal.def(self, '$entries', $Enumerable_entries$39 = function $$entries($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        result.push($$($nesting, 'Opal').$destructure(arguments));\n      };\n\n      self.$each.apply(self, args);\n\n      return result;\n    ;\n    }, $Enumerable_entries$39.$$arity = -1);\n    Opal.alias(self, \"find\", \"detect\");\n    \n    Opal.def(self, '$find_all', $Enumerable_find_all$40 = function $$find_all() {\n      var $iter = $Enumerable_find_all$40.$$p, block = $iter || nil, $$41, self = this;\n\n      if ($iter) $Enumerable_find_all$40.$$p = null;\n      \n      \n      if ($iter) $Enumerable_find_all$40.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"find_all\"], ($$41 = function(){var self = $$41.$$s || this;\n\n        return self.$enumerator_size()}, $$41.$$s = self, $$41.$$arity = 0, $$41))\n      };\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if ($truthy(value)) {\n          result.push(param);\n        }\n      };\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_find_all$40.$$arity = 0);\n    \n    Opal.def(self, '$find_index', $Enumerable_find_index$42 = function $$find_index(object) {try {\n\n      var $iter = $Enumerable_find_index$42.$$p, block = $iter || nil, $$43, $$44, self = this, index = nil;\n\n      if ($iter) $Enumerable_find_index$42.$$p = null;\n      \n      \n      if ($iter) $Enumerable_find_index$42.$$p = null;;\n      ;\n      if ($truthy(object === undefined && block === nil)) {\n        return self.$enum_for(\"find_index\")};\n      \n      if (object != null && block !== nil) {\n        self.$warn(\"warning: given block not used\")\n      }\n    ;\n      index = 0;\n      if ($truthy(object != null)) {\n        $send(self, 'each', [], ($$43 = function($a){var self = $$43.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($$($nesting, 'Opal').$destructure(value)['$=='](object)) {\n            Opal.ret(index)};\n          return index += 1;;}, $$43.$$s = self, $$43.$$arity = -1, $$43))\n      } else {\n        $send(self, 'each', [], ($$44 = function($a){var self = $$44.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n            Opal.ret(index)};\n          return index += 1;;}, $$44.$$s = self, $$44.$$arity = -1, $$44))\n      };\n      return nil;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_find_index$42.$$arity = -1);\n    \n    Opal.def(self, '$first', $Enumerable_first$45 = function $$first(number) {try {\n\n      var $$46, $$47, self = this, result = nil, current = nil;\n\n      \n      ;\n      if ($truthy(number === undefined)) {\n        return $send(self, 'each', [], ($$46 = function(value){var self = $$46.$$s || this;\n\n        \n          \n          if (value == null) {\n            value = nil;\n          };\n          Opal.ret(value);}, $$46.$$s = self, $$46.$$arity = 1, $$46))\n      } else {\n        \n        result = [];\n        number = $$($nesting, 'Opal').$coerce_to(number, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(number < 0)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"attempt to take negative size\")};\n        if ($truthy(number == 0)) {\n          return []};\n        current = 0;\n        $send(self, 'each', [], ($$47 = function($a){var self = $$47.$$s || this, $post_args, args;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          result.push($$($nesting, 'Opal').$destructure(args));\n          if ($truthy(number <= ++current)) {\n            Opal.ret(result)\n          } else {\n            return nil\n          };}, $$47.$$s = self, $$47.$$arity = -1, $$47));\n        return result;\n      };\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_first$45.$$arity = -1);\n    Opal.alias(self, \"flat_map\", \"collect_concat\");\n    \n    Opal.def(self, '$grep', $Enumerable_grep$48 = function $$grep(pattern) {\n      var $iter = $Enumerable_grep$48.$$p, block = $iter || nil, $$49, self = this, result = nil;\n\n      if ($iter) $Enumerable_grep$48.$$p = null;\n      \n      \n      if ($iter) $Enumerable_grep$48.$$p = null;;\n      result = [];\n      $send(self, 'each', [], ($$49 = function($a){var self = $$49.$$s || this, $post_args, value, cmp = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        value = $post_args;;\n        cmp = comparableForPattern(value);\n        if ($truthy($send(pattern, '__send__', [\"===\"].concat(Opal.to_a(cmp))))) {\n        } else {\n          return nil;\n        };\n        if ((block !== nil)) {\n          \n          if ($truthy($rb_gt(value.$length(), 1))) {\n            value = [value]};\n          value = Opal.yieldX(block, Opal.to_a(value));\n        } else if ($truthy($rb_le(value.$length(), 1))) {\n          value = value['$[]'](0)};\n        return result.$push(value);}, $$49.$$s = self, $$49.$$arity = -1, $$49));\n      return result;\n    }, $Enumerable_grep$48.$$arity = 1);\n    \n    Opal.def(self, '$grep_v', $Enumerable_grep_v$50 = function $$grep_v(pattern) {\n      var $iter = $Enumerable_grep_v$50.$$p, block = $iter || nil, $$51, self = this, result = nil;\n\n      if ($iter) $Enumerable_grep_v$50.$$p = null;\n      \n      \n      if ($iter) $Enumerable_grep_v$50.$$p = null;;\n      result = [];\n      $send(self, 'each', [], ($$51 = function($a){var self = $$51.$$s || this, $post_args, value, cmp = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        value = $post_args;;\n        cmp = comparableForPattern(value);\n        if ($truthy($send(pattern, '__send__', [\"===\"].concat(Opal.to_a(cmp))))) {\n          return nil;};\n        if ((block !== nil)) {\n          \n          if ($truthy($rb_gt(value.$length(), 1))) {\n            value = [value]};\n          value = Opal.yieldX(block, Opal.to_a(value));\n        } else if ($truthy($rb_le(value.$length(), 1))) {\n          value = value['$[]'](0)};\n        return result.$push(value);}, $$51.$$s = self, $$51.$$arity = -1, $$51));\n      return result;\n    }, $Enumerable_grep_v$50.$$arity = 1);\n    \n    Opal.def(self, '$group_by', $Enumerable_group_by$52 = function $$group_by() {\n      var $iter = $Enumerable_group_by$52.$$p, block = $iter || nil, $$53, $a, self = this, hash = nil, $writer = nil;\n\n      if ($iter) $Enumerable_group_by$52.$$p = null;\n      \n      \n      if ($iter) $Enumerable_group_by$52.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"group_by\"], ($$53 = function(){var self = $$53.$$s || this;\n\n        return self.$enumerator_size()}, $$53.$$s = self, $$53.$$arity = 0, $$53))\n      };\n      hash = $hash2([], {});\n      \n      var result;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        ($truthy($a = hash['$[]'](value)) ? $a : (($writer = [value, []]), $send(hash, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$<<'](param);\n      }\n\n      self.$each();\n\n      if (result !== undefined) {\n        return result;\n      }\n    ;\n      return hash;\n    }, $Enumerable_group_by$52.$$arity = 0);\n    \n    Opal.def(self, '$include?', $Enumerable_include$ques$54 = function(obj) {try {\n\n      var $$55, self = this;\n\n      \n      $send(self, 'each', [], ($$55 = function($a){var self = $$55.$$s || this, $post_args, args;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        if ($$($nesting, 'Opal').$destructure(args)['$=='](obj)) {\n          Opal.ret(true)\n        } else {\n          return nil\n        };}, $$55.$$s = self, $$55.$$arity = -1, $$55));\n      return false;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_include$ques$54.$$arity = 1);\n    \n    Opal.def(self, '$inject', $Enumerable_inject$56 = function $$inject(object, sym) {\n      var $iter = $Enumerable_inject$56.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_inject$56.$$p = null;\n      \n      \n      if ($iter) $Enumerable_inject$56.$$p = null;;\n      ;\n      ;\n      \n      var result = object;\n\n      if (block !== nil && sym === undefined) {\n        self.$each.$$p = function() {\n          var value = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = value;\n            return;\n          }\n\n          value = Opal.yieldX(block, [result, value]);\n\n          result = value;\n        };\n      }\n      else {\n        if (sym === undefined) {\n          if (!$$($nesting, 'Symbol')['$==='](object)) {\n            self.$raise($$($nesting, 'TypeError'), \"\" + (object.$inspect()) + \" is not a Symbol\");\n          }\n\n          sym    = object;\n          result = undefined;\n        }\n\n        self.$each.$$p = function() {\n          var value = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = value;\n            return;\n          }\n\n          result = (result).$__send__(sym, value);\n        };\n      }\n\n      self.$each();\n\n      return result == undefined ? nil : result;\n    ;\n    }, $Enumerable_inject$56.$$arity = -1);\n    \n    Opal.def(self, '$lazy', $Enumerable_lazy$57 = function $$lazy() {\n      var $$58, self = this;\n\n      return $send($$$($$($nesting, 'Enumerator'), 'Lazy'), 'new', [self, self.$enumerator_size()], ($$58 = function(enum$, $a){var self = $$58.$$s || this, $post_args, args;\n\n      \n        \n        if (enum$ == null) {\n          enum$ = nil;\n        };\n        \n        $post_args = Opal.slice.call(arguments, 1, arguments.length);\n        \n        args = $post_args;;\n        return $send(enum$, 'yield', Opal.to_a(args));}, $$58.$$s = self, $$58.$$arity = -2, $$58))\n    }, $Enumerable_lazy$57.$$arity = 0);\n    \n    Opal.def(self, '$enumerator_size', $Enumerable_enumerator_size$59 = function $$enumerator_size() {\n      var self = this;\n\n      if ($truthy(self['$respond_to?'](\"size\"))) {\n        return self.$size()\n      } else {\n        return nil\n      }\n    }, $Enumerable_enumerator_size$59.$$arity = 0);\n    Opal.alias(self, \"map\", \"collect\");\n    \n    Opal.def(self, '$max', $Enumerable_max$60 = function $$max(n) {\n      var $iter = $Enumerable_max$60.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_max$60.$$p = null;\n      \n      \n      if ($iter) $Enumerable_max$60.$$p = null;;\n      ;\n      \n      if (n === undefined || n === nil) {\n        var result, value;\n\n        self.$each.$$p = function() {\n          var item = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = item;\n            return;\n          }\n\n          if (block !== nil) {\n            value = Opal.yieldX(block, [item, result]);\n          } else {\n            value = (item)['$<=>'](result);\n          }\n\n          if (value === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"comparison failed\");\n          }\n\n          if (value > 0) {\n            result = item;\n          }\n        }\n\n        self.$each();\n\n        if (result === undefined) {\n          return nil;\n        } else {\n          return result;\n        }\n      }\n    ;\n      n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n      return $send(self, 'sort', [], block.$to_proc()).$reverse().$first(n);\n    }, $Enumerable_max$60.$$arity = -1);\n    \n    Opal.def(self, '$max_by', $Enumerable_max_by$61 = function $$max_by() {\n      var $iter = $Enumerable_max_by$61.$$p, block = $iter || nil, $$62, self = this;\n\n      if ($iter) $Enumerable_max_by$61.$$p = null;\n      \n      \n      if ($iter) $Enumerable_max_by$61.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"max_by\"], ($$62 = function(){var self = $$62.$$s || this;\n\n        return self.$enumerator_size()}, $$62.$$s = self, $$62.$$arity = 0, $$62))\n      };\n      \n      var result,\n          by;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if (result === undefined) {\n          result = param;\n          by     = value;\n          return;\n        }\n\n        if ((value)['$<=>'](by) > 0) {\n          result = param\n          by     = value;\n        }\n      };\n\n      self.$each();\n\n      return result === undefined ? nil : result;\n    ;\n    }, $Enumerable_max_by$61.$$arity = 0);\n    Opal.alias(self, \"member?\", \"include?\");\n    \n    Opal.def(self, '$min', $Enumerable_min$63 = function $$min() {\n      var $iter = $Enumerable_min$63.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_min$63.$$p = null;\n      \n      \n      if ($iter) $Enumerable_min$63.$$p = null;;\n      \n      var result;\n\n      if (block !== nil) {\n        self.$each.$$p = function() {\n          var param = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = param;\n            return;\n          }\n\n          var value = block(param, result);\n\n          if (value === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"comparison failed\");\n          }\n\n          if (value < 0) {\n            result = param;\n          }\n        };\n      }\n      else {\n        self.$each.$$p = function() {\n          var param = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = param;\n            return;\n          }\n\n          if ($$($nesting, 'Opal').$compare(param, result) < 0) {\n            result = param;\n          }\n        };\n      }\n\n      self.$each();\n\n      return result === undefined ? nil : result;\n    ;\n    }, $Enumerable_min$63.$$arity = 0);\n    \n    Opal.def(self, '$min_by', $Enumerable_min_by$64 = function $$min_by() {\n      var $iter = $Enumerable_min_by$64.$$p, block = $iter || nil, $$65, self = this;\n\n      if ($iter) $Enumerable_min_by$64.$$p = null;\n      \n      \n      if ($iter) $Enumerable_min_by$64.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"min_by\"], ($$65 = function(){var self = $$65.$$s || this;\n\n        return self.$enumerator_size()}, $$65.$$s = self, $$65.$$arity = 0, $$65))\n      };\n      \n      var result,\n          by;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if (result === undefined) {\n          result = param;\n          by     = value;\n          return;\n        }\n\n        if ((value)['$<=>'](by) < 0) {\n          result = param\n          by     = value;\n        }\n      };\n\n      self.$each();\n\n      return result === undefined ? nil : result;\n    ;\n    }, $Enumerable_min_by$64.$$arity = 0);\n    \n    Opal.def(self, '$minmax', $Enumerable_minmax$66 = function $$minmax() {\n      var $iter = $Enumerable_minmax$66.$$p, block = $iter || nil, $a, $$67, self = this;\n\n      if ($iter) $Enumerable_minmax$66.$$p = null;\n      \n      \n      if ($iter) $Enumerable_minmax$66.$$p = null;;\n      block = ($truthy($a = block) ? $a : $send(self, 'proc', [], ($$67 = function(a, b){var self = $$67.$$s || this;\n\n      \n        \n        if (a == null) {\n          a = nil;\n        };\n        \n        if (b == null) {\n          b = nil;\n        };\n        return a['$<=>'](b);}, $$67.$$s = self, $$67.$$arity = 2, $$67)));\n      \n      var min = nil, max = nil, first_time = true;\n\n      self.$each.$$p = function() {\n        var element = $$($nesting, 'Opal').$destructure(arguments);\n        if (first_time) {\n          min = max = element;\n          first_time = false;\n        } else {\n          var min_cmp = block.$call(min, element);\n\n          if (min_cmp === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"comparison failed\")\n          } else if (min_cmp > 0) {\n            min = element;\n          }\n\n          var max_cmp = block.$call(max, element);\n\n          if (max_cmp === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"comparison failed\")\n          } else if (max_cmp < 0) {\n            max = element;\n          }\n        }\n      }\n\n      self.$each();\n\n      return [min, max];\n    ;\n    }, $Enumerable_minmax$66.$$arity = 0);\n    \n    Opal.def(self, '$minmax_by', $Enumerable_minmax_by$68 = function $$minmax_by() {\n      var $iter = $Enumerable_minmax_by$68.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_minmax_by$68.$$p = null;\n      \n      \n      if ($iter) $Enumerable_minmax_by$68.$$p = null;;\n      return self.$raise($$($nesting, 'NotImplementedError'));\n    }, $Enumerable_minmax_by$68.$$arity = 0);\n    \n    Opal.def(self, '$none?', $Enumerable_none$ques$69 = function(pattern) {try {\n\n      var $iter = $Enumerable_none$ques$69.$$p, block = $iter || nil, $$70, $$71, $$72, self = this;\n\n      if ($iter) $Enumerable_none$ques$69.$$p = null;\n      \n      \n      if ($iter) $Enumerable_none$ques$69.$$p = null;;\n      ;\n      if ($truthy(pattern !== undefined)) {\n        $send(self, 'each', [], ($$70 = function($a){var self = $$70.$$s || this, $post_args, value, comparable = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          comparable = comparableForPattern(value);\n          if ($truthy($send(pattern, 'public_send', [\"===\"].concat(Opal.to_a(comparable))))) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$70.$$s = self, $$70.$$arity = -1, $$70))\n      } else if ((block !== nil)) {\n        $send(self, 'each', [], ($$71 = function($a){var self = $$71.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$71.$$s = self, $$71.$$arity = -1, $$71))\n      } else {\n        $send(self, 'each', [], ($$72 = function($a){var self = $$72.$$s || this, $post_args, value, item = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          item = $$($nesting, 'Opal').$destructure(value);\n          if ($truthy(item)) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$72.$$s = self, $$72.$$arity = -1, $$72))\n      };\n      return true;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_none$ques$69.$$arity = -1);\n    \n    Opal.def(self, '$one?', $Enumerable_one$ques$73 = function(pattern) {try {\n\n      var $iter = $Enumerable_one$ques$73.$$p, block = $iter || nil, $$74, $$75, $$76, self = this, count = nil;\n\n      if ($iter) $Enumerable_one$ques$73.$$p = null;\n      \n      \n      if ($iter) $Enumerable_one$ques$73.$$p = null;;\n      ;\n      count = 0;\n      if ($truthy(pattern !== undefined)) {\n        $send(self, 'each', [], ($$74 = function($a){var self = $$74.$$s || this, $post_args, value, comparable = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          comparable = comparableForPattern(value);\n          if ($truthy($send(pattern, 'public_send', [\"===\"].concat(Opal.to_a(comparable))))) {\n            \n            count = $rb_plus(count, 1);\n            if ($truthy($rb_gt(count, 1))) {\n              Opal.ret(false)\n            } else {\n              return nil\n            };\n          } else {\n            return nil\n          };}, $$74.$$s = self, $$74.$$arity = -1, $$74))\n      } else if ((block !== nil)) {\n        $send(self, 'each', [], ($$75 = function($a){var self = $$75.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n          } else {\n            return nil;\n          };\n          count = $rb_plus(count, 1);\n          if ($truthy($rb_gt(count, 1))) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$75.$$s = self, $$75.$$arity = -1, $$75))\n      } else {\n        $send(self, 'each', [], ($$76 = function($a){var self = $$76.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy($$($nesting, 'Opal').$destructure(value))) {\n          } else {\n            return nil;\n          };\n          count = $rb_plus(count, 1);\n          if ($truthy($rb_gt(count, 1))) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$76.$$s = self, $$76.$$arity = -1, $$76))\n      };\n      return count['$=='](1);\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_one$ques$73.$$arity = -1);\n    \n    Opal.def(self, '$partition', $Enumerable_partition$77 = function $$partition() {\n      var $iter = $Enumerable_partition$77.$$p, block = $iter || nil, $$78, self = this;\n\n      if ($iter) $Enumerable_partition$77.$$p = null;\n      \n      \n      if ($iter) $Enumerable_partition$77.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"partition\"], ($$78 = function(){var self = $$78.$$s || this;\n\n        return self.$enumerator_size()}, $$78.$$s = self, $$78.$$arity = 0, $$78))\n      };\n      \n      var truthy = [], falsy = [], result;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if ($truthy(value)) {\n          truthy.push(param);\n        }\n        else {\n          falsy.push(param);\n        }\n      };\n\n      self.$each();\n\n      return [truthy, falsy];\n    ;\n    }, $Enumerable_partition$77.$$arity = 0);\n    Opal.alias(self, \"reduce\", \"inject\");\n    \n    Opal.def(self, '$reject', $Enumerable_reject$79 = function $$reject() {\n      var $iter = $Enumerable_reject$79.$$p, block = $iter || nil, $$80, self = this;\n\n      if ($iter) $Enumerable_reject$79.$$p = null;\n      \n      \n      if ($iter) $Enumerable_reject$79.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject\"], ($$80 = function(){var self = $$80.$$s || this;\n\n        return self.$enumerator_size()}, $$80.$$s = self, $$80.$$arity = 0, $$80))\n      };\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if ($falsy(value)) {\n          result.push(param);\n        }\n      };\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_reject$79.$$arity = 0);\n    \n    Opal.def(self, '$reverse_each', $Enumerable_reverse_each$81 = function $$reverse_each() {\n      var $iter = $Enumerable_reverse_each$81.$$p, block = $iter || nil, $$82, self = this;\n\n      if ($iter) $Enumerable_reverse_each$81.$$p = null;\n      \n      \n      if ($iter) $Enumerable_reverse_each$81.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reverse_each\"], ($$82 = function(){var self = $$82.$$s || this;\n\n        return self.$enumerator_size()}, $$82.$$s = self, $$82.$$arity = 0, $$82))\n      };\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        result.push(arguments);\n      };\n\n      self.$each();\n\n      for (var i = result.length - 1; i >= 0; i--) {\n        Opal.yieldX(block, result[i]);\n      }\n\n      return result;\n    ;\n    }, $Enumerable_reverse_each$81.$$arity = 0);\n    Opal.alias(self, \"select\", \"find_all\");\n    \n    Opal.def(self, '$slice_before', $Enumerable_slice_before$83 = function $$slice_before(pattern) {\n      var $iter = $Enumerable_slice_before$83.$$p, block = $iter || nil, $$84, self = this;\n\n      if ($iter) $Enumerable_slice_before$83.$$p = null;\n      \n      \n      if ($iter) $Enumerable_slice_before$83.$$p = null;;\n      ;\n      if ($truthy(pattern === undefined && block === nil)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"both pattern and block are given\")};\n      if ($truthy(pattern !== undefined && block !== nil || arguments.length > 1)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" expected 1)\")};\n      return $send($$($nesting, 'Enumerator'), 'new', [], ($$84 = function(e){var self = $$84.$$s || this;\n\n      \n        \n        if (e == null) {\n          e = nil;\n        };\n        \n        var slice = [];\n\n        if (block !== nil) {\n          if (pattern === undefined) {\n            self.$each.$$p = function() {\n              var param = $$($nesting, 'Opal').$destructure(arguments),\n                  value = Opal.yield1(block, param);\n\n              if ($truthy(value) && slice.length > 0) {\n                e['$<<'](slice);\n                slice = [];\n              }\n\n              slice.push(param);\n            };\n          }\n          else {\n            self.$each.$$p = function() {\n              var param = $$($nesting, 'Opal').$destructure(arguments),\n                  value = block(param, pattern.$dup());\n\n              if ($truthy(value) && slice.length > 0) {\n                e['$<<'](slice);\n                slice = [];\n              }\n\n              slice.push(param);\n            };\n          }\n        }\n        else {\n          self.$each.$$p = function() {\n            var param = $$($nesting, 'Opal').$destructure(arguments),\n                value = pattern['$==='](param);\n\n            if ($truthy(value) && slice.length > 0) {\n              e['$<<'](slice);\n              slice = [];\n            }\n\n            slice.push(param);\n          };\n        }\n\n        self.$each();\n\n        if (slice.length > 0) {\n          e['$<<'](slice);\n        }\n      ;}, $$84.$$s = self, $$84.$$arity = 1, $$84));\n    }, $Enumerable_slice_before$83.$$arity = -1);\n    \n    Opal.def(self, '$slice_after', $Enumerable_slice_after$85 = function $$slice_after(pattern) {\n      var $iter = $Enumerable_slice_after$85.$$p, block = $iter || nil, $$86, $$87, self = this;\n\n      if ($iter) $Enumerable_slice_after$85.$$p = null;\n      \n      \n      if ($iter) $Enumerable_slice_after$85.$$p = null;;\n      ;\n      if ($truthy(pattern === undefined && block === nil)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"both pattern and block are given\")};\n      if ($truthy(pattern !== undefined && block !== nil || arguments.length > 1)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" expected 1)\")};\n      if ($truthy(pattern !== undefined)) {\n        block = $send(self, 'proc', [], ($$86 = function(e){var self = $$86.$$s || this;\n\n        \n          \n          if (e == null) {\n            e = nil;\n          };\n          return pattern['$==='](e);}, $$86.$$s = self, $$86.$$arity = 1, $$86))};\n      return $send($$($nesting, 'Enumerator'), 'new', [], ($$87 = function(yielder){var self = $$87.$$s || this;\n\n      \n        \n        if (yielder == null) {\n          yielder = nil;\n        };\n        \n        var accumulate;\n\n        self.$each.$$p = function() {\n          var element = $$($nesting, 'Opal').$destructure(arguments),\n              end_chunk = Opal.yield1(block, element);\n\n          if (accumulate == null) {\n            accumulate = [];\n          }\n\n          if ($truthy(end_chunk)) {\n            accumulate.push(element);\n            yielder.$yield(accumulate);\n            accumulate = null;\n          } else {\n            accumulate.push(element)\n          }\n        }\n\n        self.$each();\n\n        if (accumulate != null) {\n          yielder.$yield(accumulate);\n        }\n      ;}, $$87.$$s = self, $$87.$$arity = 1, $$87));\n    }, $Enumerable_slice_after$85.$$arity = -1);\n    \n    Opal.def(self, '$slice_when', $Enumerable_slice_when$88 = function $$slice_when() {\n      var $iter = $Enumerable_slice_when$88.$$p, block = $iter || nil, $$89, self = this;\n\n      if ($iter) $Enumerable_slice_when$88.$$p = null;\n      \n      \n      if ($iter) $Enumerable_slice_when$88.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (0 for 1)\")\n      };\n      return $send($$($nesting, 'Enumerator'), 'new', [], ($$89 = function(yielder){var self = $$89.$$s || this;\n\n      \n        \n        if (yielder == null) {\n          yielder = nil;\n        };\n        \n        var slice = nil, last_after = nil;\n\n        self.$each_cons.$$p = function() {\n          var params = $$($nesting, 'Opal').$destructure(arguments),\n              before = params[0],\n              after = params[1],\n              match = Opal.yieldX(block, [before, after]);\n\n          last_after = after;\n\n          if (slice === nil) {\n            slice = [];\n          }\n\n          if ($truthy(match)) {\n            slice.push(before);\n            yielder.$yield(slice);\n            slice = [];\n          } else {\n            slice.push(before);\n          }\n        }\n\n        self.$each_cons(2);\n\n        if (slice !== nil) {\n          slice.push(last_after);\n          yielder.$yield(slice);\n        }\n      ;}, $$89.$$s = self, $$89.$$arity = 1, $$89));\n    }, $Enumerable_slice_when$88.$$arity = 0);\n    \n    Opal.def(self, '$sort', $Enumerable_sort$90 = function $$sort() {\n      var $iter = $Enumerable_sort$90.$$p, block = $iter || nil, $$91, self = this, ary = nil;\n\n      if ($iter) $Enumerable_sort$90.$$p = null;\n      \n      \n      if ($iter) $Enumerable_sort$90.$$p = null;;\n      ary = self.$to_a();\n      if ((block !== nil)) {\n      } else {\n        block = $lambda(($$91 = function(a, b){var self = $$91.$$s || this;\n\n        \n          \n          if (a == null) {\n            a = nil;\n          };\n          \n          if (b == null) {\n            b = nil;\n          };\n          return a['$<=>'](b);}, $$91.$$s = self, $$91.$$arity = 2, $$91))\n      };\n      return $send(ary, 'sort', [], block.$to_proc());\n    }, $Enumerable_sort$90.$$arity = 0);\n    \n    Opal.def(self, '$sort_by', $Enumerable_sort_by$92 = function $$sort_by() {\n      var $iter = $Enumerable_sort_by$92.$$p, block = $iter || nil, $$93, $$94, $$95, $$96, self = this, dup = nil;\n\n      if ($iter) $Enumerable_sort_by$92.$$p = null;\n      \n      \n      if ($iter) $Enumerable_sort_by$92.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"sort_by\"], ($$93 = function(){var self = $$93.$$s || this;\n\n        return self.$enumerator_size()}, $$93.$$s = self, $$93.$$arity = 0, $$93))\n      };\n      dup = $send(self, 'map', [], ($$94 = function(){var self = $$94.$$s || this, arg = nil;\n\n      \n        arg = $$($nesting, 'Opal').$destructure(arguments);\n        return [Opal.yield1(block, arg), arg];}, $$94.$$s = self, $$94.$$arity = 0, $$94));\n      $send(dup, 'sort!', [], ($$95 = function(a, b){var self = $$95.$$s || this;\n\n      \n        \n        if (a == null) {\n          a = nil;\n        };\n        \n        if (b == null) {\n          b = nil;\n        };\n        return (a[0])['$<=>'](b[0]);}, $$95.$$s = self, $$95.$$arity = 2, $$95));\n      return $send(dup, 'map!', [], ($$96 = function(i){var self = $$96.$$s || this;\n\n      \n        \n        if (i == null) {\n          i = nil;\n        };\n        return i[1];;}, $$96.$$s = self, $$96.$$arity = 1, $$96));\n    }, $Enumerable_sort_by$92.$$arity = 0);\n    \n    Opal.def(self, '$sum', $Enumerable_sum$97 = function $$sum(initial) {\n      var $$98, $iter = $Enumerable_sum$97.$$p, $yield = $iter || nil, self = this, result = nil;\n\n      if ($iter) $Enumerable_sum$97.$$p = null;\n      \n      \n      if (initial == null) {\n        initial = 0;\n      };\n      result = initial;\n      $send(self, 'each', [], ($$98 = function($a){var self = $$98.$$s || this, $post_args, args, item = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        item = (function() {if (($yield !== nil)) {\n          return Opal.yieldX($yield, Opal.to_a(args));\n        } else {\n          return $$($nesting, 'Opal').$destructure(args)\n        }; return nil; })();\n        return (result = $rb_plus(result, item));}, $$98.$$s = self, $$98.$$arity = -1, $$98));\n      return result;\n    }, $Enumerable_sum$97.$$arity = -1);\n    \n    Opal.def(self, '$take', $Enumerable_take$99 = function $$take(num) {\n      var self = this;\n\n      return self.$first(num)\n    }, $Enumerable_take$99.$$arity = 1);\n    \n    Opal.def(self, '$take_while', $Enumerable_take_while$100 = function $$take_while() {try {\n\n      var $iter = $Enumerable_take_while$100.$$p, block = $iter || nil, $$101, self = this, result = nil;\n\n      if ($iter) $Enumerable_take_while$100.$$p = null;\n      \n      \n      if ($iter) $Enumerable_take_while$100.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return self.$enum_for(\"take_while\")\n      };\n      result = [];\n      return $send(self, 'each', [], ($$101 = function($a){var self = $$101.$$s || this, $post_args, args, value = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        value = $$($nesting, 'Opal').$destructure(args);\n        if ($truthy(Opal.yield1(block, value))) {\n        } else {\n          Opal.ret(result)\n        };\n        return result.push(value);;}, $$101.$$s = self, $$101.$$arity = -1, $$101));\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_take_while$100.$$arity = 0);\n    \n    Opal.def(self, '$uniq', $Enumerable_uniq$102 = function $$uniq() {\n      var $iter = $Enumerable_uniq$102.$$p, block = $iter || nil, $$103, self = this, hash = nil;\n\n      if ($iter) $Enumerable_uniq$102.$$p = null;\n      \n      \n      if ($iter) $Enumerable_uniq$102.$$p = null;;\n      hash = $hash2([], {});\n      $send(self, 'each', [], ($$103 = function($a){var self = $$103.$$s || this, $post_args, args, value = nil, produced = nil, $writer = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        value = $$($nesting, 'Opal').$destructure(args);\n        produced = (function() {if ((block !== nil)) {\n          return Opal.yield1(block, value);\n        } else {\n          return value\n        }; return nil; })();\n        if ($truthy(hash['$key?'](produced))) {\n          return nil\n        } else {\n          \n          $writer = [produced, value];\n          $send(hash, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        };}, $$103.$$s = self, $$103.$$arity = -1, $$103));\n      return hash.$values();\n    }, $Enumerable_uniq$102.$$arity = 0);\n    Opal.alias(self, \"to_a\", \"entries\");\n    \n    Opal.def(self, '$zip', $Enumerable_zip$104 = function $$zip($a) {\n      var $iter = $Enumerable_zip$104.$$p, block = $iter || nil, $post_args, others, self = this;\n\n      if ($iter) $Enumerable_zip$104.$$p = null;\n      \n      \n      if ($iter) $Enumerable_zip$104.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      others = $post_args;;\n      return $send(self.$to_a(), 'zip', Opal.to_a(others));\n    }, $Enumerable_zip$104.$$arity = -1);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/enumerator\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $falsy = Opal.falsy;\n\n  Opal.add_stubs(['$require', '$include', '$allocate', '$new', '$to_proc', '$coerce_to', '$nil?', '$empty?', '$+', '$class', '$__send__', '$===', '$call', '$enum_for', '$size', '$destructure', '$inspect', '$any?', '$[]', '$raise', '$yield', '$each', '$enumerator_size', '$respond_to?', '$try_convert', '$<', '$for']);\n  \n  self.$require(\"corelib/enumerable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Enumerator');\n\n    var $nesting = [self].concat($parent_nesting), $Enumerator_for$1, $Enumerator_initialize$2, $Enumerator_each$3, $Enumerator_size$4, $Enumerator_with_index$5, $Enumerator_inspect$7;\n\n    self.$$prototype.size = self.$$prototype.args = self.$$prototype.object = self.$$prototype.method = nil;\n    \n    self.$include($$($nesting, 'Enumerable'));\n    self.$$prototype.$$is_enumerator = true;\n    Opal.defs(self, '$for', $Enumerator_for$1 = function(object, $a, $b) {\n      var $iter = $Enumerator_for$1.$$p, block = $iter || nil, $post_args, method, args, self = this;\n\n      if ($iter) $Enumerator_for$1.$$p = null;\n      \n      \n      if ($iter) $Enumerator_for$1.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      if ($post_args.length > 0) {\n        method = $post_args[0];\n        $post_args.splice(0, 1);\n      }\n      if (method == null) {\n        method = \"each\";\n      };\n      \n      args = $post_args;;\n      \n      var obj = self.$allocate();\n\n      obj.object = object;\n      obj.size   = block;\n      obj.method = method;\n      obj.args   = args;\n\n      return obj;\n    ;\n    }, $Enumerator_for$1.$$arity = -2);\n    \n    Opal.def(self, '$initialize', $Enumerator_initialize$2 = function $$initialize($a) {\n      var $iter = $Enumerator_initialize$2.$$p, block = $iter || nil, $post_args, self = this;\n\n      if ($iter) $Enumerator_initialize$2.$$p = null;\n      \n      \n      if ($iter) $Enumerator_initialize$2.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      if ($truthy(block)) {\n        \n        self.object = $send($$($nesting, 'Generator'), 'new', [], block.$to_proc());\n        self.method = \"each\";\n        self.args = [];\n        self.size = arguments[0] || nil;\n        if ($truthy(self.size)) {\n          return (self.size = $$($nesting, 'Opal').$coerce_to(self.size, $$($nesting, 'Integer'), \"to_int\"))\n        } else {\n          return nil\n        };\n      } else {\n        \n        self.object = arguments[0];\n        self.method = arguments[1] || \"each\";\n        self.args = $slice.call(arguments, 2);\n        return (self.size = nil);\n      };\n    }, $Enumerator_initialize$2.$$arity = -1);\n    \n    Opal.def(self, '$each', $Enumerator_each$3 = function $$each($a) {\n      var $iter = $Enumerator_each$3.$$p, block = $iter || nil, $post_args, args, $b, self = this;\n\n      if ($iter) $Enumerator_each$3.$$p = null;\n      \n      \n      if ($iter) $Enumerator_each$3.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(($truthy($b = block['$nil?']()) ? args['$empty?']() : $b))) {\n        return self};\n      args = $rb_plus(self.args, args);\n      if ($truthy(block['$nil?']())) {\n        return $send(self.$class(), 'new', [self.object, self.method].concat(Opal.to_a(args)))};\n      return $send(self.object, '__send__', [self.method].concat(Opal.to_a(args)), block.$to_proc());\n    }, $Enumerator_each$3.$$arity = -1);\n    \n    Opal.def(self, '$size', $Enumerator_size$4 = function $$size() {\n      var self = this;\n\n      if ($truthy($$($nesting, 'Proc')['$==='](self.size))) {\n        return $send(self.size, 'call', Opal.to_a(self.args))\n      } else {\n        return self.size\n      }\n    }, $Enumerator_size$4.$$arity = 0);\n    \n    Opal.def(self, '$with_index', $Enumerator_with_index$5 = function $$with_index(offset) {\n      var $iter = $Enumerator_with_index$5.$$p, block = $iter || nil, $$6, self = this;\n\n      if ($iter) $Enumerator_with_index$5.$$p = null;\n      \n      \n      if ($iter) $Enumerator_with_index$5.$$p = null;;\n      \n      if (offset == null) {\n        offset = 0;\n      };\n      offset = (function() {if ($truthy(offset)) {\n        return $$($nesting, 'Opal').$coerce_to(offset, $$($nesting, 'Integer'), \"to_int\")\n      } else {\n        return 0\n      }; return nil; })();\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"with_index\", offset], ($$6 = function(){var self = $$6.$$s || this;\n\n        return self.$size()}, $$6.$$s = self, $$6.$$arity = 0, $$6))\n      };\n      \n      var result, index = offset;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = block(param, index);\n\n        index++;\n\n        return value;\n      }\n\n      return self.$each();\n    ;\n    }, $Enumerator_with_index$5.$$arity = -1);\n    Opal.alias(self, \"with_object\", \"each_with_object\");\n    \n    Opal.def(self, '$inspect', $Enumerator_inspect$7 = function $$inspect() {\n      var self = this, result = nil;\n\n      \n      result = \"\" + \"#<\" + (self.$class()) + \": \" + (self.object.$inspect()) + \":\" + (self.method);\n      if ($truthy(self.args['$any?']())) {\n        result = $rb_plus(result, \"\" + \"(\" + (self.args.$inspect()['$[]']($$($nesting, 'Range').$new(1, -2))) + \")\")};\n      return $rb_plus(result, \">\");\n    }, $Enumerator_inspect$7.$$arity = 0);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Generator');\n\n      var $nesting = [self].concat($parent_nesting), $Generator_initialize$8, $Generator_each$9;\n\n      self.$$prototype.block = nil;\n      \n      self.$include($$($nesting, 'Enumerable'));\n      \n      Opal.def(self, '$initialize', $Generator_initialize$8 = function $$initialize() {\n        var $iter = $Generator_initialize$8.$$p, block = $iter || nil, self = this;\n\n        if ($iter) $Generator_initialize$8.$$p = null;\n        \n        \n        if ($iter) $Generator_initialize$8.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'LocalJumpError'), \"no block given\")\n        };\n        return (self.block = block);\n      }, $Generator_initialize$8.$$arity = 0);\n      return (Opal.def(self, '$each', $Generator_each$9 = function $$each($a) {\n        var $iter = $Generator_each$9.$$p, block = $iter || nil, $post_args, args, self = this, yielder = nil;\n\n        if ($iter) $Generator_each$9.$$p = null;\n        \n        \n        if ($iter) $Generator_each$9.$$p = null;;\n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        yielder = $send($$($nesting, 'Yielder'), 'new', [], block.$to_proc());\n        \n        try {\n          args.unshift(yielder);\n\n          Opal.yieldX(self.block, args);\n        }\n        catch (e) {\n          if (e === $breaker) {\n            return $breaker.$v;\n          }\n          else {\n            throw e;\n          }\n        }\n      ;\n        return self;\n      }, $Generator_each$9.$$arity = -1), nil) && 'each';\n    })($nesting[0], null, $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Yielder');\n\n      var $nesting = [self].concat($parent_nesting), $Yielder_initialize$10, $Yielder_yield$11, $Yielder_$lt$lt$12;\n\n      self.$$prototype.block = nil;\n      \n      \n      Opal.def(self, '$initialize', $Yielder_initialize$10 = function $$initialize() {\n        var $iter = $Yielder_initialize$10.$$p, block = $iter || nil, self = this;\n\n        if ($iter) $Yielder_initialize$10.$$p = null;\n        \n        \n        if ($iter) $Yielder_initialize$10.$$p = null;;\n        return (self.block = block);\n      }, $Yielder_initialize$10.$$arity = 0);\n      \n      Opal.def(self, '$yield', $Yielder_yield$11 = function($a) {\n        var $post_args, values, self = this;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        values = $post_args;;\n        \n        var value = Opal.yieldX(self.block, values);\n\n        if (value === $breaker) {\n          throw $breaker;\n        }\n\n        return value;\n      ;\n      }, $Yielder_yield$11.$$arity = -1);\n      return (Opal.def(self, '$<<', $Yielder_$lt$lt$12 = function($a) {\n        var $post_args, values, self = this;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        values = $post_args;;\n        $send(self, 'yield', Opal.to_a(values));\n        return self;\n      }, $Yielder_$lt$lt$12.$$arity = -1), nil) && '<<';\n    })($nesting[0], null, $nesting);\n    return (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Lazy');\n\n      var $nesting = [self].concat($parent_nesting), $Lazy_initialize$13, $Lazy_lazy$16, $Lazy_collect$17, $Lazy_collect_concat$19, $Lazy_drop$23, $Lazy_drop_while$25, $Lazy_enum_for$27, $Lazy_find_all$28, $Lazy_grep$30, $Lazy_reject$33, $Lazy_take$35, $Lazy_take_while$37, $Lazy_inspect$39;\n\n      self.$$prototype.enumerator = nil;\n      \n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'StopLazyError');\n\n        var $nesting = [self].concat($parent_nesting);\n\n        return nil\n      })($nesting[0], $$($nesting, 'Exception'), $nesting);\n      \n      Opal.def(self, '$initialize', $Lazy_initialize$13 = function $$initialize(object, size) {\n        var $iter = $Lazy_initialize$13.$$p, block = $iter || nil, $$14, self = this;\n\n        if ($iter) $Lazy_initialize$13.$$p = null;\n        \n        \n        if ($iter) $Lazy_initialize$13.$$p = null;;\n        \n        if (size == null) {\n          size = nil;\n        };\n        if ((block !== nil)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy new without a block\")\n        };\n        self.enumerator = object;\n        return $send(self, Opal.find_super_dispatcher(self, 'initialize', $Lazy_initialize$13, false), [size], ($$14 = function(yielder, $a){var self = $$14.$$s || this, $post_args, each_args, $$15;\n\n        \n          \n          if (yielder == null) {\n            yielder = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          each_args = $post_args;;\n          try {\n            return $send(object, 'each', Opal.to_a(each_args), ($$15 = function($b){var self = $$15.$$s || this, $post_args, args;\n\n            \n              \n              $post_args = Opal.slice.call(arguments, 0, arguments.length);\n              \n              args = $post_args;;\n              \n            args.unshift(yielder);\n\n            Opal.yieldX(block, args);\n          ;}, $$15.$$s = self, $$15.$$arity = -1, $$15))\n          } catch ($err) {\n            if (Opal.rescue($err, [$$($nesting, 'Exception')])) {\n              try {\n                return nil\n              } finally { Opal.pop_exception() }\n            } else { throw $err; }\n          };}, $$14.$$s = self, $$14.$$arity = -2, $$14));\n      }, $Lazy_initialize$13.$$arity = -2);\n      Opal.alias(self, \"force\", \"to_a\");\n      \n      Opal.def(self, '$lazy', $Lazy_lazy$16 = function $$lazy() {\n        var self = this;\n\n        return self\n      }, $Lazy_lazy$16.$$arity = 0);\n      \n      Opal.def(self, '$collect', $Lazy_collect$17 = function $$collect() {\n        var $iter = $Lazy_collect$17.$$p, block = $iter || nil, $$18, self = this;\n\n        if ($iter) $Lazy_collect$17.$$p = null;\n        \n        \n        if ($iter) $Lazy_collect$17.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy map without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, self.$enumerator_size()], ($$18 = function(enum$, $a){var self = $$18.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          enum$.$yield(value);\n        ;}, $$18.$$s = self, $$18.$$arity = -2, $$18));\n      }, $Lazy_collect$17.$$arity = 0);\n      \n      Opal.def(self, '$collect_concat', $Lazy_collect_concat$19 = function $$collect_concat() {\n        var $iter = $Lazy_collect_concat$19.$$p, block = $iter || nil, $$20, self = this;\n\n        if ($iter) $Lazy_collect_concat$19.$$p = null;\n        \n        \n        if ($iter) $Lazy_collect_concat$19.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy map without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$20 = function(enum$, $a){var self = $$20.$$s || this, $post_args, args, $$21, $$22;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          if ((value)['$respond_to?'](\"force\") && (value)['$respond_to?'](\"each\")) {\n            $send((value), 'each', [], ($$21 = function(v){var self = $$21.$$s || this;\n\n          \n            \n            if (v == null) {\n              v = nil;\n            };\n            return enum$.$yield(v);}, $$21.$$s = self, $$21.$$arity = 1, $$21))\n          }\n          else {\n            var array = $$($nesting, 'Opal').$try_convert(value, $$($nesting, 'Array'), \"to_ary\");\n\n            if (array === nil) {\n              enum$.$yield(value);\n            }\n            else {\n              $send((value), 'each', [], ($$22 = function(v){var self = $$22.$$s || this;\n\n          \n            \n            if (v == null) {\n              v = nil;\n            };\n            return enum$.$yield(v);}, $$22.$$s = self, $$22.$$arity = 1, $$22));\n            }\n          }\n        ;}, $$20.$$s = self, $$20.$$arity = -2, $$20));\n      }, $Lazy_collect_concat$19.$$arity = 0);\n      \n      Opal.def(self, '$drop', $Lazy_drop$23 = function $$drop(n) {\n        var $$24, self = this, current_size = nil, set_size = nil, dropped = nil;\n\n        \n        n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy($rb_lt(n, 0))) {\n          self.$raise($$($nesting, 'ArgumentError'), \"attempt to drop negative size\")};\n        current_size = self.$enumerator_size();\n        set_size = (function() {if ($truthy($$($nesting, 'Integer')['$==='](current_size))) {\n          if ($truthy($rb_lt(n, current_size))) {\n            return n\n          } else {\n            return current_size\n          }\n        } else {\n          return current_size\n        }; return nil; })();\n        dropped = 0;\n        return $send($$($nesting, 'Lazy'), 'new', [self, set_size], ($$24 = function(enum$, $a){var self = $$24.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy($rb_lt(dropped, n))) {\n            return (dropped = $rb_plus(dropped, 1))\n          } else {\n            return $send(enum$, 'yield', Opal.to_a(args))\n          };}, $$24.$$s = self, $$24.$$arity = -2, $$24));\n      }, $Lazy_drop$23.$$arity = 1);\n      \n      Opal.def(self, '$drop_while', $Lazy_drop_while$25 = function $$drop_while() {\n        var $iter = $Lazy_drop_while$25.$$p, block = $iter || nil, $$26, self = this, succeeding = nil;\n\n        if ($iter) $Lazy_drop_while$25.$$p = null;\n        \n        \n        if ($iter) $Lazy_drop_while$25.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy drop_while without a block\")\n        };\n        succeeding = true;\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$26 = function(enum$, $a){var self = $$26.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy(succeeding)) {\n            \n            var value = Opal.yieldX(block, args);\n\n            if ($falsy(value)) {\n              succeeding = false;\n\n              $send(enum$, 'yield', Opal.to_a(args));\n            }\n          \n          } else {\n            return $send(enum$, 'yield', Opal.to_a(args))\n          };}, $$26.$$s = self, $$26.$$arity = -2, $$26));\n      }, $Lazy_drop_while$25.$$arity = 0);\n      \n      Opal.def(self, '$enum_for', $Lazy_enum_for$27 = function $$enum_for($a, $b) {\n        var $iter = $Lazy_enum_for$27.$$p, block = $iter || nil, $post_args, method, args, self = this;\n\n        if ($iter) $Lazy_enum_for$27.$$p = null;\n        \n        \n        if ($iter) $Lazy_enum_for$27.$$p = null;;\n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        if ($post_args.length > 0) {\n          method = $post_args[0];\n          $post_args.splice(0, 1);\n        }\n        if (method == null) {\n          method = \"each\";\n        };\n        \n        args = $post_args;;\n        return $send(self.$class(), 'for', [self, method].concat(Opal.to_a(args)), block.$to_proc());\n      }, $Lazy_enum_for$27.$$arity = -1);\n      \n      Opal.def(self, '$find_all', $Lazy_find_all$28 = function $$find_all() {\n        var $iter = $Lazy_find_all$28.$$p, block = $iter || nil, $$29, self = this;\n\n        if ($iter) $Lazy_find_all$28.$$p = null;\n        \n        \n        if ($iter) $Lazy_find_all$28.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy select without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$29 = function(enum$, $a){var self = $$29.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          if ($truthy(value)) {\n            $send(enum$, 'yield', Opal.to_a(args));\n          }\n        ;}, $$29.$$s = self, $$29.$$arity = -2, $$29));\n      }, $Lazy_find_all$28.$$arity = 0);\n      Opal.alias(self, \"flat_map\", \"collect_concat\");\n      \n      Opal.def(self, '$grep', $Lazy_grep$30 = function $$grep(pattern) {\n        var $iter = $Lazy_grep$30.$$p, block = $iter || nil, $$31, $$32, self = this;\n\n        if ($iter) $Lazy_grep$30.$$p = null;\n        \n        \n        if ($iter) $Lazy_grep$30.$$p = null;;\n        if ($truthy(block)) {\n          return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$31 = function(enum$, $a){var self = $$31.$$s || this, $post_args, args;\n\n          \n            \n            if (enum$ == null) {\n              enum$ = nil;\n            };\n            \n            $post_args = Opal.slice.call(arguments, 1, arguments.length);\n            \n            args = $post_args;;\n            \n            var param = $$($nesting, 'Opal').$destructure(args),\n                value = pattern['$==='](param);\n\n            if ($truthy(value)) {\n              value = Opal.yield1(block, param);\n\n              enum$.$yield(Opal.yield1(block, param));\n            }\n          ;}, $$31.$$s = self, $$31.$$arity = -2, $$31))\n        } else {\n          return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$32 = function(enum$, $a){var self = $$32.$$s || this, $post_args, args;\n\n          \n            \n            if (enum$ == null) {\n              enum$ = nil;\n            };\n            \n            $post_args = Opal.slice.call(arguments, 1, arguments.length);\n            \n            args = $post_args;;\n            \n            var param = $$($nesting, 'Opal').$destructure(args),\n                value = pattern['$==='](param);\n\n            if ($truthy(value)) {\n              enum$.$yield(param);\n            }\n          ;}, $$32.$$s = self, $$32.$$arity = -2, $$32))\n        };\n      }, $Lazy_grep$30.$$arity = 1);\n      Opal.alias(self, \"map\", \"collect\");\n      Opal.alias(self, \"select\", \"find_all\");\n      \n      Opal.def(self, '$reject', $Lazy_reject$33 = function $$reject() {\n        var $iter = $Lazy_reject$33.$$p, block = $iter || nil, $$34, self = this;\n\n        if ($iter) $Lazy_reject$33.$$p = null;\n        \n        \n        if ($iter) $Lazy_reject$33.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy reject without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$34 = function(enum$, $a){var self = $$34.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          if ($falsy(value)) {\n            $send(enum$, 'yield', Opal.to_a(args));\n          }\n        ;}, $$34.$$s = self, $$34.$$arity = -2, $$34));\n      }, $Lazy_reject$33.$$arity = 0);\n      \n      Opal.def(self, '$take', $Lazy_take$35 = function $$take(n) {\n        var $$36, self = this, current_size = nil, set_size = nil, taken = nil;\n\n        \n        n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy($rb_lt(n, 0))) {\n          self.$raise($$($nesting, 'ArgumentError'), \"attempt to take negative size\")};\n        current_size = self.$enumerator_size();\n        set_size = (function() {if ($truthy($$($nesting, 'Integer')['$==='](current_size))) {\n          if ($truthy($rb_lt(n, current_size))) {\n            return n\n          } else {\n            return current_size\n          }\n        } else {\n          return current_size\n        }; return nil; })();\n        taken = 0;\n        return $send($$($nesting, 'Lazy'), 'new', [self, set_size], ($$36 = function(enum$, $a){var self = $$36.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy($rb_lt(taken, n))) {\n            \n            $send(enum$, 'yield', Opal.to_a(args));\n            return (taken = $rb_plus(taken, 1));\n          } else {\n            return self.$raise($$($nesting, 'StopLazyError'))\n          };}, $$36.$$s = self, $$36.$$arity = -2, $$36));\n      }, $Lazy_take$35.$$arity = 1);\n      \n      Opal.def(self, '$take_while', $Lazy_take_while$37 = function $$take_while() {\n        var $iter = $Lazy_take_while$37.$$p, block = $iter || nil, $$38, self = this;\n\n        if ($iter) $Lazy_take_while$37.$$p = null;\n        \n        \n        if ($iter) $Lazy_take_while$37.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy take_while without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$38 = function(enum$, $a){var self = $$38.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          if ($truthy(value)) {\n            $send(enum$, 'yield', Opal.to_a(args));\n          }\n          else {\n            self.$raise($$($nesting, 'StopLazyError'));\n          }\n        ;}, $$38.$$s = self, $$38.$$arity = -2, $$38));\n      }, $Lazy_take_while$37.$$arity = 0);\n      Opal.alias(self, \"to_enum\", \"enum_for\");\n      return (Opal.def(self, '$inspect', $Lazy_inspect$39 = function $$inspect() {\n        var self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \": \" + (self.enumerator.$inspect()) + \">\"\n      }, $Lazy_inspect$39.$$arity = 0), nil) && 'inspect';\n    })($nesting[0], self, $nesting);\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/numeric\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$require', '$include', '$instance_of?', '$class', '$Float', '$respond_to?', '$coerce', '$__send__', '$===', '$raise', '$equal?', '$-', '$*', '$div', '$<', '$-@', '$ceil', '$to_f', '$denominator', '$to_r', '$==', '$floor', '$/', '$%', '$Complex', '$zero?', '$numerator', '$abs', '$arg', '$coerce_to!', '$round', '$to_i', '$truncate', '$>']);\n  \n  self.$require(\"corelib/comparable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Numeric');\n\n    var $nesting = [self].concat($parent_nesting), $Numeric_coerce$1, $Numeric___coerced__$2, $Numeric_$lt_eq_gt$3, $Numeric_$plus$$4, $Numeric_$minus$$5, $Numeric_$percent$6, $Numeric_abs$7, $Numeric_abs2$8, $Numeric_angle$9, $Numeric_ceil$10, $Numeric_conj$11, $Numeric_denominator$12, $Numeric_div$13, $Numeric_divmod$14, $Numeric_fdiv$15, $Numeric_floor$16, $Numeric_i$17, $Numeric_imag$18, $Numeric_integer$ques$19, $Numeric_nonzero$ques$20, $Numeric_numerator$21, $Numeric_polar$22, $Numeric_quo$23, $Numeric_real$24, $Numeric_real$ques$25, $Numeric_rect$26, $Numeric_round$27, $Numeric_to_c$28, $Numeric_to_int$29, $Numeric_truncate$30, $Numeric_zero$ques$31, $Numeric_positive$ques$32, $Numeric_negative$ques$33, $Numeric_dup$34, $Numeric_clone$35, $Numeric_finite$ques$36, $Numeric_infinite$ques$37;\n\n    \n    self.$include($$($nesting, 'Comparable'));\n    \n    Opal.def(self, '$coerce', $Numeric_coerce$1 = function $$coerce(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$instance_of?'](self.$class()))) {\n        return [other, self]};\n      return [self.$Float(other), self.$Float(self)];\n    }, $Numeric_coerce$1.$$arity = 1);\n    \n    Opal.def(self, '$__coerced__', $Numeric___coerced__$2 = function $$__coerced__(method, other) {\n      var $a, $b, self = this, a = nil, b = nil, $case = nil;\n\n      if ($truthy(other['$respond_to?'](\"coerce\"))) {\n        \n        $b = other.$coerce(self), $a = Opal.to_ary($b), (a = ($a[0] == null ? nil : $a[0])), (b = ($a[1] == null ? nil : $a[1])), $b;\n        return a.$__send__(method, b);\n      } else {\n        return (function() {$case = method;\n        if (\"+\"['$===']($case) || \"-\"['$===']($case) || \"*\"['$===']($case) || \"/\"['$===']($case) || \"%\"['$===']($case) || \"&\"['$===']($case) || \"|\"['$===']($case) || \"^\"['$===']($case) || \"**\"['$===']($case)) {return self.$raise($$($nesting, 'TypeError'), \"\" + (other.$class()) + \" can't be coerced into Numeric\")}\n        else if (\">\"['$===']($case) || \">=\"['$===']($case) || \"<\"['$===']($case) || \"<=\"['$===']($case) || \"<=>\"['$===']($case)) {return self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")}\n        else { return nil }})()\n      }\n    }, $Numeric___coerced__$2.$$arity = 2);\n    \n    Opal.def(self, '$<=>', $Numeric_$lt_eq_gt$3 = function(other) {\n      var self = this;\n\n      \n      if ($truthy(self['$equal?'](other))) {\n        return 0};\n      return nil;\n    }, $Numeric_$lt_eq_gt$3.$$arity = 1);\n    \n    Opal.def(self, '$+@', $Numeric_$plus$$4 = function() {\n      var self = this;\n\n      return self\n    }, $Numeric_$plus$$4.$$arity = 0);\n    \n    Opal.def(self, '$-@', $Numeric_$minus$$5 = function() {\n      var self = this;\n\n      return $rb_minus(0, self)\n    }, $Numeric_$minus$$5.$$arity = 0);\n    \n    Opal.def(self, '$%', $Numeric_$percent$6 = function(other) {\n      var self = this;\n\n      return $rb_minus(self, $rb_times(other, self.$div(other)))\n    }, $Numeric_$percent$6.$$arity = 1);\n    \n    Opal.def(self, '$abs', $Numeric_abs$7 = function $$abs() {\n      var self = this;\n\n      if ($rb_lt(self, 0)) {\n        return self['$-@']()\n      } else {\n        return self\n      }\n    }, $Numeric_abs$7.$$arity = 0);\n    \n    Opal.def(self, '$abs2', $Numeric_abs2$8 = function $$abs2() {\n      var self = this;\n\n      return $rb_times(self, self)\n    }, $Numeric_abs2$8.$$arity = 0);\n    \n    Opal.def(self, '$angle', $Numeric_angle$9 = function $$angle() {\n      var self = this;\n\n      if ($rb_lt(self, 0)) {\n        return $$$($$($nesting, 'Math'), 'PI')\n      } else {\n        return 0\n      }\n    }, $Numeric_angle$9.$$arity = 0);\n    Opal.alias(self, \"arg\", \"angle\");\n    \n    Opal.def(self, '$ceil', $Numeric_ceil$10 = function $$ceil(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      return self.$to_f().$ceil(ndigits);\n    }, $Numeric_ceil$10.$$arity = -1);\n    \n    Opal.def(self, '$conj', $Numeric_conj$11 = function $$conj() {\n      var self = this;\n\n      return self\n    }, $Numeric_conj$11.$$arity = 0);\n    Opal.alias(self, \"conjugate\", \"conj\");\n    \n    Opal.def(self, '$denominator', $Numeric_denominator$12 = function $$denominator() {\n      var self = this;\n\n      return self.$to_r().$denominator()\n    }, $Numeric_denominator$12.$$arity = 0);\n    \n    Opal.def(self, '$div', $Numeric_div$13 = function $$div(other) {\n      var self = this;\n\n      \n      if (other['$=='](0)) {\n        self.$raise($$($nesting, 'ZeroDivisionError'), \"divided by o\")};\n      return $rb_divide(self, other).$floor();\n    }, $Numeric_div$13.$$arity = 1);\n    \n    Opal.def(self, '$divmod', $Numeric_divmod$14 = function $$divmod(other) {\n      var self = this;\n\n      return [self.$div(other), self['$%'](other)]\n    }, $Numeric_divmod$14.$$arity = 1);\n    \n    Opal.def(self, '$fdiv', $Numeric_fdiv$15 = function $$fdiv(other) {\n      var self = this;\n\n      return $rb_divide(self.$to_f(), other)\n    }, $Numeric_fdiv$15.$$arity = 1);\n    \n    Opal.def(self, '$floor', $Numeric_floor$16 = function $$floor(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      return self.$to_f().$floor(ndigits);\n    }, $Numeric_floor$16.$$arity = -1);\n    \n    Opal.def(self, '$i', $Numeric_i$17 = function $$i() {\n      var self = this;\n\n      return self.$Complex(0, self)\n    }, $Numeric_i$17.$$arity = 0);\n    \n    Opal.def(self, '$imag', $Numeric_imag$18 = function $$imag() {\n      var self = this;\n\n      return 0\n    }, $Numeric_imag$18.$$arity = 0);\n    Opal.alias(self, \"imaginary\", \"imag\");\n    \n    Opal.def(self, '$integer?', $Numeric_integer$ques$19 = function() {\n      var self = this;\n\n      return false\n    }, $Numeric_integer$ques$19.$$arity = 0);\n    Opal.alias(self, \"magnitude\", \"abs\");\n    Opal.alias(self, \"modulo\", \"%\");\n    \n    Opal.def(self, '$nonzero?', $Numeric_nonzero$ques$20 = function() {\n      var self = this;\n\n      if ($truthy(self['$zero?']())) {\n        return nil\n      } else {\n        return self\n      }\n    }, $Numeric_nonzero$ques$20.$$arity = 0);\n    \n    Opal.def(self, '$numerator', $Numeric_numerator$21 = function $$numerator() {\n      var self = this;\n\n      return self.$to_r().$numerator()\n    }, $Numeric_numerator$21.$$arity = 0);\n    Opal.alias(self, \"phase\", \"arg\");\n    \n    Opal.def(self, '$polar', $Numeric_polar$22 = function $$polar() {\n      var self = this;\n\n      return [self.$abs(), self.$arg()]\n    }, $Numeric_polar$22.$$arity = 0);\n    \n    Opal.def(self, '$quo', $Numeric_quo$23 = function $$quo(other) {\n      var self = this;\n\n      return $rb_divide($$($nesting, 'Opal')['$coerce_to!'](self, $$($nesting, 'Rational'), \"to_r\"), other)\n    }, $Numeric_quo$23.$$arity = 1);\n    \n    Opal.def(self, '$real', $Numeric_real$24 = function $$real() {\n      var self = this;\n\n      return self\n    }, $Numeric_real$24.$$arity = 0);\n    \n    Opal.def(self, '$real?', $Numeric_real$ques$25 = function() {\n      var self = this;\n\n      return true\n    }, $Numeric_real$ques$25.$$arity = 0);\n    \n    Opal.def(self, '$rect', $Numeric_rect$26 = function $$rect() {\n      var self = this;\n\n      return [self, 0]\n    }, $Numeric_rect$26.$$arity = 0);\n    Opal.alias(self, \"rectangular\", \"rect\");\n    \n    Opal.def(self, '$round', $Numeric_round$27 = function $$round(digits) {\n      var self = this;\n\n      \n      ;\n      return self.$to_f().$round(digits);\n    }, $Numeric_round$27.$$arity = -1);\n    \n    Opal.def(self, '$to_c', $Numeric_to_c$28 = function $$to_c() {\n      var self = this;\n\n      return self.$Complex(self, 0)\n    }, $Numeric_to_c$28.$$arity = 0);\n    \n    Opal.def(self, '$to_int', $Numeric_to_int$29 = function $$to_int() {\n      var self = this;\n\n      return self.$to_i()\n    }, $Numeric_to_int$29.$$arity = 0);\n    \n    Opal.def(self, '$truncate', $Numeric_truncate$30 = function $$truncate(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      return self.$to_f().$truncate(ndigits);\n    }, $Numeric_truncate$30.$$arity = -1);\n    \n    Opal.def(self, '$zero?', $Numeric_zero$ques$31 = function() {\n      var self = this;\n\n      return self['$=='](0)\n    }, $Numeric_zero$ques$31.$$arity = 0);\n    \n    Opal.def(self, '$positive?', $Numeric_positive$ques$32 = function() {\n      var self = this;\n\n      return $rb_gt(self, 0)\n    }, $Numeric_positive$ques$32.$$arity = 0);\n    \n    Opal.def(self, '$negative?', $Numeric_negative$ques$33 = function() {\n      var self = this;\n\n      return $rb_lt(self, 0)\n    }, $Numeric_negative$ques$33.$$arity = 0);\n    \n    Opal.def(self, '$dup', $Numeric_dup$34 = function $$dup() {\n      var self = this;\n\n      return self\n    }, $Numeric_dup$34.$$arity = 0);\n    \n    Opal.def(self, '$clone', $Numeric_clone$35 = function $$clone($kwargs) {\n      var freeze, self = this;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      freeze = $kwargs.$$smap[\"freeze\"];\n      if (freeze == null) {\n        freeze = true\n      };\n      return self;\n    }, $Numeric_clone$35.$$arity = -1);\n    \n    Opal.def(self, '$finite?', $Numeric_finite$ques$36 = function() {\n      var self = this;\n\n      return true\n    }, $Numeric_finite$ques$36.$$arity = 0);\n    return (Opal.def(self, '$infinite?', $Numeric_infinite$ques$37 = function() {\n      var self = this;\n\n      return nil\n    }, $Numeric_infinite$ques$37.$$arity = 0), nil) && 'infinite?';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/array\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $send = Opal.send, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$require', '$include', '$to_a', '$warn', '$raise', '$replace', '$respond_to?', '$to_ary', '$coerce_to', '$coerce_to?', '$===', '$join', '$to_str', '$class', '$hash', '$<=>', '$==', '$object_id', '$inspect', '$enum_for', '$bsearch_index', '$to_proc', '$nil?', '$coerce_to!', '$>', '$*', '$enumerator_size', '$empty?', '$size', '$map', '$equal?', '$dup', '$each', '$[]', '$dig', '$eql?', '$length', '$begin', '$end', '$exclude_end?', '$flatten', '$__id__', '$to_s', '$new', '$max', '$min', '$!', '$>=', '$**', '$delete_if', '$reverse', '$rotate', '$rand', '$at', '$keep_if', '$shuffle!', '$<', '$sort', '$sort_by', '$!=', '$times', '$[]=', '$-', '$<<', '$values', '$is_a?', '$last', '$first', '$upto', '$reject', '$pristine', '$singleton_class']);\n  \n  self.$require(\"corelib/enumerable\");\n  self.$require(\"corelib/numeric\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Array');\n\n    var $nesting = [self].concat($parent_nesting), $Array_$$$1, $Array_initialize$2, $Array_try_convert$3, $Array_$$4, $Array_$$5, $Array_$$6, $Array_$plus$7, $Array_$minus$8, $Array_$lt$lt$9, $Array_$lt_eq_gt$10, $Array_$eq_eq$11, $Array_$$$12, $Array_$$$eq$13, $Array_any$ques$14, $Array_assoc$15, $Array_at$16, $Array_bsearch_index$17, $Array_bsearch$18, $Array_cycle$19, $Array_clear$21, $Array_count$22, $Array_initialize_copy$23, $Array_collect$24, $Array_collect$excl$26, $Array_combination$28, $Array_repeated_combination$30, $Array_compact$32, $Array_compact$excl$33, $Array_concat$34, $Array_delete$37, $Array_delete_at$38, $Array_delete_if$39, $Array_dig$41, $Array_drop$42, $Array_dup$43, $Array_each$44, $Array_each_index$46, $Array_empty$ques$48, $Array_eql$ques$49, $Array_fetch$50, $Array_fill$51, $Array_first$52, $Array_flatten$53, $Array_flatten$excl$54, $Array_hash$55, $Array_include$ques$56, $Array_index$57, $Array_insert$58, $Array_inspect$59, $Array_join$60, $Array_keep_if$61, $Array_last$63, $Array_length$64, $Array_max$65, $Array_min$66, $Array_permutation$67, $Array_repeated_permutation$69, $Array_pop$71, $Array_product$72, $Array_push$73, $Array_rassoc$74, $Array_reject$75, $Array_reject$excl$77, $Array_replace$79, $Array_reverse$80, $Array_reverse$excl$81, $Array_reverse_each$82, $Array_rindex$84, $Array_rotate$85, $Array_rotate$excl$86, $Array_sample$89, $Array_select$90, $Array_select$excl$92, $Array_shift$94, $Array_shuffle$95, $Array_shuffle$excl$96, $Array_slice$excl$97, $Array_sort$98, $Array_sort$excl$99, $Array_sort_by$excl$100, $Array_take$102, $Array_take_while$103, $Array_to_a$104, $Array_to_h$105, $Array_transpose$106, $Array_uniq$109, $Array_uniq$excl$110, $Array_unshift$111, $Array_values_at$112, $Array_zip$115, $Array_inherited$116, $Array_instance_variables$117, $Array_pack$119;\n\n    \n    self.$include($$($nesting, 'Enumerable'));\n    Opal.defineProperty(self.$$prototype, '$$is_array', true);\n    \n    function toArraySubclass(obj, klass) {\n      if (klass.$$name === Opal.Array) {\n        return obj;\n      } else {\n        return klass.$allocate().$replace((obj).$to_a());\n      }\n    }\n  ;\n    Opal.defs(self, '$[]', $Array_$$$1 = function($a) {\n      var $post_args, objects, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      objects = $post_args;;\n      return toArraySubclass(objects, self);;\n    }, $Array_$$$1.$$arity = -1);\n    \n    Opal.def(self, '$initialize', $Array_initialize$2 = function $$initialize(size, obj) {\n      var $iter = $Array_initialize$2.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_initialize$2.$$p = null;\n      \n      \n      if ($iter) $Array_initialize$2.$$p = null;;\n      \n      if (size == null) {\n        size = nil;\n      };\n      \n      if (obj == null) {\n        obj = nil;\n      };\n      \n      if (obj !== nil && block !== nil) {\n        self.$warn(\"warning: block supersedes default value argument\")\n      }\n\n      if (size > $$$($$($nesting, 'Integer'), 'MAX')) {\n        self.$raise($$($nesting, 'ArgumentError'), \"array size too big\")\n      }\n\n      if (arguments.length > 2) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" for 0..2)\")\n      }\n\n      if (arguments.length === 0) {\n        self.splice(0, self.length);\n        return self;\n      }\n\n      if (arguments.length === 1) {\n        if (size.$$is_array) {\n          self.$replace(size.$to_a())\n          return self;\n        } else if (size['$respond_to?'](\"to_ary\")) {\n          self.$replace(size.$to_ary())\n          return self;\n        }\n      }\n\n      size = $$($nesting, 'Opal').$coerce_to(size, $$($nesting, 'Integer'), \"to_int\")\n\n      if (size < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\")\n      }\n\n      self.splice(0, self.length);\n      var i, value;\n\n      if (block === nil) {\n        for (i = 0; i < size; i++) {\n          self.push(obj);\n        }\n      }\n      else {\n        for (i = 0, value; i < size; i++) {\n          value = block(i);\n          self[i] = value;\n        }\n      }\n\n      return self;\n    ;\n    }, $Array_initialize$2.$$arity = -1);\n    Opal.defs(self, '$try_convert', $Array_try_convert$3 = function $$try_convert(obj) {\n      var self = this;\n\n      return $$($nesting, 'Opal')['$coerce_to?'](obj, $$($nesting, 'Array'), \"to_ary\")\n    }, $Array_try_convert$3.$$arity = 1);\n    \n    Opal.def(self, '$&', $Array_$$4 = function(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      \n      var result = [], hash = $hash2([], {}), i, length, item;\n\n      for (i = 0, length = other.length; i < length; i++) {\n        Opal.hash_put(hash, other[i], true);\n      }\n\n      for (i = 0, length = self.length; i < length; i++) {\n        item = self[i];\n        if (Opal.hash_delete(hash, item) !== undefined) {\n          result.push(item);\n        }\n      }\n\n      return result;\n    ;\n    }, $Array_$$4.$$arity = 1);\n    \n    Opal.def(self, '$|', $Array_$$5 = function(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      \n      var hash = $hash2([], {}), i, length, item;\n\n      for (i = 0, length = self.length; i < length; i++) {\n        Opal.hash_put(hash, self[i], true);\n      }\n\n      for (i = 0, length = other.length; i < length; i++) {\n        Opal.hash_put(hash, other[i], true);\n      }\n\n      return hash.$keys();\n    ;\n    }, $Array_$$5.$$arity = 1);\n    \n    Opal.def(self, '$*', $Array_$$6 = function(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$respond_to?'](\"to_str\"))) {\n        return self.$join(other.$to_str())};\n      other = $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(other < 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative argument\")};\n      \n      var result = [],\n          converted = self.$to_a();\n\n      for (var i = 0; i < other; i++) {\n        result = result.concat(converted);\n      }\n\n      return toArraySubclass(result, self.$class());\n    ;\n    }, $Array_$$6.$$arity = 1);\n    \n    Opal.def(self, '$+', $Array_$plus$7 = function(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      return self.concat(other);;\n    }, $Array_$plus$7.$$arity = 1);\n    \n    Opal.def(self, '$-', $Array_$minus$8 = function(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      if ($truthy(self.length === 0)) {\n        return []};\n      if ($truthy(other.length === 0)) {\n        return self.slice()};\n      \n      var result = [], hash = $hash2([], {}), i, length, item;\n\n      for (i = 0, length = other.length; i < length; i++) {\n        Opal.hash_put(hash, other[i], true);\n      }\n\n      for (i = 0, length = self.length; i < length; i++) {\n        item = self[i];\n        if (Opal.hash_get(hash, item) === undefined) {\n          result.push(item);\n        }\n      }\n\n      return result;\n    ;\n    }, $Array_$minus$8.$$arity = 1);\n    \n    Opal.def(self, '$<<', $Array_$lt$lt$9 = function(object) {\n      var self = this;\n\n      \n      self.push(object);\n      return self;\n    }, $Array_$lt$lt$9.$$arity = 1);\n    \n    Opal.def(self, '$<=>', $Array_$lt_eq_gt$10 = function(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        other = other.$to_a()\n      } else if ($truthy(other['$respond_to?'](\"to_ary\"))) {\n        other = other.$to_ary().$to_a()\n      } else {\n        return nil\n      };\n      \n      if (self.$hash() === other.$hash()) {\n        return 0;\n      }\n\n      var count = Math.min(self.length, other.length);\n\n      for (var i = 0; i < count; i++) {\n        var tmp = (self[i])['$<=>'](other[i]);\n\n        if (tmp !== 0) {\n          return tmp;\n        }\n      }\n\n      return (self.length)['$<=>'](other.length);\n    ;\n    }, $Array_$lt_eq_gt$10.$$arity = 1);\n    \n    Opal.def(self, '$==', $Array_$eq_eq$11 = function(other) {\n      var self = this;\n\n      \n      var recursed = {};\n\n      function _eqeq(array, other) {\n        var i, length, a, b;\n\n        if (array === other)\n          return true;\n\n        if (!other.$$is_array) {\n          if ($$($nesting, 'Opal')['$respond_to?'](other, \"to_ary\")) {\n            return (other)['$=='](array);\n          } else {\n            return false;\n          }\n        }\n\n        if (array.$$constructor !== Array)\n          array = (array).$to_a();\n        if (other.$$constructor !== Array)\n          other = (other).$to_a();\n\n        if (array.length !== other.length) {\n          return false;\n        }\n\n        recursed[(array).$object_id()] = true;\n\n        for (i = 0, length = array.length; i < length; i++) {\n          a = array[i];\n          b = other[i];\n          if (a.$$is_array) {\n            if (b.$$is_array && b.length !== a.length) {\n              return false;\n            }\n            if (!recursed.hasOwnProperty((a).$object_id())) {\n              if (!_eqeq(a, b)) {\n                return false;\n              }\n            }\n          } else {\n            if (!(a)['$=='](b)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      return _eqeq(self, other);\n    \n    }, $Array_$eq_eq$11.$$arity = 1);\n    \n    function $array_slice_range(self, index) {\n      var size = self.length,\n          exclude, from, to, result;\n\n      exclude = index.excl;\n      from    = Opal.Opal.$coerce_to(index.begin, Opal.Integer, 'to_int');\n      to      = Opal.Opal.$coerce_to(index.end, Opal.Integer, 'to_int');\n\n      if (from < 0) {\n        from += size;\n\n        if (from < 0) {\n          return nil;\n        }\n      }\n\n      if (from > size) {\n        return nil;\n      }\n\n      if (to < 0) {\n        to += size;\n\n        if (to < 0) {\n          return [];\n        }\n      }\n\n      if (!exclude) {\n        to += 1;\n      }\n\n      result = self.slice(from, to);\n      return toArraySubclass(result, self.$class());\n    }\n\n    function $array_slice_index_length(self, index, length) {\n      var size = self.length,\n          exclude, from, to, result;\n\n      index = Opal.Opal.$coerce_to(index, Opal.Integer, 'to_int');\n\n      if (index < 0) {\n        index += size;\n\n        if (index < 0) {\n          return nil;\n        }\n      }\n\n      if (length === undefined) {\n        if (index >= size || index < 0) {\n          return nil;\n        }\n\n        return self[index];\n      }\n      else {\n        length = Opal.Opal.$coerce_to(length, Opal.Integer, 'to_int');\n\n        if (length < 0 || index > size || index < 0) {\n          return nil;\n        }\n\n        result = self.slice(index, index + length);\n      }\n      return toArraySubclass(result, self.$class());\n    }\n  ;\n    \n    Opal.def(self, '$[]', $Array_$$$12 = function(index, length) {\n      var self = this;\n\n      \n      ;\n      \n      if (index.$$is_range) {\n        return $array_slice_range(self, index);\n      }\n      else {\n        return $array_slice_index_length(self, index, length);\n      }\n    ;\n    }, $Array_$$$12.$$arity = -2);\n    \n    Opal.def(self, '$[]=', $Array_$$$eq$13 = function(index, value, extra) {\n      var self = this, data = nil, length = nil;\n\n      \n      ;\n            var i, size = self.length;;\n      if ($truthy($$($nesting, 'Range')['$==='](index))) {\n        \n        data = (function() {if ($truthy($$($nesting, 'Array')['$==='](value))) {\n          return value.$to_a()\n        } else if ($truthy(value['$respond_to?'](\"to_ary\"))) {\n          return value.$to_ary().$to_a()\n        } else {\n          return [value]\n        }; return nil; })();\n        \n        var exclude = index.excl,\n            from    = $$($nesting, 'Opal').$coerce_to(index.begin, $$($nesting, 'Integer'), \"to_int\"),\n            to      = $$($nesting, 'Opal').$coerce_to(index.end, $$($nesting, 'Integer'), \"to_int\");\n\n        if (from < 0) {\n          from += size;\n\n          if (from < 0) {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (index.$inspect()) + \" out of range\");\n          }\n        }\n\n        if (to < 0) {\n          to += size;\n        }\n\n        if (!exclude) {\n          to += 1;\n        }\n\n        if (from > size) {\n          for (i = size; i < from; i++) {\n            self[i] = nil;\n          }\n        }\n\n        if (to < 0) {\n          self.splice.apply(self, [from, 0].concat(data));\n        }\n        else {\n          self.splice.apply(self, [from, to - from].concat(data));\n        }\n\n        return value;\n      ;\n      } else {\n        \n        if ($truthy(extra === undefined)) {\n          length = 1\n        } else {\n          \n          length = value;\n          value = extra;\n          data = (function() {if ($truthy($$($nesting, 'Array')['$==='](value))) {\n            return value.$to_a()\n          } else if ($truthy(value['$respond_to?'](\"to_ary\"))) {\n            return value.$to_ary().$to_a()\n          } else {\n            return [value]\n          }; return nil; })();\n        };\n        \n        var old;\n\n        index  = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n        length = $$($nesting, 'Opal').$coerce_to(length, $$($nesting, 'Integer'), \"to_int\");\n\n        if (index < 0) {\n          old    = index;\n          index += size;\n\n          if (index < 0) {\n            self.$raise($$($nesting, 'IndexError'), \"\" + \"index \" + (old) + \" too small for array; minimum \" + (-self.length));\n          }\n        }\n\n        if (length < 0) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"negative length (\" + (length) + \")\")\n        }\n\n        if (index > size) {\n          for (i = size; i < index; i++) {\n            self[i] = nil;\n          }\n        }\n\n        if (extra === undefined) {\n          self[index] = value;\n        }\n        else {\n          self.splice.apply(self, [index, length].concat(data));\n        }\n\n        return value;\n      ;\n      };\n    }, $Array_$$$eq$13.$$arity = -3);\n    \n    Opal.def(self, '$any?', $Array_any$ques$14 = function(pattern) {\n      var $iter = $Array_any$ques$14.$$p, block = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Array_any$ques$14.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      \n      if ($iter) $Array_any$ques$14.$$p = null;;\n      ;\n      if (self.length === 0) return false;\n      return $send(self, Opal.find_super_dispatcher(self, 'any?', $Array_any$ques$14, false), $zuper, $iter);\n    }, $Array_any$ques$14.$$arity = -1);\n    \n    Opal.def(self, '$assoc', $Array_assoc$15 = function $$assoc(object) {\n      var self = this;\n\n      \n      for (var i = 0, length = self.length, item; i < length; i++) {\n        if (item = self[i], item.length && (item[0])['$=='](object)) {\n          return item;\n        }\n      }\n\n      return nil;\n    \n    }, $Array_assoc$15.$$arity = 1);\n    \n    Opal.def(self, '$at', $Array_at$16 = function $$at(index) {\n      var self = this;\n\n      \n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n      \n      if (index < 0) {\n        index += self.length;\n      }\n\n      if (index < 0 || index >= self.length) {\n        return nil;\n      }\n\n      return self[index];\n    ;\n    }, $Array_at$16.$$arity = 1);\n    \n    Opal.def(self, '$bsearch_index', $Array_bsearch_index$17 = function $$bsearch_index() {\n      var $iter = $Array_bsearch_index$17.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_bsearch_index$17.$$p = null;\n      \n      \n      if ($iter) $Array_bsearch_index$17.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"bsearch_index\")\n      };\n      \n      var min = 0,\n          max = self.length,\n          mid,\n          val,\n          ret,\n          smaller = false,\n          satisfied = nil;\n\n      while (min < max) {\n        mid = min + Math.floor((max - min) / 2);\n        val = self[mid];\n        ret = Opal.yield1(block, val);\n\n        if (ret === true) {\n          satisfied = mid;\n          smaller = true;\n        }\n        else if (ret === false || ret === nil) {\n          smaller = false;\n        }\n        else if (ret.$$is_number) {\n          if (ret === 0) { return mid; }\n          smaller = (ret < 0);\n        }\n        else {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((ret).$class()) + \" (must be numeric, true, false or nil)\")\n        }\n\n        if (smaller) { max = mid; } else { min = mid + 1; }\n      }\n\n      return satisfied;\n    ;\n    }, $Array_bsearch_index$17.$$arity = 0);\n    \n    Opal.def(self, '$bsearch', $Array_bsearch$18 = function $$bsearch() {\n      var $iter = $Array_bsearch$18.$$p, block = $iter || nil, self = this, index = nil;\n\n      if ($iter) $Array_bsearch$18.$$p = null;\n      \n      \n      if ($iter) $Array_bsearch$18.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"bsearch\")\n      };\n      index = $send(self, 'bsearch_index', [], block.$to_proc());\n      \n      if (index != null && index.$$is_number) {\n        return self[index];\n      } else {\n        return index;\n      }\n    ;\n    }, $Array_bsearch$18.$$arity = 0);\n    \n    Opal.def(self, '$cycle', $Array_cycle$19 = function $$cycle(n) {\n      var $iter = $Array_cycle$19.$$p, block = $iter || nil, $$20, $a, self = this;\n\n      if ($iter) $Array_cycle$19.$$p = null;\n      \n      \n      if ($iter) $Array_cycle$19.$$p = null;;\n      \n      if (n == null) {\n        n = nil;\n      };\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"cycle\", n], ($$20 = function(){var self = $$20.$$s || this;\n\n        if ($truthy(n['$nil?']())) {\n            return $$$($$($nesting, 'Float'), 'INFINITY')\n          } else {\n            \n            n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n            if ($truthy($rb_gt(n, 0))) {\n              return $rb_times(self.$enumerator_size(), n)\n            } else {\n              return 0\n            };\n          }}, $$20.$$s = self, $$20.$$arity = 0, $$20))\n      };\n      if ($truthy(($truthy($a = self['$empty?']()) ? $a : n['$=='](0)))) {\n        return nil};\n      \n      var i, length, value;\n\n      if (n === nil) {\n        while (true) {\n          for (i = 0, length = self.length; i < length; i++) {\n            value = Opal.yield1(block, self[i]);\n          }\n        }\n      }\n      else {\n        n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n        if (n <= 0) {\n          return self;\n        }\n\n        while (n > 0) {\n          for (i = 0, length = self.length; i < length; i++) {\n            value = Opal.yield1(block, self[i]);\n          }\n\n          n--;\n        }\n      }\n    ;\n      return self;\n    }, $Array_cycle$19.$$arity = -1);\n    \n    Opal.def(self, '$clear', $Array_clear$21 = function $$clear() {\n      var self = this;\n\n      \n      self.splice(0, self.length);\n      return self;\n    }, $Array_clear$21.$$arity = 0);\n    \n    Opal.def(self, '$count', $Array_count$22 = function $$count(object) {\n      var $iter = $Array_count$22.$$p, block = $iter || nil, $a, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Array_count$22.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      \n      if ($iter) $Array_count$22.$$p = null;;\n      \n      if (object == null) {\n        object = nil;\n      };\n      if ($truthy(($truthy($a = object) ? $a : block))) {\n        return $send(self, Opal.find_super_dispatcher(self, 'count', $Array_count$22, false), $zuper, $iter)\n      } else {\n        return self.$size()\n      };\n    }, $Array_count$22.$$arity = -1);\n    \n    Opal.def(self, '$initialize_copy', $Array_initialize_copy$23 = function $$initialize_copy(other) {\n      var self = this;\n\n      return self.$replace(other)\n    }, $Array_initialize_copy$23.$$arity = 1);\n    \n    Opal.def(self, '$collect', $Array_collect$24 = function $$collect() {\n      var $iter = $Array_collect$24.$$p, block = $iter || nil, $$25, self = this;\n\n      if ($iter) $Array_collect$24.$$p = null;\n      \n      \n      if ($iter) $Array_collect$24.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"collect\"], ($$25 = function(){var self = $$25.$$s || this;\n\n        return self.$size()}, $$25.$$s = self, $$25.$$arity = 0, $$25))\n      };\n      \n      var result = [];\n\n      for (var i = 0, length = self.length; i < length; i++) {\n        var value = Opal.yield1(block, self[i]);\n        result.push(value);\n      }\n\n      return result;\n    ;\n    }, $Array_collect$24.$$arity = 0);\n    \n    Opal.def(self, '$collect!', $Array_collect$excl$26 = function() {\n      var $iter = $Array_collect$excl$26.$$p, block = $iter || nil, $$27, self = this;\n\n      if ($iter) $Array_collect$excl$26.$$p = null;\n      \n      \n      if ($iter) $Array_collect$excl$26.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"collect!\"], ($$27 = function(){var self = $$27.$$s || this;\n\n        return self.$size()}, $$27.$$s = self, $$27.$$arity = 0, $$27))\n      };\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        var value = Opal.yield1(block, self[i]);\n        self[i] = value;\n      }\n    ;\n      return self;\n    }, $Array_collect$excl$26.$$arity = 0);\n    \n    function binomial_coefficient(n, k) {\n      if (n === k || k === 0) {\n        return 1;\n      }\n\n      if (k > 0 && n > k) {\n        return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k);\n      }\n\n      return 0;\n    }\n  ;\n    \n    Opal.def(self, '$combination', $Array_combination$28 = function $$combination(n) {\n      var $$29, $iter = $Array_combination$28.$$p, $yield = $iter || nil, self = this, num = nil;\n\n      if ($iter) $Array_combination$28.$$p = null;\n      \n      num = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"combination\", num], ($$29 = function(){var self = $$29.$$s || this;\n\n        return binomial_coefficient(self.length, num)}, $$29.$$s = self, $$29.$$arity = 0, $$29))\n      };\n      \n      var i, length, stack, chosen, lev, done, next;\n\n      if (num === 0) {\n        Opal.yield1($yield, [])\n      } else if (num === 1) {\n        for (i = 0, length = self.length; i < length; i++) {\n          Opal.yield1($yield, [self[i]])\n        }\n      }\n      else if (num === self.length) {\n        Opal.yield1($yield, self.slice())\n      }\n      else if (num >= 0 && num < self.length) {\n        stack = [];\n        for (i = 0; i <= num + 1; i++) {\n          stack.push(0);\n        }\n\n        chosen = [];\n        lev = 0;\n        done = false;\n        stack[0] = -1;\n\n        while (!done) {\n          chosen[lev] = self[stack[lev+1]];\n          while (lev < num - 1) {\n            lev++;\n            next = stack[lev+1] = stack[lev] + 1;\n            chosen[lev] = self[next];\n          }\n          Opal.yield1($yield, chosen.slice())\n          lev++;\n          do {\n            done = (lev === 0);\n            stack[lev]++;\n            lev--;\n          } while ( stack[lev+1] + num === self.length + lev + 1 );\n        }\n      }\n    ;\n      return self;\n    }, $Array_combination$28.$$arity = 1);\n    \n    Opal.def(self, '$repeated_combination', $Array_repeated_combination$30 = function $$repeated_combination(n) {\n      var $$31, $iter = $Array_repeated_combination$30.$$p, $yield = $iter || nil, self = this, num = nil;\n\n      if ($iter) $Array_repeated_combination$30.$$p = null;\n      \n      num = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"repeated_combination\", num], ($$31 = function(){var self = $$31.$$s || this;\n\n        return binomial_coefficient(self.length + num - 1, num);}, $$31.$$s = self, $$31.$$arity = 0, $$31))\n      };\n      \n      function iterate(max, from, buffer, self) {\n        if (buffer.length == max) {\n          var copy = buffer.slice();\n          Opal.yield1($yield, copy)\n          return;\n        }\n        for (var i = from; i < self.length; i++) {\n          buffer.push(self[i]);\n          iterate(max, i, buffer, self);\n          buffer.pop();\n        }\n      }\n\n      if (num >= 0) {\n        iterate(num, 0, [], self);\n      }\n    ;\n      return self;\n    }, $Array_repeated_combination$30.$$arity = 1);\n    \n    Opal.def(self, '$compact', $Array_compact$32 = function $$compact() {\n      var self = this;\n\n      \n      var result = [];\n\n      for (var i = 0, length = self.length, item; i < length; i++) {\n        if ((item = self[i]) !== nil) {\n          result.push(item);\n        }\n      }\n\n      return result;\n    \n    }, $Array_compact$32.$$arity = 0);\n    \n    Opal.def(self, '$compact!', $Array_compact$excl$33 = function() {\n      var self = this;\n\n      \n      var original = self.length;\n\n      for (var i = 0, length = self.length; i < length; i++) {\n        if (self[i] === nil) {\n          self.splice(i, 1);\n\n          length--;\n          i--;\n        }\n      }\n\n      return self.length === original ? nil : self;\n    \n    }, $Array_compact$excl$33.$$arity = 0);\n    \n    Opal.def(self, '$concat', $Array_concat$34 = function $$concat($a) {\n      var $post_args, others, $$35, $$36, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      others = $post_args;;\n      others = $send(others, 'map', [], ($$35 = function(other){var self = $$35.$$s || this;\n\n      \n        \n        if (other == null) {\n          other = nil;\n        };\n        other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n          return other.$to_a()\n        } else {\n          return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n        }; return nil; })();\n        if ($truthy(other['$equal?'](self))) {\n          other = other.$dup()};\n        return other;}, $$35.$$s = self, $$35.$$arity = 1, $$35));\n      $send(others, 'each', [], ($$36 = function(other){var self = $$36.$$s || this;\n\n      \n        \n        if (other == null) {\n          other = nil;\n        };\n        \n        for (var i = 0, length = other.length; i < length; i++) {\n          self.push(other[i]);\n        }\n      ;}, $$36.$$s = self, $$36.$$arity = 1, $$36));\n      return self;\n    }, $Array_concat$34.$$arity = -1);\n    \n    Opal.def(self, '$delete', $Array_delete$37 = function(object) {\n      var $iter = $Array_delete$37.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Array_delete$37.$$p = null;\n      \n      var original = self.length;\n\n      for (var i = 0, length = original; i < length; i++) {\n        if ((self[i])['$=='](object)) {\n          self.splice(i, 1);\n\n          length--;\n          i--;\n        }\n      }\n\n      if (self.length === original) {\n        if (($yield !== nil)) {\n          return Opal.yieldX($yield, []);\n        }\n        return nil;\n      }\n      return object;\n    \n    }, $Array_delete$37.$$arity = 1);\n    \n    Opal.def(self, '$delete_at', $Array_delete_at$38 = function $$delete_at(index) {\n      var self = this;\n\n      \n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n\n      if (index < 0) {\n        index += self.length;\n      }\n\n      if (index < 0 || index >= self.length) {\n        return nil;\n      }\n\n      var result = self[index];\n\n      self.splice(index, 1);\n\n      return result;\n    \n    }, $Array_delete_at$38.$$arity = 1);\n    \n    Opal.def(self, '$delete_if', $Array_delete_if$39 = function $$delete_if() {\n      var $iter = $Array_delete_if$39.$$p, block = $iter || nil, $$40, self = this;\n\n      if ($iter) $Array_delete_if$39.$$p = null;\n      \n      \n      if ($iter) $Array_delete_if$39.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"delete_if\"], ($$40 = function(){var self = $$40.$$s || this;\n\n        return self.$size()}, $$40.$$s = self, $$40.$$arity = 0, $$40))\n      };\n      \n      for (var i = 0, length = self.length, value; i < length; i++) {\n        value = block(self[i]);\n\n        if (value !== false && value !== nil) {\n          self.splice(i, 1);\n\n          length--;\n          i--;\n        }\n      }\n    ;\n      return self;\n    }, $Array_delete_if$39.$$arity = 0);\n    \n    Opal.def(self, '$dig', $Array_dig$41 = function $$dig(idx, $a) {\n      var $post_args, idxs, self = this, item = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      idxs = $post_args;;\n      item = self['$[]'](idx);\n      \n      if (item === nil || idxs.length === 0) {\n        return item;\n      }\n    ;\n      if ($truthy(item['$respond_to?'](\"dig\"))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + (item.$class()) + \" does not have #dig method\")\n      };\n      return $send(item, 'dig', Opal.to_a(idxs));\n    }, $Array_dig$41.$$arity = -2);\n    \n    Opal.def(self, '$drop', $Array_drop$42 = function $$drop(number) {\n      var self = this;\n\n      \n      if (number < 0) {\n        self.$raise($$($nesting, 'ArgumentError'))\n      }\n\n      return self.slice(number);\n    \n    }, $Array_drop$42.$$arity = 1);\n    \n    Opal.def(self, '$dup', $Array_dup$43 = function $$dup() {\n      var $iter = $Array_dup$43.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Array_dup$43.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      \n      if (self.$$class === Opal.Array &&\n          self.$$class.$allocate.$$pristine &&\n          self.$copy_instance_variables.$$pristine &&\n          self.$initialize_dup.$$pristine) {\n        return self.slice(0);\n      }\n    ;\n      return $send(self, Opal.find_super_dispatcher(self, 'dup', $Array_dup$43, false), $zuper, $iter);\n    }, $Array_dup$43.$$arity = 0);\n    \n    Opal.def(self, '$each', $Array_each$44 = function $$each() {\n      var $iter = $Array_each$44.$$p, block = $iter || nil, $$45, self = this;\n\n      if ($iter) $Array_each$44.$$p = null;\n      \n      \n      if ($iter) $Array_each$44.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each\"], ($$45 = function(){var self = $$45.$$s || this;\n\n        return self.$size()}, $$45.$$s = self, $$45.$$arity = 0, $$45))\n      };\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        var value = Opal.yield1(block, self[i]);\n      }\n    ;\n      return self;\n    }, $Array_each$44.$$arity = 0);\n    \n    Opal.def(self, '$each_index', $Array_each_index$46 = function $$each_index() {\n      var $iter = $Array_each_index$46.$$p, block = $iter || nil, $$47, self = this;\n\n      if ($iter) $Array_each_index$46.$$p = null;\n      \n      \n      if ($iter) $Array_each_index$46.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_index\"], ($$47 = function(){var self = $$47.$$s || this;\n\n        return self.$size()}, $$47.$$s = self, $$47.$$arity = 0, $$47))\n      };\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        var value = Opal.yield1(block, i);\n      }\n    ;\n      return self;\n    }, $Array_each_index$46.$$arity = 0);\n    \n    Opal.def(self, '$empty?', $Array_empty$ques$48 = function() {\n      var self = this;\n\n      return self.length === 0;\n    }, $Array_empty$ques$48.$$arity = 0);\n    \n    Opal.def(self, '$eql?', $Array_eql$ques$49 = function(other) {\n      var self = this;\n\n      \n      var recursed = {};\n\n      function _eql(array, other) {\n        var i, length, a, b;\n\n        if (!other.$$is_array) {\n          return false;\n        }\n\n        other = other.$to_a();\n\n        if (array.length !== other.length) {\n          return false;\n        }\n\n        recursed[(array).$object_id()] = true;\n\n        for (i = 0, length = array.length; i < length; i++) {\n          a = array[i];\n          b = other[i];\n          if (a.$$is_array) {\n            if (b.$$is_array && b.length !== a.length) {\n              return false;\n            }\n            if (!recursed.hasOwnProperty((a).$object_id())) {\n              if (!_eql(a, b)) {\n                return false;\n              }\n            }\n          } else {\n            if (!(a)['$eql?'](b)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      return _eql(self, other);\n    \n    }, $Array_eql$ques$49.$$arity = 1);\n    \n    Opal.def(self, '$fetch', $Array_fetch$50 = function $$fetch(index, defaults) {\n      var $iter = $Array_fetch$50.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_fetch$50.$$p = null;\n      \n      \n      if ($iter) $Array_fetch$50.$$p = null;;\n      ;\n      \n      var original = index;\n\n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n\n      if (index < 0) {\n        index += self.length;\n      }\n\n      if (index >= 0 && index < self.length) {\n        return self[index];\n      }\n\n      if (block !== nil && defaults != null) {\n        self.$warn(\"warning: block supersedes default value argument\")\n      }\n\n      if (block !== nil) {\n        return block(original);\n      }\n\n      if (defaults != null) {\n        return defaults;\n      }\n\n      if (self.length === 0) {\n        self.$raise($$($nesting, 'IndexError'), \"\" + \"index \" + (original) + \" outside of array bounds: 0...0\")\n      }\n      else {\n        self.$raise($$($nesting, 'IndexError'), \"\" + \"index \" + (original) + \" outside of array bounds: -\" + (self.length) + \"...\" + (self.length));\n      }\n    ;\n    }, $Array_fetch$50.$$arity = -2);\n    \n    Opal.def(self, '$fill', $Array_fill$51 = function $$fill($a) {\n      var $iter = $Array_fill$51.$$p, block = $iter || nil, $post_args, args, $b, $c, self = this, one = nil, two = nil, obj = nil, left = nil, right = nil;\n\n      if ($iter) $Array_fill$51.$$p = null;\n      \n      \n      if ($iter) $Array_fill$51.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n            var i, length, value;;\n      if ($truthy(block)) {\n        \n        if ($truthy(args.length > 2)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (args.$length()) + \" for 0..2)\")};\n        $c = args, $b = Opal.to_ary($c), (one = ($b[0] == null ? nil : $b[0])), (two = ($b[1] == null ? nil : $b[1])), $c;\n      } else {\n        \n        if ($truthy(args.length == 0)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (0 for 1..3)\")\n        } else if ($truthy(args.length > 3)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (args.$length()) + \" for 1..3)\")};\n        $c = args, $b = Opal.to_ary($c), (obj = ($b[0] == null ? nil : $b[0])), (one = ($b[1] == null ? nil : $b[1])), (two = ($b[2] == null ? nil : $b[2])), $c;\n      };\n      if ($truthy($$($nesting, 'Range')['$==='](one))) {\n        \n        if ($truthy(two)) {\n          self.$raise($$($nesting, 'TypeError'), \"length invalid with range\")};\n        left = $$($nesting, 'Opal').$coerce_to(one.$begin(), $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(left < 0)) {\n          left += this.length};\n        if ($truthy(left < 0)) {\n          self.$raise($$($nesting, 'RangeError'), \"\" + (one.$inspect()) + \" out of range\")};\n        right = $$($nesting, 'Opal').$coerce_to(one.$end(), $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(right < 0)) {\n          right += this.length};\n        if ($truthy(one['$exclude_end?']())) {\n        } else {\n          right += 1\n        };\n        if ($truthy(right <= left)) {\n          return self};\n      } else if ($truthy(one)) {\n        \n        left = $$($nesting, 'Opal').$coerce_to(one, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(left < 0)) {\n          left += this.length};\n        if ($truthy(left < 0)) {\n          left = 0};\n        if ($truthy(two)) {\n          \n          right = $$($nesting, 'Opal').$coerce_to(two, $$($nesting, 'Integer'), \"to_int\");\n          if ($truthy(right == 0)) {\n            return self};\n          right += left;\n        } else {\n          right = this.length\n        };\n      } else {\n        \n        left = 0;\n        right = this.length;\n      };\n      if ($truthy(left > this.length)) {\n        \n        for (i = this.length; i < right; i++) {\n          self[i] = nil;\n        }\n      };\n      if ($truthy(right > this.length)) {\n        this.length = right};\n      if ($truthy(block)) {\n        \n        for (length = this.length; left < right; left++) {\n          value = block(left);\n          self[left] = value;\n        }\n      \n      } else {\n        \n        for (length = this.length; left < right; left++) {\n          self[left] = obj;\n        }\n      \n      };\n      return self;\n    }, $Array_fill$51.$$arity = -1);\n    \n    Opal.def(self, '$first', $Array_first$52 = function $$first(count) {\n      var self = this;\n\n      \n      ;\n      \n      if (count == null) {\n        return self.length === 0 ? nil : self[0];\n      }\n\n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n\n      if (count < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\");\n      }\n\n      return self.slice(0, count);\n    ;\n    }, $Array_first$52.$$arity = -1);\n    \n    Opal.def(self, '$flatten', $Array_flatten$53 = function $$flatten(level) {\n      var self = this;\n\n      \n      ;\n      \n      function _flatten(array, level) {\n        var result = [],\n            i, length,\n            item, ary;\n\n        array = (array).$to_a();\n\n        for (i = 0, length = array.length; i < length; i++) {\n          item = array[i];\n\n          if (!$$($nesting, 'Opal')['$respond_to?'](item, \"to_ary\", true)) {\n            result.push(item);\n            continue;\n          }\n\n          ary = (item).$to_ary();\n\n          if (ary === nil) {\n            result.push(item);\n            continue;\n          }\n\n          if (!ary.$$is_array) {\n            self.$raise($$($nesting, 'TypeError'));\n          }\n\n          if (ary === self) {\n            self.$raise($$($nesting, 'ArgumentError'));\n          }\n\n          switch (level) {\n          case undefined:\n            result = result.concat(_flatten(ary));\n            break;\n          case 0:\n            result.push(ary);\n            break;\n          default:\n            result.push.apply(result, _flatten(ary, level - 1));\n          }\n        }\n        return result;\n      }\n\n      if (level !== undefined) {\n        level = $$($nesting, 'Opal').$coerce_to(level, $$($nesting, 'Integer'), \"to_int\");\n      }\n\n      return toArraySubclass(_flatten(self, level), self.$class());\n    ;\n    }, $Array_flatten$53.$$arity = -1);\n    \n    Opal.def(self, '$flatten!', $Array_flatten$excl$54 = function(level) {\n      var self = this;\n\n      \n      ;\n      \n      var flattened = self.$flatten(level);\n\n      if (self.length == flattened.length) {\n        for (var i = 0, length = self.length; i < length; i++) {\n          if (self[i] !== flattened[i]) {\n            break;\n          }\n        }\n\n        if (i == length) {\n          return nil;\n        }\n      }\n\n      self.$replace(flattened);\n    ;\n      return self;\n    }, $Array_flatten$excl$54.$$arity = -1);\n    \n    Opal.def(self, '$hash', $Array_hash$55 = function $$hash() {\n      var self = this;\n\n      \n      var top = (Opal.hash_ids === undefined),\n          result = ['A'],\n          hash_id = self.$object_id(),\n          item, i, key;\n\n      try {\n        if (top) {\n          Opal.hash_ids = Object.create(null);\n        }\n\n        // return early for recursive structures\n        if (Opal.hash_ids[hash_id]) {\n          return 'self';\n        }\n\n        for (key in Opal.hash_ids) {\n          item = Opal.hash_ids[key];\n          if (self['$eql?'](item)) {\n            return 'self';\n          }\n        }\n\n        Opal.hash_ids[hash_id] = self;\n\n        for (i = 0; i < self.length; i++) {\n          item = self[i];\n          result.push(item.$hash());\n        }\n\n        return result.join(',');\n      } finally {\n        if (top) {\n          Opal.hash_ids = undefined;\n        }\n      }\n    \n    }, $Array_hash$55.$$arity = 0);\n    \n    Opal.def(self, '$include?', $Array_include$ques$56 = function(member) {\n      var self = this;\n\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        if ((self[i])['$=='](member)) {\n          return true;\n        }\n      }\n\n      return false;\n    \n    }, $Array_include$ques$56.$$arity = 1);\n    \n    Opal.def(self, '$index', $Array_index$57 = function $$index(object) {\n      var $iter = $Array_index$57.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_index$57.$$p = null;\n      \n      \n      if ($iter) $Array_index$57.$$p = null;;\n      ;\n      \n      var i, length, value;\n\n      if (object != null && block !== nil) {\n        self.$warn(\"warning: given block not used\")\n      }\n\n      if (object != null) {\n        for (i = 0, length = self.length; i < length; i++) {\n          if ((self[i])['$=='](object)) {\n            return i;\n          }\n        }\n      }\n      else if (block !== nil) {\n        for (i = 0, length = self.length; i < length; i++) {\n          value = block(self[i]);\n\n          if (value !== false && value !== nil) {\n            return i;\n          }\n        }\n      }\n      else {\n        return self.$enum_for(\"index\");\n      }\n\n      return nil;\n    ;\n    }, $Array_index$57.$$arity = -1);\n    \n    Opal.def(self, '$insert', $Array_insert$58 = function $$insert(index, $a) {\n      var $post_args, objects, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      objects = $post_args;;\n      \n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n\n      if (objects.length > 0) {\n        if (index < 0) {\n          index += self.length + 1;\n\n          if (index < 0) {\n            self.$raise($$($nesting, 'IndexError'), \"\" + (index) + \" is out of bounds\");\n          }\n        }\n        if (index > self.length) {\n          for (var i = self.length; i < index; i++) {\n            self.push(nil);\n          }\n        }\n\n        self.splice.apply(self, [index, 0].concat(objects));\n      }\n    ;\n      return self;\n    }, $Array_insert$58.$$arity = -2);\n    \n    Opal.def(self, '$inspect', $Array_inspect$59 = function $$inspect() {\n      var self = this;\n\n      \n      var result = [],\n          id     = self.$__id__();\n\n      for (var i = 0, length = self.length; i < length; i++) {\n        var item = self['$[]'](i);\n\n        if ((item).$__id__() === id) {\n          result.push('[...]');\n        }\n        else {\n          result.push((item).$inspect());\n        }\n      }\n\n      return '[' + result.join(', ') + ']';\n    \n    }, $Array_inspect$59.$$arity = 0);\n    \n    Opal.def(self, '$join', $Array_join$60 = function $$join(sep) {\n      var self = this;\n      if ($gvars[\",\"] == null) $gvars[\",\"] = nil;\n\n      \n      \n      if (sep == null) {\n        sep = nil;\n      };\n      if ($truthy(self.length === 0)) {\n        return \"\"};\n      if ($truthy(sep === nil)) {\n        sep = $gvars[\",\"]};\n      \n      var result = [];\n      var i, length, item, tmp;\n\n      for (i = 0, length = self.length; i < length; i++) {\n        item = self[i];\n\n        if ($$($nesting, 'Opal')['$respond_to?'](item, \"to_str\")) {\n          tmp = (item).$to_str();\n\n          if (tmp !== nil) {\n            result.push((tmp).$to_s());\n\n            continue;\n          }\n        }\n\n        if ($$($nesting, 'Opal')['$respond_to?'](item, \"to_ary\")) {\n          tmp = (item).$to_ary();\n\n          if (tmp === self) {\n            self.$raise($$($nesting, 'ArgumentError'));\n          }\n\n          if (tmp !== nil) {\n            result.push((tmp).$join(sep));\n\n            continue;\n          }\n        }\n\n        if ($$($nesting, 'Opal')['$respond_to?'](item, \"to_s\")) {\n          tmp = (item).$to_s();\n\n          if (tmp !== nil) {\n            result.push(tmp);\n\n            continue;\n          }\n        }\n\n        self.$raise($$($nesting, 'NoMethodError').$new(\"\" + (Opal.inspect(item)) + \" doesn't respond to #to_str, #to_ary or #to_s\", \"to_str\"));\n      }\n\n      if (sep === nil) {\n        return result.join('');\n      }\n      else {\n        return result.join($$($nesting, 'Opal')['$coerce_to!'](sep, $$($nesting, 'String'), \"to_str\").$to_s());\n      }\n    ;\n    }, $Array_join$60.$$arity = -1);\n    \n    Opal.def(self, '$keep_if', $Array_keep_if$61 = function $$keep_if() {\n      var $iter = $Array_keep_if$61.$$p, block = $iter || nil, $$62, self = this;\n\n      if ($iter) $Array_keep_if$61.$$p = null;\n      \n      \n      if ($iter) $Array_keep_if$61.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"keep_if\"], ($$62 = function(){var self = $$62.$$s || this;\n\n        return self.$size()}, $$62.$$s = self, $$62.$$arity = 0, $$62))\n      };\n      \n      for (var i = 0, length = self.length, value; i < length; i++) {\n        value = block(self[i]);\n\n        if (value === false || value === nil) {\n          self.splice(i, 1);\n\n          length--;\n          i--;\n        }\n      }\n    ;\n      return self;\n    }, $Array_keep_if$61.$$arity = 0);\n    \n    Opal.def(self, '$last', $Array_last$63 = function $$last(count) {\n      var self = this;\n\n      \n      ;\n      \n      if (count == null) {\n        return self.length === 0 ? nil : self[self.length - 1];\n      }\n\n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n\n      if (count < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\");\n      }\n\n      if (count > self.length) {\n        count = self.length;\n      }\n\n      return self.slice(self.length - count, self.length);\n    ;\n    }, $Array_last$63.$$arity = -1);\n    \n    Opal.def(self, '$length', $Array_length$64 = function $$length() {\n      var self = this;\n\n      return self.length;\n    }, $Array_length$64.$$arity = 0);\n    Opal.alias(self, \"map\", \"collect\");\n    Opal.alias(self, \"map!\", \"collect!\");\n    \n    Opal.def(self, '$max', $Array_max$65 = function $$max(n) {\n      var $iter = $Array_max$65.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_max$65.$$p = null;\n      \n      \n      if ($iter) $Array_max$65.$$p = null;;\n      ;\n      return $send(self.$each(), 'max', [n], block.$to_proc());\n    }, $Array_max$65.$$arity = -1);\n    \n    Opal.def(self, '$min', $Array_min$66 = function $$min() {\n      var $iter = $Array_min$66.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_min$66.$$p = null;\n      \n      \n      if ($iter) $Array_min$66.$$p = null;;\n      return $send(self.$each(), 'min', [], block.$to_proc());\n    }, $Array_min$66.$$arity = 0);\n    \n    // Returns the product of from, from-1, ..., from - how_many + 1.\n    function descending_factorial(from, how_many) {\n      var count = how_many >= 0 ? 1 : 0;\n      while (how_many) {\n        count *= from;\n        from--;\n        how_many--;\n      }\n      return count;\n    }\n  ;\n    \n    Opal.def(self, '$permutation', $Array_permutation$67 = function $$permutation(num) {\n      var $iter = $Array_permutation$67.$$p, block = $iter || nil, $$68, self = this, perm = nil, used = nil;\n\n      if ($iter) $Array_permutation$67.$$p = null;\n      \n      \n      if ($iter) $Array_permutation$67.$$p = null;;\n      ;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"permutation\", num], ($$68 = function(){var self = $$68.$$s || this;\n\n        return descending_factorial(self.length, num === undefined ? self.length : num);}, $$68.$$s = self, $$68.$$arity = 0, $$68))\n      };\n      \n      var permute, offensive, output;\n\n      if (num === undefined) {\n        num = self.length;\n      }\n      else {\n        num = $$($nesting, 'Opal').$coerce_to(num, $$($nesting, 'Integer'), \"to_int\")\n      }\n\n      if (num < 0 || self.length < num) {\n        // no permutations, yield nothing\n      }\n      else if (num === 0) {\n        // exactly one permutation: the zero-length array\n        Opal.yield1(block, [])\n      }\n      else if (num === 1) {\n        // this is a special, easy case\n        for (var i = 0; i < self.length; i++) {\n          Opal.yield1(block, [self[i]])\n        }\n      }\n      else {\n        // this is the general case\n        (perm = $$($nesting, 'Array').$new(num));\n        (used = $$($nesting, 'Array').$new(self.length, false));\n\n        permute = function(num, perm, index, used, blk) {\n          self = this;\n          for(var i = 0; i < self.length; i++){\n            if(used['$[]'](i)['$!']()) {\n              perm[index] = i;\n              if(index < num - 1) {\n                used[i] = true;\n                permute.call(self, num, perm, index + 1, used, blk);\n                used[i] = false;\n              }\n              else {\n                output = [];\n                for (var j = 0; j < perm.length; j++) {\n                  output.push(self[perm[j]]);\n                }\n                Opal.yield1(blk, output);\n              }\n            }\n          }\n        }\n\n        if ((block !== nil)) {\n          // offensive (both definitions) copy.\n          offensive = self.slice();\n          permute.call(offensive, num, perm, 0, used, block);\n        }\n        else {\n          permute.call(self, num, perm, 0, used, block);\n        }\n      }\n    ;\n      return self;\n    }, $Array_permutation$67.$$arity = -1);\n    \n    Opal.def(self, '$repeated_permutation', $Array_repeated_permutation$69 = function $$repeated_permutation(n) {\n      var $$70, $iter = $Array_repeated_permutation$69.$$p, $yield = $iter || nil, self = this, num = nil;\n\n      if ($iter) $Array_repeated_permutation$69.$$p = null;\n      \n      num = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"repeated_permutation\", num], ($$70 = function(){var self = $$70.$$s || this;\n\n        if ($truthy($rb_ge(num, 0))) {\n            return self.$size()['$**'](num)\n          } else {\n            return 0\n          }}, $$70.$$s = self, $$70.$$arity = 0, $$70))\n      };\n      \n      function iterate(max, buffer, self) {\n        if (buffer.length == max) {\n          var copy = buffer.slice();\n          Opal.yield1($yield, copy)\n          return;\n        }\n        for (var i = 0; i < self.length; i++) {\n          buffer.push(self[i]);\n          iterate(max, buffer, self);\n          buffer.pop();\n        }\n      }\n\n      iterate(num, [], self.slice());\n    ;\n      return self;\n    }, $Array_repeated_permutation$69.$$arity = 1);\n    \n    Opal.def(self, '$pop', $Array_pop$71 = function $$pop(count) {\n      var self = this;\n\n      \n      ;\n      if ($truthy(count === undefined)) {\n        \n        if ($truthy(self.length === 0)) {\n          return nil};\n        return self.pop();};\n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(count < 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\")};\n      if ($truthy(self.length === 0)) {\n        return []};\n      if ($truthy(count > self.length)) {\n        return self.splice(0, self.length);\n      } else {\n        return self.splice(self.length - count, self.length);\n      };\n    }, $Array_pop$71.$$arity = -1);\n    \n    Opal.def(self, '$product', $Array_product$72 = function $$product($a) {\n      var $iter = $Array_product$72.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Array_product$72.$$p = null;\n      \n      \n      if ($iter) $Array_product$72.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var result = (block !== nil) ? null : [],\n          n = args.length + 1,\n          counters = new Array(n),\n          lengths  = new Array(n),\n          arrays   = new Array(n),\n          i, m, subarray, len, resultlen = 1;\n\n      arrays[0] = self;\n      for (i = 1; i < n; i++) {\n        arrays[i] = $$($nesting, 'Opal').$coerce_to(args[i - 1], $$($nesting, 'Array'), \"to_ary\");\n      }\n\n      for (i = 0; i < n; i++) {\n        len = arrays[i].length;\n        if (len === 0) {\n          return result || self;\n        }\n        resultlen *= len;\n        if (resultlen > 2147483647) {\n          self.$raise($$($nesting, 'RangeError'), \"too big to product\")\n        }\n        lengths[i] = len;\n        counters[i] = 0;\n      }\n\n      outer_loop: for (;;) {\n        subarray = [];\n        for (i = 0; i < n; i++) {\n          subarray.push(arrays[i][counters[i]]);\n        }\n        if (result) {\n          result.push(subarray);\n        } else {\n          Opal.yield1(block, subarray)\n        }\n        m = n - 1;\n        counters[m]++;\n        while (counters[m] === lengths[m]) {\n          counters[m] = 0;\n          if (--m < 0) break outer_loop;\n          counters[m]++;\n        }\n      }\n\n      return result || self;\n    ;\n    }, $Array_product$72.$$arity = -1);\n    \n    Opal.def(self, '$push', $Array_push$73 = function $$push($a) {\n      var $post_args, objects, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      objects = $post_args;;\n      \n      for (var i = 0, length = objects.length; i < length; i++) {\n        self.push(objects[i]);\n      }\n    ;\n      return self;\n    }, $Array_push$73.$$arity = -1);\n    Opal.alias(self, \"append\", \"push\");\n    \n    Opal.def(self, '$rassoc', $Array_rassoc$74 = function $$rassoc(object) {\n      var self = this;\n\n      \n      for (var i = 0, length = self.length, item; i < length; i++) {\n        item = self[i];\n\n        if (item.length && item[1] !== undefined) {\n          if ((item[1])['$=='](object)) {\n            return item;\n          }\n        }\n      }\n\n      return nil;\n    \n    }, $Array_rassoc$74.$$arity = 1);\n    \n    Opal.def(self, '$reject', $Array_reject$75 = function $$reject() {\n      var $iter = $Array_reject$75.$$p, block = $iter || nil, $$76, self = this;\n\n      if ($iter) $Array_reject$75.$$p = null;\n      \n      \n      if ($iter) $Array_reject$75.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject\"], ($$76 = function(){var self = $$76.$$s || this;\n\n        return self.$size()}, $$76.$$s = self, $$76.$$arity = 0, $$76))\n      };\n      \n      var result = [];\n\n      for (var i = 0, length = self.length, value; i < length; i++) {\n        value = block(self[i]);\n\n        if (value === false || value === nil) {\n          result.push(self[i]);\n        }\n      }\n      return result;\n    ;\n    }, $Array_reject$75.$$arity = 0);\n    \n    Opal.def(self, '$reject!', $Array_reject$excl$77 = function() {\n      var $iter = $Array_reject$excl$77.$$p, block = $iter || nil, $$78, self = this, original = nil;\n\n      if ($iter) $Array_reject$excl$77.$$p = null;\n      \n      \n      if ($iter) $Array_reject$excl$77.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject!\"], ($$78 = function(){var self = $$78.$$s || this;\n\n        return self.$size()}, $$78.$$s = self, $$78.$$arity = 0, $$78))\n      };\n      original = self.$length();\n      $send(self, 'delete_if', [], block.$to_proc());\n      if (self.$length()['$=='](original)) {\n        return nil\n      } else {\n        return self\n      };\n    }, $Array_reject$excl$77.$$arity = 0);\n    \n    Opal.def(self, '$replace', $Array_replace$79 = function $$replace(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      \n      self.splice(0, self.length);\n      self.push.apply(self, other);\n    ;\n      return self;\n    }, $Array_replace$79.$$arity = 1);\n    \n    Opal.def(self, '$reverse', $Array_reverse$80 = function $$reverse() {\n      var self = this;\n\n      return self.slice(0).reverse();\n    }, $Array_reverse$80.$$arity = 0);\n    \n    Opal.def(self, '$reverse!', $Array_reverse$excl$81 = function() {\n      var self = this;\n\n      return self.reverse();\n    }, $Array_reverse$excl$81.$$arity = 0);\n    \n    Opal.def(self, '$reverse_each', $Array_reverse_each$82 = function $$reverse_each() {\n      var $iter = $Array_reverse_each$82.$$p, block = $iter || nil, $$83, self = this;\n\n      if ($iter) $Array_reverse_each$82.$$p = null;\n      \n      \n      if ($iter) $Array_reverse_each$82.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reverse_each\"], ($$83 = function(){var self = $$83.$$s || this;\n\n        return self.$size()}, $$83.$$s = self, $$83.$$arity = 0, $$83))\n      };\n      $send(self.$reverse(), 'each', [], block.$to_proc());\n      return self;\n    }, $Array_reverse_each$82.$$arity = 0);\n    \n    Opal.def(self, '$rindex', $Array_rindex$84 = function $$rindex(object) {\n      var $iter = $Array_rindex$84.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_rindex$84.$$p = null;\n      \n      \n      if ($iter) $Array_rindex$84.$$p = null;;\n      ;\n      \n      var i, value;\n\n      if (object != null && block !== nil) {\n        self.$warn(\"warning: given block not used\")\n      }\n\n      if (object != null) {\n        for (i = self.length - 1; i >= 0; i--) {\n          if (i >= self.length) {\n            break;\n          }\n          if ((self[i])['$=='](object)) {\n            return i;\n          }\n        }\n      }\n      else if (block !== nil) {\n        for (i = self.length - 1; i >= 0; i--) {\n          if (i >= self.length) {\n            break;\n          }\n\n          value = block(self[i]);\n\n          if (value !== false && value !== nil) {\n            return i;\n          }\n        }\n      }\n      else if (object == null) {\n        return self.$enum_for(\"rindex\");\n      }\n\n      return nil;\n    ;\n    }, $Array_rindex$84.$$arity = -1);\n    \n    Opal.def(self, '$rotate', $Array_rotate$85 = function $$rotate(n) {\n      var self = this;\n\n      \n      \n      if (n == null) {\n        n = 1;\n      };\n      n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n      \n      var ary, idx, firstPart, lastPart;\n\n      if (self.length === 1) {\n        return self.slice();\n      }\n      if (self.length === 0) {\n        return [];\n      }\n\n      ary = self.slice();\n      idx = n % ary.length;\n\n      firstPart = ary.slice(idx);\n      lastPart = ary.slice(0, idx);\n      return firstPart.concat(lastPart);\n    ;\n    }, $Array_rotate$85.$$arity = -1);\n    \n    Opal.def(self, '$rotate!', $Array_rotate$excl$86 = function(cnt) {\n      var self = this, ary = nil;\n\n      \n      \n      if (cnt == null) {\n        cnt = 1;\n      };\n      \n      if (self.length === 0 || self.length === 1) {\n        return self;\n      }\n    ;\n      cnt = $$($nesting, 'Opal').$coerce_to(cnt, $$($nesting, 'Integer'), \"to_int\");\n      ary = self.$rotate(cnt);\n      return self.$replace(ary);\n    }, $Array_rotate$excl$86.$$arity = -1);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'SampleRandom');\n\n      var $nesting = [self].concat($parent_nesting), $SampleRandom_initialize$87, $SampleRandom_rand$88;\n\n      self.$$prototype.rng = nil;\n      \n      \n      Opal.def(self, '$initialize', $SampleRandom_initialize$87 = function $$initialize(rng) {\n        var self = this;\n\n        return (self.rng = rng)\n      }, $SampleRandom_initialize$87.$$arity = 1);\n      return (Opal.def(self, '$rand', $SampleRandom_rand$88 = function $$rand(size) {\n        var self = this, random = nil;\n\n        \n        random = $$($nesting, 'Opal').$coerce_to(self.rng.$rand(size), $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(random < 0)) {\n          self.$raise($$($nesting, 'RangeError'), \"random value must be >= 0\")};\n        if ($truthy(random < size)) {\n        } else {\n          self.$raise($$($nesting, 'RangeError'), \"random value must be less than Array size\")\n        };\n        return random;\n      }, $SampleRandom_rand$88.$$arity = 1), nil) && 'rand';\n    })($nesting[0], null, $nesting);\n    \n    Opal.def(self, '$sample', $Array_sample$89 = function $$sample(count, options) {\n      var $a, self = this, o = nil, rng = nil;\n\n      \n      ;\n      ;\n      if ($truthy(count === undefined)) {\n        return self.$at($$($nesting, 'Kernel').$rand(self.length))};\n      if ($truthy(options === undefined)) {\n        if ($truthy((o = $$($nesting, 'Opal')['$coerce_to?'](count, $$($nesting, 'Hash'), \"to_hash\")))) {\n          \n          options = o;\n          count = nil;\n        } else {\n          \n          options = nil;\n          count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n        }\n      } else {\n        \n        count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n        options = $$($nesting, 'Opal').$coerce_to(options, $$($nesting, 'Hash'), \"to_hash\");\n      };\n      if ($truthy(($truthy($a = count) ? count < 0 : $a))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"count must be greater than 0\")};\n      if ($truthy(options)) {\n        rng = options['$[]'](\"random\")};\n      rng = (function() {if ($truthy(($truthy($a = rng) ? rng['$respond_to?'](\"rand\") : $a))) {\n        return $$($nesting, 'SampleRandom').$new(rng)\n      } else {\n        return $$($nesting, 'Kernel')\n      }; return nil; })();\n      if ($truthy(count)) {\n      } else {\n        return self[rng.$rand(self.length)]\n      };\n      \n\n      var abandon, spin, result, i, j, k, targetIndex, oldValue;\n\n      if (count > self.length) {\n        count = self.length;\n      }\n\n      switch (count) {\n        case 0:\n          return [];\n          break;\n        case 1:\n          return [self[rng.$rand(self.length)]];\n          break;\n        case 2:\n          i = rng.$rand(self.length);\n          j = rng.$rand(self.length);\n          if (i === j) {\n            j = i === 0 ? i + 1 : i - 1;\n          }\n          return [self[i], self[j]];\n          break;\n        default:\n          if (self.length / count > 3) {\n            abandon = false;\n            spin = 0;\n\n            result = $$($nesting, 'Array').$new(count);\n            i = 1;\n\n            result[0] = rng.$rand(self.length);\n            while (i < count) {\n              k = rng.$rand(self.length);\n              j = 0;\n\n              while (j < i) {\n                while (k === result[j]) {\n                  spin++;\n                  if (spin > 100) {\n                    abandon = true;\n                    break;\n                  }\n                  k = rng.$rand(self.length);\n                }\n                if (abandon) { break; }\n\n                j++;\n              }\n\n              if (abandon) { break; }\n\n              result[i] = k;\n\n              i++;\n            }\n\n            if (!abandon) {\n              i = 0;\n              while (i < count) {\n                result[i] = self[result[i]];\n                i++;\n              }\n\n              return result;\n            }\n          }\n\n          result = self.slice();\n\n          for (var c = 0; c < count; c++) {\n            targetIndex = rng.$rand(self.length);\n            oldValue = result[c];\n            result[c] = result[targetIndex];\n            result[targetIndex] = oldValue;\n          }\n\n          return count === self.length ? result : (result)['$[]'](0, count);\n      }\n    ;\n    }, $Array_sample$89.$$arity = -1);\n    \n    Opal.def(self, '$select', $Array_select$90 = function $$select() {\n      var $iter = $Array_select$90.$$p, block = $iter || nil, $$91, self = this;\n\n      if ($iter) $Array_select$90.$$p = null;\n      \n      \n      if ($iter) $Array_select$90.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"select\"], ($$91 = function(){var self = $$91.$$s || this;\n\n        return self.$size()}, $$91.$$s = self, $$91.$$arity = 0, $$91))\n      };\n      \n      var result = [];\n\n      for (var i = 0, length = self.length, item, value; i < length; i++) {\n        item = self[i];\n\n        value = Opal.yield1(block, item);\n\n        if (Opal.truthy(value)) {\n          result.push(item);\n        }\n      }\n\n      return result;\n    ;\n    }, $Array_select$90.$$arity = 0);\n    \n    Opal.def(self, '$select!', $Array_select$excl$92 = function() {\n      var $iter = $Array_select$excl$92.$$p, block = $iter || nil, $$93, self = this;\n\n      if ($iter) $Array_select$excl$92.$$p = null;\n      \n      \n      if ($iter) $Array_select$excl$92.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"select!\"], ($$93 = function(){var self = $$93.$$s || this;\n\n        return self.$size()}, $$93.$$s = self, $$93.$$arity = 0, $$93))\n      };\n      \n      var original = self.length;\n      $send(self, 'keep_if', [], block.$to_proc());\n      return self.length === original ? nil : self;\n    ;\n    }, $Array_select$excl$92.$$arity = 0);\n    \n    Opal.def(self, '$shift', $Array_shift$94 = function $$shift(count) {\n      var self = this;\n\n      \n      ;\n      if ($truthy(count === undefined)) {\n        \n        if ($truthy(self.length === 0)) {\n          return nil};\n        return self.shift();};\n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(count < 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\")};\n      if ($truthy(self.length === 0)) {\n        return []};\n      return self.splice(0, count);;\n    }, $Array_shift$94.$$arity = -1);\n    Opal.alias(self, \"size\", \"length\");\n    \n    Opal.def(self, '$shuffle', $Array_shuffle$95 = function $$shuffle(rng) {\n      var self = this;\n\n      \n      ;\n      return self.$dup().$to_a()['$shuffle!'](rng);\n    }, $Array_shuffle$95.$$arity = -1);\n    \n    Opal.def(self, '$shuffle!', $Array_shuffle$excl$96 = function(rng) {\n      var self = this;\n\n      \n      ;\n      \n      var randgen, i = self.length, j, tmp;\n\n      if (rng !== undefined) {\n        rng = $$($nesting, 'Opal')['$coerce_to?'](rng, $$($nesting, 'Hash'), \"to_hash\");\n\n        if (rng !== nil) {\n          rng = rng['$[]'](\"random\");\n\n          if (rng !== nil && rng['$respond_to?'](\"rand\")) {\n            randgen = rng;\n          }\n        }\n      }\n\n      while (i) {\n        if (randgen) {\n          j = randgen.$rand(i).$to_int();\n\n          if (j < 0) {\n            self.$raise($$($nesting, 'RangeError'), \"\" + \"random number too small \" + (j))\n          }\n\n          if (j >= i) {\n            self.$raise($$($nesting, 'RangeError'), \"\" + \"random number too big \" + (j))\n          }\n        }\n        else {\n          j = self.$rand(i);\n        }\n\n        tmp = self[--i];\n        self[i] = self[j];\n        self[j] = tmp;\n      }\n\n      return self;\n    ;\n    }, $Array_shuffle$excl$96.$$arity = -1);\n    Opal.alias(self, \"slice\", \"[]\");\n    \n    Opal.def(self, '$slice!', $Array_slice$excl$97 = function(index, length) {\n      var self = this, result = nil, range = nil, range_start = nil, range_end = nil, start = nil;\n\n      \n      ;\n      result = nil;\n      if ($truthy(length === undefined)) {\n        if ($truthy($$($nesting, 'Range')['$==='](index))) {\n          \n          range = index;\n          result = self['$[]'](range);\n          range_start = $$($nesting, 'Opal').$coerce_to(range.$begin(), $$($nesting, 'Integer'), \"to_int\");\n          range_end = $$($nesting, 'Opal').$coerce_to(range.$end(), $$($nesting, 'Integer'), \"to_int\");\n          \n          if (range_start < 0) {\n            range_start += self.length;\n          }\n\n          if (range_end < 0) {\n            range_end += self.length;\n          } else if (range_end >= self.length) {\n            range_end = self.length - 1;\n            if (range.excl) {\n              range_end += 1;\n            }\n          }\n\n          var range_length = range_end - range_start;\n          if (range.excl) {\n            range_end -= 1;\n          } else {\n            range_length += 1;\n          }\n\n          if (range_start < self.length && range_start >= 0 && range_end < self.length && range_end >= 0 && range_length > 0) {\n            self.splice(range_start, range_length);\n          }\n        ;\n        } else {\n          \n          start = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n          \n          if (start < 0) {\n            start += self.length;\n          }\n\n          if (start < 0 || start >= self.length) {\n            return nil;\n          }\n\n          result = self[start];\n\n          if (start === 0) {\n            self.shift();\n          } else {\n            self.splice(start, 1);\n          }\n        ;\n        }\n      } else {\n        \n        start = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n        length = $$($nesting, 'Opal').$coerce_to(length, $$($nesting, 'Integer'), \"to_int\");\n        \n        if (length < 0) {\n          return nil;\n        }\n\n        var end = start + length;\n\n        result = self['$[]'](start, length);\n\n        if (start < 0) {\n          start += self.length;\n        }\n\n        if (start + length > self.length) {\n          length = self.length - start;\n        }\n\n        if (start < self.length && start >= 0) {\n          self.splice(start, length);\n        }\n      ;\n      };\n      return result;\n    }, $Array_slice$excl$97.$$arity = -2);\n    \n    Opal.def(self, '$sort', $Array_sort$98 = function $$sort() {\n      var $iter = $Array_sort$98.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_sort$98.$$p = null;\n      \n      \n      if ($iter) $Array_sort$98.$$p = null;;\n      if ($truthy(self.length > 1)) {\n      } else {\n        return self\n      };\n      \n      if (block === nil) {\n        block = function(a, b) {\n          return (a)['$<=>'](b);\n        };\n      }\n\n      return self.slice().sort(function(x, y) {\n        var ret = block(x, y);\n\n        if (ret === nil) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + ((x).$inspect()) + \" with \" + ((y).$inspect()) + \" failed\");\n        }\n\n        return $rb_gt(ret, 0) ? 1 : ($rb_lt(ret, 0) ? -1 : 0);\n      });\n    ;\n    }, $Array_sort$98.$$arity = 0);\n    \n    Opal.def(self, '$sort!', $Array_sort$excl$99 = function() {\n      var $iter = $Array_sort$excl$99.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_sort$excl$99.$$p = null;\n      \n      \n      if ($iter) $Array_sort$excl$99.$$p = null;;\n      \n      var result;\n\n      if ((block !== nil)) {\n        result = $send((self.slice()), 'sort', [], block.$to_proc());\n      }\n      else {\n        result = (self.slice()).$sort();\n      }\n\n      self.length = 0;\n      for(var i = 0, length = result.length; i < length; i++) {\n        self.push(result[i]);\n      }\n\n      return self;\n    ;\n    }, $Array_sort$excl$99.$$arity = 0);\n    \n    Opal.def(self, '$sort_by!', $Array_sort_by$excl$100 = function() {\n      var $iter = $Array_sort_by$excl$100.$$p, block = $iter || nil, $$101, self = this;\n\n      if ($iter) $Array_sort_by$excl$100.$$p = null;\n      \n      \n      if ($iter) $Array_sort_by$excl$100.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"sort_by!\"], ($$101 = function(){var self = $$101.$$s || this;\n\n        return self.$size()}, $$101.$$s = self, $$101.$$arity = 0, $$101))\n      };\n      return self.$replace($send(self, 'sort_by', [], block.$to_proc()));\n    }, $Array_sort_by$excl$100.$$arity = 0);\n    \n    Opal.def(self, '$take', $Array_take$102 = function $$take(count) {\n      var self = this;\n\n      \n      if (count < 0) {\n        self.$raise($$($nesting, 'ArgumentError'));\n      }\n\n      return self.slice(0, count);\n    \n    }, $Array_take$102.$$arity = 1);\n    \n    Opal.def(self, '$take_while', $Array_take_while$103 = function $$take_while() {\n      var $iter = $Array_take_while$103.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_take_while$103.$$p = null;\n      \n      \n      if ($iter) $Array_take_while$103.$$p = null;;\n      \n      var result = [];\n\n      for (var i = 0, length = self.length, item, value; i < length; i++) {\n        item = self[i];\n\n        value = block(item);\n\n        if (value === false || value === nil) {\n          return result;\n        }\n\n        result.push(item);\n      }\n\n      return result;\n    ;\n    }, $Array_take_while$103.$$arity = 0);\n    \n    Opal.def(self, '$to_a', $Array_to_a$104 = function $$to_a() {\n      var self = this;\n\n      return self\n    }, $Array_to_a$104.$$arity = 0);\n    Opal.alias(self, \"to_ary\", \"to_a\");\n    \n    Opal.def(self, '$to_h', $Array_to_h$105 = function $$to_h() {\n      var self = this;\n\n      \n      var i, len = self.length, ary, key, val, hash = $hash2([], {});\n\n      for (i = 0; i < len; i++) {\n        ary = $$($nesting, 'Opal')['$coerce_to?'](self[i], $$($nesting, 'Array'), \"to_ary\");\n        if (!ary.$$is_array) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong element type \" + ((ary).$class()) + \" at \" + (i) + \" (expected array)\")\n        }\n        if (ary.length !== 2) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong array length at \" + (i) + \" (expected 2, was \" + ((ary).$length()) + \")\")\n        }\n        key = ary[0];\n        val = ary[1];\n        Opal.hash_put(hash, key, val);\n      }\n\n      return hash;\n    \n    }, $Array_to_h$105.$$arity = 0);\n    Opal.alias(self, \"to_s\", \"inspect\");\n    \n    Opal.def(self, '$transpose', $Array_transpose$106 = function $$transpose() {\n      var $$107, self = this, result = nil, max = nil;\n\n      \n      if ($truthy(self['$empty?']())) {\n        return []};\n      result = [];\n      max = nil;\n      $send(self, 'each', [], ($$107 = function(row){var self = $$107.$$s || this, $a, $$108;\n\n      \n        \n        if (row == null) {\n          row = nil;\n        };\n        row = (function() {if ($truthy($$($nesting, 'Array')['$==='](row))) {\n          return row.$to_a()\n        } else {\n          return $$($nesting, 'Opal').$coerce_to(row, $$($nesting, 'Array'), \"to_ary\").$to_a()\n        }; return nil; })();\n        max = ($truthy($a = max) ? $a : row.length);\n        if ($truthy((row.length)['$!='](max))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"element size differs (\" + (row.length) + \" should be \" + (max) + \")\")};\n        return $send((row.length), 'times', [], ($$108 = function(i){var self = $$108.$$s || this, $b, entry = nil, $writer = nil;\n\n        \n          \n          if (i == null) {\n            i = nil;\n          };\n          entry = ($truthy($b = result['$[]'](i)) ? $b : (($writer = [i, []]), $send(result, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          return entry['$<<'](row.$at(i));}, $$108.$$s = self, $$108.$$arity = 1, $$108));}, $$107.$$s = self, $$107.$$arity = 1, $$107));\n      return result;\n    }, $Array_transpose$106.$$arity = 0);\n    \n    Opal.def(self, '$uniq', $Array_uniq$109 = function $$uniq() {\n      var $iter = $Array_uniq$109.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_uniq$109.$$p = null;\n      \n      \n      if ($iter) $Array_uniq$109.$$p = null;;\n      \n      var hash = $hash2([], {}), i, length, item, key;\n\n      if (block === nil) {\n        for (i = 0, length = self.length; i < length; i++) {\n          item = self[i];\n          if (Opal.hash_get(hash, item) === undefined) {\n            Opal.hash_put(hash, item, item);\n          }\n        }\n      }\n      else {\n        for (i = 0, length = self.length; i < length; i++) {\n          item = self[i];\n          key = Opal.yield1(block, item);\n          if (Opal.hash_get(hash, key) === undefined) {\n            Opal.hash_put(hash, key, item);\n          }\n        }\n      }\n\n      return toArraySubclass((hash).$values(), self.$class());\n    ;\n    }, $Array_uniq$109.$$arity = 0);\n    \n    Opal.def(self, '$uniq!', $Array_uniq$excl$110 = function() {\n      var $iter = $Array_uniq$excl$110.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_uniq$excl$110.$$p = null;\n      \n      \n      if ($iter) $Array_uniq$excl$110.$$p = null;;\n      \n      var original_length = self.length, hash = $hash2([], {}), i, length, item, key;\n\n      for (i = 0, length = original_length; i < length; i++) {\n        item = self[i];\n        key = (block === nil ? item : Opal.yield1(block, item));\n\n        if (Opal.hash_get(hash, key) === undefined) {\n          Opal.hash_put(hash, key, item);\n          continue;\n        }\n\n        self.splice(i, 1);\n        length--;\n        i--;\n      }\n\n      return self.length === original_length ? nil : self;\n    ;\n    }, $Array_uniq$excl$110.$$arity = 0);\n    \n    Opal.def(self, '$unshift', $Array_unshift$111 = function $$unshift($a) {\n      var $post_args, objects, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      objects = $post_args;;\n      \n      for (var i = objects.length - 1; i >= 0; i--) {\n        self.unshift(objects[i]);\n      }\n    ;\n      return self;\n    }, $Array_unshift$111.$$arity = -1);\n    Opal.alias(self, \"prepend\", \"unshift\");\n    \n    Opal.def(self, '$values_at', $Array_values_at$112 = function $$values_at($a) {\n      var $post_args, args, $$113, self = this, out = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      out = [];\n      $send(args, 'each', [], ($$113 = function(elem){var self = $$113.$$s || this, $$114, finish = nil, start = nil, i = nil;\n\n      \n        \n        if (elem == null) {\n          elem = nil;\n        };\n        if ($truthy(elem['$is_a?']($$($nesting, 'Range')))) {\n          \n          finish = $$($nesting, 'Opal').$coerce_to(elem.$last(), $$($nesting, 'Integer'), \"to_int\");\n          start = $$($nesting, 'Opal').$coerce_to(elem.$first(), $$($nesting, 'Integer'), \"to_int\");\n          \n          if (start < 0) {\n            start = start + self.length;\n            return nil;;\n          }\n        ;\n          \n          if (finish < 0) {\n            finish = finish + self.length;\n          }\n          if (elem['$exclude_end?']()) {\n            finish--;\n          }\n          if (finish < start) {\n            return nil;;\n          }\n        ;\n          return $send(start, 'upto', [finish], ($$114 = function(i){var self = $$114.$$s || this;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return out['$<<'](self.$at(i));}, $$114.$$s = self, $$114.$$arity = 1, $$114));\n        } else {\n          \n          i = $$($nesting, 'Opal').$coerce_to(elem, $$($nesting, 'Integer'), \"to_int\");\n          return out['$<<'](self.$at(i));\n        };}, $$113.$$s = self, $$113.$$arity = 1, $$113));\n      return out;\n    }, $Array_values_at$112.$$arity = -1);\n    \n    Opal.def(self, '$zip', $Array_zip$115 = function $$zip($a) {\n      var $iter = $Array_zip$115.$$p, block = $iter || nil, $post_args, others, $b, self = this;\n\n      if ($iter) $Array_zip$115.$$p = null;\n      \n      \n      if ($iter) $Array_zip$115.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      others = $post_args;;\n      \n      var result = [], size = self.length, part, o, i, j, jj;\n\n      for (j = 0, jj = others.length; j < jj; j++) {\n        o = others[j];\n        if (o.$$is_array) {\n          continue;\n        }\n        if (o.$$is_enumerator) {\n          if (o.$size() === Infinity) {\n            others[j] = o.$take(size);\n          } else {\n            others[j] = o.$to_a();\n          }\n          continue;\n        }\n        others[j] = ($truthy($b = $$($nesting, 'Opal')['$coerce_to?'](o, $$($nesting, 'Array'), \"to_ary\")) ? $b : $$($nesting, 'Opal')['$coerce_to!'](o, $$($nesting, 'Enumerator'), \"each\")).$to_a();\n      }\n\n      for (i = 0; i < size; i++) {\n        part = [self[i]];\n\n        for (j = 0, jj = others.length; j < jj; j++) {\n          o = others[j][i];\n\n          if (o == null) {\n            o = nil;\n          }\n\n          part[j + 1] = o;\n        }\n\n        result[i] = part;\n      }\n\n      if (block !== nil) {\n        for (i = 0; i < size; i++) {\n          block(result[i]);\n        }\n\n        return nil;\n      }\n\n      return result;\n    ;\n    }, $Array_zip$115.$$arity = -1);\n    Opal.defs(self, '$inherited', $Array_inherited$116 = function $$inherited(klass) {\n      var self = this;\n\n      \n      klass.$$prototype.$to_a = function() {\n        return this.slice(0, this.length);\n      }\n    \n    }, $Array_inherited$116.$$arity = 1);\n    \n    Opal.def(self, '$instance_variables', $Array_instance_variables$117 = function $$instance_variables() {\n      var $$118, $iter = $Array_instance_variables$117.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Array_instance_variables$117.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      return $send($send(self, Opal.find_super_dispatcher(self, 'instance_variables', $Array_instance_variables$117, false), $zuper, $iter), 'reject', [], ($$118 = function(ivar){var self = $$118.$$s || this, $a;\n\n      \n        \n        if (ivar == null) {\n          ivar = nil;\n        };\n        return ($truthy($a = /^@\\d+$/.test(ivar)) ? $a : ivar['$=='](\"@length\"));}, $$118.$$s = self, $$118.$$arity = 1, $$118))\n    }, $Array_instance_variables$117.$$arity = 0);\n    $$($nesting, 'Opal').$pristine(self.$singleton_class(), \"allocate\");\n    $$($nesting, 'Opal').$pristine(self, \"copy_instance_variables\", \"initialize_dup\");\n    return (Opal.def(self, '$pack', $Array_pack$119 = function $$pack($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return self.$raise(\"To use Array#pack, you must first require 'corelib/array/pack'.\");\n    }, $Array_pack$119.$$arity = -1), nil) && 'pack';\n  })($nesting[0], Array, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/hash\"] = function(Opal) {\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$require', '$include', '$coerce_to?', '$[]', '$merge!', '$allocate', '$raise', '$coerce_to!', '$each', '$fetch', '$>=', '$>', '$==', '$compare_by_identity', '$lambda?', '$abs', '$arity', '$enum_for', '$size', '$respond_to?', '$class', '$dig', '$new', '$inspect', '$map', '$to_proc', '$flatten', '$eql?', '$default', '$dup', '$default_proc', '$default_proc=', '$-', '$default=', '$proc']);\n  \n  self.$require(\"corelib/enumerable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Hash');\n\n    var $nesting = [self].concat($parent_nesting), $Hash_$$$1, $Hash_allocate$2, $Hash_try_convert$3, $Hash_initialize$4, $Hash_$eq_eq$5, $Hash_$gt_eq$6, $Hash_$gt$8, $Hash_$lt$9, $Hash_$lt_eq$10, $Hash_$$$11, $Hash_$$$eq$12, $Hash_assoc$13, $Hash_clear$14, $Hash_clone$15, $Hash_compact$16, $Hash_compact$excl$17, $Hash_compare_by_identity$18, $Hash_compare_by_identity$ques$19, $Hash_default$20, $Hash_default$eq$21, $Hash_default_proc$22, $Hash_default_proc$eq$23, $Hash_delete$24, $Hash_delete_if$25, $Hash_dig$27, $Hash_each$28, $Hash_each_key$30, $Hash_each_value$32, $Hash_empty$ques$34, $Hash_fetch$35, $Hash_fetch_values$36, $Hash_flatten$38, $Hash_has_key$ques$39, $Hash_has_value$ques$40, $Hash_hash$41, $Hash_index$42, $Hash_indexes$43, $Hash_inspect$44, $Hash_invert$45, $Hash_keep_if$46, $Hash_keys$48, $Hash_length$49, $Hash_merge$50, $Hash_merge$excl$51, $Hash_rassoc$52, $Hash_rehash$53, $Hash_reject$54, $Hash_reject$excl$56, $Hash_replace$58, $Hash_select$59, $Hash_select$excl$61, $Hash_shift$63, $Hash_slice$64, $Hash_to_a$65, $Hash_to_h$66, $Hash_to_hash$67, $Hash_to_proc$68, $Hash_transform_keys$70, $Hash_transform_keys$excl$72, $Hash_transform_values$74, $Hash_transform_values$excl$76, $Hash_values$78;\n\n    \n    self.$include($$($nesting, 'Enumerable'));\n    self.$$prototype.$$is_hash = true;\n    Opal.defs(self, '$[]', $Hash_$$$1 = function($a) {\n      var $post_args, argv, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      argv = $post_args;;\n      \n      var hash, argc = argv.length, i;\n\n      if (argc === 1) {\n        hash = $$($nesting, 'Opal')['$coerce_to?'](argv['$[]'](0), $$($nesting, 'Hash'), \"to_hash\");\n        if (hash !== nil) {\n          return self.$allocate()['$merge!'](hash);\n        }\n\n        argv = $$($nesting, 'Opal')['$coerce_to?'](argv['$[]'](0), $$($nesting, 'Array'), \"to_ary\");\n        if (argv === nil) {\n          self.$raise($$($nesting, 'ArgumentError'), \"odd number of arguments for Hash\")\n        }\n\n        argc = argv.length;\n        hash = self.$allocate();\n\n        for (i = 0; i < argc; i++) {\n          if (!argv[i].$$is_array) continue;\n          switch(argv[i].length) {\n          case 1:\n            hash.$store(argv[i][0], nil);\n            break;\n          case 2:\n            hash.$store(argv[i][0], argv[i][1]);\n            break;\n          default:\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid number of elements (\" + (argv[i].length) + \" for 1..2)\")\n          }\n        }\n\n        return hash;\n      }\n\n      if (argc % 2 !== 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"odd number of arguments for Hash\")\n      }\n\n      hash = self.$allocate();\n\n      for (i = 0; i < argc; i += 2) {\n        hash.$store(argv[i], argv[i + 1]);\n      }\n\n      return hash;\n    ;\n    }, $Hash_$$$1.$$arity = -1);\n    Opal.defs(self, '$allocate', $Hash_allocate$2 = function $$allocate() {\n      var self = this;\n\n      \n      var hash = new self.$$constructor();\n\n      Opal.hash_init(hash);\n\n      hash.$$none = nil;\n      hash.$$proc = nil;\n\n      return hash;\n    \n    }, $Hash_allocate$2.$$arity = 0);\n    Opal.defs(self, '$try_convert', $Hash_try_convert$3 = function $$try_convert(obj) {\n      var self = this;\n\n      return $$($nesting, 'Opal')['$coerce_to?'](obj, $$($nesting, 'Hash'), \"to_hash\")\n    }, $Hash_try_convert$3.$$arity = 1);\n    \n    Opal.def(self, '$initialize', $Hash_initialize$4 = function $$initialize(defaults) {\n      var $iter = $Hash_initialize$4.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_initialize$4.$$p = null;\n      \n      \n      if ($iter) $Hash_initialize$4.$$p = null;;\n      ;\n      \n      if (defaults !== undefined && block !== nil) {\n        self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (1 for 0)\")\n      }\n      self.$$none = (defaults === undefined ? nil : defaults);\n      self.$$proc = block;\n\n      return self;\n    ;\n    }, $Hash_initialize$4.$$arity = -1);\n    \n    Opal.def(self, '$==', $Hash_$eq_eq$5 = function(other) {\n      var self = this;\n\n      \n      if (self === other) {\n        return true;\n      }\n\n      if (!other.$$is_hash) {\n        return false;\n      }\n\n      if (self.$$keys.length !== other.$$keys.length) {\n        return false;\n      }\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, other_value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n          other_value = other.$$smap[key];\n        } else {\n          value = key.value;\n          other_value = Opal.hash_get(other, key.key);\n        }\n\n        if (other_value === undefined || !value['$eql?'](other_value)) {\n          return false;\n        }\n      }\n\n      return true;\n    \n    }, $Hash_$eq_eq$5.$$arity = 1);\n    \n    Opal.def(self, '$>=', $Hash_$gt_eq$6 = function(other) {\n      var $$7, self = this, result = nil;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      \n      if (self.$$keys.length < other.$$keys.length) {\n        return false\n      }\n    ;\n      result = true;\n      $send(other, 'each', [], ($$7 = function(other_key, other_val){var self = $$7.$$s || this, val = nil;\n\n      \n        \n        if (other_key == null) {\n          other_key = nil;\n        };\n        \n        if (other_val == null) {\n          other_val = nil;\n        };\n        val = self.$fetch(other_key, null);\n        \n        if (val == null || val !== other_val) {\n          result = false;\n          return;\n        }\n      ;}, $$7.$$s = self, $$7.$$arity = 2, $$7));\n      return result;\n    }, $Hash_$gt_eq$6.$$arity = 1);\n    \n    Opal.def(self, '$>', $Hash_$gt$8 = function(other) {\n      var self = this;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      \n      if (self.$$keys.length <= other.$$keys.length) {\n        return false\n      }\n    ;\n      return $rb_ge(self, other);\n    }, $Hash_$gt$8.$$arity = 1);\n    \n    Opal.def(self, '$<', $Hash_$lt$9 = function(other) {\n      var self = this;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      return $rb_gt(other, self);\n    }, $Hash_$lt$9.$$arity = 1);\n    \n    Opal.def(self, '$<=', $Hash_$lt_eq$10 = function(other) {\n      var self = this;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      return $rb_ge(other, self);\n    }, $Hash_$lt_eq$10.$$arity = 1);\n    \n    Opal.def(self, '$[]', $Hash_$$$11 = function(key) {\n      var self = this;\n\n      \n      var value = Opal.hash_get(self, key);\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      return self.$default(key);\n    \n    }, $Hash_$$$11.$$arity = 1);\n    \n    Opal.def(self, '$[]=', $Hash_$$$eq$12 = function(key, value) {\n      var self = this;\n\n      \n      Opal.hash_put(self, key, value);\n      return value;\n    \n    }, $Hash_$$$eq$12.$$arity = 2);\n    \n    Opal.def(self, '$assoc', $Hash_assoc$13 = function $$assoc(object) {\n      var self = this;\n\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          if ((key)['$=='](object)) {\n            return [key, self.$$smap[key]];\n          }\n        } else {\n          if ((key.key)['$=='](object)) {\n            return [key.key, key.value];\n          }\n        }\n      }\n\n      return nil;\n    \n    }, $Hash_assoc$13.$$arity = 1);\n    \n    Opal.def(self, '$clear', $Hash_clear$14 = function $$clear() {\n      var self = this;\n\n      \n      Opal.hash_init(self);\n      return self;\n    \n    }, $Hash_clear$14.$$arity = 0);\n    \n    Opal.def(self, '$clone', $Hash_clone$15 = function $$clone() {\n      var self = this;\n\n      \n      var hash = new self.$$class();\n\n      Opal.hash_init(hash);\n      Opal.hash_clone(self, hash);\n\n      return hash;\n    \n    }, $Hash_clone$15.$$arity = 0);\n    \n    Opal.def(self, '$compact', $Hash_compact$16 = function $$compact() {\n      var self = this;\n\n      \n      var hash = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        if (value !== nil) {\n          Opal.hash_put(hash, key, value);\n        }\n      }\n\n      return hash;\n    \n    }, $Hash_compact$16.$$arity = 0);\n    \n    Opal.def(self, '$compact!', $Hash_compact$excl$17 = function() {\n      var self = this;\n\n      \n      var changes_were_made = false;\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        if (value === nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            changes_were_made = true;\n            length--;\n            i--;\n          }\n        }\n      }\n\n      return changes_were_made ? self : nil;\n    \n    }, $Hash_compact$excl$17.$$arity = 0);\n    \n    Opal.def(self, '$compare_by_identity', $Hash_compare_by_identity$18 = function $$compare_by_identity() {\n      var self = this;\n\n      \n      var i, ii, key, keys = self.$$keys, identity_hash;\n\n      if (self.$$by_identity) return self;\n      if (self.$$keys.length === 0) {\n        self.$$by_identity = true\n        return self;\n      }\n\n      identity_hash = $hash2([], {}).$compare_by_identity();\n      for(i = 0, ii = keys.length; i < ii; i++) {\n        key = keys[i];\n        if (!key.$$is_string) key = key.key;\n        Opal.hash_put(identity_hash, key, Opal.hash_get(self, key));\n      }\n\n      self.$$by_identity = true;\n      self.$$map = identity_hash.$$map;\n      self.$$smap = identity_hash.$$smap;\n      return self;\n    \n    }, $Hash_compare_by_identity$18.$$arity = 0);\n    \n    Opal.def(self, '$compare_by_identity?', $Hash_compare_by_identity$ques$19 = function() {\n      var self = this;\n\n      return self.$$by_identity === true;\n    }, $Hash_compare_by_identity$ques$19.$$arity = 0);\n    \n    Opal.def(self, '$default', $Hash_default$20 = function(key) {\n      var self = this;\n\n      \n      ;\n      \n      if (key !== undefined && self.$$proc !== nil && self.$$proc !== undefined) {\n        return self.$$proc.$call(self, key);\n      }\n      if (self.$$none === undefined) {\n        return nil;\n      }\n      return self.$$none;\n    ;\n    }, $Hash_default$20.$$arity = -1);\n    \n    Opal.def(self, '$default=', $Hash_default$eq$21 = function(object) {\n      var self = this;\n\n      \n      self.$$proc = nil;\n      self.$$none = object;\n\n      return object;\n    \n    }, $Hash_default$eq$21.$$arity = 1);\n    \n    Opal.def(self, '$default_proc', $Hash_default_proc$22 = function $$default_proc() {\n      var self = this;\n\n      \n      if (self.$$proc !== undefined) {\n        return self.$$proc;\n      }\n      return nil;\n    \n    }, $Hash_default_proc$22.$$arity = 0);\n    \n    Opal.def(self, '$default_proc=', $Hash_default_proc$eq$23 = function(default_proc) {\n      var self = this;\n\n      \n      var proc = default_proc;\n\n      if (proc !== nil) {\n        proc = $$($nesting, 'Opal')['$coerce_to!'](proc, $$($nesting, 'Proc'), \"to_proc\");\n\n        if ((proc)['$lambda?']() && (proc).$arity().$abs() !== 2) {\n          self.$raise($$($nesting, 'TypeError'), \"default_proc takes two arguments\");\n        }\n      }\n\n      self.$$none = nil;\n      self.$$proc = proc;\n\n      return default_proc;\n    \n    }, $Hash_default_proc$eq$23.$$arity = 1);\n    \n    Opal.def(self, '$delete', $Hash_delete$24 = function(key) {\n      var $iter = $Hash_delete$24.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_delete$24.$$p = null;\n      \n      \n      if ($iter) $Hash_delete$24.$$p = null;;\n      \n      var value = Opal.hash_delete(self, key);\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      if (block !== nil) {\n        return Opal.yield1(block, key);\n      }\n\n      return nil;\n    ;\n    }, $Hash_delete$24.$$arity = 1);\n    \n    Opal.def(self, '$delete_if', $Hash_delete_if$25 = function $$delete_if() {\n      var $iter = $Hash_delete_if$25.$$p, block = $iter || nil, $$26, self = this;\n\n      if ($iter) $Hash_delete_if$25.$$p = null;\n      \n      \n      if ($iter) $Hash_delete_if$25.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"delete_if\"], ($$26 = function(){var self = $$26.$$s || this;\n\n        return self.$size()}, $$26.$$s = self, $$26.$$arity = 0, $$26))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj !== false && obj !== nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            length--;\n            i--;\n          }\n        }\n      }\n\n      return self;\n    ;\n    }, $Hash_delete_if$25.$$arity = 0);\n    Opal.alias(self, \"dup\", \"clone\");\n    \n    Opal.def(self, '$dig', $Hash_dig$27 = function $$dig(key, $a) {\n      var $post_args, keys, self = this, item = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      keys = $post_args;;\n      item = self['$[]'](key);\n      \n      if (item === nil || keys.length === 0) {\n        return item;\n      }\n    ;\n      if ($truthy(item['$respond_to?'](\"dig\"))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + (item.$class()) + \" does not have #dig method\")\n      };\n      return $send(item, 'dig', Opal.to_a(keys));\n    }, $Hash_dig$27.$$arity = -2);\n    \n    Opal.def(self, '$each', $Hash_each$28 = function $$each() {\n      var $iter = $Hash_each$28.$$p, block = $iter || nil, $$29, self = this;\n\n      if ($iter) $Hash_each$28.$$p = null;\n      \n      \n      if ($iter) $Hash_each$28.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"each\"], ($$29 = function(){var self = $$29.$$s || this;\n\n        return self.$size()}, $$29.$$s = self, $$29.$$arity = 0, $$29))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        Opal.yield1(block, [key, value]);\n      }\n\n      return self;\n    ;\n    }, $Hash_each$28.$$arity = 0);\n    \n    Opal.def(self, '$each_key', $Hash_each_key$30 = function $$each_key() {\n      var $iter = $Hash_each_key$30.$$p, block = $iter || nil, $$31, self = this;\n\n      if ($iter) $Hash_each_key$30.$$p = null;\n      \n      \n      if ($iter) $Hash_each_key$30.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_key\"], ($$31 = function(){var self = $$31.$$s || this;\n\n        return self.$size()}, $$31.$$s = self, $$31.$$arity = 0, $$31))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        block(key.$$is_string ? key : key.key);\n      }\n\n      return self;\n    ;\n    }, $Hash_each_key$30.$$arity = 0);\n    Opal.alias(self, \"each_pair\", \"each\");\n    \n    Opal.def(self, '$each_value', $Hash_each_value$32 = function $$each_value() {\n      var $iter = $Hash_each_value$32.$$p, block = $iter || nil, $$33, self = this;\n\n      if ($iter) $Hash_each_value$32.$$p = null;\n      \n      \n      if ($iter) $Hash_each_value$32.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_value\"], ($$33 = function(){var self = $$33.$$s || this;\n\n        return self.$size()}, $$33.$$s = self, $$33.$$arity = 0, $$33))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        block(key.$$is_string ? self.$$smap[key] : key.value);\n      }\n\n      return self;\n    ;\n    }, $Hash_each_value$32.$$arity = 0);\n    \n    Opal.def(self, '$empty?', $Hash_empty$ques$34 = function() {\n      var self = this;\n\n      return self.$$keys.length === 0;\n    }, $Hash_empty$ques$34.$$arity = 0);\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$fetch', $Hash_fetch$35 = function $$fetch(key, defaults) {\n      var $iter = $Hash_fetch$35.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_fetch$35.$$p = null;\n      \n      \n      if ($iter) $Hash_fetch$35.$$p = null;;\n      ;\n      \n      var value = Opal.hash_get(self, key);\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      if (block !== nil) {\n        return block(key);\n      }\n\n      if (defaults !== undefined) {\n        return defaults;\n      }\n    ;\n      return self.$raise($$($nesting, 'KeyError').$new(\"\" + \"key not found: \" + (key.$inspect()), $hash2([\"key\", \"receiver\"], {\"key\": key, \"receiver\": self})));\n    }, $Hash_fetch$35.$$arity = -2);\n    \n    Opal.def(self, '$fetch_values', $Hash_fetch_values$36 = function $$fetch_values($a) {\n      var $iter = $Hash_fetch_values$36.$$p, block = $iter || nil, $post_args, keys, $$37, self = this;\n\n      if ($iter) $Hash_fetch_values$36.$$p = null;\n      \n      \n      if ($iter) $Hash_fetch_values$36.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      keys = $post_args;;\n      return $send(keys, 'map', [], ($$37 = function(key){var self = $$37.$$s || this;\n\n      \n        \n        if (key == null) {\n          key = nil;\n        };\n        return $send(self, 'fetch', [key], block.$to_proc());}, $$37.$$s = self, $$37.$$arity = 1, $$37));\n    }, $Hash_fetch_values$36.$$arity = -1);\n    \n    Opal.def(self, '$flatten', $Hash_flatten$38 = function $$flatten(level) {\n      var self = this;\n\n      \n      \n      if (level == null) {\n        level = 1;\n      };\n      level = $$($nesting, 'Opal')['$coerce_to!'](level, $$($nesting, 'Integer'), \"to_int\");\n      \n      var result = [];\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        result.push(key);\n\n        if (value.$$is_array) {\n          if (level === 1) {\n            result.push(value);\n            continue;\n          }\n\n          result = result.concat((value).$flatten(level - 2));\n          continue;\n        }\n\n        result.push(value);\n      }\n\n      return result;\n    ;\n    }, $Hash_flatten$38.$$arity = -1);\n    \n    Opal.def(self, '$has_key?', $Hash_has_key$ques$39 = function(key) {\n      var self = this;\n\n      return Opal.hash_get(self, key) !== undefined;\n    }, $Hash_has_key$ques$39.$$arity = 1);\n    \n    Opal.def(self, '$has_value?', $Hash_has_value$ques$40 = function(value) {\n      var self = this;\n\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        if (((key.$$is_string ? self.$$smap[key] : key.value))['$=='](value)) {\n          return true;\n        }\n      }\n\n      return false;\n    \n    }, $Hash_has_value$ques$40.$$arity = 1);\n    \n    Opal.def(self, '$hash', $Hash_hash$41 = function $$hash() {\n      var self = this;\n\n      \n      var top = (Opal.hash_ids === undefined),\n          hash_id = self.$object_id(),\n          result = ['Hash'],\n          key, item;\n\n      try {\n        if (top) {\n          Opal.hash_ids = Object.create(null);\n        }\n\n        if (Opal[hash_id]) {\n          return 'self';\n        }\n\n        for (key in Opal.hash_ids) {\n          item = Opal.hash_ids[key];\n          if (self['$eql?'](item)) {\n            return 'self';\n          }\n        }\n\n        Opal.hash_ids[hash_id] = self;\n\n        for (var i = 0, keys = self.$$keys, length = keys.length; i < length; i++) {\n          key = keys[i];\n\n          if (key.$$is_string) {\n            result.push([key, self.$$smap[key].$hash()]);\n          } else {\n            result.push([key.key_hash, key.value.$hash()]);\n          }\n        }\n\n        return result.sort().join();\n\n      } finally {\n        if (top) {\n          Opal.hash_ids = undefined;\n        }\n      }\n    \n    }, $Hash_hash$41.$$arity = 0);\n    Opal.alias(self, \"include?\", \"has_key?\");\n    \n    Opal.def(self, '$index', $Hash_index$42 = function $$index(object) {\n      var self = this;\n\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        if ((value)['$=='](object)) {\n          return key;\n        }\n      }\n\n      return nil;\n    \n    }, $Hash_index$42.$$arity = 1);\n    \n    Opal.def(self, '$indexes', $Hash_indexes$43 = function $$indexes($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var result = [];\n\n      for (var i = 0, length = args.length, key, value; i < length; i++) {\n        key = args[i];\n        value = Opal.hash_get(self, key);\n\n        if (value === undefined) {\n          result.push(self.$default());\n          continue;\n        }\n\n        result.push(value);\n      }\n\n      return result;\n    ;\n    }, $Hash_indexes$43.$$arity = -1);\n    Opal.alias(self, \"indices\", \"indexes\");\n    var inspect_ids;\n    \n    Opal.def(self, '$inspect', $Hash_inspect$44 = function $$inspect() {\n      var self = this;\n\n      \n      var top = (inspect_ids === undefined),\n          hash_id = self.$object_id(),\n          result = [];\n\n      try {\n        if (top) {\n          inspect_ids = {};\n        }\n\n        if (inspect_ids.hasOwnProperty(hash_id)) {\n          return '{...}';\n        }\n\n        inspect_ids[hash_id] = true;\n\n        for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n          key = keys[i];\n\n          if (key.$$is_string) {\n            value = self.$$smap[key];\n          } else {\n            value = key.value;\n            key = key.key;\n          }\n\n          result.push(key.$inspect() + '=>' + value.$inspect());\n        }\n\n        return '{' + result.join(', ') + '}';\n\n      } finally {\n        if (top) {\n          inspect_ids = undefined;\n        }\n      }\n    \n    }, $Hash_inspect$44.$$arity = 0);\n    \n    Opal.def(self, '$invert', $Hash_invert$45 = function $$invert() {\n      var self = this;\n\n      \n      var hash = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        Opal.hash_put(hash, value, key);\n      }\n\n      return hash;\n    \n    }, $Hash_invert$45.$$arity = 0);\n    \n    Opal.def(self, '$keep_if', $Hash_keep_if$46 = function $$keep_if() {\n      var $iter = $Hash_keep_if$46.$$p, block = $iter || nil, $$47, self = this;\n\n      if ($iter) $Hash_keep_if$46.$$p = null;\n      \n      \n      if ($iter) $Hash_keep_if$46.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"keep_if\"], ($$47 = function(){var self = $$47.$$s || this;\n\n        return self.$size()}, $$47.$$s = self, $$47.$$arity = 0, $$47))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj === false || obj === nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            length--;\n            i--;\n          }\n        }\n      }\n\n      return self;\n    ;\n    }, $Hash_keep_if$46.$$arity = 0);\n    Opal.alias(self, \"key\", \"index\");\n    Opal.alias(self, \"key?\", \"has_key?\");\n    \n    Opal.def(self, '$keys', $Hash_keys$48 = function $$keys() {\n      var self = this;\n\n      \n      var result = [];\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          result.push(key);\n        } else {\n          result.push(key.key);\n        }\n      }\n\n      return result;\n    \n    }, $Hash_keys$48.$$arity = 0);\n    \n    Opal.def(self, '$length', $Hash_length$49 = function $$length() {\n      var self = this;\n\n      return self.$$keys.length;\n    }, $Hash_length$49.$$arity = 0);\n    Opal.alias(self, \"member?\", \"has_key?\");\n    \n    Opal.def(self, '$merge', $Hash_merge$50 = function $$merge(other) {\n      var $iter = $Hash_merge$50.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_merge$50.$$p = null;\n      \n      \n      if ($iter) $Hash_merge$50.$$p = null;;\n      return $send(self.$dup(), 'merge!', [other], block.$to_proc());\n    }, $Hash_merge$50.$$arity = 1);\n    \n    Opal.def(self, '$merge!', $Hash_merge$excl$51 = function(other) {\n      var $iter = $Hash_merge$excl$51.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_merge$excl$51.$$p = null;\n      \n      \n      if ($iter) $Hash_merge$excl$51.$$p = null;;\n      \n      if (!other.$$is_hash) {\n        other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      }\n\n      var i, other_keys = other.$$keys, length = other_keys.length, key, value, other_value;\n\n      if (block === nil) {\n        for (i = 0; i < length; i++) {\n          key = other_keys[i];\n\n          if (key.$$is_string) {\n            other_value = other.$$smap[key];\n          } else {\n            other_value = key.value;\n            key = key.key;\n          }\n\n          Opal.hash_put(self, key, other_value);\n        }\n\n        return self;\n      }\n\n      for (i = 0; i < length; i++) {\n        key = other_keys[i];\n\n        if (key.$$is_string) {\n          other_value = other.$$smap[key];\n        } else {\n          other_value = key.value;\n          key = key.key;\n        }\n\n        value = Opal.hash_get(self, key);\n\n        if (value === undefined) {\n          Opal.hash_put(self, key, other_value);\n          continue;\n        }\n\n        Opal.hash_put(self, key, block(key, value, other_value));\n      }\n\n      return self;\n    ;\n    }, $Hash_merge$excl$51.$$arity = 1);\n    \n    Opal.def(self, '$rassoc', $Hash_rassoc$52 = function $$rassoc(object) {\n      var self = this;\n\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        if ((value)['$=='](object)) {\n          return [key, value];\n        }\n      }\n\n      return nil;\n    \n    }, $Hash_rassoc$52.$$arity = 1);\n    \n    Opal.def(self, '$rehash', $Hash_rehash$53 = function $$rehash() {\n      var self = this;\n\n      \n      Opal.hash_rehash(self);\n      return self;\n    \n    }, $Hash_rehash$53.$$arity = 0);\n    \n    Opal.def(self, '$reject', $Hash_reject$54 = function $$reject() {\n      var $iter = $Hash_reject$54.$$p, block = $iter || nil, $$55, self = this;\n\n      if ($iter) $Hash_reject$54.$$p = null;\n      \n      \n      if ($iter) $Hash_reject$54.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject\"], ($$55 = function(){var self = $$55.$$s || this;\n\n        return self.$size()}, $$55.$$s = self, $$55.$$arity = 0, $$55))\n      };\n      \n      var hash = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj === false || obj === nil) {\n          Opal.hash_put(hash, key, value);\n        }\n      }\n\n      return hash;\n    ;\n    }, $Hash_reject$54.$$arity = 0);\n    \n    Opal.def(self, '$reject!', $Hash_reject$excl$56 = function() {\n      var $iter = $Hash_reject$excl$56.$$p, block = $iter || nil, $$57, self = this;\n\n      if ($iter) $Hash_reject$excl$56.$$p = null;\n      \n      \n      if ($iter) $Hash_reject$excl$56.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject!\"], ($$57 = function(){var self = $$57.$$s || this;\n\n        return self.$size()}, $$57.$$s = self, $$57.$$arity = 0, $$57))\n      };\n      \n      var changes_were_made = false;\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj !== false && obj !== nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            changes_were_made = true;\n            length--;\n            i--;\n          }\n        }\n      }\n\n      return changes_were_made ? self : nil;\n    ;\n    }, $Hash_reject$excl$56.$$arity = 0);\n    \n    Opal.def(self, '$replace', $Hash_replace$58 = function $$replace(other) {\n      var self = this, $writer = nil;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      \n      Opal.hash_init(self);\n\n      for (var i = 0, other_keys = other.$$keys, length = other_keys.length, key, value, other_value; i < length; i++) {\n        key = other_keys[i];\n\n        if (key.$$is_string) {\n          other_value = other.$$smap[key];\n        } else {\n          other_value = key.value;\n          key = key.key;\n        }\n\n        Opal.hash_put(self, key, other_value);\n      }\n    ;\n      if ($truthy(other.$default_proc())) {\n        \n        $writer = [other.$default_proc()];\n        $send(self, 'default_proc=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];\n      } else {\n        \n        $writer = [other.$default()];\n        $send(self, 'default=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];\n      };\n      return self;\n    }, $Hash_replace$58.$$arity = 1);\n    \n    Opal.def(self, '$select', $Hash_select$59 = function $$select() {\n      var $iter = $Hash_select$59.$$p, block = $iter || nil, $$60, self = this;\n\n      if ($iter) $Hash_select$59.$$p = null;\n      \n      \n      if ($iter) $Hash_select$59.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"select\"], ($$60 = function(){var self = $$60.$$s || this;\n\n        return self.$size()}, $$60.$$s = self, $$60.$$arity = 0, $$60))\n      };\n      \n      var hash = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj !== false && obj !== nil) {\n          Opal.hash_put(hash, key, value);\n        }\n      }\n\n      return hash;\n    ;\n    }, $Hash_select$59.$$arity = 0);\n    \n    Opal.def(self, '$select!', $Hash_select$excl$61 = function() {\n      var $iter = $Hash_select$excl$61.$$p, block = $iter || nil, $$62, self = this;\n\n      if ($iter) $Hash_select$excl$61.$$p = null;\n      \n      \n      if ($iter) $Hash_select$excl$61.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"select!\"], ($$62 = function(){var self = $$62.$$s || this;\n\n        return self.$size()}, $$62.$$s = self, $$62.$$arity = 0, $$62))\n      };\n      \n      var result = nil;\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj === false || obj === nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            length--;\n            i--;\n          }\n          result = self;\n        }\n      }\n\n      return result;\n    ;\n    }, $Hash_select$excl$61.$$arity = 0);\n    \n    Opal.def(self, '$shift', $Hash_shift$63 = function $$shift() {\n      var self = this;\n\n      \n      var keys = self.$$keys,\n          key;\n\n      if (keys.length > 0) {\n        key = keys[0];\n\n        key = key.$$is_string ? key : key.key;\n\n        return [key, Opal.hash_delete(self, key)];\n      }\n\n      return self.$default(nil);\n    \n    }, $Hash_shift$63.$$arity = 0);\n    Opal.alias(self, \"size\", \"length\");\n    \n    Opal.def(self, '$slice', $Hash_slice$64 = function $$slice($a) {\n      var $post_args, keys, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      keys = $post_args;;\n      \n      var result = Opal.hash();\n\n      for (var i = 0, length = keys.length; i < length; i++) {\n        var key = keys[i], value = Opal.hash_get(self, key);\n\n        if (value !== undefined) {\n          Opal.hash_put(result, key, value);\n        }\n      }\n\n      return result;\n    ;\n    }, $Hash_slice$64.$$arity = -1);\n    Opal.alias(self, \"store\", \"[]=\");\n    \n    Opal.def(self, '$to_a', $Hash_to_a$65 = function $$to_a() {\n      var self = this;\n\n      \n      var result = [];\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        result.push([key, value]);\n      }\n\n      return result;\n    \n    }, $Hash_to_a$65.$$arity = 0);\n    \n    Opal.def(self, '$to_h', $Hash_to_h$66 = function $$to_h() {\n      var self = this;\n\n      \n      if (self.$$class === Opal.Hash) {\n        return self;\n      }\n\n      var hash = new Opal.Hash();\n\n      Opal.hash_init(hash);\n      Opal.hash_clone(self, hash);\n\n      return hash;\n    \n    }, $Hash_to_h$66.$$arity = 0);\n    \n    Opal.def(self, '$to_hash', $Hash_to_hash$67 = function $$to_hash() {\n      var self = this;\n\n      return self\n    }, $Hash_to_hash$67.$$arity = 0);\n    \n    Opal.def(self, '$to_proc', $Hash_to_proc$68 = function $$to_proc() {\n      var $$69, self = this;\n\n      return $send(self, 'proc', [], ($$69 = function(key){var self = $$69.$$s || this;\n\n      \n        ;\n        \n        if (key == null) {\n          self.$raise($$($nesting, 'ArgumentError'), \"no key given\")\n        }\n      ;\n        return self['$[]'](key);}, $$69.$$s = self, $$69.$$arity = -1, $$69))\n    }, $Hash_to_proc$68.$$arity = 0);\n    Opal.alias(self, \"to_s\", \"inspect\");\n    \n    Opal.def(self, '$transform_keys', $Hash_transform_keys$70 = function $$transform_keys() {\n      var $iter = $Hash_transform_keys$70.$$p, block = $iter || nil, $$71, self = this;\n\n      if ($iter) $Hash_transform_keys$70.$$p = null;\n      \n      \n      if ($iter) $Hash_transform_keys$70.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"transform_keys\"], ($$71 = function(){var self = $$71.$$s || this;\n\n        return self.$size()}, $$71.$$s = self, $$71.$$arity = 0, $$71))\n      };\n      \n      var result = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        key = Opal.yield1(block, key);\n\n        Opal.hash_put(result, key, value);\n      }\n\n      return result;\n    ;\n    }, $Hash_transform_keys$70.$$arity = 0);\n    \n    Opal.def(self, '$transform_keys!', $Hash_transform_keys$excl$72 = function() {\n      var $iter = $Hash_transform_keys$excl$72.$$p, block = $iter || nil, $$73, self = this;\n\n      if ($iter) $Hash_transform_keys$excl$72.$$p = null;\n      \n      \n      if ($iter) $Hash_transform_keys$excl$72.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"transform_keys!\"], ($$73 = function(){var self = $$73.$$s || this;\n\n        return self.$size()}, $$73.$$s = self, $$73.$$arity = 0, $$73))\n      };\n      \n      var keys = Opal.slice.call(self.$$keys),\n          i, length = keys.length, key, value, new_key;\n\n      for (i = 0; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        new_key = Opal.yield1(block, key);\n\n        Opal.hash_delete(self, key);\n        Opal.hash_put(self, new_key, value);\n      }\n\n      return self;\n    ;\n    }, $Hash_transform_keys$excl$72.$$arity = 0);\n    \n    Opal.def(self, '$transform_values', $Hash_transform_values$74 = function $$transform_values() {\n      var $iter = $Hash_transform_values$74.$$p, block = $iter || nil, $$75, self = this;\n\n      if ($iter) $Hash_transform_values$74.$$p = null;\n      \n      \n      if ($iter) $Hash_transform_values$74.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"transform_values\"], ($$75 = function(){var self = $$75.$$s || this;\n\n        return self.$size()}, $$75.$$s = self, $$75.$$arity = 0, $$75))\n      };\n      \n      var result = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        value = Opal.yield1(block, value);\n\n        Opal.hash_put(result, key, value);\n      }\n\n      return result;\n    ;\n    }, $Hash_transform_values$74.$$arity = 0);\n    \n    Opal.def(self, '$transform_values!', $Hash_transform_values$excl$76 = function() {\n      var $iter = $Hash_transform_values$excl$76.$$p, block = $iter || nil, $$77, self = this;\n\n      if ($iter) $Hash_transform_values$excl$76.$$p = null;\n      \n      \n      if ($iter) $Hash_transform_values$excl$76.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"transform_values!\"], ($$77 = function(){var self = $$77.$$s || this;\n\n        return self.$size()}, $$77.$$s = self, $$77.$$arity = 0, $$77))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        value = Opal.yield1(block, value);\n\n        Opal.hash_put(self, key, value);\n      }\n\n      return self;\n    ;\n    }, $Hash_transform_values$excl$76.$$arity = 0);\n    Opal.alias(self, \"update\", \"merge!\");\n    Opal.alias(self, \"value?\", \"has_value?\");\n    Opal.alias(self, \"values_at\", \"indexes\");\n    return (Opal.def(self, '$values', $Hash_values$78 = function $$values() {\n      var self = this;\n\n      \n      var result = [];\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          result.push(self.$$smap[key]);\n        } else {\n          result.push(key.value);\n        }\n      }\n\n      return result;\n    \n    }, $Hash_values$78.$$arity = 0), nil) && 'values';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/number\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$require', '$bridge', '$raise', '$name', '$class', '$Float', '$respond_to?', '$coerce_to!', '$__coerced__', '$===', '$!', '$>', '$**', '$new', '$<', '$to_f', '$==', '$nan?', '$infinite?', '$enum_for', '$+', '$-', '$gcd', '$lcm', '$%', '$/', '$frexp', '$to_i', '$ldexp', '$rationalize', '$*', '$<<', '$to_r', '$truncate', '$-@', '$size', '$<=', '$>=', '$<=>', '$compare', '$any?']);\n  \n  self.$require(\"corelib/numeric\");\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Number');\n\n    var $nesting = [self].concat($parent_nesting), $Number_coerce$2, $Number___id__$3, $Number_$plus$4, $Number_$minus$5, $Number_$$6, $Number_$slash$7, $Number_$percent$8, $Number_$$9, $Number_$$10, $Number_$$11, $Number_$lt$12, $Number_$lt_eq$13, $Number_$gt$14, $Number_$gt_eq$15, $Number_$lt_eq_gt$16, $Number_$lt$lt$17, $Number_$gt$gt$18, $Number_$$$19, $Number_$plus$$20, $Number_$minus$$21, $Number_$$22, $Number_$$$23, $Number_$eq_eq_eq$24, $Number_$eq_eq$25, $Number_abs$26, $Number_abs2$27, $Number_allbits$ques$28, $Number_anybits$ques$29, $Number_angle$30, $Number_bit_length$31, $Number_ceil$32, $Number_chr$33, $Number_denominator$34, $Number_downto$35, $Number_equal$ques$37, $Number_even$ques$38, $Number_floor$39, $Number_gcd$40, $Number_gcdlcm$41, $Number_integer$ques$42, $Number_is_a$ques$43, $Number_instance_of$ques$44, $Number_lcm$45, $Number_next$46, $Number_nobits$ques$47, $Number_nonzero$ques$48, $Number_numerator$49, $Number_odd$ques$50, $Number_ord$51, $Number_pow$52, $Number_pred$53, $Number_quo$54, $Number_rationalize$55, $Number_remainder$56, $Number_round$57, $Number_step$58, $Number_times$60, $Number_to_f$62, $Number_to_i$63, $Number_to_r$64, $Number_to_s$65, $Number_truncate$66, $Number_digits$67, $Number_divmod$68, $Number_upto$69, $Number_zero$ques$71, $Number_size$72, $Number_nan$ques$73, $Number_finite$ques$74, $Number_infinite$ques$75, $Number_positive$ques$76, $Number_negative$ques$77;\n\n    \n    $$($nesting, 'Opal').$bridge(Number, self);\n    Opal.defineProperty(self.$$prototype, '$$is_number', true);\n    self.$$is_number_class = true;\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$1;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$1 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$1.$$arity = 0);\n      \n      \n      Opal.udef(self, '$' + \"new\");;\n      return nil;;\n    })(Opal.get_singleton_class(self), $nesting);\n    \n    Opal.def(self, '$coerce', $Number_coerce$2 = function $$coerce(other) {\n      var self = this;\n\n      \n      if (other === nil) {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't convert \" + (other.$class()) + \" into Float\");\n      }\n      else if (other.$$is_string) {\n        return [self.$Float(other), self];\n      }\n      else if (other['$respond_to?'](\"to_f\")) {\n        return [$$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Float'), \"to_f\"), self];\n      }\n      else if (other.$$is_number) {\n        return [other, self];\n      }\n      else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't convert \" + (other.$class()) + \" into Float\");\n      }\n    \n    }, $Number_coerce$2.$$arity = 1);\n    \n    Opal.def(self, '$__id__', $Number___id__$3 = function $$__id__() {\n      var self = this;\n\n      return (self * 2) + 1;\n    }, $Number___id__$3.$$arity = 0);\n    Opal.alias(self, \"object_id\", \"__id__\");\n    \n    Opal.def(self, '$+', $Number_$plus$4 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self + other;\n      }\n      else {\n        return self.$__coerced__(\"+\", other);\n      }\n    \n    }, $Number_$plus$4.$$arity = 1);\n    \n    Opal.def(self, '$-', $Number_$minus$5 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self - other;\n      }\n      else {\n        return self.$__coerced__(\"-\", other);\n      }\n    \n    }, $Number_$minus$5.$$arity = 1);\n    \n    Opal.def(self, '$*', $Number_$$6 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self * other;\n      }\n      else {\n        return self.$__coerced__(\"*\", other);\n      }\n    \n    }, $Number_$$6.$$arity = 1);\n    \n    Opal.def(self, '$/', $Number_$slash$7 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self / other;\n      }\n      else {\n        return self.$__coerced__(\"/\", other);\n      }\n    \n    }, $Number_$slash$7.$$arity = 1);\n    Opal.alias(self, \"fdiv\", \"/\");\n    \n    Opal.def(self, '$%', $Number_$percent$8 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        if (other == -Infinity) {\n          return other;\n        }\n        else if (other == 0) {\n          self.$raise($$($nesting, 'ZeroDivisionError'), \"divided by 0\");\n        }\n        else if (other < 0 || self < 0) {\n          return (self % other + other) % other;\n        }\n        else {\n          return self % other;\n        }\n      }\n      else {\n        return self.$__coerced__(\"%\", other);\n      }\n    \n    }, $Number_$percent$8.$$arity = 1);\n    \n    Opal.def(self, '$&', $Number_$$9 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self & other;\n      }\n      else {\n        return self.$__coerced__(\"&\", other);\n      }\n    \n    }, $Number_$$9.$$arity = 1);\n    \n    Opal.def(self, '$|', $Number_$$10 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self | other;\n      }\n      else {\n        return self.$__coerced__(\"|\", other);\n      }\n    \n    }, $Number_$$10.$$arity = 1);\n    \n    Opal.def(self, '$^', $Number_$$11 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self ^ other;\n      }\n      else {\n        return self.$__coerced__(\"^\", other);\n      }\n    \n    }, $Number_$$11.$$arity = 1);\n    \n    Opal.def(self, '$<', $Number_$lt$12 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self < other;\n      }\n      else {\n        return self.$__coerced__(\"<\", other);\n      }\n    \n    }, $Number_$lt$12.$$arity = 1);\n    \n    Opal.def(self, '$<=', $Number_$lt_eq$13 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self <= other;\n      }\n      else {\n        return self.$__coerced__(\"<=\", other);\n      }\n    \n    }, $Number_$lt_eq$13.$$arity = 1);\n    \n    Opal.def(self, '$>', $Number_$gt$14 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self > other;\n      }\n      else {\n        return self.$__coerced__(\">\", other);\n      }\n    \n    }, $Number_$gt$14.$$arity = 1);\n    \n    Opal.def(self, '$>=', $Number_$gt_eq$15 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self >= other;\n      }\n      else {\n        return self.$__coerced__(\">=\", other);\n      }\n    \n    }, $Number_$gt_eq$15.$$arity = 1);\n    \n    var spaceship_operator = function(self, other) {\n      if (other.$$is_number) {\n        if (isNaN(self) || isNaN(other)) {\n          return nil;\n        }\n\n        if (self > other) {\n          return 1;\n        } else if (self < other) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }\n      else {\n        return self.$__coerced__(\"<=>\", other);\n      }\n    }\n  ;\n    \n    Opal.def(self, '$<=>', $Number_$lt_eq_gt$16 = function(other) {\n      var self = this;\n\n      try {\n        return spaceship_operator(self, other);\n      } catch ($err) {\n        if (Opal.rescue($err, [$$($nesting, 'ArgumentError')])) {\n          try {\n            return nil\n          } finally { Opal.pop_exception() }\n        } else { throw $err; }\n      }\n    }, $Number_$lt_eq_gt$16.$$arity = 1);\n    \n    Opal.def(self, '$<<', $Number_$lt$lt$17 = function(count) {\n      var self = this;\n\n      \n      count = $$($nesting, 'Opal')['$coerce_to!'](count, $$($nesting, 'Integer'), \"to_int\");\n      return count > 0 ? self << count : self >> -count;\n    }, $Number_$lt$lt$17.$$arity = 1);\n    \n    Opal.def(self, '$>>', $Number_$gt$gt$18 = function(count) {\n      var self = this;\n\n      \n      count = $$($nesting, 'Opal')['$coerce_to!'](count, $$($nesting, 'Integer'), \"to_int\");\n      return count > 0 ? self >> count : self << -count;\n    }, $Number_$gt$gt$18.$$arity = 1);\n    \n    Opal.def(self, '$[]', $Number_$$$19 = function(bit) {\n      var self = this;\n\n      \n      bit = $$($nesting, 'Opal')['$coerce_to!'](bit, $$($nesting, 'Integer'), \"to_int\");\n      \n      if (bit < 0) {\n        return 0;\n      }\n      if (bit >= 32) {\n        return self < 0 ? 1 : 0;\n      }\n      return (self >> bit) & 1;\n    ;\n    }, $Number_$$$19.$$arity = 1);\n    \n    Opal.def(self, '$+@', $Number_$plus$$20 = function() {\n      var self = this;\n\n      return +self;\n    }, $Number_$plus$$20.$$arity = 0);\n    \n    Opal.def(self, '$-@', $Number_$minus$$21 = function() {\n      var self = this;\n\n      return -self;\n    }, $Number_$minus$$21.$$arity = 0);\n    \n    Opal.def(self, '$~', $Number_$$22 = function() {\n      var self = this;\n\n      return ~self;\n    }, $Number_$$22.$$arity = 0);\n    \n    Opal.def(self, '$**', $Number_$$$23 = function(other) {\n      var $a, $b, self = this;\n\n      if ($truthy($$($nesting, 'Integer')['$==='](other))) {\n        if ($truthy(($truthy($a = $$($nesting, 'Integer')['$==='](self)['$!']()) ? $a : $rb_gt(other, 0)))) {\n          return Math.pow(self, other);\n        } else {\n          return $$($nesting, 'Rational').$new(self, 1)['$**'](other)\n        }\n      } else if ($truthy((($a = $rb_lt(self, 0)) ? ($truthy($b = $$($nesting, 'Float')['$==='](other)) ? $b : $$($nesting, 'Rational')['$==='](other)) : $rb_lt(self, 0)))) {\n        return $$($nesting, 'Complex').$new(self, 0)['$**'](other.$to_f())\n      } else if ($truthy(other.$$is_number != null)) {\n        return Math.pow(self, other);\n      } else {\n        return self.$__coerced__(\"**\", other)\n      }\n    }, $Number_$$$23.$$arity = 1);\n    \n    Opal.def(self, '$===', $Number_$eq_eq_eq$24 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self.valueOf() === other.valueOf();\n      }\n      else if (other['$respond_to?'](\"==\")) {\n        return other['$=='](self);\n      }\n      else {\n        return false;\n      }\n    \n    }, $Number_$eq_eq_eq$24.$$arity = 1);\n    \n    Opal.def(self, '$==', $Number_$eq_eq$25 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self.valueOf() === other.valueOf();\n      }\n      else if (other['$respond_to?'](\"==\")) {\n        return other['$=='](self);\n      }\n      else {\n        return false;\n      }\n    \n    }, $Number_$eq_eq$25.$$arity = 1);\n    \n    Opal.def(self, '$abs', $Number_abs$26 = function $$abs() {\n      var self = this;\n\n      return Math.abs(self);\n    }, $Number_abs$26.$$arity = 0);\n    \n    Opal.def(self, '$abs2', $Number_abs2$27 = function $$abs2() {\n      var self = this;\n\n      return Math.abs(self * self);\n    }, $Number_abs2$27.$$arity = 0);\n    \n    Opal.def(self, '$allbits?', $Number_allbits$ques$28 = function(mask) {\n      var self = this;\n\n      \n      mask = $$($nesting, 'Opal')['$coerce_to!'](mask, $$($nesting, 'Integer'), \"to_int\");\n      return (self & mask) == mask;;\n    }, $Number_allbits$ques$28.$$arity = 1);\n    \n    Opal.def(self, '$anybits?', $Number_anybits$ques$29 = function(mask) {\n      var self = this;\n\n      \n      mask = $$($nesting, 'Opal')['$coerce_to!'](mask, $$($nesting, 'Integer'), \"to_int\");\n      return (self & mask) !== 0;;\n    }, $Number_anybits$ques$29.$$arity = 1);\n    \n    Opal.def(self, '$angle', $Number_angle$30 = function $$angle() {\n      var self = this;\n\n      \n      if ($truthy(self['$nan?']())) {\n        return self};\n      \n      if (self == 0) {\n        if (1 / self > 0) {\n          return 0;\n        }\n        else {\n          return Math.PI;\n        }\n      }\n      else if (self < 0) {\n        return Math.PI;\n      }\n      else {\n        return 0;\n      }\n    ;\n    }, $Number_angle$30.$$arity = 0);\n    Opal.alias(self, \"arg\", \"angle\");\n    Opal.alias(self, \"phase\", \"angle\");\n    \n    Opal.def(self, '$bit_length', $Number_bit_length$31 = function $$bit_length() {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n      } else {\n        self.$raise($$($nesting, 'NoMethodError').$new(\"\" + \"undefined method `bit_length` for \" + (self) + \":Float\", \"bit_length\"))\n      };\n      \n      if (self === 0 || self === -1) {\n        return 0;\n      }\n\n      var result = 0,\n          value  = self < 0 ? ~self : self;\n\n      while (value != 0) {\n        result   += 1;\n        value  >>>= 1;\n      }\n\n      return result;\n    ;\n    }, $Number_bit_length$31.$$arity = 0);\n    \n    Opal.def(self, '$ceil', $Number_ceil$32 = function $$ceil(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      \n      var f = self.$to_f();\n\n      if (f % 1 === 0 && ndigits >= 0) {\n        return f;\n      }\n\n      var factor = Math.pow(10, ndigits),\n          result = Math.ceil(f * factor) / factor;\n\n      if (f % 1 === 0) {\n        result = Math.round(result);\n      }\n\n      return result;\n    ;\n    }, $Number_ceil$32.$$arity = -1);\n    \n    Opal.def(self, '$chr', $Number_chr$33 = function $$chr(encoding) {\n      var self = this;\n\n      \n      ;\n      return String.fromCharCode(self);;\n    }, $Number_chr$33.$$arity = -1);\n    \n    Opal.def(self, '$denominator', $Number_denominator$34 = function $$denominator() {\n      var $a, $iter = $Number_denominator$34.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_denominator$34.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if ($truthy(($truthy($a = self['$nan?']()) ? $a : self['$infinite?']()))) {\n        return 1\n      } else {\n        return $send(self, Opal.find_super_dispatcher(self, 'denominator', $Number_denominator$34, false), $zuper, $iter)\n      }\n    }, $Number_denominator$34.$$arity = 0);\n    \n    Opal.def(self, '$downto', $Number_downto$35 = function $$downto(stop) {\n      var $iter = $Number_downto$35.$$p, block = $iter || nil, $$36, self = this;\n\n      if ($iter) $Number_downto$35.$$p = null;\n      \n      \n      if ($iter) $Number_downto$35.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"downto\", stop], ($$36 = function(){var self = $$36.$$s || this;\n\n        \n          if ($truthy($$($nesting, 'Numeric')['$==='](stop))) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (stop.$class()) + \" failed\")\n          };\n          if ($truthy($rb_gt(stop, self))) {\n            return 0\n          } else {\n            return $rb_plus($rb_minus(self, stop), 1)\n          };}, $$36.$$s = self, $$36.$$arity = 0, $$36))\n      };\n      \n      if (!stop.$$is_number) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (stop.$class()) + \" failed\")\n      }\n      for (var i = self; i >= stop; i--) {\n        block(i);\n      }\n    ;\n      return self;\n    }, $Number_downto$35.$$arity = 1);\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$equal?', $Number_equal$ques$37 = function(other) {\n      var $a, self = this;\n\n      return ($truthy($a = self['$=='](other)) ? $a : isNaN(self) && isNaN(other))\n    }, $Number_equal$ques$37.$$arity = 1);\n    \n    Opal.def(self, '$even?', $Number_even$ques$38 = function() {\n      var self = this;\n\n      return self % 2 === 0;\n    }, $Number_even$ques$38.$$arity = 0);\n    \n    Opal.def(self, '$floor', $Number_floor$39 = function $$floor(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      \n      var f = self.$to_f();\n\n      if (f % 1 === 0 && ndigits >= 0) {\n        return f;\n      }\n\n      var factor = Math.pow(10, ndigits),\n          result = Math.floor(f * factor) / factor;\n\n      if (f % 1 === 0) {\n        result = Math.round(result);\n      }\n\n      return result;\n    ;\n    }, $Number_floor$39.$$arity = -1);\n    \n    Opal.def(self, '$gcd', $Number_gcd$40 = function $$gcd(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](other))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"not an integer\")\n      };\n      \n      var min = Math.abs(self),\n          max = Math.abs(other);\n\n      while (min > 0) {\n        var tmp = min;\n\n        min = max % min;\n        max = tmp;\n      }\n\n      return max;\n    ;\n    }, $Number_gcd$40.$$arity = 1);\n    \n    Opal.def(self, '$gcdlcm', $Number_gcdlcm$41 = function $$gcdlcm(other) {\n      var self = this;\n\n      return [self.$gcd(), self.$lcm()]\n    }, $Number_gcdlcm$41.$$arity = 1);\n    \n    Opal.def(self, '$integer?', $Number_integer$ques$42 = function() {\n      var self = this;\n\n      return self % 1 === 0;\n    }, $Number_integer$ques$42.$$arity = 0);\n    \n    Opal.def(self, '$is_a?', $Number_is_a$ques$43 = function(klass) {\n      var $a, $iter = $Number_is_a$ques$43.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_is_a$ques$43.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      if ($truthy((($a = klass['$==']($$($nesting, 'Integer'))) ? $$($nesting, 'Integer')['$==='](self) : klass['$==']($$($nesting, 'Integer'))))) {\n        return true};\n      if ($truthy((($a = klass['$==']($$($nesting, 'Integer'))) ? $$($nesting, 'Integer')['$==='](self) : klass['$==']($$($nesting, 'Integer'))))) {\n        return true};\n      if ($truthy((($a = klass['$==']($$($nesting, 'Float'))) ? $$($nesting, 'Float')['$==='](self) : klass['$==']($$($nesting, 'Float'))))) {\n        return true};\n      return $send(self, Opal.find_super_dispatcher(self, 'is_a?', $Number_is_a$ques$43, false), $zuper, $iter);\n    }, $Number_is_a$ques$43.$$arity = 1);\n    Opal.alias(self, \"kind_of?\", \"is_a?\");\n    \n    Opal.def(self, '$instance_of?', $Number_instance_of$ques$44 = function(klass) {\n      var $a, $iter = $Number_instance_of$ques$44.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_instance_of$ques$44.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      if ($truthy((($a = klass['$==']($$($nesting, 'Integer'))) ? $$($nesting, 'Integer')['$==='](self) : klass['$==']($$($nesting, 'Integer'))))) {\n        return true};\n      if ($truthy((($a = klass['$==']($$($nesting, 'Integer'))) ? $$($nesting, 'Integer')['$==='](self) : klass['$==']($$($nesting, 'Integer'))))) {\n        return true};\n      if ($truthy((($a = klass['$==']($$($nesting, 'Float'))) ? $$($nesting, 'Float')['$==='](self) : klass['$==']($$($nesting, 'Float'))))) {\n        return true};\n      return $send(self, Opal.find_super_dispatcher(self, 'instance_of?', $Number_instance_of$ques$44, false), $zuper, $iter);\n    }, $Number_instance_of$ques$44.$$arity = 1);\n    \n    Opal.def(self, '$lcm', $Number_lcm$45 = function $$lcm(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](other))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"not an integer\")\n      };\n      \n      if (self == 0 || other == 0) {\n        return 0;\n      }\n      else {\n        return Math.abs(self * other / self.$gcd(other));\n      }\n    ;\n    }, $Number_lcm$45.$$arity = 1);\n    Opal.alias(self, \"magnitude\", \"abs\");\n    Opal.alias(self, \"modulo\", \"%\");\n    \n    Opal.def(self, '$next', $Number_next$46 = function $$next() {\n      var self = this;\n\n      return self + 1;\n    }, $Number_next$46.$$arity = 0);\n    \n    Opal.def(self, '$nobits?', $Number_nobits$ques$47 = function(mask) {\n      var self = this;\n\n      \n      mask = $$($nesting, 'Opal')['$coerce_to!'](mask, $$($nesting, 'Integer'), \"to_int\");\n      return (self & mask) == 0;;\n    }, $Number_nobits$ques$47.$$arity = 1);\n    \n    Opal.def(self, '$nonzero?', $Number_nonzero$ques$48 = function() {\n      var self = this;\n\n      return self == 0 ? nil : self;\n    }, $Number_nonzero$ques$48.$$arity = 0);\n    \n    Opal.def(self, '$numerator', $Number_numerator$49 = function $$numerator() {\n      var $a, $iter = $Number_numerator$49.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_numerator$49.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if ($truthy(($truthy($a = self['$nan?']()) ? $a : self['$infinite?']()))) {\n        return self\n      } else {\n        return $send(self, Opal.find_super_dispatcher(self, 'numerator', $Number_numerator$49, false), $zuper, $iter)\n      }\n    }, $Number_numerator$49.$$arity = 0);\n    \n    Opal.def(self, '$odd?', $Number_odd$ques$50 = function() {\n      var self = this;\n\n      return self % 2 !== 0;\n    }, $Number_odd$ques$50.$$arity = 0);\n    \n    Opal.def(self, '$ord', $Number_ord$51 = function $$ord() {\n      var self = this;\n\n      return self\n    }, $Number_ord$51.$$arity = 0);\n    \n    Opal.def(self, '$pow', $Number_pow$52 = function $$pow(b, m) {\n      var self = this;\n\n      \n      ;\n      \n      if (self == 0) {\n        self.$raise($$($nesting, 'ZeroDivisionError'), \"divided by 0\")\n      }\n\n      if (m === undefined) {\n        return self['$**'](b);\n      } else {\n        if (!($$($nesting, 'Integer')['$==='](b))) {\n          self.$raise($$($nesting, 'TypeError'), \"Integer#pow() 2nd argument not allowed unless a 1st argument is integer\")\n        }\n\n        if (b < 0) {\n          self.$raise($$($nesting, 'TypeError'), \"Integer#pow() 1st argument cannot be negative when 2nd argument specified\")\n        }\n\n        if (!($$($nesting, 'Integer')['$==='](m))) {\n          self.$raise($$($nesting, 'TypeError'), \"Integer#pow() 2nd argument not allowed unless all arguments are integers\")\n        }\n\n        if (m === 0) {\n          self.$raise($$($nesting, 'ZeroDivisionError'), \"divided by 0\")\n        }\n\n        return self['$**'](b)['$%'](m)\n      }\n    ;\n    }, $Number_pow$52.$$arity = -2);\n    \n    Opal.def(self, '$pred', $Number_pred$53 = function $$pred() {\n      var self = this;\n\n      return self - 1;\n    }, $Number_pred$53.$$arity = 0);\n    \n    Opal.def(self, '$quo', $Number_quo$54 = function $$quo(other) {\n      var $iter = $Number_quo$54.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_quo$54.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n        return $send(self, Opal.find_super_dispatcher(self, 'quo', $Number_quo$54, false), $zuper, $iter)\n      } else {\n        return $rb_divide(self, other)\n      }\n    }, $Number_quo$54.$$arity = 1);\n    \n    Opal.def(self, '$rationalize', $Number_rationalize$55 = function $$rationalize(eps) {\n      var $a, $b, self = this, f = nil, n = nil;\n\n      \n      ;\n      \n      if (arguments.length > 1) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" for 0..1)\");\n      }\n    ;\n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n        return $$($nesting, 'Rational').$new(self, 1)\n      } else if ($truthy(self['$infinite?']())) {\n        return self.$raise($$($nesting, 'FloatDomainError'), \"Infinity\")\n      } else if ($truthy(self['$nan?']())) {\n        return self.$raise($$($nesting, 'FloatDomainError'), \"NaN\")\n      } else if ($truthy(eps == null)) {\n        \n        $b = $$($nesting, 'Math').$frexp(self), $a = Opal.to_ary($b), (f = ($a[0] == null ? nil : $a[0])), (n = ($a[1] == null ? nil : $a[1])), $b;\n        f = $$($nesting, 'Math').$ldexp(f, $$$($$($nesting, 'Float'), 'MANT_DIG')).$to_i();\n        n = $rb_minus(n, $$$($$($nesting, 'Float'), 'MANT_DIG'));\n        return $$($nesting, 'Rational').$new($rb_times(2, f), (1)['$<<']($rb_minus(1, n))).$rationalize($$($nesting, 'Rational').$new(1, (1)['$<<']($rb_minus(1, n))));\n      } else {\n        return self.$to_r().$rationalize(eps)\n      };\n    }, $Number_rationalize$55.$$arity = -1);\n    \n    Opal.def(self, '$remainder', $Number_remainder$56 = function $$remainder(y) {\n      var self = this;\n\n      return $rb_minus(self, $rb_times(y, $rb_divide(self, y).$truncate()))\n    }, $Number_remainder$56.$$arity = 1);\n    \n    Opal.def(self, '$round', $Number_round$57 = function $$round(ndigits) {\n      var $a, $b, self = this, _ = nil, exp = nil;\n\n      \n      ;\n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n        \n        if ($truthy(ndigits == null)) {\n          return self};\n        if ($truthy(($truthy($a = $$($nesting, 'Float')['$==='](ndigits)) ? ndigits['$infinite?']() : $a))) {\n          self.$raise($$($nesting, 'RangeError'), \"Infinity\")};\n        ndigits = $$($nesting, 'Opal')['$coerce_to!'](ndigits, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy($rb_lt(ndigits, $$$($$($nesting, 'Integer'), 'MIN')))) {\n          self.$raise($$($nesting, 'RangeError'), \"out of bounds\")};\n        if ($truthy(ndigits >= 0)) {\n          return self};\n        ndigits = ndigits['$-@']();\n        \n        if (0.415241 * ndigits - 0.125 > self.$size()) {\n          return 0;\n        }\n\n        var f = Math.pow(10, ndigits),\n            x = Math.floor((Math.abs(x) + f / 2) / f) * f;\n\n        return self < 0 ? -x : x;\n      ;\n      } else {\n        \n        if ($truthy(($truthy($a = self['$nan?']()) ? ndigits == null : $a))) {\n          self.$raise($$($nesting, 'FloatDomainError'), \"NaN\")};\n        ndigits = $$($nesting, 'Opal')['$coerce_to!'](ndigits || 0, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy($rb_le(ndigits, 0))) {\n          if ($truthy(self['$nan?']())) {\n            self.$raise($$($nesting, 'RangeError'), \"NaN\")\n          } else if ($truthy(self['$infinite?']())) {\n            self.$raise($$($nesting, 'FloatDomainError'), \"Infinity\")}\n        } else if (ndigits['$=='](0)) {\n          return Math.round(self)\n        } else if ($truthy(($truthy($a = self['$nan?']()) ? $a : self['$infinite?']()))) {\n          return self};\n        $b = $$($nesting, 'Math').$frexp(self), $a = Opal.to_ary($b), (_ = ($a[0] == null ? nil : $a[0])), (exp = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy($rb_ge(ndigits, $rb_minus($rb_plus($$$($$($nesting, 'Float'), 'DIG'), 2), (function() {if ($truthy($rb_gt(exp, 0))) {\n          return $rb_divide(exp, 4)\n        } else {\n          return $rb_minus($rb_divide(exp, 3), 1)\n        }; return nil; })())))) {\n          return self};\n        if ($truthy($rb_lt(ndigits, (function() {if ($truthy($rb_gt(exp, 0))) {\n          return $rb_plus($rb_divide(exp, 3), 1)\n        } else {\n          return $rb_divide(exp, 4)\n        }; return nil; })()['$-@']()))) {\n          return 0};\n        return Math.round(self * Math.pow(10, ndigits)) / Math.pow(10, ndigits);;\n      };\n    }, $Number_round$57.$$arity = -1);\n    \n    Opal.def(self, '$step', $Number_step$58 = function $$step($a, $b, $c) {\n      var $iter = $Number_step$58.$$p, block = $iter || nil, $post_args, $kwargs, limit, step, to, by, $$59, self = this, positional_args = nil, keyword_args = nil;\n\n      if ($iter) $Number_step$58.$$p = null;\n      \n      \n      if ($iter) $Number_step$58.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      $kwargs = Opal.extract_kwargs($post_args);\n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      if ($post_args.length > 0) {\n        limit = $post_args[0];\n        $post_args.splice(0, 1);\n      };\n      \n      if ($post_args.length > 0) {\n        step = $post_args[0];\n        $post_args.splice(0, 1);\n      };\n      \n      to = $kwargs.$$smap[\"to\"];;\n      \n      by = $kwargs.$$smap[\"by\"];;\n      \n      if (limit !== undefined && to !== undefined) {\n        self.$raise($$($nesting, 'ArgumentError'), \"to is given twice\")\n      }\n\n      if (step !== undefined && by !== undefined) {\n        self.$raise($$($nesting, 'ArgumentError'), \"step is given twice\")\n      }\n\n      function validateParameters() {\n        if (to !== undefined) {\n          limit = to;\n        }\n\n        if (limit === undefined) {\n          limit = nil;\n        }\n\n        if (step === nil) {\n          self.$raise($$($nesting, 'TypeError'), \"step must be numeric\")\n        }\n\n        if (step === 0) {\n          self.$raise($$($nesting, 'ArgumentError'), \"step can't be 0\")\n        }\n\n        if (by !== undefined) {\n          step = by;\n        }\n\n        if (step === nil || step == null) {\n          step = 1;\n        }\n\n        var sign = step['$<=>'](0);\n\n        if (sign === nil) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"0 can't be coerced into \" + (step.$class()))\n        }\n\n        if (limit === nil || limit == null) {\n          limit = sign > 0 ? $$$($$($nesting, 'Float'), 'INFINITY') : $$$($$($nesting, 'Float'), 'INFINITY')['$-@']();\n        }\n\n        $$($nesting, 'Opal').$compare(self, limit)\n      }\n\n      function stepFloatSize() {\n        if ((step > 0 && self > limit) || (step < 0 && self < limit)) {\n          return 0;\n        } else if (step === Infinity || step === -Infinity) {\n          return 1;\n        } else {\n          var abs = Math.abs, floor = Math.floor,\n              err = (abs(self) + abs(limit) + abs(limit - self)) / abs(step) * $$$($$($nesting, 'Float'), 'EPSILON');\n\n          if (err === Infinity || err === -Infinity) {\n            return 0;\n          } else {\n            if (err > 0.5) {\n              err = 0.5;\n            }\n\n            return floor((limit - self) / step + err) + 1\n          }\n        }\n      }\n\n      function stepSize() {\n        validateParameters();\n\n        if (step === 0) {\n          return Infinity;\n        }\n\n        if (step % 1 !== 0) {\n          return stepFloatSize();\n        } else if ((step > 0 && self > limit) || (step < 0 && self < limit)) {\n          return 0;\n        } else {\n          var ceil = Math.ceil, abs = Math.abs,\n              lhs = abs(self - limit) + 1,\n              rhs = abs(step);\n\n          return ceil(lhs / rhs);\n        }\n      }\n    ;\n      if ((block !== nil)) {\n      } else {\n        \n        positional_args = [];\n        keyword_args = $hash2([], {});\n        \n        if (limit !== undefined) {\n          positional_args.push(limit);\n        }\n\n        if (step !== undefined) {\n          positional_args.push(step);\n        }\n\n        if (to !== undefined) {\n          Opal.hash_put(keyword_args, \"to\", to);\n        }\n\n        if (by !== undefined) {\n          Opal.hash_put(keyword_args, \"by\", by);\n        }\n\n        if (keyword_args['$any?']()) {\n          positional_args.push(keyword_args);\n        }\n      ;\n        return $send(self, 'enum_for', [\"step\"].concat(Opal.to_a(positional_args)), ($$59 = function(){var self = $$59.$$s || this;\n\n        return stepSize();}, $$59.$$s = self, $$59.$$arity = 0, $$59));\n      };\n      \n      validateParameters();\n\n      if (step === 0) {\n        while (true) {\n          block(self);\n        }\n      }\n\n      if (self % 1 !== 0 || limit % 1 !== 0 || step % 1 !== 0) {\n        var n = stepFloatSize();\n\n        if (n > 0) {\n          if (step === Infinity || step === -Infinity) {\n            block(self);\n          } else {\n            var i = 0, d;\n\n            if (step > 0) {\n              while (i < n) {\n                d = i * step + self;\n                if (limit < d) {\n                  d = limit;\n                }\n                block(d);\n                i += 1;\n              }\n            } else {\n              while (i < n) {\n                d = i * step + self;\n                if (limit > d) {\n                  d = limit;\n                }\n                block(d);\n                i += 1\n              }\n            }\n          }\n        }\n      } else {\n        var value = self;\n\n        if (step > 0) {\n          while (value <= limit) {\n            block(value);\n            value += step;\n          }\n        } else {\n          while (value >= limit) {\n            block(value);\n            value += step\n          }\n        }\n      }\n\n      return self;\n    ;\n    }, $Number_step$58.$$arity = -1);\n    Opal.alias(self, \"succ\", \"next\");\n    \n    Opal.def(self, '$times', $Number_times$60 = function $$times() {\n      var $iter = $Number_times$60.$$p, block = $iter || nil, $$61, self = this;\n\n      if ($iter) $Number_times$60.$$p = null;\n      \n      \n      if ($iter) $Number_times$60.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"times\"], ($$61 = function(){var self = $$61.$$s || this;\n\n        return self}, $$61.$$s = self, $$61.$$arity = 0, $$61))\n      };\n      \n      for (var i = 0; i < self; i++) {\n        block(i);\n      }\n    ;\n      return self;\n    }, $Number_times$60.$$arity = 0);\n    \n    Opal.def(self, '$to_f', $Number_to_f$62 = function $$to_f() {\n      var self = this;\n\n      return self\n    }, $Number_to_f$62.$$arity = 0);\n    \n    Opal.def(self, '$to_i', $Number_to_i$63 = function $$to_i() {\n      var self = this;\n\n      return parseInt(self, 10);\n    }, $Number_to_i$63.$$arity = 0);\n    Opal.alias(self, \"to_int\", \"to_i\");\n    \n    Opal.def(self, '$to_r', $Number_to_r$64 = function $$to_r() {\n      var $a, $b, self = this, f = nil, e = nil;\n\n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n        return $$($nesting, 'Rational').$new(self, 1)\n      } else {\n        \n        $b = $$($nesting, 'Math').$frexp(self), $a = Opal.to_ary($b), (f = ($a[0] == null ? nil : $a[0])), (e = ($a[1] == null ? nil : $a[1])), $b;\n        f = $$($nesting, 'Math').$ldexp(f, $$$($$($nesting, 'Float'), 'MANT_DIG')).$to_i();\n        e = $rb_minus(e, $$$($$($nesting, 'Float'), 'MANT_DIG'));\n        return $rb_times(f, $$$($$($nesting, 'Float'), 'RADIX')['$**'](e)).$to_r();\n      }\n    }, $Number_to_r$64.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Number_to_s$65 = function $$to_s(base) {\n      var $a, self = this;\n\n      \n      \n      if (base == null) {\n        base = 10;\n      };\n      base = $$($nesting, 'Opal')['$coerce_to!'](base, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(($truthy($a = $rb_lt(base, 2)) ? $a : $rb_gt(base, 36)))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid radix \" + (base))};\n      return self.toString(base);;\n    }, $Number_to_s$65.$$arity = -1);\n    \n    Opal.def(self, '$truncate', $Number_truncate$66 = function $$truncate(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      \n      var f = self.$to_f();\n\n      if (f % 1 === 0 && ndigits >= 0) {\n        return f;\n      }\n\n      var factor = Math.pow(10, ndigits),\n          result = parseInt(f * factor, 10) / factor;\n\n      if (f % 1 === 0) {\n        result = Math.round(result);\n      }\n\n      return result;\n    ;\n    }, $Number_truncate$66.$$arity = -1);\n    Opal.alias(self, \"inspect\", \"to_s\");\n    \n    Opal.def(self, '$digits', $Number_digits$67 = function $$digits(base) {\n      var self = this;\n\n      \n      \n      if (base == null) {\n        base = 10;\n      };\n      if ($rb_lt(self, 0)) {\n        self.$raise($$$($$($nesting, 'Math'), 'DomainError'), \"out of domain\")};\n      base = $$($nesting, 'Opal')['$coerce_to!'](base, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy($rb_lt(base, 2))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid radix \" + (base))};\n      \n      var value = self, result = [];\n\n      while (value !== 0) {\n        result.push(value % base);\n        value = parseInt(value / base, 10);\n      }\n\n      return result;\n    ;\n    }, $Number_digits$67.$$arity = -1);\n    \n    Opal.def(self, '$divmod', $Number_divmod$68 = function $$divmod(other) {\n      var $a, $iter = $Number_divmod$68.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_divmod$68.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if ($truthy(($truthy($a = self['$nan?']()) ? $a : other['$nan?']()))) {\n        return self.$raise($$($nesting, 'FloatDomainError'), \"NaN\")\n      } else if ($truthy(self['$infinite?']())) {\n        return self.$raise($$($nesting, 'FloatDomainError'), \"Infinity\")\n      } else {\n        return $send(self, Opal.find_super_dispatcher(self, 'divmod', $Number_divmod$68, false), $zuper, $iter)\n      }\n    }, $Number_divmod$68.$$arity = 1);\n    \n    Opal.def(self, '$upto', $Number_upto$69 = function $$upto(stop) {\n      var $iter = $Number_upto$69.$$p, block = $iter || nil, $$70, self = this;\n\n      if ($iter) $Number_upto$69.$$p = null;\n      \n      \n      if ($iter) $Number_upto$69.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"upto\", stop], ($$70 = function(){var self = $$70.$$s || this;\n\n        \n          if ($truthy($$($nesting, 'Numeric')['$==='](stop))) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (stop.$class()) + \" failed\")\n          };\n          if ($truthy($rb_lt(stop, self))) {\n            return 0\n          } else {\n            return $rb_plus($rb_minus(stop, self), 1)\n          };}, $$70.$$s = self, $$70.$$arity = 0, $$70))\n      };\n      \n      if (!stop.$$is_number) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (stop.$class()) + \" failed\")\n      }\n      for (var i = self; i <= stop; i++) {\n        block(i);\n      }\n    ;\n      return self;\n    }, $Number_upto$69.$$arity = 1);\n    \n    Opal.def(self, '$zero?', $Number_zero$ques$71 = function() {\n      var self = this;\n\n      return self == 0;\n    }, $Number_zero$ques$71.$$arity = 0);\n    \n    Opal.def(self, '$size', $Number_size$72 = function $$size() {\n      var self = this;\n\n      return 4\n    }, $Number_size$72.$$arity = 0);\n    \n    Opal.def(self, '$nan?', $Number_nan$ques$73 = function() {\n      var self = this;\n\n      return isNaN(self);\n    }, $Number_nan$ques$73.$$arity = 0);\n    \n    Opal.def(self, '$finite?', $Number_finite$ques$74 = function() {\n      var self = this;\n\n      return self != Infinity && self != -Infinity && !isNaN(self);\n    }, $Number_finite$ques$74.$$arity = 0);\n    \n    Opal.def(self, '$infinite?', $Number_infinite$ques$75 = function() {\n      var self = this;\n\n      \n      if (self == Infinity) {\n        return +1;\n      }\n      else if (self == -Infinity) {\n        return -1;\n      }\n      else {\n        return nil;\n      }\n    \n    }, $Number_infinite$ques$75.$$arity = 0);\n    \n    Opal.def(self, '$positive?', $Number_positive$ques$76 = function() {\n      var self = this;\n\n      return self != 0 && (self == Infinity || 1 / self > 0);\n    }, $Number_positive$ques$76.$$arity = 0);\n    return (Opal.def(self, '$negative?', $Number_negative$ques$77 = function() {\n      var self = this;\n\n      return self == -Infinity || 1 / self < 0;\n    }, $Number_negative$ques$77.$$arity = 0), nil) && 'negative?';\n  })($nesting[0], $$($nesting, 'Numeric'), $nesting);\n  Opal.const_set($nesting[0], 'Fixnum', $$($nesting, 'Number'));\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Integer');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    self.$$is_number_class = true;\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$78, $eq_eq_eq$79, $sqrt$80;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$78 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$78.$$arity = 0);\n      \n      Opal.udef(self, '$' + \"new\");;\n      \n      Opal.def(self, '$===', $eq_eq_eq$79 = function(other) {\n        var self = this;\n\n        \n        if (!other.$$is_number) {\n          return false;\n        }\n\n        return (other % 1) === 0;\n      \n      }, $eq_eq_eq$79.$$arity = 1);\n      return (Opal.def(self, '$sqrt', $sqrt$80 = function $$sqrt(n) {\n        var self = this;\n\n        \n        n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n        \n        if (n < 0) {\n          self.$raise($$$($$($nesting, 'Math'), 'DomainError'), \"Numerical argument is out of domain - \\\"isqrt\\\"\")\n        }\n\n        return parseInt(Math.sqrt(n), 10);\n      ;\n      }, $sqrt$80.$$arity = 1), nil) && 'sqrt';\n    })(Opal.get_singleton_class(self), $nesting);\n    Opal.const_set($nesting[0], 'MAX', Math.pow(2, 30) - 1);\n    return Opal.const_set($nesting[0], 'MIN', -Math.pow(2, 30));\n  })($nesting[0], $$($nesting, 'Numeric'), $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Float');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    self.$$is_number_class = true;\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$81, $eq_eq_eq$82;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$81 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$81.$$arity = 0);\n      \n      Opal.udef(self, '$' + \"new\");;\n      return (Opal.def(self, '$===', $eq_eq_eq$82 = function(other) {\n        var self = this;\n\n        return !!other.$$is_number;\n      }, $eq_eq_eq$82.$$arity = 1), nil) && '===';\n    })(Opal.get_singleton_class(self), $nesting);\n    Opal.const_set($nesting[0], 'INFINITY', Infinity);\n    Opal.const_set($nesting[0], 'MAX', Number.MAX_VALUE);\n    Opal.const_set($nesting[0], 'MIN', Number.MIN_VALUE);\n    Opal.const_set($nesting[0], 'NAN', NaN);\n    Opal.const_set($nesting[0], 'DIG', 15);\n    Opal.const_set($nesting[0], 'MANT_DIG', 53);\n    Opal.const_set($nesting[0], 'RADIX', 2);\n    return Opal.const_set($nesting[0], 'EPSILON', Number.EPSILON || 2.2204460492503130808472633361816E-16);\n  })($nesting[0], $$($nesting, 'Numeric'), $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/range\"] = function(Opal) {\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$require', '$include', '$attr_reader', '$raise', '$<=>', '$include?', '$<=', '$<', '$enum_for', '$upto', '$to_proc', '$respond_to?', '$class', '$succ', '$!', '$==', '$===', '$exclude_end?', '$eql?', '$begin', '$end', '$last', '$to_a', '$>', '$-', '$abs', '$to_i', '$coerce_to!', '$ceil', '$/', '$size', '$loop', '$+', '$*', '$>=', '$each_with_index', '$%', '$bsearch', '$inspect', '$[]', '$hash']);\n  \n  self.$require(\"corelib/enumerable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Range');\n\n    var $nesting = [self].concat($parent_nesting), $Range_initialize$1, $Range_$eq_eq$2, $Range_$eq_eq_eq$3, $Range_cover$ques$4, $Range_each$5, $Range_eql$ques$6, $Range_exclude_end$ques$7, $Range_first$8, $Range_last$9, $Range_max$10, $Range_min$11, $Range_size$12, $Range_step$13, $Range_bsearch$17, $Range_to_s$18, $Range_inspect$19, $Range_marshal_load$20, $Range_hash$21;\n\n    self.$$prototype.begin = self.$$prototype.end = self.$$prototype.excl = nil;\n    \n    self.$include($$($nesting, 'Enumerable'));\n    self.$$prototype.$$is_range = true;\n    self.$attr_reader(\"begin\", \"end\");\n    \n    Opal.def(self, '$initialize', $Range_initialize$1 = function $$initialize(first, last, exclude) {\n      var self = this;\n\n      \n      \n      if (exclude == null) {\n        exclude = false;\n      };\n      if ($truthy(self.begin)) {\n        self.$raise($$($nesting, 'NameError'), \"'initialize' called twice\")};\n      if ($truthy(first['$<=>'](last))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"bad value for range\")\n      };\n      self.begin = first;\n      self.end = last;\n      return (self.excl = exclude);\n    }, $Range_initialize$1.$$arity = -3);\n    \n    Opal.def(self, '$==', $Range_$eq_eq$2 = function(other) {\n      var self = this;\n\n      \n      if (!other.$$is_range) {\n        return false;\n      }\n\n      return self.excl  === other.excl &&\n             self.begin ==  other.begin &&\n             self.end   ==  other.end;\n    \n    }, $Range_$eq_eq$2.$$arity = 1);\n    \n    Opal.def(self, '$===', $Range_$eq_eq_eq$3 = function(value) {\n      var self = this;\n\n      return self['$include?'](value)\n    }, $Range_$eq_eq_eq$3.$$arity = 1);\n    \n    Opal.def(self, '$cover?', $Range_cover$ques$4 = function(value) {\n      var $a, self = this, beg_cmp = nil, end_cmp = nil;\n\n      \n      beg_cmp = self.begin['$<=>'](value);\n      if ($truthy(($truthy($a = beg_cmp) ? $rb_le(beg_cmp, 0) : $a))) {\n      } else {\n        return false\n      };\n      end_cmp = value['$<=>'](self.end);\n      if ($truthy(self.excl)) {\n        return ($truthy($a = end_cmp) ? $rb_lt(end_cmp, 0) : $a)\n      } else {\n        return ($truthy($a = end_cmp) ? $rb_le(end_cmp, 0) : $a)\n      };\n    }, $Range_cover$ques$4.$$arity = 1);\n    \n    Opal.def(self, '$each', $Range_each$5 = function $$each() {\n      var $iter = $Range_each$5.$$p, block = $iter || nil, $a, self = this, current = nil, last = nil;\n\n      if ($iter) $Range_each$5.$$p = null;\n      \n      \n      if ($iter) $Range_each$5.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"each\")\n      };\n      \n      var i, limit;\n\n      if (self.begin.$$is_number && self.end.$$is_number) {\n        if (self.begin % 1 !== 0 || self.end % 1 !== 0) {\n          self.$raise($$($nesting, 'TypeError'), \"can't iterate from Float\")\n        }\n\n        for (i = self.begin, limit = self.end + (function() {if ($truthy(self.excl)) {\n        return 0\n      } else {\n        return 1\n      }; return nil; })(); i < limit; i++) {\n          block(i);\n        }\n\n        return self;\n      }\n\n      if (self.begin.$$is_string && self.end.$$is_string) {\n        $send(self.begin, 'upto', [self.end, self.excl], block.$to_proc())\n        return self;\n      }\n    ;\n      current = self.begin;\n      last = self.end;\n      if ($truthy(current['$respond_to?'](\"succ\"))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't iterate from \" + (current.$class()))\n      };\n      while ($truthy($rb_lt(current['$<=>'](last), 0))) {\n        \n        Opal.yield1(block, current);\n        current = current.$succ();\n      };\n      if ($truthy(($truthy($a = self.excl['$!']()) ? current['$=='](last) : $a))) {\n        Opal.yield1(block, current)};\n      return self;\n    }, $Range_each$5.$$arity = 0);\n    \n    Opal.def(self, '$eql?', $Range_eql$ques$6 = function(other) {\n      var $a, $b, self = this;\n\n      \n      if ($truthy($$($nesting, 'Range')['$==='](other))) {\n      } else {\n        return false\n      };\n      return ($truthy($a = ($truthy($b = self.excl['$==='](other['$exclude_end?']())) ? self.begin['$eql?'](other.$begin()) : $b)) ? self.end['$eql?'](other.$end()) : $a);\n    }, $Range_eql$ques$6.$$arity = 1);\n    \n    Opal.def(self, '$exclude_end?', $Range_exclude_end$ques$7 = function() {\n      var self = this;\n\n      return self.excl\n    }, $Range_exclude_end$ques$7.$$arity = 0);\n    \n    Opal.def(self, '$first', $Range_first$8 = function $$first(n) {\n      var $iter = $Range_first$8.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Range_first$8.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      ;\n      if ($truthy(n == null)) {\n        return self.begin};\n      return $send(self, Opal.find_super_dispatcher(self, 'first', $Range_first$8, false), $zuper, $iter);\n    }, $Range_first$8.$$arity = -1);\n    Opal.alias(self, \"include?\", \"cover?\");\n    \n    Opal.def(self, '$last', $Range_last$9 = function $$last(n) {\n      var self = this;\n\n      \n      ;\n      if ($truthy(n == null)) {\n        return self.end};\n      return self.$to_a().$last(n);\n    }, $Range_last$9.$$arity = -1);\n    \n    Opal.def(self, '$max', $Range_max$10 = function $$max() {\n      var $a, $iter = $Range_max$10.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Range_max$10.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if (($yield !== nil)) {\n        return $send(self, Opal.find_super_dispatcher(self, 'max', $Range_max$10, false), $zuper, $iter)\n      } else if ($truthy($rb_gt(self.begin, self.end))) {\n        return nil\n      } else if ($truthy(($truthy($a = self.excl) ? self.begin['$=='](self.end) : $a))) {\n        return nil\n      } else {\n        return self.excl ? self.end - 1 : self.end\n      }\n    }, $Range_max$10.$$arity = 0);\n    Opal.alias(self, \"member?\", \"cover?\");\n    \n    Opal.def(self, '$min', $Range_min$11 = function $$min() {\n      var $a, $iter = $Range_min$11.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Range_min$11.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if (($yield !== nil)) {\n        return $send(self, Opal.find_super_dispatcher(self, 'min', $Range_min$11, false), $zuper, $iter)\n      } else if ($truthy($rb_gt(self.begin, self.end))) {\n        return nil\n      } else if ($truthy(($truthy($a = self.excl) ? self.begin['$=='](self.end) : $a))) {\n        return nil\n      } else {\n        return self.begin\n      }\n    }, $Range_min$11.$$arity = 0);\n    \n    Opal.def(self, '$size', $Range_size$12 = function $$size() {\n      var $a, self = this, range_begin = nil, range_end = nil, infinity = nil;\n\n      \n      range_begin = self.begin;\n      range_end = self.end;\n      if ($truthy(self.excl)) {\n        range_end = $rb_minus(range_end, 1)};\n      if ($truthy(($truthy($a = $$($nesting, 'Numeric')['$==='](range_begin)) ? $$($nesting, 'Numeric')['$==='](range_end) : $a))) {\n      } else {\n        return nil\n      };\n      if ($truthy($rb_lt(range_end, range_begin))) {\n        return 0};\n      infinity = $$$($$($nesting, 'Float'), 'INFINITY');\n      if ($truthy([range_begin.$abs(), range_end.$abs()]['$include?'](infinity))) {\n        return infinity};\n      return (Math.abs(range_end - range_begin) + 1).$to_i();\n    }, $Range_size$12.$$arity = 0);\n    \n    Opal.def(self, '$step', $Range_step$13 = function $$step(n) {\n      var $$14, $$15, $$16, $iter = $Range_step$13.$$p, $yield = $iter || nil, self = this, i = nil;\n\n      if ($iter) $Range_step$13.$$p = null;\n      \n      \n      if (n == null) {\n        n = 1;\n      };\n      \n      function coerceStepSize() {\n        if (!n.$$is_number) {\n          n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\")\n        }\n\n        if (n < 0) {\n          self.$raise($$($nesting, 'ArgumentError'), \"step can't be negative\")\n        } else if (n === 0) {\n          self.$raise($$($nesting, 'ArgumentError'), \"step can't be 0\")\n        }\n      }\n\n      function enumeratorSize() {\n        if (!self.begin['$respond_to?'](\"succ\")) {\n          return nil;\n        }\n\n        if (self.begin.$$is_string && self.end.$$is_string) {\n          return nil;\n        }\n\n        if (n % 1 === 0) {\n          return $rb_divide(self.$size(), n).$ceil();\n        } else {\n          // n is a float\n          var begin = self.begin, end = self.end,\n              abs = Math.abs, floor = Math.floor,\n              err = (abs(begin) + abs(end) + abs(end - begin)) / abs(n) * $$$($$($nesting, 'Float'), 'EPSILON'),\n              size;\n\n          if (err > 0.5) {\n            err = 0.5;\n          }\n\n          if (self.excl) {\n            size = floor((end - begin) / n - err);\n            if (size * n + begin < end) {\n              size++;\n            }\n          } else {\n            size = floor((end - begin) / n + err) + 1\n          }\n\n          return size;\n        }\n      }\n    ;\n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"step\", n], ($$14 = function(){var self = $$14.$$s || this;\n\n        \n          coerceStepSize();\n          return enumeratorSize();\n        }, $$14.$$s = self, $$14.$$arity = 0, $$14))\n      };\n      coerceStepSize();\n      if ($truthy(self.begin.$$is_number && self.end.$$is_number)) {\n        \n        i = 0;\n        (function(){var $brk = Opal.new_brk(); try {return $send(self, 'loop', [], ($$15 = function(){var self = $$15.$$s || this, current = nil;\n          if (self.begin == null) self.begin = nil;\n          if (self.excl == null) self.excl = nil;\n          if (self.end == null) self.end = nil;\n\n        \n          current = $rb_plus(self.begin, $rb_times(i, n));\n          if ($truthy(self.excl)) {\n            if ($truthy($rb_ge(current, self.end))) {\n              \n              Opal.brk(nil, $brk)}\n          } else if ($truthy($rb_gt(current, self.end))) {\n            \n            Opal.brk(nil, $brk)};\n          Opal.yield1($yield, current);\n          return (i = $rb_plus(i, 1));}, $$15.$$s = self, $$15.$$brk = $brk, $$15.$$arity = 0, $$15))\n        } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n      } else {\n        \n        \n        if (self.begin.$$is_string && self.end.$$is_string && n % 1 !== 0) {\n          self.$raise($$($nesting, 'TypeError'), \"no implicit conversion to float from string\")\n        }\n      ;\n        $send(self, 'each_with_index', [], ($$16 = function(value, idx){var self = $$16.$$s || this;\n\n        \n          \n          if (value == null) {\n            value = nil;\n          };\n          \n          if (idx == null) {\n            idx = nil;\n          };\n          if (idx['$%'](n)['$=='](0)) {\n            return Opal.yield1($yield, value);\n          } else {\n            return nil\n          };}, $$16.$$s = self, $$16.$$arity = 2, $$16));\n      };\n      return self;\n    }, $Range_step$13.$$arity = -1);\n    \n    Opal.def(self, '$bsearch', $Range_bsearch$17 = function $$bsearch() {\n      var $iter = $Range_bsearch$17.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Range_bsearch$17.$$p = null;\n      \n      \n      if ($iter) $Range_bsearch$17.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"bsearch\")\n      };\n      if ($truthy(self.begin.$$is_number && self.end.$$is_number)) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't do binary search for \" + (self.begin.$class()))\n      };\n      return $send(self.$to_a(), 'bsearch', [], block.$to_proc());\n    }, $Range_bsearch$17.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Range_to_s$18 = function $$to_s() {\n      var self = this;\n\n      return \"\" + (self.begin) + ((function() {if ($truthy(self.excl)) {\n        return \"...\"\n      } else {\n        return \"..\"\n      }; return nil; })()) + (self.end)\n    }, $Range_to_s$18.$$arity = 0);\n    \n    Opal.def(self, '$inspect', $Range_inspect$19 = function $$inspect() {\n      var self = this;\n\n      return \"\" + (self.begin.$inspect()) + ((function() {if ($truthy(self.excl)) {\n        return \"...\"\n      } else {\n        return \"..\"\n      }; return nil; })()) + (self.end.$inspect())\n    }, $Range_inspect$19.$$arity = 0);\n    \n    Opal.def(self, '$marshal_load', $Range_marshal_load$20 = function $$marshal_load(args) {\n      var self = this;\n\n      \n      self.begin = args['$[]'](\"begin\");\n      self.end = args['$[]'](\"end\");\n      return (self.excl = args['$[]'](\"excl\"));\n    }, $Range_marshal_load$20.$$arity = 1);\n    return (Opal.def(self, '$hash', $Range_hash$21 = function $$hash() {\n      var self = this;\n\n      return [self.begin, self.end, self.excl].$hash()\n    }, $Range_hash$21.$$arity = 0), nil) && 'hash';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/proc\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$raise', '$coerce_to!']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Proc');\n\n    var $nesting = [self].concat($parent_nesting), $Proc_new$1, $Proc_call$2, $Proc_to_proc$3, $Proc_lambda$ques$4, $Proc_arity$5, $Proc_source_location$6, $Proc_binding$7, $Proc_parameters$8, $Proc_curry$9, $Proc_dup$10;\n\n    \n    Opal.defineProperty(self.$$prototype, '$$is_proc', true);\n    Opal.defineProperty(self.$$prototype, '$$is_lambda', false);\n    Opal.defs(self, '$new', $Proc_new$1 = function() {\n      var $iter = $Proc_new$1.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Proc_new$1.$$p = null;\n      \n      \n      if ($iter) $Proc_new$1.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"tried to create a Proc object without a block\")\n      };\n      return block;\n    }, $Proc_new$1.$$arity = 0);\n    \n    Opal.def(self, '$call', $Proc_call$2 = function $$call($a) {\n      var $iter = $Proc_call$2.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Proc_call$2.$$p = null;\n      \n      \n      if ($iter) $Proc_call$2.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      if (block !== nil) {\n        self.$$p = block;\n      }\n\n      var result, $brk = self.$$brk;\n\n      if ($brk) {\n        try {\n          if (self.$$is_lambda) {\n            result = self.apply(null, args);\n          }\n          else {\n            result = Opal.yieldX(self, args);\n          }\n        } catch (err) {\n          if (err === $brk) {\n            return $brk.$v\n          }\n          else {\n            throw err\n          }\n        }\n      }\n      else {\n        if (self.$$is_lambda) {\n          result = self.apply(null, args);\n        }\n        else {\n          result = Opal.yieldX(self, args);\n        }\n      }\n\n      return result;\n    ;\n    }, $Proc_call$2.$$arity = -1);\n    Opal.alias(self, \"[]\", \"call\");\n    Opal.alias(self, \"===\", \"call\");\n    Opal.alias(self, \"yield\", \"call\");\n    \n    Opal.def(self, '$to_proc', $Proc_to_proc$3 = function $$to_proc() {\n      var self = this;\n\n      return self\n    }, $Proc_to_proc$3.$$arity = 0);\n    \n    Opal.def(self, '$lambda?', $Proc_lambda$ques$4 = function() {\n      var self = this;\n\n      return !!self.$$is_lambda;\n    }, $Proc_lambda$ques$4.$$arity = 0);\n    \n    Opal.def(self, '$arity', $Proc_arity$5 = function $$arity() {\n      var self = this;\n\n      \n      if (self.$$is_curried) {\n        return -1;\n      } else {\n        return self.$$arity;\n      }\n    \n    }, $Proc_arity$5.$$arity = 0);\n    \n    Opal.def(self, '$source_location', $Proc_source_location$6 = function $$source_location() {\n      var self = this;\n\n      \n      if (self.$$is_curried) { return nil; };\n      return nil;\n    }, $Proc_source_location$6.$$arity = 0);\n    \n    Opal.def(self, '$binding', $Proc_binding$7 = function $$binding() {\n      var self = this;\n\n      \n      if (self.$$is_curried) { self.$raise($$($nesting, 'ArgumentError'), \"Can't create Binding\") };\n      return nil;\n    }, $Proc_binding$7.$$arity = 0);\n    \n    Opal.def(self, '$parameters', $Proc_parameters$8 = function $$parameters() {\n      var self = this;\n\n      \n      if (self.$$is_curried) {\n        return [[\"rest\"]];\n      } else if (self.$$parameters) {\n        if (self.$$is_lambda) {\n          return self.$$parameters;\n        } else {\n          var result = [], i, length;\n\n          for (i = 0, length = self.$$parameters.length; i < length; i++) {\n            var parameter = self.$$parameters[i];\n\n            if (parameter[0] === 'req') {\n              // required arguments always have name\n              parameter = ['opt', parameter[1]];\n            }\n\n            result.push(parameter);\n          }\n\n          return result;\n        }\n      } else {\n        return [];\n      }\n    \n    }, $Proc_parameters$8.$$arity = 0);\n    \n    Opal.def(self, '$curry', $Proc_curry$9 = function $$curry(arity) {\n      var self = this;\n\n      \n      ;\n      \n      if (arity === undefined) {\n        arity = self.length;\n      }\n      else {\n        arity = $$($nesting, 'Opal')['$coerce_to!'](arity, $$($nesting, 'Integer'), \"to_int\");\n        if (self.$$is_lambda && arity !== self.length) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arity) + \" for \" + (self.length) + \")\")\n        }\n      }\n\n      function curried () {\n        var args = $slice.call(arguments),\n            length = args.length,\n            result;\n\n        if (length > arity && self.$$is_lambda && !self.$$is_curried) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (length) + \" for \" + (arity) + \")\")\n        }\n\n        if (length >= arity) {\n          return self.$call.apply(self, args);\n        }\n\n        result = function () {\n          return curried.apply(null,\n            args.concat($slice.call(arguments)));\n        }\n        result.$$is_lambda = self.$$is_lambda;\n        result.$$is_curried = true;\n\n        return result;\n      };\n\n      curried.$$is_lambda = self.$$is_lambda;\n      curried.$$is_curried = true;\n      return curried;\n    ;\n    }, $Proc_curry$9.$$arity = -1);\n    \n    Opal.def(self, '$dup', $Proc_dup$10 = function $$dup() {\n      var self = this;\n\n      \n      var original_proc = self.$$original_proc || self,\n          proc = function () {\n            return original_proc.apply(this, arguments);\n          };\n\n      for (var prop in self) {\n        if (self.hasOwnProperty(prop)) {\n          proc[prop] = self[prop];\n        }\n      }\n\n      return proc;\n    \n    }, $Proc_dup$10.$$arity = 0);\n    return Opal.alias(self, \"clone\", \"dup\");\n  })($nesting[0], Function, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/method\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_reader', '$arity', '$new', '$class', '$join', '$source_location', '$raise']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Method');\n\n    var $nesting = [self].concat($parent_nesting), $Method_initialize$1, $Method_arity$2, $Method_parameters$3, $Method_source_location$4, $Method_comments$5, $Method_call$6, $Method_unbind$7, $Method_to_proc$8, $Method_inspect$9;\n\n    self.$$prototype.method = self.$$prototype.receiver = self.$$prototype.owner = self.$$prototype.name = nil;\n    \n    self.$attr_reader(\"owner\", \"receiver\", \"name\");\n    \n    Opal.def(self, '$initialize', $Method_initialize$1 = function $$initialize(receiver, owner, method, name) {\n      var self = this;\n\n      \n      self.receiver = receiver;\n      self.owner = owner;\n      self.name = name;\n      return (self.method = method);\n    }, $Method_initialize$1.$$arity = 4);\n    \n    Opal.def(self, '$arity', $Method_arity$2 = function $$arity() {\n      var self = this;\n\n      return self.method.$arity()\n    }, $Method_arity$2.$$arity = 0);\n    \n    Opal.def(self, '$parameters', $Method_parameters$3 = function $$parameters() {\n      var self = this;\n\n      return self.method.$$parameters\n    }, $Method_parameters$3.$$arity = 0);\n    \n    Opal.def(self, '$source_location', $Method_source_location$4 = function $$source_location() {\n      var $a, self = this;\n\n      return ($truthy($a = self.method.$$source_location) ? $a : [\"(eval)\", 0])\n    }, $Method_source_location$4.$$arity = 0);\n    \n    Opal.def(self, '$comments', $Method_comments$5 = function $$comments() {\n      var $a, self = this;\n\n      return ($truthy($a = self.method.$$comments) ? $a : [])\n    }, $Method_comments$5.$$arity = 0);\n    \n    Opal.def(self, '$call', $Method_call$6 = function $$call($a) {\n      var $iter = $Method_call$6.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Method_call$6.$$p = null;\n      \n      \n      if ($iter) $Method_call$6.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      self.method.$$p = block;\n\n      return self.method.apply(self.receiver, args);\n    ;\n    }, $Method_call$6.$$arity = -1);\n    Opal.alias(self, \"[]\", \"call\");\n    \n    Opal.def(self, '$unbind', $Method_unbind$7 = function $$unbind() {\n      var self = this;\n\n      return $$($nesting, 'UnboundMethod').$new(self.receiver.$class(), self.owner, self.method, self.name)\n    }, $Method_unbind$7.$$arity = 0);\n    \n    Opal.def(self, '$to_proc', $Method_to_proc$8 = function $$to_proc() {\n      var self = this;\n\n      \n      var proc = self.$call.bind(self);\n      proc.$$unbound = self.method;\n      proc.$$is_lambda = true;\n      proc.$$arity = self.method.$$arity;\n      proc.$$parameters = self.method.$$parameters;\n      return proc;\n    \n    }, $Method_to_proc$8.$$arity = 0);\n    return (Opal.def(self, '$inspect', $Method_inspect$9 = function $$inspect() {\n      var self = this;\n\n      return \"\" + \"#<\" + (self.$class()) + \": \" + (self.receiver.$class()) + \"#\" + (self.name) + \" (defined in \" + (self.owner) + \" in \" + (self.$source_location().$join(\":\")) + \")>\"\n    }, $Method_inspect$9.$$arity = 0), nil) && 'inspect';\n  })($nesting[0], null, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'UnboundMethod');\n\n    var $nesting = [self].concat($parent_nesting), $UnboundMethod_initialize$10, $UnboundMethod_arity$11, $UnboundMethod_parameters$12, $UnboundMethod_source_location$13, $UnboundMethod_comments$14, $UnboundMethod_bind$15, $UnboundMethod_inspect$16;\n\n    self.$$prototype.method = self.$$prototype.owner = self.$$prototype.name = self.$$prototype.source = nil;\n    \n    self.$attr_reader(\"source\", \"owner\", \"name\");\n    \n    Opal.def(self, '$initialize', $UnboundMethod_initialize$10 = function $$initialize(source, owner, method, name) {\n      var self = this;\n\n      \n      self.source = source;\n      self.owner = owner;\n      self.method = method;\n      return (self.name = name);\n    }, $UnboundMethod_initialize$10.$$arity = 4);\n    \n    Opal.def(self, '$arity', $UnboundMethod_arity$11 = function $$arity() {\n      var self = this;\n\n      return self.method.$arity()\n    }, $UnboundMethod_arity$11.$$arity = 0);\n    \n    Opal.def(self, '$parameters', $UnboundMethod_parameters$12 = function $$parameters() {\n      var self = this;\n\n      return self.method.$$parameters\n    }, $UnboundMethod_parameters$12.$$arity = 0);\n    \n    Opal.def(self, '$source_location', $UnboundMethod_source_location$13 = function $$source_location() {\n      var $a, self = this;\n\n      return ($truthy($a = self.method.$$source_location) ? $a : [\"(eval)\", 0])\n    }, $UnboundMethod_source_location$13.$$arity = 0);\n    \n    Opal.def(self, '$comments', $UnboundMethod_comments$14 = function $$comments() {\n      var $a, self = this;\n\n      return ($truthy($a = self.method.$$comments) ? $a : [])\n    }, $UnboundMethod_comments$14.$$arity = 0);\n    \n    Opal.def(self, '$bind', $UnboundMethod_bind$15 = function $$bind(object) {\n      var self = this;\n\n      \n      if (self.owner.$$is_module || Opal.is_a(object, self.owner)) {\n        return $$($nesting, 'Method').$new(object, self.owner, self.method, self.name);\n      }\n      else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't bind singleton method to a different class (expected \" + (object) + \".kind_of?(\" + (self.owner) + \" to be true)\");\n      }\n    \n    }, $UnboundMethod_bind$15.$$arity = 1);\n    return (Opal.def(self, '$inspect', $UnboundMethod_inspect$16 = function $$inspect() {\n      var self = this;\n\n      return \"\" + \"#<\" + (self.$class()) + \": \" + (self.source) + \"#\" + (self.name) + \" (defined in \" + (self.owner) + \" in \" + (self.$source_location().$join(\":\")) + \")>\"\n    }, $UnboundMethod_inspect$16.$$arity = 0), nil) && 'inspect';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/variables\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $gvars = Opal.gvars, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$new']);\n  \n  $gvars['&'] = $gvars['~'] = $gvars['`'] = $gvars[\"'\"] = nil;\n  $gvars.LOADED_FEATURES = ($gvars[\"\\\"\"] = Opal.loaded_features);\n  $gvars.LOAD_PATH = ($gvars[\":\"] = []);\n  $gvars[\"/\"] = \"\\n\";\n  $gvars[\",\"] = nil;\n  Opal.const_set($nesting[0], 'ARGV', []);\n  Opal.const_set($nesting[0], 'ARGF', $$($nesting, 'Object').$new());\n  Opal.const_set($nesting[0], 'ENV', $hash2([], {}));\n  $gvars.VERBOSE = false;\n  $gvars.DEBUG = false;\n  return ($gvars.SAFE = 0);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"opal/regexp_anchors\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;\n\n  Opal.add_stubs(['$==', '$new']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Opal');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    Opal.const_set($nesting[0], 'REGEXP_START', (function() {if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      return \"^\"\n    } else {\n      return nil\n    }; return nil; })());\n    Opal.const_set($nesting[0], 'REGEXP_END', (function() {if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      return \"$\"\n    } else {\n      return nil\n    }; return nil; })());\n    Opal.const_set($nesting[0], 'FORBIDDEN_STARTING_IDENTIFIER_CHARS', \"\\\\u0001-\\\\u002F\\\\u003A-\\\\u0040\\\\u005B-\\\\u005E\\\\u0060\\\\u007B-\\\\u007F\");\n    Opal.const_set($nesting[0], 'FORBIDDEN_ENDING_IDENTIFIER_CHARS', \"\\\\u0001-\\\\u0020\\\\u0022-\\\\u002F\\\\u003A-\\\\u003E\\\\u0040\\\\u005B-\\\\u005E\\\\u0060\\\\u007B-\\\\u007F\");\n    Opal.const_set($nesting[0], 'INLINE_IDENTIFIER_REGEXP', $$($nesting, 'Regexp').$new(\"\" + \"[^\" + ($$($nesting, 'FORBIDDEN_STARTING_IDENTIFIER_CHARS')) + \"]*[^\" + ($$($nesting, 'FORBIDDEN_ENDING_IDENTIFIER_CHARS')) + \"]\"));\n    Opal.const_set($nesting[0], 'FORBIDDEN_CONST_NAME_CHARS', \"\\\\u0001-\\\\u0020\\\\u0021-\\\\u002F\\\\u003B-\\\\u003F\\\\u0040\\\\u005B-\\\\u005E\\\\u0060\\\\u007B-\\\\u007F\");\n    Opal.const_set($nesting[0], 'CONST_NAME_REGEXP', $$($nesting, 'Regexp').$new(\"\" + ($$($nesting, 'REGEXP_START')) + \"(::)?[A-Z][^\" + ($$($nesting, 'FORBIDDEN_CONST_NAME_CHARS')) + \"]*\" + ($$($nesting, 'REGEXP_END'))));\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"opal/mini\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"opal/base\");\n  self.$require(\"corelib/nil\");\n  self.$require(\"corelib/boolean\");\n  self.$require(\"corelib/string\");\n  self.$require(\"corelib/comparable\");\n  self.$require(\"corelib/enumerable\");\n  self.$require(\"corelib/enumerator\");\n  self.$require(\"corelib/array\");\n  self.$require(\"corelib/hash\");\n  self.$require(\"corelib/number\");\n  self.$require(\"corelib/range\");\n  self.$require(\"corelib/proc\");\n  self.$require(\"corelib/method\");\n  self.$require(\"corelib/regexp\");\n  self.$require(\"corelib/variables\");\n  return self.$require(\"opal/regexp_anchors\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/string/encoding\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var $$12, $$15, $$18, $$21, $$24, self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$require', '$+', '$[]', '$new', '$to_proc', '$each', '$const_set', '$sub', '$==', '$default_external', '$upcase', '$raise', '$attr_accessor', '$attr_reader', '$register', '$length', '$bytes', '$to_a', '$each_byte', '$bytesize', '$enum_for', '$force_encoding', '$dup', '$coerce_to!', '$find', '$getbyte']);\n  \n  self.$require(\"corelib/string\");\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Encoding');\n\n    var $nesting = [self].concat($parent_nesting), $Encoding_register$1, $Encoding_find$3, $Encoding_initialize$4, $Encoding_ascii_compatible$ques$5, $Encoding_dummy$ques$6, $Encoding_to_s$7, $Encoding_inspect$8, $Encoding_each_byte$9, $Encoding_getbyte$10, $Encoding_bytesize$11;\n\n    self.$$prototype.ascii = self.$$prototype.dummy = self.$$prototype.name = nil;\n    \n    Opal.defineProperty(self, '$$register', {});\n    Opal.defs(self, '$register', $Encoding_register$1 = function $$register(name, options) {\n      var $iter = $Encoding_register$1.$$p, block = $iter || nil, $a, $$2, self = this, names = nil, encoding = nil, register = nil;\n\n      if ($iter) $Encoding_register$1.$$p = null;\n      \n      \n      if ($iter) $Encoding_register$1.$$p = null;;\n      \n      if (options == null) {\n        options = $hash2([], {});\n      };\n      names = $rb_plus([name], ($truthy($a = options['$[]'](\"aliases\")) ? $a : []));\n      encoding = $send($$($nesting, 'Class'), 'new', [self], block.$to_proc()).$new(name, names, ($truthy($a = options['$[]'](\"ascii\")) ? $a : false), ($truthy($a = options['$[]'](\"dummy\")) ? $a : false));\n      register = self[\"$$register\"];\n      return $send(names, 'each', [], ($$2 = function(encoding_name){var self = $$2.$$s || this;\n\n      \n        \n        if (encoding_name == null) {\n          encoding_name = nil;\n        };\n        self.$const_set(encoding_name.$sub(\"-\", \"_\"), encoding);\n        return register[\"\" + \"$$\" + (encoding_name)] = encoding;}, $$2.$$s = self, $$2.$$arity = 1, $$2));\n    }, $Encoding_register$1.$$arity = -2);\n    Opal.defs(self, '$find', $Encoding_find$3 = function $$find(name) {\n      var $a, self = this, register = nil, encoding = nil;\n\n      \n      if (name['$=='](\"default_external\")) {\n        return self.$default_external()};\n      register = self[\"$$register\"];\n      encoding = ($truthy($a = register[\"\" + \"$$\" + (name)]) ? $a : register[\"\" + \"$$\" + (name.$upcase())]);\n      if ($truthy(encoding)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"unknown encoding name - \" + (name))\n      };\n      return encoding;\n    }, $Encoding_find$3.$$arity = 1);\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting);\n\n      return self.$attr_accessor(\"default_external\")\n    })(Opal.get_singleton_class(self), $nesting);\n    self.$attr_reader(\"name\", \"names\");\n    \n    Opal.def(self, '$initialize', $Encoding_initialize$4 = function $$initialize(name, names, ascii, dummy) {\n      var self = this;\n\n      \n      self.name = name;\n      self.names = names;\n      self.ascii = ascii;\n      return (self.dummy = dummy);\n    }, $Encoding_initialize$4.$$arity = 4);\n    \n    Opal.def(self, '$ascii_compatible?', $Encoding_ascii_compatible$ques$5 = function() {\n      var self = this;\n\n      return self.ascii\n    }, $Encoding_ascii_compatible$ques$5.$$arity = 0);\n    \n    Opal.def(self, '$dummy?', $Encoding_dummy$ques$6 = function() {\n      var self = this;\n\n      return self.dummy\n    }, $Encoding_dummy$ques$6.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Encoding_to_s$7 = function $$to_s() {\n      var self = this;\n\n      return self.name\n    }, $Encoding_to_s$7.$$arity = 0);\n    \n    Opal.def(self, '$inspect', $Encoding_inspect$8 = function $$inspect() {\n      var self = this;\n\n      return \"\" + \"#<Encoding:\" + (self.name) + ((function() {if ($truthy(self.dummy)) {\n        return \" (dummy)\"\n      } else {\n        return nil\n      }; return nil; })()) + \">\"\n    }, $Encoding_inspect$8.$$arity = 0);\n    \n    Opal.def(self, '$each_byte', $Encoding_each_byte$9 = function $$each_byte($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'));\n    }, $Encoding_each_byte$9.$$arity = -1);\n    \n    Opal.def(self, '$getbyte', $Encoding_getbyte$10 = function $$getbyte($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'));\n    }, $Encoding_getbyte$10.$$arity = -1);\n    \n    Opal.def(self, '$bytesize', $Encoding_bytesize$11 = function $$bytesize($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'));\n    }, $Encoding_bytesize$11.$$arity = -1);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'EncodingError');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      return nil\n    })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n    return (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'CompatibilityError');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      return nil\n    })($nesting[0], $$($nesting, 'EncodingError'), $nesting);\n  })($nesting[0], null, $nesting);\n  $send($$($nesting, 'Encoding'), 'register', [\"UTF-8\", $hash2([\"aliases\", \"ascii\"], {\"aliases\": [\"CP65001\"], \"ascii\": true})], ($$12 = function(){var self = $$12.$$s || this, $each_byte$13, $bytesize$14;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$13 = function $$each_byte(string) {\n      var $iter = $each_byte$13.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$13.$$p = null;\n      \n      \n      if ($iter) $each_byte$13.$$p = null;;\n      \n      for (var i = 0, length = string.length; i < length; i++) {\n        var code = string.charCodeAt(i);\n\n        if (code <= 0x7f) {\n          Opal.yield1(block, code);\n        }\n        else {\n          var encoded = encodeURIComponent(string.charAt(i)).substr(1).split('%');\n\n          for (var j = 0, encoded_length = encoded.length; j < encoded_length; j++) {\n            Opal.yield1(block, parseInt(encoded[j], 16));\n          }\n        }\n      }\n    ;\n    }, $each_byte$13.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$14 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$14.$$arity = 1), nil) && 'bytesize';}, $$12.$$s = self, $$12.$$arity = 0, $$12));\n  $send($$($nesting, 'Encoding'), 'register', [\"UTF-16LE\"], ($$15 = function(){var self = $$15.$$s || this, $each_byte$16, $bytesize$17;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$16 = function $$each_byte(string) {\n      var $iter = $each_byte$16.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$16.$$p = null;\n      \n      \n      if ($iter) $each_byte$16.$$p = null;;\n      \n      for (var i = 0, length = string.length; i < length; i++) {\n        var code = string.charCodeAt(i);\n\n        Opal.yield1(block, code & 0xff);\n        Opal.yield1(block, code >> 8);\n      }\n    ;\n    }, $each_byte$16.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$17 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$17.$$arity = 1), nil) && 'bytesize';}, $$15.$$s = self, $$15.$$arity = 0, $$15));\n  $send($$($nesting, 'Encoding'), 'register', [\"UTF-16BE\"], ($$18 = function(){var self = $$18.$$s || this, $each_byte$19, $bytesize$20;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$19 = function $$each_byte(string) {\n      var $iter = $each_byte$19.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$19.$$p = null;\n      \n      \n      if ($iter) $each_byte$19.$$p = null;;\n      \n      for (var i = 0, length = string.length; i < length; i++) {\n        var code = string.charCodeAt(i);\n\n        Opal.yield1(block, code >> 8);\n        Opal.yield1(block, code & 0xff);\n      }\n    ;\n    }, $each_byte$19.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$20 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$20.$$arity = 1), nil) && 'bytesize';}, $$18.$$s = self, $$18.$$arity = 0, $$18));\n  $send($$($nesting, 'Encoding'), 'register', [\"UTF-32LE\"], ($$21 = function(){var self = $$21.$$s || this, $each_byte$22, $bytesize$23;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$22 = function $$each_byte(string) {\n      var $iter = $each_byte$22.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$22.$$p = null;\n      \n      \n      if ($iter) $each_byte$22.$$p = null;;\n      \n      for (var i = 0, length = string.length; i < length; i++) {\n        var code = string.charCodeAt(i);\n\n        Opal.yield1(block, code & 0xff);\n        Opal.yield1(block, code >> 8);\n      }\n    ;\n    }, $each_byte$22.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$23 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$23.$$arity = 1), nil) && 'bytesize';}, $$21.$$s = self, $$21.$$arity = 0, $$21));\n  $send($$($nesting, 'Encoding'), 'register', [\"ASCII-8BIT\", $hash2([\"aliases\", \"ascii\", \"dummy\"], {\"aliases\": [\"BINARY\", \"US-ASCII\", \"ASCII\"], \"ascii\": true, \"dummy\": true})], ($$24 = function(){var self = $$24.$$s || this, $each_byte$25, $bytesize$26;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$25 = function $$each_byte(string) {\n      var $iter = $each_byte$25.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$25.$$p = null;\n      \n      \n      if ($iter) $each_byte$25.$$p = null;;\n      \n      for (var i = 0, length = string.length; i < length; i++) {\n        var code = string.charCodeAt(i);\n        Opal.yield1(block, code & 0xff);\n        Opal.yield1(block, code >> 8);\n      }\n    ;\n    }, $each_byte$25.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$26 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$26.$$arity = 1), nil) && 'bytesize';}, $$24.$$s = self, $$24.$$arity = 0, $$24));\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting), $String_bytes$27, $String_bytesize$28, $String_each_byte$29, $String_encode$30, $String_force_encoding$31, $String_getbyte$32, $String_valid_encoding$ques$33;\n\n    self.$$prototype.encoding = nil;\n    \n    self.$attr_reader(\"encoding\");\n    Opal.defineProperty(String.prototype, 'encoding', $$$($$($nesting, 'Encoding'), 'UTF_16LE'));\n    \n    Opal.def(self, '$bytes', $String_bytes$27 = function $$bytes() {\n      var self = this;\n\n      return self.$each_byte().$to_a()\n    }, $String_bytes$27.$$arity = 0);\n    \n    Opal.def(self, '$bytesize', $String_bytesize$28 = function $$bytesize() {\n      var self = this;\n\n      return self.encoding.$bytesize(self)\n    }, $String_bytesize$28.$$arity = 0);\n    \n    Opal.def(self, '$each_byte', $String_each_byte$29 = function $$each_byte() {\n      var $iter = $String_each_byte$29.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_each_byte$29.$$p = null;\n      \n      \n      if ($iter) $String_each_byte$29.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"each_byte\")\n      };\n      $send(self.encoding, 'each_byte', [self], block.$to_proc());\n      return self;\n    }, $String_each_byte$29.$$arity = 0);\n    \n    Opal.def(self, '$encode', $String_encode$30 = function $$encode(encoding) {\n      var self = this;\n\n      return self.$dup().$force_encoding(encoding)\n    }, $String_encode$30.$$arity = 1);\n    \n    Opal.def(self, '$force_encoding', $String_force_encoding$31 = function $$force_encoding(encoding) {\n      var self = this;\n\n      \n      if (encoding === self.encoding) { return self; }\n\n      encoding = $$($nesting, 'Opal')['$coerce_to!'](encoding, $$($nesting, 'String'), \"to_s\");\n      encoding = $$($nesting, 'Encoding').$find(encoding);\n\n      if (encoding === self.encoding) { return self; }\n\n      self.encoding = encoding;\n      return self;\n    \n    }, $String_force_encoding$31.$$arity = 1);\n    \n    Opal.def(self, '$getbyte', $String_getbyte$32 = function $$getbyte(idx) {\n      var self = this;\n\n      return self.encoding.$getbyte(self, idx)\n    }, $String_getbyte$32.$$arity = 1);\n    return (Opal.def(self, '$valid_encoding?', $String_valid_encoding$ques$33 = function() {\n      var self = this;\n\n      return true\n    }, $String_valid_encoding$ques$33.$$arity = 0), nil) && 'valid_encoding?';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/struct\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$require', '$include', '$const_name!', '$unshift', '$map', '$coerce_to!', '$new', '$each', '$define_struct_attribute', '$allocate', '$initialize', '$alias_method', '$module_eval', '$to_proc', '$const_set', '$==', '$raise', '$<<', '$members', '$define_method', '$instance_eval', '$class', '$last', '$>', '$length', '$-', '$keys', '$any?', '$join', '$[]', '$[]=', '$each_with_index', '$hash', '$===', '$<', '$-@', '$size', '$>=', '$include?', '$to_sym', '$instance_of?', '$__id__', '$eql?', '$enum_for', '$name', '$+', '$each_pair', '$inspect', '$each_with_object', '$flatten', '$to_a', '$respond_to?', '$dig']);\n  \n  self.$require(\"corelib/enumerable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Struct');\n\n    var $nesting = [self].concat($parent_nesting), $Struct_new$1, $Struct_define_struct_attribute$6, $Struct_members$9, $Struct_inherited$10, $Struct_initialize$12, $Struct_members$15, $Struct_hash$16, $Struct_$$$17, $Struct_$$$eq$18, $Struct_$eq_eq$19, $Struct_eql$ques$20, $Struct_each$21, $Struct_each_pair$24, $Struct_length$27, $Struct_to_a$28, $Struct_inspect$30, $Struct_to_h$32, $Struct_values_at$34, $Struct_dig$36;\n\n    \n    self.$include($$($nesting, 'Enumerable'));\n    Opal.defs(self, '$new', $Struct_new$1 = function(const_name, $a, $b) {\n      var $iter = $Struct_new$1.$$p, block = $iter || nil, $post_args, $kwargs, args, keyword_init, $$2, $$3, self = this, klass = nil;\n\n      if ($iter) $Struct_new$1.$$p = null;\n      \n      \n      if ($iter) $Struct_new$1.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      $kwargs = Opal.extract_kwargs($post_args);\n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      args = $post_args;;\n      \n      keyword_init = $kwargs.$$smap[\"keyword_init\"];\n      if (keyword_init == null) {\n        keyword_init = false\n      };\n      if ($truthy(const_name)) {\n        \n        try {\n          const_name = $$($nesting, 'Opal')['$const_name!'](const_name)\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'TypeError'), $$($nesting, 'NameError')])) {\n            try {\n              \n              args.$unshift(const_name);\n              const_name = nil;\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };};\n      $send(args, 'map', [], ($$2 = function(arg){var self = $$2.$$s || this;\n\n      \n        \n        if (arg == null) {\n          arg = nil;\n        };\n        return $$($nesting, 'Opal')['$coerce_to!'](arg, $$($nesting, 'String'), \"to_str\");}, $$2.$$s = self, $$2.$$arity = 1, $$2));\n      klass = $send($$($nesting, 'Class'), 'new', [self], ($$3 = function(){var self = $$3.$$s || this, $$4;\n\n      \n        $send(args, 'each', [], ($$4 = function(arg){var self = $$4.$$s || this;\n\n        \n          \n          if (arg == null) {\n            arg = nil;\n          };\n          return self.$define_struct_attribute(arg);}, $$4.$$s = self, $$4.$$arity = 1, $$4));\n        return (function(self, $parent_nesting) {\n          var $nesting = [self].concat($parent_nesting), $new$5;\n\n          \n          \n          Opal.def(self, '$new', $new$5 = function($a) {\n            var $post_args, args, self = this, instance = nil;\n\n            \n            \n            $post_args = Opal.slice.call(arguments, 0, arguments.length);\n            \n            args = $post_args;;\n            instance = self.$allocate();\n            instance.$$data = {};\n            $send(instance, 'initialize', Opal.to_a(args));\n            return instance;\n          }, $new$5.$$arity = -1);\n          return self.$alias_method(\"[]\", \"new\");\n        })(Opal.get_singleton_class(self), $nesting);}, $$3.$$s = self, $$3.$$arity = 0, $$3));\n      if ($truthy(block)) {\n        $send(klass, 'module_eval', [], block.$to_proc())};\n      klass.$$keyword_init = keyword_init;\n      if ($truthy(const_name)) {\n        $$($nesting, 'Struct').$const_set(const_name, klass)};\n      return klass;\n    }, $Struct_new$1.$$arity = -2);\n    Opal.defs(self, '$define_struct_attribute', $Struct_define_struct_attribute$6 = function $$define_struct_attribute(name) {\n      var $$7, $$8, self = this;\n\n      \n      if (self['$==']($$($nesting, 'Struct'))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"you cannot define attributes to the Struct class\")};\n      self.$members()['$<<'](name);\n      $send(self, 'define_method', [name], ($$7 = function(){var self = $$7.$$s || this;\n\n      return self.$$data[name];}, $$7.$$s = self, $$7.$$arity = 0, $$7));\n      return $send(self, 'define_method', [\"\" + (name) + \"=\"], ($$8 = function(value){var self = $$8.$$s || this;\n\n      \n        \n        if (value == null) {\n          value = nil;\n        };\n        return self.$$data[name] = value;;}, $$8.$$s = self, $$8.$$arity = 1, $$8));\n    }, $Struct_define_struct_attribute$6.$$arity = 1);\n    Opal.defs(self, '$members', $Struct_members$9 = function $$members() {\n      var $a, self = this;\n      if (self.members == null) self.members = nil;\n\n      \n      if (self['$==']($$($nesting, 'Struct'))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"the Struct class has no members\")};\n      return (self.members = ($truthy($a = self.members) ? $a : []));\n    }, $Struct_members$9.$$arity = 0);\n    Opal.defs(self, '$inherited', $Struct_inherited$10 = function $$inherited(klass) {\n      var $$11, self = this, members = nil;\n      if (self.members == null) self.members = nil;\n\n      \n      members = self.members;\n      return $send(klass, 'instance_eval', [], ($$11 = function(){var self = $$11.$$s || this;\n\n      return (self.members = members)}, $$11.$$s = self, $$11.$$arity = 0, $$11));\n    }, $Struct_inherited$10.$$arity = 1);\n    \n    Opal.def(self, '$initialize', $Struct_initialize$12 = function $$initialize($a) {\n      var $post_args, args, $b, $$13, $$14, self = this, kwargs = nil, extra = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(self.$class().$$keyword_init)) {\n        \n        kwargs = ($truthy($b = args.$last()) ? $b : $hash2([], {}));\n        if ($truthy(($truthy($b = $rb_gt(args.$length(), 1)) ? $b : (args.length === 1 && !kwargs.$$is_hash)))) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (given \" + (args.$length()) + \", expected 0)\")};\n        extra = $rb_minus(kwargs.$keys(), self.$class().$members());\n        if ($truthy(extra['$any?']())) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"unknown keywords: \" + (extra.$join(\", \")))};\n        return $send(self.$class().$members(), 'each', [], ($$13 = function(name){var self = $$13.$$s || this, $writer = nil;\n\n        \n          \n          if (name == null) {\n            name = nil;\n          };\n          $writer = [name, kwargs['$[]'](name)];\n          $send(self, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$13.$$s = self, $$13.$$arity = 1, $$13));\n      } else {\n        \n        if ($truthy($rb_gt(args.$length(), self.$class().$members().$length()))) {\n          self.$raise($$($nesting, 'ArgumentError'), \"struct size differs\")};\n        return $send(self.$class().$members(), 'each_with_index', [], ($$14 = function(name, index){var self = $$14.$$s || this, $writer = nil;\n\n        \n          \n          if (name == null) {\n            name = nil;\n          };\n          \n          if (index == null) {\n            index = nil;\n          };\n          $writer = [name, args['$[]'](index)];\n          $send(self, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$14.$$s = self, $$14.$$arity = 2, $$14));\n      };\n    }, $Struct_initialize$12.$$arity = -1);\n    \n    Opal.def(self, '$members', $Struct_members$15 = function $$members() {\n      var self = this;\n\n      return self.$class().$members()\n    }, $Struct_members$15.$$arity = 0);\n    \n    Opal.def(self, '$hash', $Struct_hash$16 = function $$hash() {\n      var self = this;\n\n      return $$($nesting, 'Hash').$new(self.$$data).$hash()\n    }, $Struct_hash$16.$$arity = 0);\n    \n    Opal.def(self, '$[]', $Struct_$$$17 = function(name) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](name))) {\n        \n        if ($truthy($rb_lt(name, self.$class().$members().$size()['$-@']()))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"offset \" + (name) + \" too small for struct(size:\" + (self.$class().$members().$size()) + \")\")};\n        if ($truthy($rb_ge(name, self.$class().$members().$size()))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"offset \" + (name) + \" too large for struct(size:\" + (self.$class().$members().$size()) + \")\")};\n        name = self.$class().$members()['$[]'](name);\n      } else if ($truthy($$($nesting, 'String')['$==='](name))) {\n        \n        if(!self.$$data.hasOwnProperty(name)) {\n          self.$raise($$($nesting, 'NameError').$new(\"\" + \"no member '\" + (name) + \"' in struct\", name))\n        }\n      \n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"no implicit conversion of \" + (name.$class()) + \" into Integer\")\n      };\n      name = $$($nesting, 'Opal')['$coerce_to!'](name, $$($nesting, 'String'), \"to_str\");\n      return self.$$data[name];;\n    }, $Struct_$$$17.$$arity = 1);\n    \n    Opal.def(self, '$[]=', $Struct_$$$eq$18 = function(name, value) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](name))) {\n        \n        if ($truthy($rb_lt(name, self.$class().$members().$size()['$-@']()))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"offset \" + (name) + \" too small for struct(size:\" + (self.$class().$members().$size()) + \")\")};\n        if ($truthy($rb_ge(name, self.$class().$members().$size()))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"offset \" + (name) + \" too large for struct(size:\" + (self.$class().$members().$size()) + \")\")};\n        name = self.$class().$members()['$[]'](name);\n      } else if ($truthy($$($nesting, 'String')['$==='](name))) {\n        if ($truthy(self.$class().$members()['$include?'](name.$to_sym()))) {\n        } else {\n          self.$raise($$($nesting, 'NameError').$new(\"\" + \"no member '\" + (name) + \"' in struct\", name))\n        }\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"no implicit conversion of \" + (name.$class()) + \" into Integer\")\n      };\n      name = $$($nesting, 'Opal')['$coerce_to!'](name, $$($nesting, 'String'), \"to_str\");\n      return self.$$data[name] = value;;\n    }, $Struct_$$$eq$18.$$arity = 2);\n    \n    Opal.def(self, '$==', $Struct_$eq_eq$19 = function(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$instance_of?'](self.$class()))) {\n      } else {\n        return false\n      };\n      \n      var recursed1 = {}, recursed2 = {};\n\n      function _eqeq(struct, other) {\n        var key, a, b;\n\n        recursed1[(struct).$__id__()] = true;\n        recursed2[(other).$__id__()] = true;\n\n        for (key in struct.$$data) {\n          a = struct.$$data[key];\n          b = other.$$data[key];\n\n          if ($$($nesting, 'Struct')['$==='](a)) {\n            if (!recursed1.hasOwnProperty((a).$__id__()) || !recursed2.hasOwnProperty((b).$__id__())) {\n              if (!_eqeq(a, b)) {\n                return false;\n              }\n            }\n          } else {\n            if (!(a)['$=='](b)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      return _eqeq(self, other);\n    ;\n    }, $Struct_$eq_eq$19.$$arity = 1);\n    \n    Opal.def(self, '$eql?', $Struct_eql$ques$20 = function(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$instance_of?'](self.$class()))) {\n      } else {\n        return false\n      };\n      \n      var recursed1 = {}, recursed2 = {};\n\n      function _eqeq(struct, other) {\n        var key, a, b;\n\n        recursed1[(struct).$__id__()] = true;\n        recursed2[(other).$__id__()] = true;\n\n        for (key in struct.$$data) {\n          a = struct.$$data[key];\n          b = other.$$data[key];\n\n          if ($$($nesting, 'Struct')['$==='](a)) {\n            if (!recursed1.hasOwnProperty((a).$__id__()) || !recursed2.hasOwnProperty((b).$__id__())) {\n              if (!_eqeq(a, b)) {\n                return false;\n              }\n            }\n          } else {\n            if (!(a)['$eql?'](b)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      return _eqeq(self, other);\n    ;\n    }, $Struct_eql$ques$20.$$arity = 1);\n    \n    Opal.def(self, '$each', $Struct_each$21 = function $$each() {\n      var $$22, $$23, $iter = $Struct_each$21.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Struct_each$21.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each\"], ($$22 = function(){var self = $$22.$$s || this;\n\n        return self.$size()}, $$22.$$s = self, $$22.$$arity = 0, $$22))\n      };\n      $send(self.$class().$members(), 'each', [], ($$23 = function(name){var self = $$23.$$s || this;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        return Opal.yield1($yield, self['$[]'](name));;}, $$23.$$s = self, $$23.$$arity = 1, $$23));\n      return self;\n    }, $Struct_each$21.$$arity = 0);\n    \n    Opal.def(self, '$each_pair', $Struct_each_pair$24 = function $$each_pair() {\n      var $$25, $$26, $iter = $Struct_each_pair$24.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Struct_each_pair$24.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_pair\"], ($$25 = function(){var self = $$25.$$s || this;\n\n        return self.$size()}, $$25.$$s = self, $$25.$$arity = 0, $$25))\n      };\n      $send(self.$class().$members(), 'each', [], ($$26 = function(name){var self = $$26.$$s || this;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        return Opal.yield1($yield, [name, self['$[]'](name)]);;}, $$26.$$s = self, $$26.$$arity = 1, $$26));\n      return self;\n    }, $Struct_each_pair$24.$$arity = 0);\n    \n    Opal.def(self, '$length', $Struct_length$27 = function $$length() {\n      var self = this;\n\n      return self.$class().$members().$length()\n    }, $Struct_length$27.$$arity = 0);\n    Opal.alias(self, \"size\", \"length\");\n    \n    Opal.def(self, '$to_a', $Struct_to_a$28 = function $$to_a() {\n      var $$29, self = this;\n\n      return $send(self.$class().$members(), 'map', [], ($$29 = function(name){var self = $$29.$$s || this;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        return self['$[]'](name);}, $$29.$$s = self, $$29.$$arity = 1, $$29))\n    }, $Struct_to_a$28.$$arity = 0);\n    Opal.alias(self, \"values\", \"to_a\");\n    \n    Opal.def(self, '$inspect', $Struct_inspect$30 = function $$inspect() {\n      var $a, $$31, self = this, result = nil;\n\n      \n      result = \"#<struct \";\n      if ($truthy(($truthy($a = $$($nesting, 'Struct')['$==='](self)) ? self.$class().$name() : $a))) {\n        result = $rb_plus(result, \"\" + (self.$class()) + \" \")};\n      result = $rb_plus(result, $send(self.$each_pair(), 'map', [], ($$31 = function(name, value){var self = $$31.$$s || this;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        \n        if (value == null) {\n          value = nil;\n        };\n        return \"\" + (name) + \"=\" + (value.$inspect());}, $$31.$$s = self, $$31.$$arity = 2, $$31)).$join(\", \"));\n      result = $rb_plus(result, \">\");\n      return result;\n    }, $Struct_inspect$30.$$arity = 0);\n    Opal.alias(self, \"to_s\", \"inspect\");\n    \n    Opal.def(self, '$to_h', $Struct_to_h$32 = function $$to_h() {\n      var $$33, self = this;\n\n      return $send(self.$class().$members(), 'each_with_object', [$hash2([], {})], ($$33 = function(name, h){var self = $$33.$$s || this, $writer = nil;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        \n        if (h == null) {\n          h = nil;\n        };\n        $writer = [name, self['$[]'](name)];\n        $send(h, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];}, $$33.$$s = self, $$33.$$arity = 2, $$33))\n    }, $Struct_to_h$32.$$arity = 0);\n    \n    Opal.def(self, '$values_at', $Struct_values_at$34 = function $$values_at($a) {\n      var $post_args, args, $$35, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      args = $send(args, 'map', [], ($$35 = function(arg){var self = $$35.$$s || this;\n\n      \n        \n        if (arg == null) {\n          arg = nil;\n        };\n        return arg.$$is_range ? arg.$to_a() : arg;}, $$35.$$s = self, $$35.$$arity = 1, $$35)).$flatten();\n      \n      var result = [];\n      for (var i = 0, len = args.length; i < len; i++) {\n        if (!args[i].$$is_number) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"no implicit conversion of \" + ((args[i]).$class()) + \" into Integer\")\n        }\n        result.push(self['$[]'](args[i]));\n      }\n      return result;\n    ;\n    }, $Struct_values_at$34.$$arity = -1);\n    return (Opal.def(self, '$dig', $Struct_dig$36 = function $$dig(key, $a) {\n      var $post_args, keys, self = this, item = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      keys = $post_args;;\n      item = (function() {if ($truthy(key.$$is_string && self.$$data.hasOwnProperty(key))) {\n        return self.$$data[key] || nil;\n      } else {\n        return nil\n      }; return nil; })();\n      \n      if (item === nil || keys.length === 0) {\n        return item;\n      }\n    ;\n      if ($truthy(item['$respond_to?'](\"dig\"))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + (item.$class()) + \" does not have #dig method\")\n      };\n      return $send(item, 'dig', Opal.to_a(keys));\n    }, $Struct_dig$36.$$arity = -2), nil) && 'dig';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/io\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $module = Opal.module, $send = Opal.send, $gvars = Opal.gvars, $truthy = Opal.truthy, $writer = nil;\n\n  Opal.add_stubs(['$attr_accessor', '$size', '$write', '$join', '$map', '$String', '$empty?', '$concat', '$chomp', '$getbyte', '$getc', '$raise', '$new', '$write_proc=', '$-', '$extend']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'IO');\n\n    var $nesting = [self].concat($parent_nesting), $IO_tty$ques$1, $IO_closed$ques$2, $IO_write$3, $IO_flush$4;\n\n    self.$$prototype.tty = self.$$prototype.closed = nil;\n    \n    Opal.const_set($nesting[0], 'SEEK_SET', 0);\n    Opal.const_set($nesting[0], 'SEEK_CUR', 1);\n    Opal.const_set($nesting[0], 'SEEK_END', 2);\n    \n    Opal.def(self, '$tty?', $IO_tty$ques$1 = function() {\n      var self = this;\n\n      return self.tty\n    }, $IO_tty$ques$1.$$arity = 0);\n    \n    Opal.def(self, '$closed?', $IO_closed$ques$2 = function() {\n      var self = this;\n\n      return self.closed\n    }, $IO_closed$ques$2.$$arity = 0);\n    self.$attr_accessor(\"write_proc\");\n    \n    Opal.def(self, '$write', $IO_write$3 = function $$write(string) {\n      var self = this;\n\n      \n      self.write_proc(string);\n      return string.$size();\n    }, $IO_write$3.$$arity = 1);\n    self.$attr_accessor(\"sync\", \"tty\");\n    \n    Opal.def(self, '$flush', $IO_flush$4 = function $$flush() {\n      var self = this;\n\n      return nil\n    }, $IO_flush$4.$$arity = 0);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Writable');\n\n      var $nesting = [self].concat($parent_nesting), $Writable_$lt$lt$5, $Writable_print$6, $Writable_puts$8;\n\n      \n      \n      Opal.def(self, '$<<', $Writable_$lt$lt$5 = function(string) {\n        var self = this;\n\n        \n        self.$write(string);\n        return self;\n      }, $Writable_$lt$lt$5.$$arity = 1);\n      \n      Opal.def(self, '$print', $Writable_print$6 = function $$print($a) {\n        var $post_args, args, $$7, self = this;\n        if ($gvars[\",\"] == null) $gvars[\",\"] = nil;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        self.$write($send(args, 'map', [], ($$7 = function(arg){var self = $$7.$$s || this;\n\n        \n          \n          if (arg == null) {\n            arg = nil;\n          };\n          return self.$String(arg);}, $$7.$$s = self, $$7.$$arity = 1, $$7)).$join($gvars[\",\"]));\n        return nil;\n      }, $Writable_print$6.$$arity = -1);\n      \n      Opal.def(self, '$puts', $Writable_puts$8 = function $$puts($a) {\n        var $post_args, args, $$9, self = this, newline = nil;\n        if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        newline = $gvars[\"/\"];\n        if ($truthy(args['$empty?']())) {\n          self.$write($gvars[\"/\"])\n        } else {\n          self.$write($send(args, 'map', [], ($$9 = function(arg){var self = $$9.$$s || this;\n\n          \n            \n            if (arg == null) {\n              arg = nil;\n            };\n            return self.$String(arg).$chomp();}, $$9.$$s = self, $$9.$$arity = 1, $$9)).$concat([nil]).$join(newline))\n        };\n        return nil;\n      }, $Writable_puts$8.$$arity = -1);\n    })($nesting[0], $nesting);\n    return (function($base, $parent_nesting) {\n      var self = $module($base, 'Readable');\n\n      var $nesting = [self].concat($parent_nesting), $Readable_readbyte$10, $Readable_readchar$11, $Readable_readline$12, $Readable_readpartial$13;\n\n      \n      \n      Opal.def(self, '$readbyte', $Readable_readbyte$10 = function $$readbyte() {\n        var self = this;\n\n        return self.$getbyte()\n      }, $Readable_readbyte$10.$$arity = 0);\n      \n      Opal.def(self, '$readchar', $Readable_readchar$11 = function $$readchar() {\n        var self = this;\n\n        return self.$getc()\n      }, $Readable_readchar$11.$$arity = 0);\n      \n      Opal.def(self, '$readline', $Readable_readline$12 = function $$readline(sep) {\n        var self = this;\n        if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n        \n        \n        if (sep == null) {\n          sep = $gvars[\"/\"];\n        };\n        return self.$raise($$($nesting, 'NotImplementedError'));\n      }, $Readable_readline$12.$$arity = -1);\n      \n      Opal.def(self, '$readpartial', $Readable_readpartial$13 = function $$readpartial(integer, outbuf) {\n        var self = this;\n\n        \n        \n        if (outbuf == null) {\n          outbuf = nil;\n        };\n        return self.$raise($$($nesting, 'NotImplementedError'));\n      }, $Readable_readpartial$13.$$arity = -2);\n    })($nesting[0], $nesting);\n  })($nesting[0], null, $nesting);\n  Opal.const_set($nesting[0], 'STDERR', ($gvars.stderr = $$($nesting, 'IO').$new()));\n  Opal.const_set($nesting[0], 'STDIN', ($gvars.stdin = $$($nesting, 'IO').$new()));\n  Opal.const_set($nesting[0], 'STDOUT', ($gvars.stdout = $$($nesting, 'IO').$new()));\n  var console = Opal.global.console;\n  \n  $writer = [typeof(process) === 'object' && typeof(process.stdout) === 'object' ? function(s){process.stdout.write(s)} : function(s){console.log(s)}];\n  $send($$($nesting, 'STDOUT'), 'write_proc=', Opal.to_a($writer));\n  $writer[$rb_minus($writer[\"length\"], 1)];;\n  \n  $writer = [typeof(process) === 'object' && typeof(process.stderr) === 'object' ? function(s){process.stderr.write(s)} : function(s){console.warn(s)}];\n  $send($$($nesting, 'STDERR'), 'write_proc=', Opal.to_a($writer));\n  $writer[$rb_minus($writer[\"length\"], 1)];;\n  $$($nesting, 'STDOUT').$extend($$$($$($nesting, 'IO'), 'Writable'));\n  return $$($nesting, 'STDERR').$extend($$$($$($nesting, 'IO'), 'Writable'));\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/main\"] = function(Opal) {\n  var $to_s$1, $include$2, self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$include']);\n  \n  Opal.defs(self, '$to_s', $to_s$1 = function $$to_s() {\n    var self = this;\n\n    return \"main\"\n  }, $to_s$1.$$arity = 0);\n  return (Opal.defs(self, '$include', $include$2 = function $$include(mod) {\n    var self = this;\n\n    return $$($nesting, 'Object').$include(mod)\n  }, $include$2.$$arity = 1), nil) && 'include';\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/dir\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$[]']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Dir');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $chdir$1, $pwd$2, $home$3;\n\n      \n      \n      Opal.def(self, '$chdir', $chdir$1 = function $$chdir(dir) {\n        var $iter = $chdir$1.$$p, $yield = $iter || nil, self = this, prev_cwd = nil;\n\n        if ($iter) $chdir$1.$$p = null;\n        return (function() { try {\n        \n        prev_cwd = Opal.current_dir;\n        Opal.current_dir = dir;\n        return Opal.yieldX($yield, []);;\n        } finally {\n          Opal.current_dir = prev_cwd\n        }; })()\n      }, $chdir$1.$$arity = 1);\n      \n      Opal.def(self, '$pwd', $pwd$2 = function $$pwd() {\n        var self = this;\n\n        return Opal.current_dir || '.';\n      }, $pwd$2.$$arity = 0);\n      Opal.alias(self, \"getwd\", \"pwd\");\n      return (Opal.def(self, '$home', $home$3 = function $$home() {\n        var $a, self = this;\n\n        return ($truthy($a = $$($nesting, 'ENV')['$[]'](\"HOME\")) ? $a : \".\")\n      }, $home$3.$$arity = 0), nil) && 'home';\n    })(Opal.get_singleton_class(self), $nesting)\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/file\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $range = Opal.range, $send = Opal.send;\n\n  Opal.add_stubs(['$respond_to?', '$to_path', '$pwd', '$split', '$sub', '$+', '$unshift', '$join', '$home', '$raise', '$start_with?', '$absolute_path', '$coerce_to!', '$basename', '$empty?', '$rindex', '$[]', '$nil?', '$==', '$-', '$length', '$gsub', '$find', '$=~', '$map', '$each_with_index', '$flatten', '$reject', '$to_proc', '$end_with?']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'File');\n\n    var $nesting = [self].concat($parent_nesting), windows_root_rx = nil;\n\n    \n    Opal.const_set($nesting[0], 'Separator', Opal.const_set($nesting[0], 'SEPARATOR', \"/\"));\n    Opal.const_set($nesting[0], 'ALT_SEPARATOR', nil);\n    Opal.const_set($nesting[0], 'PATH_SEPARATOR', \":\");\n    Opal.const_set($nesting[0], 'FNM_SYSCASE', 0);\n    windows_root_rx = /^[a-zA-Z]:(?:\\\\|\\/)/;\n    return (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $absolute_path$1, $expand_path$2, $dirname$3, $basename$4, $extname$5, $exist$ques$6, $directory$ques$7, $join$9, $split$12;\n\n      \n      \n      Opal.def(self, '$absolute_path', $absolute_path$1 = function $$absolute_path(path, basedir) {\n        var $a, self = this, sep = nil, sep_chars = nil, new_parts = nil, path_abs = nil, basedir_abs = nil, parts = nil, leading_sep = nil, abs = nil, new_path = nil;\n\n        \n        \n        if (basedir == null) {\n          basedir = nil;\n        };\n        sep = $$($nesting, 'SEPARATOR');\n        sep_chars = $sep_chars();\n        new_parts = [];\n        path = (function() {if ($truthy(path['$respond_to?'](\"to_path\"))) {\n          return path.$to_path()\n        } else {\n          return path\n        }; return nil; })();\n        basedir = ($truthy($a = basedir) ? $a : $$($nesting, 'Dir').$pwd());\n        path_abs = path.substr(0, sep.length) === sep || windows_root_rx.test(path);\n        basedir_abs = basedir.substr(0, sep.length) === sep || windows_root_rx.test(basedir);\n        if ($truthy(path_abs)) {\n          \n          parts = path.$split(new RegExp(\"\" + \"[\" + (sep_chars) + \"]\"));\n          leading_sep = windows_root_rx.test(path) ? '' : path.$sub(new RegExp(\"\" + \"^([\" + (sep_chars) + \"]+).*$\"), \"\\\\1\");\n          abs = true;\n        } else {\n          \n          parts = $rb_plus(basedir.$split(new RegExp(\"\" + \"[\" + (sep_chars) + \"]\")), path.$split(new RegExp(\"\" + \"[\" + (sep_chars) + \"]\")));\n          leading_sep = windows_root_rx.test(basedir) ? '' : basedir.$sub(new RegExp(\"\" + \"^([\" + (sep_chars) + \"]+).*$\"), \"\\\\1\");\n          abs = basedir_abs;\n        };\n        \n        var part;\n        for (var i = 0, ii = parts.length; i < ii; i++) {\n          part = parts[i];\n\n          if (\n            (part === nil) ||\n            (part === ''  && ((new_parts.length === 0) || abs)) ||\n            (part === '.' && ((new_parts.length === 0) || abs))\n          ) {\n            continue;\n          }\n          if (part === '..') {\n            new_parts.pop();\n          } else {\n            new_parts.push(part);\n          }\n        }\n\n        if (!abs && parts[0] !== '.') {\n          new_parts.$unshift(\".\")\n        }\n      ;\n        new_path = new_parts.$join(sep);\n        if ($truthy(abs)) {\n          new_path = $rb_plus(leading_sep, new_path)};\n        return new_path;\n      }, $absolute_path$1.$$arity = -2);\n      \n      Opal.def(self, '$expand_path', $expand_path$2 = function $$expand_path(path, basedir) {\n        var self = this, sep = nil, sep_chars = nil, home = nil, leading_sep = nil, home_path_regexp = nil;\n\n        \n        \n        if (basedir == null) {\n          basedir = nil;\n        };\n        sep = $$($nesting, 'SEPARATOR');\n        sep_chars = $sep_chars();\n        if ($truthy(path[0] === '~' || (basedir && basedir[0] === '~'))) {\n          \n          home = $$($nesting, 'Dir').$home();\n          if ($truthy(home)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"couldn't find HOME environment -- expanding `~'\")\n          };\n          leading_sep = windows_root_rx.test(home) ? '' : home.$sub(new RegExp(\"\" + \"^([\" + (sep_chars) + \"]+).*$\"), \"\\\\1\");\n          if ($truthy(home['$start_with?'](leading_sep))) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"non-absolute home\")\n          };\n          home = $rb_plus(home, sep);\n          home_path_regexp = new RegExp(\"\" + \"^\\\\~(?:\" + (sep) + \"|$)\");\n          path = path.$sub(home_path_regexp, home);\n          if ($truthy(basedir)) {\n            basedir = basedir.$sub(home_path_regexp, home)};};\n        return self.$absolute_path(path, basedir);\n      }, $expand_path$2.$$arity = -2);\n      Opal.alias(self, \"realpath\", \"expand_path\");\n      \n      // Coerce a given path to a path string using #to_path and #to_str\n      function $coerce_to_path(path) {\n        if ($truthy((path)['$respond_to?'](\"to_path\"))) {\n          path = path.$to_path();\n        }\n\n        path = $$($nesting, 'Opal')['$coerce_to!'](path, $$($nesting, 'String'), \"to_str\");\n\n        return path;\n      }\n\n      // Return a RegExp compatible char class\n      function $sep_chars() {\n        if ($$($nesting, 'ALT_SEPARATOR') === nil) {\n          return Opal.escape_regexp($$($nesting, 'SEPARATOR'));\n        } else {\n          return Opal.escape_regexp($rb_plus($$($nesting, 'SEPARATOR'), $$($nesting, 'ALT_SEPARATOR')));\n        }\n      }\n    ;\n      \n      Opal.def(self, '$dirname', $dirname$3 = function $$dirname(path) {\n        var self = this, sep_chars = nil;\n\n        \n        sep_chars = $sep_chars();\n        path = $coerce_to_path(path);\n        \n        var absolute = path.match(new RegExp(\"\" + \"^[\" + (sep_chars) + \"]\"));\n\n        path = path.replace(new RegExp(\"\" + \"[\" + (sep_chars) + \"]+$\"), ''); // remove trailing separators\n        path = path.replace(new RegExp(\"\" + \"[^\" + (sep_chars) + \"]+$\"), ''); // remove trailing basename\n        path = path.replace(new RegExp(\"\" + \"[\" + (sep_chars) + \"]+$\"), ''); // remove final trailing separators\n\n        if (path === '') {\n          return absolute ? '/' : '.';\n        }\n\n        return path;\n      ;\n      }, $dirname$3.$$arity = 1);\n      \n      Opal.def(self, '$basename', $basename$4 = function $$basename(name, suffix) {\n        var self = this, sep_chars = nil;\n\n        \n        \n        if (suffix == null) {\n          suffix = nil;\n        };\n        sep_chars = $sep_chars();\n        name = $coerce_to_path(name);\n        \n        if (name.length == 0) {\n          return name;\n        }\n\n        if (suffix !== nil) {\n          suffix = $$($nesting, 'Opal')['$coerce_to!'](suffix, $$($nesting, 'String'), \"to_str\")\n        } else {\n          suffix = null;\n        }\n\n        name = name.replace(new RegExp(\"\" + \"(.)[\" + (sep_chars) + \"]*$\"), '$1');\n        name = name.replace(new RegExp(\"\" + \"^(?:.*[\" + (sep_chars) + \"])?([^\" + (sep_chars) + \"]+)$\"), '$1');\n\n        if (suffix === \".*\") {\n          name = name.replace(/\\.[^\\.]+$/, '');\n        } else if(suffix !== null) {\n          suffix = Opal.escape_regexp(suffix);\n          name = name.replace(new RegExp(\"\" + (suffix) + \"$\"), '');\n        }\n\n        return name;\n      ;\n      }, $basename$4.$$arity = -2);\n      \n      Opal.def(self, '$extname', $extname$5 = function $$extname(path) {\n        var $a, self = this, filename = nil, last_dot_idx = nil;\n\n        \n        path = $coerce_to_path(path);\n        filename = self.$basename(path);\n        if ($truthy(filename['$empty?']())) {\n          return \"\"};\n        last_dot_idx = filename['$[]']($range(1, -1, false)).$rindex(\".\");\n        if ($truthy(($truthy($a = last_dot_idx['$nil?']()) ? $a : $rb_plus(last_dot_idx, 1)['$==']($rb_minus(filename.$length(), 1))))) {\n          return \"\"\n        } else {\n          return filename['$[]'](Opal.Range.$new($rb_plus(last_dot_idx, 1), -1, false))\n        };\n      }, $extname$5.$$arity = 1);\n      \n      Opal.def(self, '$exist?', $exist$ques$6 = function(path) {\n        var self = this;\n\n        return Opal.modules[path] != null\n      }, $exist$ques$6.$$arity = 1);\n      Opal.alias(self, \"exists?\", \"exist?\");\n      \n      Opal.def(self, '$directory?', $directory$ques$7 = function(path) {\n        var $$8, self = this, files = nil, file = nil;\n\n        \n        files = [];\n        \n        for (var key in Opal.modules) {\n          files.push(key)\n        }\n      ;\n        path = path.$gsub(new RegExp(\"\" + \"(^.\" + ($$($nesting, 'SEPARATOR')) + \"+|\" + ($$($nesting, 'SEPARATOR')) + \"+$)\"));\n        file = $send(files, 'find', [], ($$8 = function(f){var self = $$8.$$s || this;\n\n        \n          \n          if (f == null) {\n            f = nil;\n          };\n          return f['$=~'](new RegExp(\"\" + \"^\" + (path)));}, $$8.$$s = self, $$8.$$arity = 1, $$8));\n        return file;\n      }, $directory$ques$7.$$arity = 1);\n      \n      Opal.def(self, '$join', $join$9 = function $$join($a) {\n        var $post_args, paths, $$10, $$11, self = this, result = nil;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        paths = $post_args;;\n        if ($truthy(paths['$empty?']())) {\n          return \"\"};\n        result = \"\";\n        paths = $send(paths.$flatten().$each_with_index(), 'map', [], ($$10 = function(item, index){var self = $$10.$$s || this, $b;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          \n          if (index == null) {\n            index = nil;\n          };\n          if ($truthy((($b = index['$=='](0)) ? item['$empty?']() : index['$=='](0)))) {\n            return $$($nesting, 'SEPARATOR')\n          } else if ($truthy((($b = paths.$length()['$==']($rb_plus(index, 1))) ? item['$empty?']() : paths.$length()['$==']($rb_plus(index, 1))))) {\n            return $$($nesting, 'SEPARATOR')\n          } else {\n            return item\n          };}, $$10.$$s = self, $$10.$$arity = 2, $$10));\n        paths = $send(paths, 'reject', [], \"empty?\".$to_proc());\n        $send(paths, 'each_with_index', [], ($$11 = function(item, index){var self = $$11.$$s || this, $b, next_item = nil;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          \n          if (index == null) {\n            index = nil;\n          };\n          next_item = paths['$[]']($rb_plus(index, 1));\n          if ($truthy(next_item['$nil?']())) {\n            return (result = \"\" + (result) + (item))\n          } else {\n            \n            if ($truthy(($truthy($b = item['$end_with?']($$($nesting, 'SEPARATOR'))) ? next_item['$start_with?']($$($nesting, 'SEPARATOR')) : $b))) {\n              item = item.$sub(new RegExp(\"\" + ($$($nesting, 'SEPARATOR')) + \"+$\"), \"\")};\n            return (result = (function() {if ($truthy(($truthy($b = item['$end_with?']($$($nesting, 'SEPARATOR'))) ? $b : next_item['$start_with?']($$($nesting, 'SEPARATOR'))))) {\n              return \"\" + (result) + (item)\n            } else {\n              return \"\" + (result) + (item) + ($$($nesting, 'SEPARATOR'))\n            }; return nil; })());\n          };}, $$11.$$s = self, $$11.$$arity = 2, $$11));\n        return result;\n      }, $join$9.$$arity = -1);\n      return (Opal.def(self, '$split', $split$12 = function $$split(path) {\n        var self = this;\n\n        return path.$split($$($nesting, 'SEPARATOR'))\n      }, $split$12.$$arity = 1), nil) && 'split';\n    })(Opal.get_singleton_class(self), $nesting);\n  })($nesting[0], $$($nesting, 'IO'), $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/process\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$const_set', '$size', '$<<', '$__register_clock__', '$to_f', '$now', '$new', '$[]', '$raise']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Process');\n\n    var $nesting = [self].concat($parent_nesting), $Process___register_clock__$1, $Process_pid$2, $Process_times$3, $Process_clock_gettime$4, monotonic = nil;\n\n    \n    self.__clocks__ = [];\n    Opal.defs(self, '$__register_clock__', $Process___register_clock__$1 = function $$__register_clock__(name, func) {\n      var self = this;\n      if (self.__clocks__ == null) self.__clocks__ = nil;\n\n      \n      self.$const_set(name, self.__clocks__.$size());\n      return self.__clocks__['$<<'](func);\n    }, $Process___register_clock__$1.$$arity = 2);\n    self.$__register_clock__(\"CLOCK_REALTIME\", function() { return Date.now() });\n    monotonic = false;\n    \n    if (Opal.global.performance) {\n      monotonic = function() {\n        return performance.now()\n      };\n    }\n    else if (Opal.global.process && process.hrtime) {\n      // let now be the base to get smaller numbers\n      var hrtime_base = process.hrtime();\n\n      monotonic = function() {\n        var hrtime = process.hrtime(hrtime_base);\n        var us = (hrtime[1] / 1000) | 0; // cut below microsecs;\n        return ((hrtime[0] * 1000) + (us / 1000));\n      };\n    }\n  ;\n    if ($truthy(monotonic)) {\n      self.$__register_clock__(\"CLOCK_MONOTONIC\", monotonic)};\n    Opal.defs(self, '$pid', $Process_pid$2 = function $$pid() {\n      var self = this;\n\n      return 0\n    }, $Process_pid$2.$$arity = 0);\n    Opal.defs(self, '$times', $Process_times$3 = function $$times() {\n      var self = this, t = nil;\n\n      \n      t = $$($nesting, 'Time').$now().$to_f();\n      return $$$($$($nesting, 'Benchmark'), 'Tms').$new(t, t, t, t, t);\n    }, $Process_times$3.$$arity = 0);\n    return (Opal.defs(self, '$clock_gettime', $Process_clock_gettime$4 = function $$clock_gettime(clock_id, unit) {\n      var $a, self = this, clock = nil;\n      if (self.__clocks__ == null) self.__clocks__ = nil;\n\n      \n      \n      if (unit == null) {\n        unit = \"float_second\";\n      };\n      ($truthy($a = (clock = self.__clocks__['$[]'](clock_id))) ? $a : self.$raise($$$($$($nesting, 'Errno'), 'EINVAL'), \"\" + \"clock_gettime(\" + (clock_id) + \") \" + (self.__clocks__['$[]'](clock_id))));\n      \n      var ms = clock();\n      switch (unit) {\n        case 'float_second':      return  (ms / 1000);         // number of seconds as a float (default)\n        case 'float_millisecond': return  (ms / 1);            // number of milliseconds as a float\n        case 'float_microsecond': return  (ms * 1000);         // number of microseconds as a float\n        case 'second':            return ((ms / 1000)    | 0); // number of seconds as an integer\n        case 'millisecond':       return ((ms / 1)       | 0); // number of milliseconds as an integer\n        case 'microsecond':       return ((ms * 1000)    | 0); // number of microseconds as an integer\n        case 'nanosecond':        return ((ms * 1000000) | 0); // number of nanoseconds as an integer\n        default: self.$raise($$($nesting, 'ArgumentError'), \"\" + \"unexpected unit: \" + (unit))\n      }\n    ;\n    }, $Process_clock_gettime$4.$$arity = -2), nil) && 'clock_gettime';\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Signal');\n\n    var $nesting = [self].concat($parent_nesting), $Signal_trap$5;\n\n    return (Opal.defs(self, '$trap', $Signal_trap$5 = function $$trap($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Signal_trap$5.$$arity = -1), nil) && 'trap'\n  })($nesting[0], null, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'GC');\n\n    var $nesting = [self].concat($parent_nesting), $GC_start$6;\n\n    return (Opal.defs(self, '$start', $GC_start$6 = function $$start() {\n      var self = this;\n\n      return nil\n    }, $GC_start$6.$$arity = 0), nil) && 'start'\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/unsupported\"] = function(Opal) {\n  var $public$35, $private$36, self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $module = Opal.module;\n\n  Opal.add_stubs(['$raise', '$warn', '$%']);\n  \n  \n  var warnings = {};\n\n  function handle_unsupported_feature(message) {\n    switch (Opal.config.unsupported_features_severity) {\n    case 'error':\n      $$($nesting, 'Kernel').$raise($$($nesting, 'NotImplementedError'), message)\n      break;\n    case 'warning':\n      warn(message)\n      break;\n    default: // ignore\n      // noop\n    }\n  }\n\n  function warn(string) {\n    if (warnings[string]) {\n      return;\n    }\n\n    warnings[string] = true;\n    self.$warn(string);\n  }\n;\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting), $String_$lt$lt$1, $String_capitalize$excl$2, $String_chomp$excl$3, $String_chop$excl$4, $String_downcase$excl$5, $String_gsub$excl$6, $String_lstrip$excl$7, $String_next$excl$8, $String_reverse$excl$9, $String_slice$excl$10, $String_squeeze$excl$11, $String_strip$excl$12, $String_sub$excl$13, $String_succ$excl$14, $String_swapcase$excl$15, $String_tr$excl$16, $String_tr_s$excl$17, $String_upcase$excl$18, $String_prepend$19, $String_$$$eq$20, $String_clear$21, $String_encode$excl$22, $String_unicode_normalize$excl$23;\n\n    \n    var ERROR = \"String#%s not supported. Mutable String methods are not supported in Opal.\";\n    \n    Opal.def(self, '$<<', $String_$lt$lt$1 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"<<\"));\n    }, $String_$lt$lt$1.$$arity = -1);\n    \n    Opal.def(self, '$capitalize!', $String_capitalize$excl$2 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"capitalize!\"));\n    }, $String_capitalize$excl$2.$$arity = -1);\n    \n    Opal.def(self, '$chomp!', $String_chomp$excl$3 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"chomp!\"));\n    }, $String_chomp$excl$3.$$arity = -1);\n    \n    Opal.def(self, '$chop!', $String_chop$excl$4 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"chop!\"));\n    }, $String_chop$excl$4.$$arity = -1);\n    \n    Opal.def(self, '$downcase!', $String_downcase$excl$5 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"downcase!\"));\n    }, $String_downcase$excl$5.$$arity = -1);\n    \n    Opal.def(self, '$gsub!', $String_gsub$excl$6 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"gsub!\"));\n    }, $String_gsub$excl$6.$$arity = -1);\n    \n    Opal.def(self, '$lstrip!', $String_lstrip$excl$7 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"lstrip!\"));\n    }, $String_lstrip$excl$7.$$arity = -1);\n    \n    Opal.def(self, '$next!', $String_next$excl$8 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"next!\"));\n    }, $String_next$excl$8.$$arity = -1);\n    \n    Opal.def(self, '$reverse!', $String_reverse$excl$9 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"reverse!\"));\n    }, $String_reverse$excl$9.$$arity = -1);\n    \n    Opal.def(self, '$slice!', $String_slice$excl$10 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"slice!\"));\n    }, $String_slice$excl$10.$$arity = -1);\n    \n    Opal.def(self, '$squeeze!', $String_squeeze$excl$11 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"squeeze!\"));\n    }, $String_squeeze$excl$11.$$arity = -1);\n    \n    Opal.def(self, '$strip!', $String_strip$excl$12 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"strip!\"));\n    }, $String_strip$excl$12.$$arity = -1);\n    \n    Opal.def(self, '$sub!', $String_sub$excl$13 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"sub!\"));\n    }, $String_sub$excl$13.$$arity = -1);\n    \n    Opal.def(self, '$succ!', $String_succ$excl$14 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"succ!\"));\n    }, $String_succ$excl$14.$$arity = -1);\n    \n    Opal.def(self, '$swapcase!', $String_swapcase$excl$15 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"swapcase!\"));\n    }, $String_swapcase$excl$15.$$arity = -1);\n    \n    Opal.def(self, '$tr!', $String_tr$excl$16 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"tr!\"));\n    }, $String_tr$excl$16.$$arity = -1);\n    \n    Opal.def(self, '$tr_s!', $String_tr_s$excl$17 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"tr_s!\"));\n    }, $String_tr_s$excl$17.$$arity = -1);\n    \n    Opal.def(self, '$upcase!', $String_upcase$excl$18 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"upcase!\"));\n    }, $String_upcase$excl$18.$$arity = -1);\n    \n    Opal.def(self, '$prepend', $String_prepend$19 = function $$prepend($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"prepend\"));\n    }, $String_prepend$19.$$arity = -1);\n    \n    Opal.def(self, '$[]=', $String_$$$eq$20 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"[]=\"));\n    }, $String_$$$eq$20.$$arity = -1);\n    \n    Opal.def(self, '$clear', $String_clear$21 = function $$clear($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"clear\"));\n    }, $String_clear$21.$$arity = -1);\n    \n    Opal.def(self, '$encode!', $String_encode$excl$22 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"encode!\"));\n    }, $String_encode$excl$22.$$arity = -1);\n    return (Opal.def(self, '$unicode_normalize!', $String_unicode_normalize$excl$23 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"unicode_normalize!\"));\n    }, $String_unicode_normalize$excl$23.$$arity = -1), nil) && 'unicode_normalize!';\n  })($nesting[0], null, $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_freeze$24, $Kernel_frozen$ques$25;\n\n    \n    var ERROR = \"Object freezing is not supported by Opal\";\n    \n    Opal.def(self, '$freeze', $Kernel_freeze$24 = function $$freeze() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return self;\n    }, $Kernel_freeze$24.$$arity = 0);\n    \n    Opal.def(self, '$frozen?', $Kernel_frozen$ques$25 = function() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return false;\n    }, $Kernel_frozen$ques$25.$$arity = 0);\n  })($nesting[0], $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_taint$26, $Kernel_untaint$27, $Kernel_tainted$ques$28;\n\n    \n    var ERROR = \"Object tainting is not supported by Opal\";\n    \n    Opal.def(self, '$taint', $Kernel_taint$26 = function $$taint() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return self;\n    }, $Kernel_taint$26.$$arity = 0);\n    \n    Opal.def(self, '$untaint', $Kernel_untaint$27 = function $$untaint() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return self;\n    }, $Kernel_untaint$27.$$arity = 0);\n    \n    Opal.def(self, '$tainted?', $Kernel_tainted$ques$28 = function() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return false;\n    }, $Kernel_tainted$ques$28.$$arity = 0);\n  })($nesting[0], $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Module');\n\n    var $nesting = [self].concat($parent_nesting), $Module_public$29, $Module_private_class_method$30, $Module_private_method_defined$ques$31, $Module_private_constant$32;\n\n    \n    \n    Opal.def(self, '$public', $Module_public$29 = function($a) {\n      var $post_args, methods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      methods = $post_args;;\n      \n      if (methods.length === 0) {\n        self.$$module_function = false;\n      }\n\n      return nil;\n    ;\n    }, $Module_public$29.$$arity = -1);\n    Opal.alias(self, \"private\", \"public\");\n    Opal.alias(self, \"protected\", \"public\");\n    Opal.alias(self, \"nesting\", \"public\");\n    \n    Opal.def(self, '$private_class_method', $Module_private_class_method$30 = function $$private_class_method($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self;\n    }, $Module_private_class_method$30.$$arity = -1);\n    Opal.alias(self, \"public_class_method\", \"private_class_method\");\n    \n    Opal.def(self, '$private_method_defined?', $Module_private_method_defined$ques$31 = function(obj) {\n      var self = this;\n\n      return false\n    }, $Module_private_method_defined$ques$31.$$arity = 1);\n    \n    Opal.def(self, '$private_constant', $Module_private_constant$32 = function $$private_constant($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Module_private_constant$32.$$arity = -1);\n    Opal.alias(self, \"protected_method_defined?\", \"private_method_defined?\");\n    Opal.alias(self, \"public_instance_methods\", \"instance_methods\");\n    Opal.alias(self, \"public_instance_method\", \"instance_method\");\n    return Opal.alias(self, \"public_method_defined?\", \"method_defined?\");\n  })($nesting[0], null, $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_private_methods$33;\n\n    \n    \n    Opal.def(self, '$private_methods', $Kernel_private_methods$33 = function $$private_methods($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return [];\n    }, $Kernel_private_methods$33.$$arity = -1);\n    Opal.alias(self, \"private_instance_methods\", \"private_methods\");\n  })($nesting[0], $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_eval$34;\n\n    \n    Opal.def(self, '$eval', $Kernel_eval$34 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), \"\" + \"To use Kernel#eval, you must first require 'opal-parser'. \" + (\"\" + \"See https://github.com/opal/opal/blob/\" + ($$($nesting, 'RUBY_ENGINE_VERSION')) + \"/docs/opal_parser.md for details.\"));\n    }, $Kernel_eval$34.$$arity = -1)\n  })($nesting[0], $nesting);\n  Opal.defs(self, '$public', $public$35 = function($a) {\n    var $post_args, self = this;\n\n    \n    \n    $post_args = Opal.slice.call(arguments, 0, arguments.length);\n    ;\n    return nil;\n  }, $public$35.$$arity = -1);\n  return (Opal.defs(self, '$private', $private$36 = function($a) {\n    var $post_args, self = this;\n\n    \n    \n    $post_args = Opal.slice.call(arguments, 0, arguments.length);\n    ;\n    return nil;\n  }, $private$36.$$arity = -1), nil) && 'private';\n};\n\n/* Generated by Opal 0.11.99.dev */\n(function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"opal/base\");\n  self.$require(\"opal/mini\");\n  self.$require(\"corelib/string/encoding\");\n  self.$require(\"corelib/struct\");\n  self.$require(\"corelib/io\");\n  self.$require(\"corelib/main\");\n  self.$require(\"corelib/dir\");\n  self.$require(\"corelib/file\");\n  self.$require(\"corelib/process\");\n  return self.$require(\"corelib/unsupported\");\n})(Opal);\n\n\n// UMD Module\n(function (root, factory) {\n  if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register a named module.\n    define('asciidoctor', ['module'], function (module) {\n      return factory(module.config())\n    })\n  } else {\n    // Browser globals (root is window)\n    root.Asciidoctor = factory\n  }\n}(this, function (moduleConfig) {\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/browser/file\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;\n\n  Opal.add_stubs(['$new']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'File');\n\n    var $nesting = [self].concat($parent_nesting), $File_read$1;\n\n    return (Opal.defs(self, '$read', $File_read$1 = function $$read(path) {\n      var self = this;\n\n      \n      var data = '';\n      var status = -1;\n      try {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', path, false);\n        xhr.addEventListener('load', function() {\n          status = this.status;\n          // status is 0 for local file mode (i.e., file://)\n          if (status === 0 || status === 200) {\n            data = this.responseText;\n          }\n        });\n        xhr.overrideMimeType('text/plain');\n        xhr.send();\n      }\n      catch (e) {\n        throw $$($nesting, 'IOError').$new('Error reading file or directory: ' + path + '; reason: ' + e.message);\n      }\n      // assume that no data in local file mode means it doesn't exist\n      if (status === 404 || (status === 0 && !data)) {\n        throw $$($nesting, 'IOError').$new('No such file or directory: ' + path);\n      }\n      return data;\n    \n    }, $File_read$1.$$arity = 1), nil) && 'read'\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/browser\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  \n  var platform, engine, framework, ioModule;\n\n  if (typeof moduleConfig === 'object' && typeof moduleConfig.runtime === 'object') {\n    var runtime = moduleConfig.runtime;\n    platform = runtime.platform;\n    engine = runtime.engine;\n    framework = runtime.framework;\n    ioModule = runtime.ioModule;\n  }\n  ioModule = ioModule || 'xmlhttprequest';\n  platform = platform || 'browser';\n  engine = engine || '';\n  framework = framework || '';\n;\n  Opal.const_set($nesting[0], 'JAVASCRIPT_IO_MODULE', ioModule);\n  Opal.const_set($nesting[0], 'JAVASCRIPT_PLATFORM', platform);\n  Opal.const_set($nesting[0], 'JAVASCRIPT_ENGINE', engine);\n  Opal.const_set($nesting[0], 'JAVASCRIPT_FRAMEWORK', framework);\n  return self.$require(\"asciidoctor/js/opal_ext/browser/file\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser/abstract_node\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$uriish?', '$[]', '$web_path', '$path_resolver', '$descends_from?', '$base_dir', '$attr?', '$join', '$prepare_source_string', '$read', '$fetch', '$warn', '$logger', '$normalize_system_path', '$read_asset']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'AbstractNode');\n\n      var $nesting = [self].concat($parent_nesting), $AbstractNode_read_contents$1, $AbstractNode_generate_data_uri_from_uri$2;\n\n      self.$$prototype.document = nil;\n      \n      \n      Opal.def(self, '$read_contents', $AbstractNode_read_contents$1 = function $$read_contents(target, opts) {\n        var $a, $b, $c, self = this, doc = nil, start = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        doc = self.document;\n        if ($truthy(($truthy($a = $$($nesting, 'Helpers')['$uriish?'](target)) ? $a : ($truthy($b = ($truthy($c = (start = opts['$[]'](\"start\"))) ? $$($nesting, 'Helpers')['$uriish?'](start) : $c)) ? (target = doc.$path_resolver().$web_path(target, start)) : $b)))) {\n          if ($truthy(($truthy($a = doc.$path_resolver()['$descends_from?'](target, doc.$base_dir())) ? $a : doc['$attr?'](\"allow-uri-read\")))) {\n            \n            try {\n              if ($truthy(opts['$[]'](\"normalize\"))) {\n                return $$($nesting, 'Helpers').$prepare_source_string($$$('::', 'File').$read(target)).$join($$($nesting, 'LF'))\n              } else {\n                return $$$('::', 'File').$read(target)\n              }\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  \n                  if ($truthy(opts.$fetch(\"warn_on_failure\", true))) {\n                    self.$logger().$warn(\"\" + \"could not retrieve contents of \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")) + \" at URI: \" + (target))};\n                  return nil;\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };\n          } else {\n            \n            if ($truthy(opts.$fetch(\"warn_on_failure\", true))) {\n              self.$logger().$warn(\"\" + \"cannot retrieve contents of \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")) + \" at URI: \" + (target) + \" (allow-uri-read attribute not enabled)\")};\n            return nil;\n          }\n        } else {\n          \n          target = self.$normalize_system_path(target, opts['$[]'](\"start\"), nil, $hash2([\"target_name\"], {\"target_name\": ($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")}));\n          return self.$read_asset(target, $hash2([\"normalize\", \"warn_on_failure\", \"label\"], {\"normalize\": opts['$[]'](\"normalize\"), \"warn_on_failure\": opts.$fetch(\"warn_on_failure\", true), \"label\": opts['$[]'](\"label\")}));\n        };\n      }, $AbstractNode_read_contents$1.$$arity = -2);\n      return (Opal.def(self, '$generate_data_uri_from_uri', $AbstractNode_generate_data_uri_from_uri$2 = function $$generate_data_uri_from_uri(image_uri, cache_uri) {\n        var self = this;\n\n        \n        \n        if (cache_uri == null) {\n          cache_uri = false;\n        };\n        \n      var contentType = ''\n      var b64encoded = ''\n      var status = -1\n\n      try {\n        var xhr = new XMLHttpRequest()\n        xhr.open('GET', image_uri, false)\n        // the response type cannot be changed for synchronous requests made from a document\n        // xhr.responseType = 'arraybuffer'\n        xhr.overrideMimeType('text/plain; charset=x-user-defined')\n        xhr.addEventListener('load', function() {\n          status = this.status\n          // status is 0 for local file mode (i.e., file://)\n          if (status === 0 || status === 200) {\n            var binary = ''\n            var rawText = this.responseText\n            for (var i = 0, len = rawText.length; i < len; ++i) {\n              var c = rawText.charCodeAt(i)\n              var byteCode = c & 0xff // byte at offset i\n              binary += String.fromCharCode(byteCode)\n            }\n            b64encoded = btoa(binary)\n            contentType = this.getResponseHeader('content-type')\n          }\n        })\n        xhr.send(null)\n        // try to detect the MIME Type from the file extension\n        if (!contentType) {\n          if (image_uri.endsWith('.jpeg') || image_uri.endsWith('.jpg') || image_uri.endsWith('.jpe')) {\n            contentType = 'image/jpg'\n          } else if (image_uri.endsWith('.png')) {\n            contentType = 'image/png'\n          } else if (image_uri.endsWith('.svg')) {\n            contentType = 'image/svg+xml'\n          } else if (image_uri.endsWith('.bmp')) {\n            contentType = 'image/bmp'\n          } else if (image_uri.endsWith('.tif') || image_uri.endsWith('.tiff')) {\n            contentType = 'image/tiff'\n          }\n        }\n      }\n      catch (e) {\n        // something bad happened!\n        status = 0\n      }\n\n      // assume that no data in local file mode means it doesn't exist\n      if (status === 404 || (status === 0 && (!b64encoded || !contentType))) {\n        self.$logger().$warn('could not retrieve image data from URI: ' + image_uri)\n        return image_uri\n      }\n      return 'data:' + contentType + ';base64,' + b64encoded\n    ;\n      }, $AbstractNode_generate_data_uri_from_uri$2.$$arity = -2), nil) && 'generate_data_uri_from_uri';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser/open_uri\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $send = Opal.send;\n\n  Opal.add_stubs(['$new', '$path']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'OpenURI');\n\n    var $nesting = [self].concat($parent_nesting), $OpenURI_open_uri$1;\n\n    Opal.defs($$($nesting, 'OpenURI'), '$open_uri', $OpenURI_open_uri$1 = function $$open_uri(name, $a) {\n      var $post_args, rest, $iter = $OpenURI_open_uri$1.$$p, $yield = $iter || nil, self = this, file = nil;\n\n      if ($iter) $OpenURI_open_uri$1.$$p = null;\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      rest = $post_args;;\n      file = $send($$($nesting, 'File'), 'new', [self.$path()].concat(Opal.to_a(rest)));\n      if (($yield !== nil)) {\n        return Opal.yield1($yield, file);\n      } else {\n        return file\n      };\n    }, $OpenURI_open_uri$1.$$arity = -2)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser/path_resolver\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$absolute_path?', '$start_with?']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'PathResolver');\n\n      var $nesting = [self].concat($parent_nesting), $PathResolver_root$ques$1;\n\n      return (Opal.def(self, '$root?', $PathResolver_root$ques$1 = function(path) {\n        var $a, self = this;\n\n        return ($truthy($a = self['$absolute_path?'](path)) ? $a : path['$start_with?'](\"file://\", \"http://\", \"https://\", \"chrome://\"))\n      }, $PathResolver_root$ques$1.$$arity = 1), nil) && 'root?'\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser/reader\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$posixify', '$new', '$base_dir', '$start_with?', '$uriish?', '$descends_from?', '$key?', '$attributes', '$replace_next_line', '$absolute_path?', '$==', '$empty?', '$!', '$slice', '$length']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'PreprocessorReader');\n\n      var $nesting = [self].concat($parent_nesting), $PreprocessorReader_resolve_include_path$1;\n\n      self.$$prototype.path_resolver = self.$$prototype.document = self.$$prototype.include_stack = self.$$prototype.dir = nil;\n      return (Opal.def(self, '$resolve_include_path', $PreprocessorReader_resolve_include_path$1 = function $$resolve_include_path(target, attrlist, attributes) {\n        var $a, self = this, p_target = nil, target_type = nil, base_dir = nil, inc_path = nil, relpath = nil, ctx_dir = nil, top_level = nil, offset = nil;\n\n        \n        p_target = (self.path_resolver = ($truthy($a = self.path_resolver) ? $a : $$($nesting, 'PathResolver').$new(\"\\\\\"))).$posixify(target);\n        $a = [\"file\", self.document.$base_dir()], (target_type = $a[0]), (base_dir = $a[1]), $a;\n        if ($truthy(p_target['$start_with?'](\"file://\"))) {\n          inc_path = (relpath = p_target)\n        } else if ($truthy($$($nesting, 'Helpers')['$uriish?'](p_target))) {\n          \n          if ($truthy(($truthy($a = self.path_resolver['$descends_from?'](p_target, base_dir)) ? $a : self.document.$attributes()['$key?'](\"allow-uri-read\")))) {\n          } else {\n            return self.$replace_next_line(\"\" + \"link:\" + (target) + \"[\" + (attrlist) + \"]\")\n          };\n          inc_path = (relpath = p_target);\n        } else if ($truthy(self.path_resolver['$absolute_path?'](p_target))) {\n          inc_path = (relpath = \"\" + \"file://\" + ((function() {if ($truthy(p_target['$start_with?'](\"/\"))) {\n            return \"\"\n          } else {\n            return \"/\"\n          }; return nil; })()) + (p_target))\n        } else if ((ctx_dir = (function() {if ($truthy((top_level = self.include_stack['$empty?']()))) {\n          return base_dir\n        } else {\n          return self.dir\n        }; return nil; })())['$=='](\".\")) {\n          inc_path = (relpath = p_target)\n        } else if ($truthy(($truthy($a = ctx_dir['$start_with?'](\"file://\")) ? $a : $$($nesting, 'Helpers')['$uriish?'](ctx_dir)['$!']()))) {\n          \n          inc_path = \"\" + (ctx_dir) + \"/\" + (p_target);\n          if ($truthy(top_level)) {\n            relpath = p_target\n          } else if ($truthy(($truthy($a = base_dir['$=='](\".\")) ? $a : (offset = self.path_resolver['$descends_from?'](inc_path, base_dir))['$!']()))) {\n            relpath = inc_path\n          } else {\n            relpath = inc_path.$slice(offset, inc_path.$length())\n          };\n        } else if ($truthy(top_level)) {\n          inc_path = \"\" + (ctx_dir) + \"/\" + ((relpath = p_target))\n        } else if ($truthy(($truthy($a = (offset = self.path_resolver['$descends_from?'](ctx_dir, base_dir))) ? $a : self.document.$attributes()['$key?'](\"allow-uri-read\")))) {\n          \n          inc_path = \"\" + (ctx_dir) + \"/\" + (p_target);\n          relpath = (function() {if ($truthy(offset)) {\n            \n            return inc_path.$slice(offset, inc_path.$length());\n          } else {\n            return p_target\n          }; return nil; })();\n        } else {\n          return self.$replace_next_line(\"\" + \"link:\" + (target) + \"[\" + (attrlist) + \"]\")\n        };\n        return [inc_path, \"file\", relpath];\n      }, $PreprocessorReader_resolve_include_path$1.$$arity = 3), nil) && 'resolve_include_path'\n    })($nesting[0], $$($nesting, 'Reader'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$==', '$require']);\n  if ($$($nesting, 'JAVASCRIPT_IO_MODULE')['$=='](\"xmlhttprequest\")) {\n    \n    self.$require(\"asciidoctor/js/asciidoctor_ext/browser/abstract_node\");\n    self.$require(\"asciidoctor/js/asciidoctor_ext/browser/open_uri\");\n    self.$require(\"asciidoctor/js/asciidoctor_ext/browser/path_resolver\");\n    return self.$require(\"asciidoctor/js/asciidoctor_ext/browser/reader\");\n  } else {\n    return nil\n  }\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"set\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send, $module = Opal.module;\n\n  Opal.add_stubs(['$include', '$new', '$nil?', '$===', '$raise', '$each', '$add', '$merge', '$class', '$respond_to?', '$subtract', '$dup', '$join', '$to_a', '$equal?', '$instance_of?', '$==', '$instance_variable_get', '$is_a?', '$size', '$all?', '$include?', '$[]=', '$-', '$enum_for', '$[]', '$<<', '$replace', '$delete', '$select', '$each_key', '$to_proc', '$empty?', '$eql?', '$instance_eval', '$clear', '$<', '$<=', '$keys']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Set');\n\n    var $nesting = [self].concat($parent_nesting), $Set_$$$1, $Set_initialize$2, $Set_dup$4, $Set_$minus$5, $Set_inspect$6, $Set_$eq_eq$7, $Set_add$9, $Set_classify$10, $Set_collect$excl$13, $Set_delete$15, $Set_delete$ques$16, $Set_delete_if$17, $Set_add$ques$20, $Set_each$21, $Set_empty$ques$22, $Set_eql$ques$23, $Set_clear$25, $Set_include$ques$26, $Set_merge$27, $Set_replace$29, $Set_size$30, $Set_subtract$31, $Set_$$33, $Set_superset$ques$34, $Set_proper_superset$ques$36, $Set_subset$ques$38, $Set_proper_subset$ques$40, $Set_to_a$42;\n\n    self.$$prototype.hash = nil;\n    \n    self.$include($$($nesting, 'Enumerable'));\n    Opal.defs(self, '$[]', $Set_$$$1 = function($a) {\n      var $post_args, ary, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      ary = $post_args;;\n      return self.$new(ary);\n    }, $Set_$$$1.$$arity = -1);\n    \n    Opal.def(self, '$initialize', $Set_initialize$2 = function $$initialize(enum$) {\n      var $iter = $Set_initialize$2.$$p, block = $iter || nil, $$3, self = this;\n\n      if ($iter) $Set_initialize$2.$$p = null;\n      \n      \n      if ($iter) $Set_initialize$2.$$p = null;;\n      \n      if (enum$ == null) {\n        enum$ = nil;\n      };\n      self.hash = $hash2([], {});\n      if ($truthy(enum$['$nil?']())) {\n        return nil};\n      if ($truthy($$($nesting, 'Enumerable')['$==='](enum$))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"value must be enumerable\")\n      };\n      if ($truthy(block)) {\n        return $send(enum$, 'each', [], ($$3 = function(item){var self = $$3.$$s || this;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          return self.$add(Opal.yield1(block, item));}, $$3.$$s = self, $$3.$$arity = 1, $$3))\n      } else {\n        return self.$merge(enum$)\n      };\n    }, $Set_initialize$2.$$arity = -1);\n    \n    Opal.def(self, '$dup', $Set_dup$4 = function $$dup() {\n      var self = this, result = nil;\n\n      \n      result = self.$class().$new();\n      return result.$merge(self);\n    }, $Set_dup$4.$$arity = 0);\n    \n    Opal.def(self, '$-', $Set_$minus$5 = function(enum$) {\n      var self = this;\n\n      \n      if ($truthy(enum$['$respond_to?'](\"each\"))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"value must be enumerable\")\n      };\n      return self.$dup().$subtract(enum$);\n    }, $Set_$minus$5.$$arity = 1);\n    Opal.alias(self, \"difference\", \"-\");\n    \n    Opal.def(self, '$inspect', $Set_inspect$6 = function $$inspect() {\n      var self = this;\n\n      return \"\" + \"#<Set: {\" + (self.$to_a().$join(\",\")) + \"}>\"\n    }, $Set_inspect$6.$$arity = 0);\n    \n    Opal.def(self, '$==', $Set_$eq_eq$7 = function(other) {\n      var $a, $$8, self = this;\n\n      if ($truthy(self['$equal?'](other))) {\n        return true\n      } else if ($truthy(other['$instance_of?'](self.$class()))) {\n        return self.hash['$=='](other.$instance_variable_get(\"@hash\"))\n      } else if ($truthy(($truthy($a = other['$is_a?']($$($nesting, 'Set'))) ? self.$size()['$=='](other.$size()) : $a))) {\n        return $send(other, 'all?', [], ($$8 = function(o){var self = $$8.$$s || this;\n          if (self.hash == null) self.hash = nil;\n\n        \n          \n          if (o == null) {\n            o = nil;\n          };\n          return self.hash['$include?'](o);}, $$8.$$s = self, $$8.$$arity = 1, $$8))\n      } else {\n        return false\n      }\n    }, $Set_$eq_eq$7.$$arity = 1);\n    \n    Opal.def(self, '$add', $Set_add$9 = function $$add(o) {\n      var self = this, $writer = nil;\n\n      \n      \n      $writer = [o, true];\n      $send(self.hash, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      return self;\n    }, $Set_add$9.$$arity = 1);\n    Opal.alias(self, \"<<\", \"add\");\n    \n    Opal.def(self, '$classify', $Set_classify$10 = function $$classify() {\n      var $iter = $Set_classify$10.$$p, block = $iter || nil, $$11, $$12, self = this, result = nil;\n\n      if ($iter) $Set_classify$10.$$p = null;\n      \n      \n      if ($iter) $Set_classify$10.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"classify\")\n      };\n      result = $send($$($nesting, 'Hash'), 'new', [], ($$11 = function(h, k){var self = $$11.$$s || this, $writer = nil;\n\n      \n        \n        if (h == null) {\n          h = nil;\n        };\n        \n        if (k == null) {\n          k = nil;\n        };\n        $writer = [k, self.$class().$new()];\n        $send(h, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];}, $$11.$$s = self, $$11.$$arity = 2, $$11));\n      $send(self, 'each', [], ($$12 = function(item){var self = $$12.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return result['$[]'](Opal.yield1(block, item)).$add(item);}, $$12.$$s = self, $$12.$$arity = 1, $$12));\n      return result;\n    }, $Set_classify$10.$$arity = 0);\n    \n    Opal.def(self, '$collect!', $Set_collect$excl$13 = function() {\n      var $iter = $Set_collect$excl$13.$$p, block = $iter || nil, $$14, self = this, result = nil;\n\n      if ($iter) $Set_collect$excl$13.$$p = null;\n      \n      \n      if ($iter) $Set_collect$excl$13.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"collect!\")\n      };\n      result = self.$class().$new();\n      $send(self, 'each', [], ($$14 = function(item){var self = $$14.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return result['$<<'](Opal.yield1(block, item));}, $$14.$$s = self, $$14.$$arity = 1, $$14));\n      return self.$replace(result);\n    }, $Set_collect$excl$13.$$arity = 0);\n    Opal.alias(self, \"map!\", \"collect!\");\n    \n    Opal.def(self, '$delete', $Set_delete$15 = function(o) {\n      var self = this;\n\n      \n      self.hash.$delete(o);\n      return self;\n    }, $Set_delete$15.$$arity = 1);\n    \n    Opal.def(self, '$delete?', $Set_delete$ques$16 = function(o) {\n      var self = this;\n\n      if ($truthy(self['$include?'](o))) {\n        \n        self.$delete(o);\n        return self;\n      } else {\n        return nil\n      }\n    }, $Set_delete$ques$16.$$arity = 1);\n    \n    Opal.def(self, '$delete_if', $Set_delete_if$17 = function $$delete_if() {\n      var $$18, $$19, $iter = $Set_delete_if$17.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Set_delete_if$17.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return self.$enum_for(\"delete_if\")\n      };\n      $send($send(self, 'select', [], ($$18 = function(o){var self = $$18.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return Opal.yield1($yield, o);;}, $$18.$$s = self, $$18.$$arity = 1, $$18)), 'each', [], ($$19 = function(o){var self = $$19.$$s || this;\n        if (self.hash == null) self.hash = nil;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return self.hash.$delete(o);}, $$19.$$s = self, $$19.$$arity = 1, $$19));\n      return self;\n    }, $Set_delete_if$17.$$arity = 0);\n    \n    Opal.def(self, '$add?', $Set_add$ques$20 = function(o) {\n      var self = this;\n\n      if ($truthy(self['$include?'](o))) {\n        return nil\n      } else {\n        return self.$add(o)\n      }\n    }, $Set_add$ques$20.$$arity = 1);\n    \n    Opal.def(self, '$each', $Set_each$21 = function $$each() {\n      var $iter = $Set_each$21.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Set_each$21.$$p = null;\n      \n      \n      if ($iter) $Set_each$21.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"each\")\n      };\n      $send(self.hash, 'each_key', [], block.$to_proc());\n      return self;\n    }, $Set_each$21.$$arity = 0);\n    \n    Opal.def(self, '$empty?', $Set_empty$ques$22 = function() {\n      var self = this;\n\n      return self.hash['$empty?']()\n    }, $Set_empty$ques$22.$$arity = 0);\n    \n    Opal.def(self, '$eql?', $Set_eql$ques$23 = function(other) {\n      var $$24, self = this;\n\n      return self.hash['$eql?']($send(other, 'instance_eval', [], ($$24 = function(){var self = $$24.$$s || this;\n        if (self.hash == null) self.hash = nil;\n\n      return self.hash}, $$24.$$s = self, $$24.$$arity = 0, $$24)))\n    }, $Set_eql$ques$23.$$arity = 1);\n    \n    Opal.def(self, '$clear', $Set_clear$25 = function $$clear() {\n      var self = this;\n\n      \n      self.hash.$clear();\n      return self;\n    }, $Set_clear$25.$$arity = 0);\n    \n    Opal.def(self, '$include?', $Set_include$ques$26 = function(o) {\n      var self = this;\n\n      return self.hash['$include?'](o)\n    }, $Set_include$ques$26.$$arity = 1);\n    Opal.alias(self, \"member?\", \"include?\");\n    \n    Opal.def(self, '$merge', $Set_merge$27 = function $$merge(enum$) {\n      var $$28, self = this;\n\n      \n      $send(enum$, 'each', [], ($$28 = function(item){var self = $$28.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return self.$add(item);}, $$28.$$s = self, $$28.$$arity = 1, $$28));\n      return self;\n    }, $Set_merge$27.$$arity = 1);\n    \n    Opal.def(self, '$replace', $Set_replace$29 = function $$replace(enum$) {\n      var self = this;\n\n      \n      self.$clear();\n      self.$merge(enum$);\n      return self;\n    }, $Set_replace$29.$$arity = 1);\n    \n    Opal.def(self, '$size', $Set_size$30 = function $$size() {\n      var self = this;\n\n      return self.hash.$size()\n    }, $Set_size$30.$$arity = 0);\n    Opal.alias(self, \"length\", \"size\");\n    \n    Opal.def(self, '$subtract', $Set_subtract$31 = function $$subtract(enum$) {\n      var $$32, self = this;\n\n      \n      $send(enum$, 'each', [], ($$32 = function(item){var self = $$32.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return self.$delete(item);}, $$32.$$s = self, $$32.$$arity = 1, $$32));\n      return self;\n    }, $Set_subtract$31.$$arity = 1);\n    \n    Opal.def(self, '$|', $Set_$$33 = function(enum$) {\n      var self = this;\n\n      \n      if ($truthy(enum$['$respond_to?'](\"each\"))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"value must be enumerable\")\n      };\n      return self.$dup().$merge(enum$);\n    }, $Set_$$33.$$arity = 1);\n    \n    Opal.def(self, '$superset?', $Set_superset$ques$34 = function(set) {\n      var $a, $$35, self = this;\n\n      \n      ($truthy($a = set['$is_a?']($$($nesting, 'Set'))) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"value must be a set\"));\n      if ($truthy($rb_lt(self.$size(), set.$size()))) {\n        return false};\n      return $send(set, 'all?', [], ($$35 = function(o){var self = $$35.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return self['$include?'](o);}, $$35.$$s = self, $$35.$$arity = 1, $$35));\n    }, $Set_superset$ques$34.$$arity = 1);\n    Opal.alias(self, \">=\", \"superset?\");\n    \n    Opal.def(self, '$proper_superset?', $Set_proper_superset$ques$36 = function(set) {\n      var $a, $$37, self = this;\n\n      \n      ($truthy($a = set['$is_a?']($$($nesting, 'Set'))) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"value must be a set\"));\n      if ($truthy($rb_le(self.$size(), set.$size()))) {\n        return false};\n      return $send(set, 'all?', [], ($$37 = function(o){var self = $$37.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return self['$include?'](o);}, $$37.$$s = self, $$37.$$arity = 1, $$37));\n    }, $Set_proper_superset$ques$36.$$arity = 1);\n    Opal.alias(self, \">\", \"proper_superset?\");\n    \n    Opal.def(self, '$subset?', $Set_subset$ques$38 = function(set) {\n      var $a, $$39, self = this;\n\n      \n      ($truthy($a = set['$is_a?']($$($nesting, 'Set'))) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"value must be a set\"));\n      if ($truthy($rb_lt(set.$size(), self.$size()))) {\n        return false};\n      return $send(self, 'all?', [], ($$39 = function(o){var self = $$39.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return set['$include?'](o);}, $$39.$$s = self, $$39.$$arity = 1, $$39));\n    }, $Set_subset$ques$38.$$arity = 1);\n    Opal.alias(self, \"<=\", \"subset?\");\n    \n    Opal.def(self, '$proper_subset?', $Set_proper_subset$ques$40 = function(set) {\n      var $a, $$41, self = this;\n\n      \n      ($truthy($a = set['$is_a?']($$($nesting, 'Set'))) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"value must be a set\"));\n      if ($truthy($rb_le(set.$size(), self.$size()))) {\n        return false};\n      return $send(self, 'all?', [], ($$41 = function(o){var self = $$41.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return set['$include?'](o);}, $$41.$$s = self, $$41.$$arity = 1, $$41));\n    }, $Set_proper_subset$ques$40.$$arity = 1);\n    Opal.alias(self, \"<\", \"proper_subset?\");\n    Opal.alias(self, \"+\", \"|\");\n    Opal.alias(self, \"union\", \"|\");\n    return (Opal.def(self, '$to_a', $Set_to_a$42 = function $$to_a() {\n      var self = this;\n\n      return self.hash.$keys()\n    }, $Set_to_a$42.$$arity = 0), nil) && 'to_a';\n  })($nesting[0], null, $nesting);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Enumerable');\n\n    var $nesting = [self].concat($parent_nesting), $Enumerable_to_set$43;\n\n    \n    Opal.def(self, '$to_set', $Enumerable_to_set$43 = function $$to_set($a, $b) {\n      var $iter = $Enumerable_to_set$43.$$p, block = $iter || nil, $post_args, klass, args, self = this;\n\n      if ($iter) $Enumerable_to_set$43.$$p = null;\n      \n      \n      if ($iter) $Enumerable_to_set$43.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      if ($post_args.length > 0) {\n        klass = $post_args[0];\n        $post_args.splice(0, 1);\n      }\n      if (klass == null) {\n        klass = $$($nesting, 'Set');\n      };\n      \n      args = $post_args;;\n      return $send(klass, 'new', [self].concat(Opal.to_a(args)), block.$to_proc());\n    }, $Enumerable_to_set$43.$$arity = -1)\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/kernel\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $send = Opal.send;\n\n  Opal.add_stubs(['$new']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_open$1, $Kernel___dir__$2;\n\n    \n    \n    Opal.def(self, '$open', $Kernel_open$1 = function $$open(path, $a) {\n      var $post_args, rest, $iter = $Kernel_open$1.$$p, $yield = $iter || nil, self = this, file = nil;\n\n      if ($iter) $Kernel_open$1.$$p = null;\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      rest = $post_args;;\n      file = $send($$($nesting, 'File'), 'new', [path].concat(Opal.to_a(rest)));\n      if (($yield !== nil)) {\n        return Opal.yield1($yield, file);\n      } else {\n        return file\n      };\n    }, $Kernel_open$1.$$arity = -2);\n    \n    Opal.def(self, '$__dir__', $Kernel___dir__$2 = function $$__dir__() {\n      var self = this;\n\n      return \"\"\n    }, $Kernel___dir__$2.$$arity = 0);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/file\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$attr_reader', '$delete', '$gsub', '$read', '$size', '$to_enum', '$chomp', '$each_line', '$readlines', '$split']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'File');\n\n    var $nesting = [self].concat($parent_nesting), $File_initialize$1, $File_read$2, $File_each_line$3, $File_readlines$4;\n\n    self.$$prototype.eof = self.$$prototype.path = nil;\n    \n    self.$attr_reader(\"eof\");\n    self.$attr_reader(\"lineno\");\n    self.$attr_reader(\"path\");\n    \n    Opal.def(self, '$initialize', $File_initialize$1 = function $$initialize(path, flags) {\n      var self = this, encoding_flag_regexp = nil;\n\n      \n      \n      if (flags == null) {\n        flags = \"r\";\n      };\n      self.path = path;\n      self.contents = nil;\n      self.eof = false;\n      self.lineno = 0;\n      flags = flags.$delete(\"b\");\n      encoding_flag_regexp = /:(.*)/;\n      flags = flags.$gsub(encoding_flag_regexp, \"\");\n      return (self.flags = flags);\n    }, $File_initialize$1.$$arity = -2);\n    \n    Opal.def(self, '$read', $File_read$2 = function $$read() {\n      var self = this, res = nil;\n\n      if ($truthy(self.eof)) {\n        return \"\"\n      } else {\n        \n        res = $$($nesting, 'File').$read(self.path);\n        self.eof = true;\n        self.lineno = res.$size();\n        return res;\n      }\n    }, $File_read$2.$$arity = 0);\n    \n    Opal.def(self, '$each_line', $File_each_line$3 = function $$each_line(separator) {\n      var $iter = $File_each_line$3.$$p, block = $iter || nil, self = this, lines = nil;\n      if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n      if ($iter) $File_each_line$3.$$p = null;\n      \n      \n      if ($iter) $File_each_line$3.$$p = null;;\n      \n      if (separator == null) {\n        separator = $gvars[\"/\"];\n      };\n      if ($truthy(self.eof)) {\n        return (function() {if ((block !== nil)) {\n          return self\n        } else {\n          return [].$to_enum()\n        }; return nil; })()};\n      if ((block !== nil)) {\n        \n        lines = $$($nesting, 'File').$read(self.path);\n        \n        self.eof = false;\n        self.lineno = 0;\n        var chomped  = lines.$chomp(),\n            trailing = lines.length != chomped.length,\n            splitted = chomped.split(separator);\n        for (var i = 0, length = splitted.length; i < length; i++) {\n          self.lineno += 1;\n          if (i < length - 1 || trailing) {\n            Opal.yield1(block, splitted[i] + separator);\n          }\n          else {\n            Opal.yield1(block, splitted[i]);\n          }\n        }\n        self.eof = true;\n      ;\n        return self;\n      } else {\n        return self.$read().$each_line()\n      };\n    }, $File_each_line$3.$$arity = -1);\n    \n    Opal.def(self, '$readlines', $File_readlines$4 = function $$readlines() {\n      var self = this;\n\n      return $$($nesting, 'File').$readlines(self.path)\n    }, $File_readlines$4.$$arity = 0);\n    return (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $readlines$5, $file$ques$6, $readable$ques$7, $read$8;\n\n      \n      \n      Opal.def(self, '$readlines', $readlines$5 = function $$readlines(path, separator) {\n        var self = this, content = nil;\n        if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n        \n        \n        if (separator == null) {\n          separator = $gvars[\"/\"];\n        };\n        content = $$($nesting, 'File').$read(path);\n        return content.$split(separator);\n      }, $readlines$5.$$arity = -2);\n      \n      Opal.def(self, '$file?', $file$ques$6 = function(path) {\n        var self = this;\n\n        return true\n      }, $file$ques$6.$$arity = 1);\n      \n      Opal.def(self, '$readable?', $readable$ques$7 = function(path) {\n        var self = this;\n\n        return true\n      }, $readable$ques$7.$$arity = 1);\n      return (Opal.def(self, '$read', $read$8 = function $$read(path) {\n        var self = this;\n\n        return \"\"\n      }, $read$8.$$arity = 1), nil) && 'read';\n    })(Opal.get_singleton_class(self), $nesting);\n  })($nesting[0], null, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'IO');\n\n    var $nesting = [self].concat($parent_nesting), $IO_read$9;\n\n    return (Opal.defs(self, '$read', $IO_read$9 = function $$read(path) {\n      var self = this;\n\n      return $$($nesting, 'File').$read(path)\n    }, $IO_read$9.$$arity = 1), nil) && 'read'\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/match_data\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send;\n\n  Opal.add_stubs(['$[]=', '$-']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'MatchData');\n\n    var $nesting = [self].concat($parent_nesting), $MatchData_$$$eq$1;\n\n    self.$$prototype.matches = nil;\n    return (Opal.def(self, '$[]=', $MatchData_$$$eq$1 = function(idx, val) {\n      var self = this, $writer = nil;\n\n      \n      $writer = [idx, val];\n      $send(self.matches, '[]=', Opal.to_a($writer));\n      return $writer[$rb_minus($writer[\"length\"], 1)];\n    }, $MatchData_$$$eq$1.$$arity = 2), nil) && '[]='\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/string\"] = function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$method_defined?', '$<', '$length', '$bytes', '$to_s', '$byteslice', '$==', '$with_index', '$select', '$[]', '$even?', '$_original_unpack']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting), $String_limit_bytesize$1, $String_unpack$2;\n\n    \n    if ($truthy(self['$method_defined?'](\"limit_bytesize\"))) {\n    } else {\n      \n      Opal.def(self, '$limit_bytesize', $String_limit_bytesize$1 = function $$limit_bytesize(size) {\n        var self = this, result = nil;\n\n        \n        if ($truthy($rb_lt(size, self.$bytes().$length()))) {\n        } else {\n          return self.$to_s()\n        };\n        result = self.$byteslice(0, size);\n        return result.$to_s();\n      }, $String_limit_bytesize$1.$$arity = 1)\n    };\n    if ($truthy(self['$method_defined?'](\"limit\"))) {\n    } else {\n      Opal.alias(self, \"limit\", \"limit_bytesize\")\n    };\n    Opal.alias(self, \"_original_unpack\", \"unpack\");\n    return (Opal.def(self, '$unpack', $String_unpack$2 = function $$unpack(format) {\n      var $$3, self = this;\n\n      if (format['$=='](\"C3\")) {\n        return $send(self['$[]'](0, 3).$bytes().$select(), 'with_index', [], ($$3 = function(_, i){var self = $$3.$$s || this;\n\n        \n          \n          if (_ == null) {\n            _ = nil;\n          };\n          \n          if (i == null) {\n            i = nil;\n          };\n          return i['$even?']();}, $$3.$$s = self, $$3.$$arity = 2, $$3))\n      } else {\n        return self.$_original_unpack(format)\n      }\n    }, $String_unpack$2.$$arity = 1), nil) && 'unpack';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/uri\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;\n\n  Opal.add_stubs(['$extend']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'URI');\n\n    var $nesting = [self].concat($parent_nesting), $URI_parse$1, $URI_path$2;\n\n    \n    Opal.defs(self, '$parse', $URI_parse$1 = function $$parse(str) {\n      var self = this;\n\n      return str.$extend($$($nesting, 'URI'))\n    }, $URI_parse$1.$$arity = 1);\n    \n    Opal.def(self, '$path', $URI_path$2 = function $$path() {\n      var self = this;\n\n      return self\n    }, $URI_path$2.$$arity = 0);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/base64\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$delete']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Base64');\n\n    var $nesting = [self].concat($parent_nesting), $Base64_decode64$1, $Base64_encode64$2, $Base64_strict_decode64$3, $Base64_strict_encode64$4, $Base64_urlsafe_decode64$5, $Base64_urlsafe_encode64$6;\n\n    \n    \n    var encode, decode;\n    encode = Opal.global.btoa || function (input) {\n      var buffer;\n      if (input instanceof Buffer) {\n        buffer = input;\n      } else {\n        buffer = Buffer.from(input.toString(), 'binary');\n      }\n      return buffer.toString('base64');\n    };\n    decode = Opal.global.atob || function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  ;\n    Opal.defs(self, '$decode64', $Base64_decode64$1 = function $$decode64(string) {\n      var self = this;\n\n      return decode(string.replace(/\\r?\\n/g, ''));\n    }, $Base64_decode64$1.$$arity = 1);\n    Opal.defs(self, '$encode64', $Base64_encode64$2 = function $$encode64(string) {\n      var self = this;\n\n      return encode(string).replace(/(.{60})/g, \"$1\\n\").replace(/([^\\n])$/g, \"$1\\n\");\n    }, $Base64_encode64$2.$$arity = 1);\n    Opal.defs(self, '$strict_decode64', $Base64_strict_decode64$3 = function $$strict_decode64(string) {\n      var self = this;\n\n      return decode(string);\n    }, $Base64_strict_decode64$3.$$arity = 1);\n    Opal.defs(self, '$strict_encode64', $Base64_strict_encode64$4 = function $$strict_encode64(string) {\n      var self = this;\n\n      return encode(string);\n    }, $Base64_strict_encode64$4.$$arity = 1);\n    Opal.defs(self, '$urlsafe_decode64', $Base64_urlsafe_decode64$5 = function $$urlsafe_decode64(string) {\n      var self = this;\n\n      return decode(string.replace(/\\-/g, '+').replace(/_/g, '/'));\n    }, $Base64_urlsafe_decode64$5.$$arity = 1);\n    Opal.defs(self, '$urlsafe_encode64', $Base64_urlsafe_encode64$6 = function $$urlsafe_encode64(string, $kwargs) {\n      var padding, self = this, str = nil;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      padding = $kwargs.$$smap[\"padding\"];\n      if (padding == null) {\n        padding = true\n      };\n      str = encode(string).replace(/\\+/g, '-').replace(/\\//g, '_');\n      if ($truthy(padding)) {\n      } else {\n        str = str.$delete(\"=\")\n      };\n      return str;\n    }, $Base64_urlsafe_encode64$6.$$arity = -2);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/number\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$coerce_to!', '$>']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Number');\n\n    var $nesting = [self].concat($parent_nesting), $Number_round$1;\n\n    return (Opal.def(self, '$round', $Number_round$1 = function $$round(ndigits) {\n      var self = this;\n\n      \n      ;\n      ndigits = $$($nesting, 'Opal')['$coerce_to!'](ndigits, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy($rb_gt(ndigits, 0))) {\n        return Number(self.toFixed(ndigits));\n      } else {\n        return Math.round(self);\n      };\n    }, $Number_round$1.$$arity = -1), nil) && 'round'\n  })($nesting[0], $$($nesting, 'Numeric'), $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"asciidoctor/js/opal_ext/kernel\");\n  self.$require(\"asciidoctor/js/opal_ext/file\");\n  self.$require(\"asciidoctor/js/opal_ext/match_data\");\n  self.$require(\"asciidoctor/js/opal_ext/string\");\n  self.$require(\"asciidoctor/js/opal_ext/uri\");\n  self.$require(\"asciidoctor/js/opal_ext/base64\");\n  self.$require(\"asciidoctor/js/opal_ext/number\");\n  \n// suppress \"not supported\" warning messages from Opal\nOpal.config.unsupported_features_severity = 'ignore'\n\n// Load specific runtime\nself.$require(\"asciidoctor/js/opal_ext/browser\");\n;\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/rx\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $send = Opal.send, $gvars = Opal.gvars, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$gsub', '$+', '$unpack_hex_range']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting), $Asciidoctor_unpack_hex_range$1;\n\n    \n    Opal.const_set($nesting[0], 'HEX_RANGE_RX', /([A-F0-9]{4})(?:-([A-F0-9]{4}))?/);\n    Opal.defs(self, '$unpack_hex_range', $Asciidoctor_unpack_hex_range$1 = function $$unpack_hex_range(str) {\n      var $$2, self = this;\n\n      return $send(str, 'gsub', [$$($nesting, 'HEX_RANGE_RX')], ($$2 = function(){var self = $$2.$$s || this, $a, $b;\n\n      return \"\" + \"\\\\u\" + ((($a = $gvars['~']) === nil ? nil : $a['$[]'](1))) + (($truthy($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](2))) ? \"\" + \"-\\\\u\" + ((($b = $gvars['~']) === nil ? nil : $b['$[]'](2))) : $a))}, $$2.$$s = self, $$2.$$arity = 0, $$2))\n    }, $Asciidoctor_unpack_hex_range$1.$$arity = 1);\n    Opal.const_set($nesting[0], 'P_L', $rb_plus(\"A-Za-z\", self.$unpack_hex_range(\"00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE0370-037403760377037A-037D037F03860388-038A038C038E-03A103A3-03F503F7-0481048A-052F0531-055605590561-058705D0-05EA05F0-05F20620-064A066E066F0671-06D306D506E506E606EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA07F407F507FA0800-0815081A082408280840-085808A0-08B20904-0939093D09500958-09610971-09800985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E460E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EC60EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA16F1-16F81700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317D717DC1820-18771880-18A818AA18B0-18F51900-191E1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541AA71B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF11CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E218321842C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2E2F300530063031-3035303B303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA67F-A69DA6A0-A6E5A717-A71FA722-A788A78B-A78EA790-A7ADA7B0A7B1A7F7-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2A9CFA9E0-A9E4A9E6-A9EFA9FA-A9FEAA00-AA28AA40-AA42AA44-AA4BAA60-AA76AA7AAA7E-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADB-AADDAAE0-AAEAAAF2-AAF4AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EAB30-AB5AAB5C-AB5FAB64AB65ABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\")));\n    Opal.const_set($nesting[0], 'P_Nl', self.$unpack_hex_range(\"16EE-16F02160-21822185-218830073021-30293038-303AA6E6-A6EF\"));\n    Opal.const_set($nesting[0], 'P_Nd', $rb_plus(\"0-9\", self.$unpack_hex_range(\"0660-066906F0-06F907C0-07C90966-096F09E6-09EF0A66-0A6F0AE6-0AEF0B66-0B6F0BE6-0BEF0C66-0C6F0CE6-0CEF0D66-0D6F0DE6-0DEF0E50-0E590ED0-0ED90F20-0F291040-10491090-109917E0-17E91810-18191946-194F19D0-19D91A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C59A620-A629A8D0-A8D9A900-A909A9D0-A9D9A9F0-A9F9AA50-AA59ABF0-ABF9FF10-FF19\")));\n    Opal.const_set($nesting[0], 'P_Pc', self.$unpack_hex_range(\"005F203F20402054FE33FE34FE4D-FE4FFF3F\"));\n    Opal.const_set($nesting[0], 'CC_ALPHA', \"\" + ($$($nesting, 'P_L')) + ($$($nesting, 'P_Nl')));\n    Opal.const_set($nesting[0], 'CG_ALPHA', \"\" + \"[\" + ($$($nesting, 'CC_ALPHA')) + \"]\");\n    Opal.const_set($nesting[0], 'CC_ALNUM', \"\" + ($$($nesting, 'CC_ALPHA')) + ($$($nesting, 'P_Nd')));\n    Opal.const_set($nesting[0], 'CG_ALNUM', \"\" + \"[\" + ($$($nesting, 'CC_ALNUM')) + \"]\");\n    Opal.const_set($nesting[0], 'CC_WORD', \"\" + ($$($nesting, 'CC_ALNUM')) + ($$($nesting, 'P_Pc')));\n    Opal.const_set($nesting[0], 'CG_WORD', \"\" + \"[\" + ($$($nesting, 'CC_WORD')) + \"]\");\n    Opal.const_set($nesting[0], 'CG_BLANK', \"[ \\\\t]\");\n    Opal.const_set($nesting[0], 'CC_EOL', \"(?=\\\\n|$)\");\n    Opal.const_set($nesting[0], 'CG_GRAPH', \"[^\\\\s\\\\x00-\\\\x1F\\\\x7F]\");\n    Opal.const_set($nesting[0], 'CC_ALL', \"[\\\\s\\\\S]\");\n    Opal.const_set($nesting[0], 'CC_ANY', \"[^\\\\n]\");\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"strscan\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send;\n\n  Opal.add_stubs(['$attr_reader', '$anchor', '$scan_until', '$length', '$size', '$rest', '$pos=', '$-', '$private']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'StringScanner');\n\n    var $nesting = [self].concat($parent_nesting), $StringScanner_initialize$1, $StringScanner_beginning_of_line$ques$2, $StringScanner_scan$3, $StringScanner_scan_until$4, $StringScanner_$$$5, $StringScanner_check$6, $StringScanner_check_until$7, $StringScanner_peek$8, $StringScanner_eos$ques$9, $StringScanner_exist$ques$10, $StringScanner_skip$11, $StringScanner_skip_until$12, $StringScanner_get_byte$13, $StringScanner_match$ques$14, $StringScanner_pos$eq$15, $StringScanner_matched_size$16, $StringScanner_post_match$17, $StringScanner_pre_match$18, $StringScanner_reset$19, $StringScanner_rest$20, $StringScanner_rest$ques$21, $StringScanner_rest_size$22, $StringScanner_terminate$23, $StringScanner_unscan$24, $StringScanner_anchor$25;\n\n    self.$$prototype.pos = self.$$prototype.string = self.$$prototype.working = self.$$prototype.matched = self.$$prototype.prev_pos = self.$$prototype.match = nil;\n    \n    self.$attr_reader(\"pos\");\n    self.$attr_reader(\"matched\");\n    \n    Opal.def(self, '$initialize', $StringScanner_initialize$1 = function $$initialize(string) {\n      var self = this;\n\n      \n      self.string = string;\n      self.pos = 0;\n      self.matched = nil;\n      self.working = string;\n      return (self.match = []);\n    }, $StringScanner_initialize$1.$$arity = 1);\n    self.$attr_reader(\"string\");\n    \n    Opal.def(self, '$beginning_of_line?', $StringScanner_beginning_of_line$ques$2 = function() {\n      var self = this;\n\n      return self.pos === 0 || self.string.charAt(self.pos - 1) === \"\\n\"\n    }, $StringScanner_beginning_of_line$ques$2.$$arity = 0);\n    Opal.alias(self, \"bol?\", \"beginning_of_line?\");\n    \n    Opal.def(self, '$scan', $StringScanner_scan$3 = function $$scan(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return self.matched = nil;\n      }\n      else if (typeof(result) === 'object') {\n        self.prev_pos = self.pos;\n        self.pos     += result[0].length;\n        self.working  = self.working.substring(result[0].length);\n        self.matched  = result[0];\n        self.match    = result;\n\n        return result[0];\n      }\n      else if (typeof(result) === 'string') {\n        self.pos     += result.length;\n        self.working  = self.working.substring(result.length);\n\n        return result;\n      }\n      else {\n        return nil;\n      }\n    ;\n    }, $StringScanner_scan$3.$$arity = 1);\n    \n    Opal.def(self, '$scan_until', $StringScanner_scan_until$4 = function $$scan_until(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var pos     = self.pos,\n          working = self.working,\n          result;\n\n      while (true) {\n        result   = pattern.exec(working);\n        pos     += 1;\n        working  = working.substr(1);\n\n        if (result == null) {\n          if (working.length === 0) {\n            return self.matched = nil;\n          }\n\n          continue;\n        }\n\n        self.matched  = self.string.substr(self.pos, pos - self.pos - 1 + result[0].length);\n        self.prev_pos = pos - 1;\n        self.pos      = pos;\n        self.working  = working.substr(result[0].length);\n\n        return self.matched;\n      }\n    ;\n    }, $StringScanner_scan_until$4.$$arity = 1);\n    \n    Opal.def(self, '$[]', $StringScanner_$$$5 = function(idx) {\n      var self = this;\n\n      \n      var match = self.match;\n\n      if (idx < 0) {\n        idx += match.length;\n      }\n\n      if (idx < 0 || idx >= match.length) {\n        return nil;\n      }\n\n      if (match[idx] == null) {\n        return nil;\n      }\n\n      return match[idx];\n    \n    }, $StringScanner_$$$5.$$arity = 1);\n    \n    Opal.def(self, '$check', $StringScanner_check$6 = function $$check(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return self.matched = nil;\n      }\n\n      return self.matched = result[0];\n    ;\n    }, $StringScanner_check$6.$$arity = 1);\n    \n    Opal.def(self, '$check_until', $StringScanner_check_until$7 = function $$check_until(pattern) {\n      var self = this;\n\n      \n      var prev_pos = self.prev_pos,\n          pos      = self.pos;\n\n      var result = self.$scan_until(pattern);\n\n      if (result !== nil) {\n        self.matched = result.substr(-1);\n        self.working = self.string.substr(pos);\n      }\n\n      self.prev_pos = prev_pos;\n      self.pos      = pos;\n\n      return result;\n    \n    }, $StringScanner_check_until$7.$$arity = 1);\n    \n    Opal.def(self, '$peek', $StringScanner_peek$8 = function $$peek(length) {\n      var self = this;\n\n      return self.working.substring(0, length)\n    }, $StringScanner_peek$8.$$arity = 1);\n    \n    Opal.def(self, '$eos?', $StringScanner_eos$ques$9 = function() {\n      var self = this;\n\n      return self.working.length === 0\n    }, $StringScanner_eos$ques$9.$$arity = 0);\n    \n    Opal.def(self, '$exist?', $StringScanner_exist$ques$10 = function(pattern) {\n      var self = this;\n\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return nil;\n      }\n      else if (result.index == 0) {\n        return 0;\n      }\n      else {\n        return result.index + 1;\n      }\n    \n    }, $StringScanner_exist$ques$10.$$arity = 1);\n    \n    Opal.def(self, '$skip', $StringScanner_skip$11 = function $$skip(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return self.matched = nil;\n      }\n      else {\n        var match_str = result[0];\n        var match_len = match_str.length;\n\n        self.matched   = match_str;\n        self.prev_pos  = self.pos;\n        self.pos      += match_len;\n        self.working   = self.working.substring(match_len);\n\n        return match_len;\n      }\n    ;\n    }, $StringScanner_skip$11.$$arity = 1);\n    \n    Opal.def(self, '$skip_until', $StringScanner_skip_until$12 = function $$skip_until(pattern) {\n      var self = this;\n\n      \n      var result = self.$scan_until(pattern);\n\n      if (result === nil) {\n        return nil;\n      }\n      else {\n        self.matched = result.substr(-1);\n\n        return result.length;\n      }\n    \n    }, $StringScanner_skip_until$12.$$arity = 1);\n    \n    Opal.def(self, '$get_byte', $StringScanner_get_byte$13 = function $$get_byte() {\n      var self = this;\n\n      \n      var result = nil;\n\n      if (self.pos < self.string.length) {\n        self.prev_pos  = self.pos;\n        self.pos      += 1;\n        result      = self.matched = self.working.substring(0, 1);\n        self.working   = self.working.substring(1);\n      }\n      else {\n        self.matched = nil;\n      }\n\n      return result;\n    \n    }, $StringScanner_get_byte$13.$$arity = 0);\n    Opal.alias(self, \"getch\", \"get_byte\");\n    \n    Opal.def(self, '$match?', $StringScanner_match$ques$14 = function(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return nil;\n      }\n      else {\n        self.prev_pos = self.pos;\n\n        return result[0].length;\n      }\n    ;\n    }, $StringScanner_match$ques$14.$$arity = 1);\n    \n    Opal.def(self, '$pos=', $StringScanner_pos$eq$15 = function(pos) {\n      var self = this;\n\n      \n      \n      if (pos < 0) {\n        pos += self.string.$length();\n      }\n    ;\n      self.pos = pos;\n      return (self.working = self.string.slice(pos));\n    }, $StringScanner_pos$eq$15.$$arity = 1);\n    \n    Opal.def(self, '$matched_size', $StringScanner_matched_size$16 = function $$matched_size() {\n      var self = this;\n\n      \n      if (self.matched === nil) {\n        return nil;\n      }\n\n      return self.matched.length\n    \n    }, $StringScanner_matched_size$16.$$arity = 0);\n    \n    Opal.def(self, '$post_match', $StringScanner_post_match$17 = function $$post_match() {\n      var self = this;\n\n      \n      if (self.matched === nil) {\n        return nil;\n      }\n\n      return self.string.substr(self.pos);\n    \n    }, $StringScanner_post_match$17.$$arity = 0);\n    \n    Opal.def(self, '$pre_match', $StringScanner_pre_match$18 = function $$pre_match() {\n      var self = this;\n\n      \n      if (self.matched === nil) {\n        return nil;\n      }\n\n      return self.string.substr(0, self.prev_pos);\n    \n    }, $StringScanner_pre_match$18.$$arity = 0);\n    \n    Opal.def(self, '$reset', $StringScanner_reset$19 = function $$reset() {\n      var self = this;\n\n      \n      self.working = self.string;\n      self.matched = nil;\n      return (self.pos = 0);\n    }, $StringScanner_reset$19.$$arity = 0);\n    \n    Opal.def(self, '$rest', $StringScanner_rest$20 = function $$rest() {\n      var self = this;\n\n      return self.working\n    }, $StringScanner_rest$20.$$arity = 0);\n    \n    Opal.def(self, '$rest?', $StringScanner_rest$ques$21 = function() {\n      var self = this;\n\n      return self.working.length !== 0\n    }, $StringScanner_rest$ques$21.$$arity = 0);\n    \n    Opal.def(self, '$rest_size', $StringScanner_rest_size$22 = function $$rest_size() {\n      var self = this;\n\n      return self.$rest().$size()\n    }, $StringScanner_rest_size$22.$$arity = 0);\n    \n    Opal.def(self, '$terminate', $StringScanner_terminate$23 = function $$terminate() {\n      var self = this, $writer = nil;\n\n      \n      self.match = nil;\n      \n      $writer = [self.string.$length()];\n      $send(self, 'pos=', Opal.to_a($writer));\n      return $writer[$rb_minus($writer[\"length\"], 1)];;\n    }, $StringScanner_terminate$23.$$arity = 0);\n    \n    Opal.def(self, '$unscan', $StringScanner_unscan$24 = function $$unscan() {\n      var self = this;\n\n      \n      self.pos = self.prev_pos;\n      self.prev_pos = nil;\n      self.match = nil;\n      return self;\n    }, $StringScanner_unscan$24.$$arity = 0);\n    self.$private();\n    return (Opal.def(self, '$anchor', $StringScanner_anchor$25 = function $$anchor(pattern) {\n      var self = this;\n\n      \n      var flags = pattern.toString().match(/\\/([^\\/]+)$/);\n      flags = flags ? flags[1] : undefined;\n      return new RegExp('^(?:' + pattern.source + ')', flags);\n    \n    }, $StringScanner_anchor$25.$$arity = 1), nil) && 'anchor';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"asciidoctor/js/opal_ext\");\n  self.$require(\"asciidoctor/js/rx\");\n  return self.$require(\"strscan\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/core_ext/nil_or_empty\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$method_defined?']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NilClass');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"nil?\")\n    }\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"empty?\")\n    }\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Array');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"empty?\")\n    }\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Hash');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"empty?\")\n    }\n  })($nesting[0], null, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Numeric');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"nil?\")\n    }\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/core_ext/hash/merge\"] = function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var $$1, self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$==', '$arity', '$instance_method', '$send', '$new', '$<', '$length', '$>', '$inject', '$merge', '$[]']);\n  if ($$($nesting, 'Hash').$instance_method(\"merge\").$arity()['$=='](1)) {\n    return $$($nesting, 'Hash').$send(\"prepend\", $send($$($nesting, 'Module'), 'new', [], ($$1 = function(){var self = $$1.$$s || this, $merge$2;\n\n    return (Opal.def(self, '$merge', $merge$2 = function $$merge($a) {\n        var $post_args, args, $$3, $iter = $merge$2.$$p, $yield = $iter || nil, self = this, len = nil;\n\n        if ($iter) $merge$2.$$p = null;\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        if ($truthy($rb_lt((len = args.$length()), 1))) {\n          return $send(self, Opal.find_super_dispatcher(self, 'merge', $merge$2, false), [$hash2([], {})], null)\n        } else {\n          \n          if ($truthy($rb_gt(len, 1))) {\n            return $send(args, 'inject', [self], ($$3 = function(acc, arg){var self = $$3.$$s || this;\n\n            \n              \n              if (acc == null) {\n                acc = nil;\n              };\n              \n              if (arg == null) {\n                arg = nil;\n              };\n              return acc.$merge(arg);}, $$3.$$s = self, $$3.$$arity = 2, $$3))\n          } else {\n            \n            return $send(self, Opal.find_super_dispatcher(self, 'merge', $merge$2, false), [args['$[]'](0)], null);\n          };\n        };\n      }, $merge$2.$$arity = -1), nil) && 'merge'}, $$1.$$s = self, $$1.$$arity = 0, $$1)))\n  } else {\n    return nil\n  }\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/core_ext/match_data/names\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $truthy = Opal.truthy, $klass = Opal.klass;\n\n  Opal.add_stubs(['$method_defined?']);\n  if ($truthy($$($nesting, 'MatchData')['$method_defined?'](\"names\"))) {\n    return nil\n  } else {\n    return (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'MatchData');\n\n      var $nesting = [self].concat($parent_nesting), $MatchData_names$1;\n\n      return (Opal.def(self, '$names', $MatchData_names$1 = function $$names() {\n        var self = this;\n\n        return []\n      }, $MatchData_names$1.$$arity = 0), nil) && 'names'\n    })($nesting[0], null, $nesting)\n  }\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/core_ext\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$==']);\n  \n  self.$require(\"asciidoctor/core_ext.rb\"+ '/../' + \"core_ext/nil_or_empty\");\n  self.$require(\"asciidoctor/core_ext.rb\"+ '/../' + \"core_ext/hash/merge\");\n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    return self.$require(\"asciidoctor/core_ext.rb\"+ '/../' + \"core_ext/match_data/names\")\n  } else {\n    return nil\n  };\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/helpers\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy, $gvars = Opal.gvars, $send = Opal.send, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$module_function', '$require', '$include?', '$include', '$==', '$===', '$path', '$message', '$raise', '$warn', '$logger', '$chomp', '$empty?', '$slice', '$unpack', '$[]', '$byteslice', '$bytesize', '$[]=', '$-', '$map', '$rstrip', '$encode', '$encoding', '$nil_or_empty?', '$!=', '$tap', '$each_line', '$<<', '$match?', '$gsub', '$rindex', '$index', '$basename', '$extname', '$!', '$length', '$directory?', '$dirname', '$mkdir_p', '$mkdir', '$private_constant', '$join', '$divmod', '$*', '$+', '$to_i', '$to_s', '$chr', '$ord', '$class_for_name', '$const_get']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Helpers');\n\n      var $nesting = [self].concat($parent_nesting), $Helpers_require_library$1, $Helpers_prepare_source_array$2, $Helpers_prepare_source_string$7, $Helpers_uriish$ques$10, $Helpers_encode_uri_component$11, $Helpers_encode_spaces_in_uri$12, $Helpers_rootname$13, $Helpers_basename$14, $Helpers_extname$ques$15, $Helpers_extname$16, $Helpers_extname$17, $Helpers_mkdir_p$18, $Helpers_int_to_roman$19, $Helpers_nextval$21, $Helpers_resolve_class$22, $Helpers_class_for_name$23;\n\n      \n      self.$module_function();\n      \n      Opal.def(self, '$require_library', $Helpers_require_library$1 = function $$require_library(name, gem_name, on_failure) {\n        var self = this, $case = nil, details = nil;\n        if ($gvars[\"!\"] == null) $gvars[\"!\"] = nil;\n\n        \n        \n        if (gem_name == null) {\n          gem_name = true;\n        };\n        \n        if (on_failure == null) {\n          on_failure = \"abort\";\n        };\n        try {\n          return self.$require(name)\n        } catch ($err) {\n          if (Opal.rescue($err, [$$$('::', 'LoadError')])) {\n            try {\n              \n              if ($truthy(self['$include?']($$($nesting, 'Logging')))) {\n              } else {\n                self.$include($$($nesting, 'Logging'))\n              };\n              if ($truthy(gem_name)) {\n                \n                if (gem_name['$=='](true)) {\n                  gem_name = name};\n                $case = on_failure;\n                if (\"abort\"['$===']($case)) {\n                details = (function() {if ($gvars[\"!\"].$path()['$=='](gem_name)) {\n                  return \"\"\n                } else {\n                  return \"\" + \" (reason: \" + ((function() {if ($truthy($gvars[\"!\"].$path())) {\n                    return \"\" + \"cannot load '\" + ($gvars[\"!\"].$path()) + \"'\"\n                  } else {\n                    return $gvars[\"!\"].$message()\n                  }; return nil; })()) + \")\"\n                }; return nil; })();\n                self.$raise($$$('::', 'LoadError'), \"\" + \"asciidoctor: FAILED: required gem '\" + (gem_name) + \"' is not available\" + (details) + \". Processing aborted.\");}\n                else if (\"warn\"['$===']($case)) {\n                details = (function() {if ($gvars[\"!\"].$path()['$=='](gem_name)) {\n                  return \"\"\n                } else {\n                  return \"\" + \" (reason: \" + ((function() {if ($truthy($gvars[\"!\"].$path())) {\n                    return \"\" + \"cannot load '\" + ($gvars[\"!\"].$path()) + \"'\"\n                  } else {\n                    return $gvars[\"!\"].$message()\n                  }; return nil; })()) + \")\"\n                }; return nil; })();\n                self.$logger().$warn(\"\" + \"optional gem '\" + (gem_name) + \"' is not available\" + (details) + \". Functionality disabled.\");};\n              } else {\n                $case = on_failure;\n                if (\"abort\"['$===']($case)) {self.$raise($$$('::', 'LoadError'), \"\" + \"asciidoctor: FAILED: \" + ($gvars[\"!\"].$message().$chomp(\".\")) + \". Processing aborted.\")}\n                else if (\"warn\"['$===']($case)) {self.$logger().$warn(\"\" + ($gvars[\"!\"].$message().$chomp(\".\")) + \". Functionality disabled.\")}\n              };\n              return nil;\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };\n      }, $Helpers_require_library$1.$$arity = -2);\n      \n      Opal.def(self, '$prepare_source_array', $Helpers_prepare_source_array$2 = function $$prepare_source_array(data) {\n        var $$3, $$4, $$5, $$6, self = this, leading_2_bytes = nil, leading_bytes = nil, first = nil, $writer = nil;\n\n        \n        if ($truthy(data['$empty?']())) {\n          return []};\n        if ((leading_2_bytes = (leading_bytes = (first = data['$[]'](0)).$unpack(\"C3\")).$slice(0, 2))['$==']($$($nesting, 'BOM_BYTES_UTF_16LE'))) {\n          \n          \n          $writer = [0, first.$byteslice(2, first.$bytesize())];\n          $send(data, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return $send(data, 'map', [], ($$3 = function(line){var self = $$3.$$s || this;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            return line.$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16LE')).$rstrip();}, $$3.$$s = self, $$3.$$arity = 1, $$3));\n        } else if (leading_2_bytes['$==']($$($nesting, 'BOM_BYTES_UTF_16BE'))) {\n          \n          \n          $writer = [0, first.$byteslice(2, first.$bytesize())];\n          $send(data, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return $send(data, 'map', [], ($$4 = function(line){var self = $$4.$$s || this;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            return line.$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16BE')).$rstrip();}, $$4.$$s = self, $$4.$$arity = 1, $$4));\n        } else if (leading_bytes['$==']($$($nesting, 'BOM_BYTES_UTF_8'))) {\n          \n          $writer = [0, first.$byteslice(3, first.$bytesize())];\n          $send(data, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if (first.$encoding()['$==']($$($nesting, 'UTF_8'))) {\n          return $send(data, 'map', [], ($$5 = function(line){var self = $$5.$$s || this;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            return line.$rstrip();}, $$5.$$s = self, $$5.$$arity = 1, $$5))\n        } else {\n          return $send(data, 'map', [], ($$6 = function(line){var self = $$6.$$s || this;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            return line.$encode($$($nesting, 'UTF_8')).$rstrip();}, $$6.$$s = self, $$6.$$arity = 1, $$6))\n        };\n      }, $Helpers_prepare_source_array$2.$$arity = 1);\n      \n      Opal.def(self, '$prepare_source_string', $Helpers_prepare_source_string$7 = function $$prepare_source_string(data) {\n        var $$8, self = this, leading_2_bytes = nil, leading_bytes = nil;\n\n        \n        if ($truthy(data['$nil_or_empty?']())) {\n          return []};\n        if ((leading_2_bytes = (leading_bytes = data.$unpack(\"C3\")).$slice(0, 2))['$==']($$($nesting, 'BOM_BYTES_UTF_16LE'))) {\n          data = data.$byteslice(2, data.$bytesize()).$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16LE'))\n        } else if (leading_2_bytes['$==']($$($nesting, 'BOM_BYTES_UTF_16BE'))) {\n          data = data.$byteslice(2, data.$bytesize()).$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16BE'))\n        } else if (leading_bytes['$==']($$($nesting, 'BOM_BYTES_UTF_8'))) {\n          \n          data = data.$byteslice(3, data.$bytesize());\n          if (data.$encoding()['$==']($$($nesting, 'UTF_8'))) {\n          } else {\n            data = data.$encode($$($nesting, 'UTF_8'))\n          };\n        } else if ($truthy(data.$encoding()['$!=']($$($nesting, 'UTF_8')))) {\n          data = data.$encode($$($nesting, 'UTF_8'))};\n        return $send([], 'tap', [], ($$8 = function(lines){var self = $$8.$$s || this, $$9;\n\n        \n          \n          if (lines == null) {\n            lines = nil;\n          };\n          return $send(data, 'each_line', [], ($$9 = function(line){var self = $$9.$$s || this;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            return lines['$<<'](line.$rstrip());}, $$9.$$s = self, $$9.$$arity = 1, $$9));}, $$8.$$s = self, $$8.$$arity = 1, $$8));\n      }, $Helpers_prepare_source_string$7.$$arity = 1);\n      \n      Opal.def(self, '$uriish?', $Helpers_uriish$ques$10 = function(str) {\n        var $a, self = this;\n\n        return ($truthy($a = str['$include?'](\":\")) ? $$($nesting, 'UriSniffRx')['$match?'](str) : $a)\n      }, $Helpers_uriish$ques$10.$$arity = 1);\n      if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        \n        Opal.def(self, '$encode_uri_component', $Helpers_encode_uri_component$11 = function $$encode_uri_component(str) {\n          var self = this;\n\n          \n        return encodeURIComponent(str).replace(/%20|[!'()*]/g, function (m) {\n          return m === '%20' ? '+' : '%' + m.charCodeAt(0).toString(16)\n        })\n      \n        }, $Helpers_encode_uri_component$11.$$arity = 1)\n      } else {\n        nil\n      };\n      \n      Opal.def(self, '$encode_spaces_in_uri', $Helpers_encode_spaces_in_uri$12 = function $$encode_spaces_in_uri(str) {\n        var self = this;\n\n        if ($truthy(str['$include?'](\" \"))) {\n          \n          return str.$gsub(\" \", \"%20\");\n        } else {\n          return str\n        }\n      }, $Helpers_encode_spaces_in_uri$12.$$arity = 1);\n      \n      Opal.def(self, '$rootname', $Helpers_rootname$13 = function $$rootname(filename) {\n        var self = this, last_dot_idx = nil;\n\n        if ($truthy((last_dot_idx = filename.$rindex(\".\")))) {\n          if ($truthy(filename.$index(\"/\", last_dot_idx))) {\n            return filename\n          } else {\n            \n            return filename.$slice(0, last_dot_idx);\n          }\n        } else {\n          return filename\n        }\n      }, $Helpers_rootname$13.$$arity = 1);\n      \n      Opal.def(self, '$basename', $Helpers_basename$14 = function $$basename(filename, drop_ext) {\n        var self = this;\n\n        \n        \n        if (drop_ext == null) {\n          drop_ext = nil;\n        };\n        if ($truthy(drop_ext)) {\n          return $$$('::', 'File').$basename(filename, (function() {if (drop_ext['$=='](true)) {\n            \n            return self.$extname(filename);\n          } else {\n            return drop_ext\n          }; return nil; })())\n        } else {\n          return $$$('::', 'File').$basename(filename)\n        };\n      }, $Helpers_basename$14.$$arity = -2);\n      \n      Opal.def(self, '$extname?', $Helpers_extname$ques$15 = function(path) {\n        var $a, self = this, last_dot_idx = nil;\n\n        return ($truthy($a = (last_dot_idx = path.$rindex(\".\"))) ? path.$index(\"/\", last_dot_idx)['$!']() : $a)\n      }, $Helpers_extname$ques$15.$$arity = 1);\n      if ($truthy($$$($$$('::', 'File'), 'ALT_SEPARATOR'))) {\n        \n        Opal.def(self, '$extname', $Helpers_extname$16 = function $$extname(path, fallback) {\n          var $a, self = this, last_dot_idx = nil;\n\n          \n          \n          if (fallback == null) {\n            fallback = \"\";\n          };\n          if ($truthy((last_dot_idx = path.$rindex(\".\")))) {\n            if ($truthy(($truthy($a = path.$index(\"/\", last_dot_idx)) ? $a : path.$index($$$($$$('::', 'File'), 'ALT_SEPARATOR'), last_dot_idx)))) {\n              return fallback\n            } else {\n              \n              return path.$slice(last_dot_idx, path.$length());\n            }\n          } else {\n            return fallback\n          };\n        }, $Helpers_extname$16.$$arity = -2)\n      } else {\n        \n        Opal.def(self, '$extname', $Helpers_extname$17 = function $$extname(path, fallback) {\n          var self = this, last_dot_idx = nil;\n\n          \n          \n          if (fallback == null) {\n            fallback = \"\";\n          };\n          if ($truthy((last_dot_idx = path.$rindex(\".\")))) {\n            if ($truthy(path.$index(\"/\", last_dot_idx))) {\n              return fallback\n            } else {\n              \n              return path.$slice(last_dot_idx, path.$length());\n            }\n          } else {\n            return fallback\n          };\n        }, $Helpers_extname$17.$$arity = -2)\n      };\n      \n      Opal.def(self, '$mkdir_p', $Helpers_mkdir_p$18 = function $$mkdir_p(dir) {\n        var self = this, parent_dir = nil;\n\n        if ($truthy($$$('::', 'File')['$directory?'](dir))) {\n          return nil\n        } else {\n          \n          if ((parent_dir = $$$('::', 'File').$dirname(dir))['$=='](\".\")) {\n          } else {\n            self.$mkdir_p(parent_dir)\n          };\n          \n          try {\n            return $$$('::', 'Dir').$mkdir(dir)\n          } catch ($err) {\n            if (Opal.rescue($err, [$$$('::', 'SystemCallError')])) {\n              try {\n                if ($truthy($$$('::', 'File')['$directory?'](dir))) {\n                  return nil\n                } else {\n                  return self.$raise()\n                }\n              } finally { Opal.pop_exception() }\n            } else { throw $err; }\n          };;\n        }\n      }, $Helpers_mkdir_p$18.$$arity = 1);\n      Opal.const_set($nesting[0], 'ROMAN_NUMERALS', $hash2([\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"], {\"M\": 1000, \"CM\": 900, \"D\": 500, \"CD\": 400, \"C\": 100, \"XC\": 90, \"L\": 50, \"XL\": 40, \"X\": 10, \"IX\": 9, \"V\": 5, \"IV\": 4, \"I\": 1}));\n      self.$private_constant(\"ROMAN_NUMERALS\");\n      \n      Opal.def(self, '$int_to_roman', $Helpers_int_to_roman$19 = function $$int_to_roman(val) {\n        var $$20, self = this;\n\n        return $send($$($nesting, 'ROMAN_NUMERALS'), 'map', [], ($$20 = function(l, i){var self = $$20.$$s || this, $a, $b, repeat = nil;\n\n        \n          \n          if (l == null) {\n            l = nil;\n          };\n          \n          if (i == null) {\n            i = nil;\n          };\n          $b = val.$divmod(i), $a = Opal.to_ary($b), (repeat = ($a[0] == null ? nil : $a[0])), (val = ($a[1] == null ? nil : $a[1])), $b;\n          return $rb_times(l, repeat);}, $$20.$$s = self, $$20.$$arity = 2, $$20)).$join()\n      }, $Helpers_int_to_roman$19.$$arity = 1);\n      \n      Opal.def(self, '$nextval', $Helpers_nextval$21 = function $$nextval(current) {\n        var self = this, intval = nil;\n\n        if ($truthy($$$('::', 'Integer')['$==='](current))) {\n          return $rb_plus(current, 1)\n        } else {\n          \n          intval = current.$to_i();\n          if ($truthy(intval.$to_s()['$!='](current.$to_s()))) {\n            return $rb_plus(current['$[]'](0).$ord(), 1).$chr()\n          } else {\n            return $rb_plus(intval, 1)\n          };\n        }\n      }, $Helpers_nextval$21.$$arity = 1);\n      \n      Opal.def(self, '$resolve_class', $Helpers_resolve_class$22 = function $$resolve_class(object) {\n        var self = this;\n\n        if ($truthy($$$('::', 'Class')['$==='](object))) {\n          return object\n        } else {\n          \n          if ($truthy($$$('::', 'String')['$==='](object))) {\n            \n            return self.$class_for_name(object);\n          } else {\n            return nil\n          };\n        }\n      }, $Helpers_resolve_class$22.$$arity = 1);\n      \n      Opal.def(self, '$class_for_name', $Helpers_class_for_name$23 = function $$class_for_name(qualified_name) {\n        var self = this, resolved = nil;\n\n        try {\n          \n          if ($truthy($$$('::', 'Class')['$===']((resolved = $$$('::', 'Object').$const_get(qualified_name, false))))) {\n          } else {\n            self.$raise()\n          };\n          return resolved;\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n            try {\n              return self.$raise($$$('::', 'NameError'), \"\" + \"Could not resolve class for name: \" + (qualified_name))\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        }\n      }, $Helpers_class_for_name$23.$$arity = 1);\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"logger\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $module = Opal.module, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$include', '$to_h', '$map', '$constants', '$const_get', '$to_s', '$format', '$chr', '$strftime', '$message_as_string', '$===', '$+', '$message', '$class', '$join', '$backtrace', '$inspect', '$attr_reader', '$attr_accessor', '$new', '$key', '$upcase', '$raise', '$add', '$to_proc', '$<=', '$<', '$write', '$call', '$[]', '$now']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Logger');\n\n    var $nesting = [self].concat($parent_nesting), $Logger$1, $Logger_initialize$4, $Logger_level$eq$5, $Logger_info$6, $Logger_debug$7, $Logger_warn$8, $Logger_error$9, $Logger_fatal$10, $Logger_unknown$11, $Logger_info$ques$12, $Logger_debug$ques$13, $Logger_warn$ques$14, $Logger_error$ques$15, $Logger_fatal$ques$16, $Logger_add$17;\n\n    self.$$prototype.level = self.$$prototype.progname = self.$$prototype.pipe = self.$$prototype.formatter = nil;\n    \n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Severity');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      \n      Opal.const_set($nesting[0], 'DEBUG', 0);\n      Opal.const_set($nesting[0], 'INFO', 1);\n      Opal.const_set($nesting[0], 'WARN', 2);\n      Opal.const_set($nesting[0], 'ERROR', 3);\n      Opal.const_set($nesting[0], 'FATAL', 4);\n      Opal.const_set($nesting[0], 'UNKNOWN', 5);\n    })($nesting[0], $nesting);\n    self.$include($$($nesting, 'Severity'));\n    Opal.const_set($nesting[0], 'SEVERITY_LABELS', $send($$($nesting, 'Severity').$constants(), 'map', [], ($Logger$1 = function(s){var self = $Logger$1.$$s || this;\n\n    \n      \n      if (s == null) {\n        s = nil;\n      };\n      return [$$($nesting, 'Severity').$const_get(s), s.$to_s()];}, $Logger$1.$$s = self, $Logger$1.$$arity = 1, $Logger$1)).$to_h());\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Formatter');\n\n      var $nesting = [self].concat($parent_nesting), $Formatter_call$2, $Formatter_message_as_string$3;\n\n      \n      Opal.const_set($nesting[0], 'MESSAGE_FORMAT', \"%s, [%s] %5s -- %s: %s\\n\");\n      Opal.const_set($nesting[0], 'DATE_TIME_FORMAT', \"%Y-%m-%dT%H:%M:%S.%6N\");\n      \n      Opal.def(self, '$call', $Formatter_call$2 = function $$call(severity, time, progname, msg) {\n        var self = this;\n\n        return self.$format($$($nesting, 'MESSAGE_FORMAT'), severity.$chr(), time.$strftime($$($nesting, 'DATE_TIME_FORMAT')), severity, progname, self.$message_as_string(msg))\n      }, $Formatter_call$2.$$arity = 4);\n      return (Opal.def(self, '$message_as_string', $Formatter_message_as_string$3 = function $$message_as_string(msg) {\n        var $a, self = this, $case = nil;\n\n        return (function() {$case = msg;\n        if ($$$('::', 'String')['$===']($case)) {return msg}\n        else if ($$$('::', 'Exception')['$===']($case)) {return $rb_plus(\"\" + (msg.$message()) + \" (\" + (msg.$class()) + \")\\n\", ($truthy($a = msg.$backtrace()) ? $a : []).$join(\"\\n\"))}\n        else {return msg.$inspect()}})()\n      }, $Formatter_message_as_string$3.$$arity = 1), nil) && 'message_as_string';\n    })($nesting[0], null, $nesting);\n    self.$attr_reader(\"level\");\n    self.$attr_accessor(\"progname\");\n    self.$attr_accessor(\"formatter\");\n    \n    Opal.def(self, '$initialize', $Logger_initialize$4 = function $$initialize(pipe) {\n      var self = this;\n\n      \n      self.pipe = pipe;\n      self.level = $$($nesting, 'DEBUG');\n      return (self.formatter = $$($nesting, 'Formatter').$new());\n    }, $Logger_initialize$4.$$arity = 1);\n    \n    Opal.def(self, '$level=', $Logger_level$eq$5 = function(severity) {\n      var self = this, level = nil;\n\n      if ($truthy($$$('::', 'Integer')['$==='](severity))) {\n        return (self.level = severity)\n      } else if ($truthy((level = $$($nesting, 'SEVERITY_LABELS').$key(severity.$to_s().$upcase())))) {\n        return (self.level = level)\n      } else {\n        return self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid log level: \" + (severity))\n      }\n    }, $Logger_level$eq$5.$$arity = 1);\n    \n    Opal.def(self, '$info', $Logger_info$6 = function $$info(progname) {\n      var $iter = $Logger_info$6.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_info$6.$$p = null;\n      \n      \n      if ($iter) $Logger_info$6.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'INFO'), nil, progname], block.$to_proc());\n    }, $Logger_info$6.$$arity = -1);\n    \n    Opal.def(self, '$debug', $Logger_debug$7 = function $$debug(progname) {\n      var $iter = $Logger_debug$7.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_debug$7.$$p = null;\n      \n      \n      if ($iter) $Logger_debug$7.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'DEBUG'), nil, progname], block.$to_proc());\n    }, $Logger_debug$7.$$arity = -1);\n    \n    Opal.def(self, '$warn', $Logger_warn$8 = function $$warn(progname) {\n      var $iter = $Logger_warn$8.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_warn$8.$$p = null;\n      \n      \n      if ($iter) $Logger_warn$8.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'WARN'), nil, progname], block.$to_proc());\n    }, $Logger_warn$8.$$arity = -1);\n    \n    Opal.def(self, '$error', $Logger_error$9 = function $$error(progname) {\n      var $iter = $Logger_error$9.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_error$9.$$p = null;\n      \n      \n      if ($iter) $Logger_error$9.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'ERROR'), nil, progname], block.$to_proc());\n    }, $Logger_error$9.$$arity = -1);\n    \n    Opal.def(self, '$fatal', $Logger_fatal$10 = function $$fatal(progname) {\n      var $iter = $Logger_fatal$10.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_fatal$10.$$p = null;\n      \n      \n      if ($iter) $Logger_fatal$10.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'FATAL'), nil, progname], block.$to_proc());\n    }, $Logger_fatal$10.$$arity = -1);\n    \n    Opal.def(self, '$unknown', $Logger_unknown$11 = function $$unknown(progname) {\n      var $iter = $Logger_unknown$11.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_unknown$11.$$p = null;\n      \n      \n      if ($iter) $Logger_unknown$11.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'UNKNOWN'), nil, progname], block.$to_proc());\n    }, $Logger_unknown$11.$$arity = -1);\n    \n    Opal.def(self, '$info?', $Logger_info$ques$12 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'INFO'))\n    }, $Logger_info$ques$12.$$arity = 0);\n    \n    Opal.def(self, '$debug?', $Logger_debug$ques$13 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'DEBUG'))\n    }, $Logger_debug$ques$13.$$arity = 0);\n    \n    Opal.def(self, '$warn?', $Logger_warn$ques$14 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'WARN'))\n    }, $Logger_warn$ques$14.$$arity = 0);\n    \n    Opal.def(self, '$error?', $Logger_error$ques$15 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'ERROR'))\n    }, $Logger_error$ques$15.$$arity = 0);\n    \n    Opal.def(self, '$fatal?', $Logger_fatal$ques$16 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'FATAL'))\n    }, $Logger_fatal$ques$16.$$arity = 0);\n    return (Opal.def(self, '$add', $Logger_add$17 = function $$add(severity, message, progname) {\n      var $iter = $Logger_add$17.$$p, block = $iter || nil, $a, self = this;\n\n      if ($iter) $Logger_add$17.$$p = null;\n      \n      \n      if ($iter) $Logger_add$17.$$p = null;;\n      \n      if (message == null) {\n        message = nil;\n      };\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      if ($truthy($rb_lt((severity = ($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), self.level))) {\n        return true};\n      progname = ($truthy($a = progname) ? $a : self.progname);\n      if ($truthy(message)) {\n      } else if ((block !== nil)) {\n        message = Opal.yieldX(block, [])\n      } else {\n        \n        message = progname;\n        progname = self.progname;\n      };\n      self.pipe.$write(self.formatter.$call(($truthy($a = $$($nesting, 'SEVERITY_LABELS')['$[]'](severity)) ? $a : \"ANY\"), $$$('::', 'Time').$now(), progname, message));\n      return true;\n    }, $Logger_add$17.$$arity = -2), nil) && 'add';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/logging\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$require', '$attr_reader', '$progname=', '$-', '$new', '$formatter=', '$level=', '$>', '$[]', '$===', '$inspect', '$tap', '$each', '$constants', '$const_get', '$[]=', '$<<', '$clear', '$empty?', '$max', '$map', '$attr_accessor', '$memoize_logger', '$private', '$private_class_method', '$extend', '$logger', '$merge']);\n  \n  self.$require(\"logger\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Logger');\n\n      var $nesting = [self].concat($parent_nesting), $Logger_initialize$1, $Logger_add$2;\n\n      self.$$prototype.max_severity = nil;\n      \n      self.$attr_reader(\"max_severity\");\n      \n      Opal.def(self, '$initialize', $Logger_initialize$1 = function $$initialize($a) {\n        var $post_args, args, $iter = $Logger_initialize$1.$$p, $yield = $iter || nil, self = this, $writer = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Logger_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Logger_initialize$1, false), $zuper, $iter);\n        \n        $writer = [\"asciidoctor\"];\n        $send(self, 'progname=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [$$($nesting, 'BasicFormatter').$new()];\n        $send(self, 'formatter=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [$$($nesting, 'WARN')];\n        $send(self, 'level=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];;\n      }, $Logger_initialize$1.$$arity = -1);\n      \n      Opal.def(self, '$add', $Logger_add$2 = function $$add(severity, message, progname) {\n        var $a, $iter = $Logger_add$2.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Logger_add$2.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (message == null) {\n          message = nil;\n        };\n        \n        if (progname == null) {\n          progname = nil;\n        };\n        if ($truthy($rb_gt((severity = ($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), (self.max_severity = ($truthy($a = self.max_severity) ? $a : severity))))) {\n          self.max_severity = severity};\n        return $send(self, Opal.find_super_dispatcher(self, 'add', $Logger_add$2, false), $zuper, $iter);\n      }, $Logger_add$2.$$arity = -2);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'BasicFormatter');\n\n        var $nesting = [self].concat($parent_nesting), $BasicFormatter_call$3;\n\n        \n        Opal.const_set($nesting[0], 'SEVERITY_LABELS', $hash2([\"WARN\", \"FATAL\"], {\"WARN\": \"WARNING\", \"FATAL\": \"FAILED\"}));\n        return (Opal.def(self, '$call', $BasicFormatter_call$3 = function $$call(severity, _, progname, msg) {\n          var $a, self = this;\n\n          return \"\" + (progname) + \": \" + (($truthy($a = $$($nesting, 'SEVERITY_LABELS')['$[]'](severity)) ? $a : severity)) + \": \" + ((function() {if ($truthy($$$('::', 'String')['$==='](msg))) {\n            return msg\n          } else {\n            return msg.$inspect()\n          }; return nil; })()) + ($$($nesting, 'LF'))\n        }, $BasicFormatter_call$3.$$arity = 4), nil) && 'call';\n      })($nesting[0], $$($nesting, 'Formatter'), $nesting);\n      return (function($base, $parent_nesting) {\n        var self = $module($base, 'AutoFormattingMessage');\n\n        var $nesting = [self].concat($parent_nesting), $AutoFormattingMessage_inspect$4;\n\n        \n        Opal.def(self, '$inspect', $AutoFormattingMessage_inspect$4 = function $$inspect() {\n          var self = this, sloc = nil;\n\n          if ($truthy((sloc = self['$[]'](\"source_location\")))) {\n            return \"\" + (sloc) + \": \" + (self['$[]'](\"text\"))\n          } else {\n            return self['$[]'](\"text\")\n          }\n        }, $AutoFormattingMessage_inspect$4.$$arity = 0)\n      })($nesting[0], $nesting);\n    })($nesting[0], $$$('::', 'Logger'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'MemoryLogger');\n\n      var $nesting = [self].concat($parent_nesting), $MemoryLogger$5, $MemoryLogger_initialize$7, $MemoryLogger_add$8, $MemoryLogger_clear$9, $MemoryLogger_empty$ques$10, $MemoryLogger_max_severity$11;\n\n      self.$$prototype.messages = nil;\n      \n      Opal.const_set($nesting[0], 'SEVERITY_LABELS', $send($hash2([], {}), 'tap', [], ($MemoryLogger$5 = function(accum){var self = $MemoryLogger$5.$$s || this, $$6;\n\n      \n        \n        if (accum == null) {\n          accum = nil;\n        };\n        return $send($$($nesting, 'Severity').$constants(false), 'each', [], ($$6 = function(c){var self = $$6.$$s || this, $writer = nil;\n\n        \n          \n          if (c == null) {\n            c = nil;\n          };\n          $writer = [$$($nesting, 'Severity').$const_get(c, false), c];\n          $send(accum, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$6.$$s = self, $$6.$$arity = 1, $$6));}, $MemoryLogger$5.$$s = self, $MemoryLogger$5.$$arity = 1, $MemoryLogger$5)));\n      self.$attr_reader(\"messages\");\n      \n      Opal.def(self, '$initialize', $MemoryLogger_initialize$7 = function $$initialize() {\n        var self = this, $writer = nil;\n\n        \n        \n        $writer = [$$($nesting, 'WARN')];\n        $send(self, 'level=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        return (self.messages = []);\n      }, $MemoryLogger_initialize$7.$$arity = 0);\n      \n      Opal.def(self, '$add', $MemoryLogger_add$8 = function $$add(severity, message, progname) {\n        var $a, $iter = $MemoryLogger_add$8.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $MemoryLogger_add$8.$$p = null;\n        \n        \n        if (message == null) {\n          message = nil;\n        };\n        \n        if (progname == null) {\n          progname = nil;\n        };\n        if ($truthy(message)) {\n        } else {\n          message = (function() {if (($yield !== nil)) {\n            return Opal.yieldX($yield, []);\n          } else {\n            return progname\n          }; return nil; })()\n        };\n        self.messages['$<<']($hash2([\"severity\", \"message\"], {\"severity\": $$($nesting, 'SEVERITY_LABELS')['$[]'](($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), \"message\": message}));\n        return true;\n      }, $MemoryLogger_add$8.$$arity = -2);\n      \n      Opal.def(self, '$clear', $MemoryLogger_clear$9 = function $$clear() {\n        var self = this;\n\n        return self.messages.$clear()\n      }, $MemoryLogger_clear$9.$$arity = 0);\n      \n      Opal.def(self, '$empty?', $MemoryLogger_empty$ques$10 = function() {\n        var self = this;\n\n        return self.messages['$empty?']()\n      }, $MemoryLogger_empty$ques$10.$$arity = 0);\n      return (Opal.def(self, '$max_severity', $MemoryLogger_max_severity$11 = function $$max_severity() {\n        var $$12, self = this;\n\n        if ($truthy(self['$empty?']())) {\n          return nil\n        } else {\n          return $send(self.messages, 'map', [], ($$12 = function(m){var self = $$12.$$s || this;\n\n          \n            \n            if (m == null) {\n              m = nil;\n            };\n            return $$($nesting, 'Severity').$const_get(m['$[]'](\"severity\"), false);}, $$12.$$s = self, $$12.$$arity = 1, $$12)).$max()\n        }\n      }, $MemoryLogger_max_severity$11.$$arity = 0), nil) && 'max_severity';\n    })($nesting[0], $$$('::', 'Logger'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'NullLogger');\n\n      var $nesting = [self].concat($parent_nesting), $NullLogger_initialize$13, $NullLogger_add$14;\n\n      self.$$prototype.max_severity = nil;\n      \n      self.$attr_reader(\"max_severity\");\n      \n      Opal.def(self, '$initialize', $NullLogger_initialize$13 = function $$initialize() {\n        var self = this, $writer = nil;\n\n        \n        $writer = [$$($nesting, 'WARN')];\n        $send(self, 'level=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];\n      }, $NullLogger_initialize$13.$$arity = 0);\n      return (Opal.def(self, '$add', $NullLogger_add$14 = function $$add(severity, message, progname) {\n        var $a, self = this;\n\n        \n        \n        if (message == null) {\n          message = nil;\n        };\n        \n        if (progname == null) {\n          progname = nil;\n        };\n        if ($truthy($rb_gt((severity = ($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), (self.max_severity = ($truthy($a = self.max_severity) ? $a : severity))))) {\n          self.max_severity = severity};\n        return true;\n      }, $NullLogger_add$14.$$arity = -2), nil) && 'add';\n    })($nesting[0], $$$('::', 'Logger'), $nesting);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'LoggerManager');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      \n      self.logger_class = $$($nesting, 'Logger');\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $logger$15, $logger$eq$16, $memoize_logger$17;\n\n        \n        self.$attr_accessor(\"logger_class\");\n        \n        Opal.def(self, '$logger', $logger$15 = function $$logger(pipe) {\n          var $a, self = this;\n          if (self.logger == null) self.logger = nil;\n          if (self.logger_class == null) self.logger_class = nil;\n          if ($gvars.stderr == null) $gvars.stderr = nil;\n\n          \n          \n          if (pipe == null) {\n            pipe = $gvars.stderr;\n          };\n          self.$memoize_logger();\n          return (self.logger = ($truthy($a = self.logger) ? $a : self.logger_class.$new(pipe)));\n        }, $logger$15.$$arity = -1);\n        \n        Opal.def(self, '$logger=', $logger$eq$16 = function(new_logger) {\n          var $a, self = this;\n          if (self.logger_class == null) self.logger_class = nil;\n          if ($gvars.stderr == null) $gvars.stderr = nil;\n\n          return (self.logger = ($truthy($a = new_logger) ? $a : self.logger_class.$new($gvars.stderr)))\n        }, $logger$eq$16.$$arity = 1);\n        self.$private();\n        return (Opal.def(self, '$memoize_logger', $memoize_logger$17 = function $$memoize_logger() {\n          var self = this;\n\n          return (function(self, $parent_nesting) {\n            var $nesting = [self].concat($parent_nesting);\n\n            \n            Opal.alias(self, \"logger\", \"logger\");\n            return self.$attr_reader(\"logger\");\n          })(Opal.get_singleton_class(self), $nesting)\n        }, $memoize_logger$17.$$arity = 0), nil) && 'memoize_logger';\n      })(Opal.get_singleton_class(self), $nesting);\n    })($nesting[0], $nesting);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Logging');\n\n      var $nesting = [self].concat($parent_nesting), $a, $Logging_included$18, $Logging_logger$19, $Logging_message_with_context$20;\n\n      \n      self.$private_class_method(($truthy($a = (Opal.defs(self, '$included', $Logging_included$18 = function $$included(into) {\n        var self = this;\n\n        return into.$extend($$($nesting, 'Logging'))\n      }, $Logging_included$18.$$arity = 1), nil) && 'included') ? $a : \"included\"));\n      \n      Opal.def(self, '$logger', $Logging_logger$19 = function $$logger() {\n        var self = this;\n\n        return $$($nesting, 'LoggerManager').$logger()\n      }, $Logging_logger$19.$$arity = 0);\n      \n      Opal.def(self, '$message_with_context', $Logging_message_with_context$20 = function $$message_with_context(text, context) {\n        var self = this;\n\n        \n        \n        if (context == null) {\n          context = $hash2([], {});\n        };\n        return $hash2([\"text\"], {\"text\": text}).$merge(context).$extend($$$($$($nesting, 'Logger'), 'AutoFormattingMessage'));\n      }, $Logging_message_with_context$20.$$arity = -2);\n    })($nesting[0], $nesting);\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/rx\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy, $hash = Opal.hash;\n\n  Opal.add_stubs(['$==', '$join', '$to_a', '$new', '$empty?', '$escape', '$[]=', '$-']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting), $Asciidoctor$1, $Asciidoctor$2;\n\n    \n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Rx');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      nil\n    })($nesting[0], $nesting);\n    Opal.const_set($nesting[0], 'AuthorInfoLineRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-'.]*)(?: +(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-'.]*))?(?: +(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-'.]*))?(?: +<([^>]+)>)?$\"));\n    Opal.const_set($nesting[0], 'AuthorDelimiterRx', /;(?: |$)/);\n    Opal.const_set($nesting[0], 'RevisionInfoLineRx', new RegExp(\"\" + \"^(?:[^\\\\d{]*(\" + ($$($nesting, 'CC_ANY')) + \"*?),)? *(?!:)(\" + ($$($nesting, 'CC_ANY')) + \"*?)(?: *(?!^),?: *(\" + ($$($nesting, 'CC_ANY')) + \"*))?$\"));\n    Opal.const_set($nesting[0], 'ManpageTitleVolnumRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CC_ANY')) + \"+?) *\\\\( *(\" + ($$($nesting, 'CC_ANY')) + \"+?) *\\\\)$\"));\n    Opal.const_set($nesting[0], 'ManpageNamePurposeRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CC_ANY')) + \"+?) +- +(\" + ($$($nesting, 'CC_ANY')) + \"+)$\"));\n    Opal.const_set($nesting[0], 'ConditionalDirectiveRx', new RegExp(\"\" + \"^(\\\\\\\\)?(ifdef|ifndef|ifeval|endif)::(\\\\S*?(?:([,+])\\\\S*?)?)\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'EvalExpressionRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CC_ANY')) + \"+?) *([=!><]=|[><]) *(\" + ($$($nesting, 'CC_ANY')) + \"+)$\"));\n    Opal.const_set($nesting[0], 'IncludeDirectiveRx', new RegExp(\"\" + \"^(\\\\\\\\)?include::([^\\\\[][^\\\\[]*)\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'TagDirectiveRx', /\\b(?:tag|(e)nd)::(\\S+?)\\[\\](?=$|[ \\r])/m);\n    Opal.const_set($nesting[0], 'AttributeEntryRx', new RegExp(\"\" + \"^:(!?\" + ($$($nesting, 'CG_WORD')) + \"[^:]*):(?:[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*))?$\"));\n    Opal.const_set($nesting[0], 'InvalidAttributeNameCharsRx', new RegExp(\"\" + \"[^\" + ($$($nesting, 'CC_WORD')) + \"-]\"));\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      Opal.const_set($nesting[0], 'AttributeEntryPassMacroRx', new RegExp(\"\" + \"^pass:([a-z]+(?:,[a-z-]+)*)?\\\\[(\" + ($$($nesting, 'CC_ALL')) + \"*)\\\\]$\"))\n    } else {\n      nil\n    };\n    Opal.const_set($nesting[0], 'AttributeReferenceRx', new RegExp(\"\" + \"(\\\\\\\\)?\\\\{(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"-]*|(set|counter2?):\" + ($$($nesting, 'CC_ANY')) + \"+?)(\\\\\\\\)?\\\\}\"));\n    Opal.const_set($nesting[0], 'BlockAnchorRx', new RegExp(\"\" + \"^\\\\[\\\\[(?:|([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+))?)\\\\]\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockAttributeListRx', new RegExp(\"\" + \"^\\\\[(|[\" + ($$($nesting, 'CC_WORD')) + \".#%{,\\\"']\" + ($$($nesting, 'CC_ANY')) + \"*)\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockAttributeLineRx', new RegExp(\"\" + \"^\\\\[(?:|[\" + ($$($nesting, 'CC_WORD')) + \".#%{,\\\"']\" + ($$($nesting, 'CC_ANY')) + \"*|\\\\[(?:|[\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*(?:, *\" + ($$($nesting, 'CC_ANY')) + \"+)?)\\\\])\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockTitleRx', new RegExp(\"\" + \"^\\\\.(\\\\.?[^ \\\\t.]\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'AdmonitionParagraphRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'ADMONITION_STYLES').$to_a().$join(\"|\")) + \"):[ \\\\t]+\"));\n    Opal.const_set($nesting[0], 'LiteralParagraphRx', new RegExp(\"\" + \"^([ \\\\t]+\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'AtxSectionTitleRx', new RegExp(\"\" + \"^(=={0,5})[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"+?)(?:[ \\\\t]+\\\\1)?$\"));\n    Opal.const_set($nesting[0], 'ExtAtxSectionTitleRx', new RegExp(\"\" + \"^(=={0,5}|#\\\\\\#{0,5})[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"+?)(?:[ \\\\t]+\\\\1)?$\"));\n    Opal.const_set($nesting[0], 'SetextSectionTitleRx', new RegExp(\"\" + \"^((?!\\\\.)\" + ($$($nesting, 'CC_ANY')) + \"*?\" + ($$($nesting, 'CG_ALNUM')) + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'InlineSectionAnchorRx', new RegExp(\"\" + \" (\\\\\\\\)?\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+))?\\\\]\\\\]$\"));\n    Opal.const_set($nesting[0], 'InvalidSectionIdCharsRx', new RegExp(\"\" + \"<[^>]+>|&(?:[a-z][a-z]+\\\\d{0,2}|#\\\\d\\\\d\\\\d{0,4}|#x[\\\\da-f][\\\\da-f][\\\\da-f]{0,3});|[^ \" + ($$($nesting, 'CC_WORD')) + \"\\\\-.]+?\"));\n    Opal.const_set($nesting[0], 'SectionLevelStyleRx', /^sect\\d$/);\n    Opal.const_set($nesting[0], 'AnyListRx', new RegExp(\"\" + \"^(?:[ \\\\t]*(?:-|\\\\*\\\\**|\\\\.\\\\.*|\\\\u2022|\\\\d+\\\\.|[a-zA-Z]\\\\.|[IVXivx]+\\\\))[ \\\\t]|(?!//[^/])[ \\\\t]*[^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?(?::::{0,2}|;;)(?:$|[ \\\\t])|<?\\\\d+>[ \\\\t])\"));\n    Opal.const_set($nesting[0], 'UnorderedListRx', new RegExp(\"\" + \"^[ \\\\t]*(-|\\\\*\\\\**|\\\\u2022)[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'OrderedListRx', new RegExp(\"\" + \"^[ \\\\t]*(\\\\.\\\\.*|\\\\d+\\\\.|[a-zA-Z]\\\\.|[IVXivx]+\\\\))[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'OrderedListMarkerRxMap', $hash2([\"arabic\", \"loweralpha\", \"lowerroman\", \"upperalpha\", \"upperroman\"], {\"arabic\": /\\d+\\./, \"loweralpha\": /[a-z]\\./, \"lowerroman\": /[ivx]+\\)/, \"upperalpha\": /[A-Z]\\./, \"upperroman\": /[IVX]+\\)/}));\n    Opal.const_set($nesting[0], 'DescriptionListRx', new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?)(:::{0,2}|;;)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\"));\n    Opal.const_set($nesting[0], 'DescriptionListSiblingRx', $hash2([\"::\", \":::\", \"::::\", \";;\"], {\"::\": new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?[^:]|[^ \\\\t:])(::)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\"), \":::\": new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?[^:]|[^ \\\\t:])(:::)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\"), \"::::\": new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?[^:]|[^ \\\\t:])(::::)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\"), \";;\": new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?)(;;)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\")}));\n    Opal.const_set($nesting[0], 'CalloutListRx', new RegExp(\"\" + \"^<(\\\\d+|\\\\.)>[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'CalloutExtractRx', /((?:\\/\\/|#|--|;;) ?)?(\\\\)?<!?(|--)(\\d+|\\.)\\3>(?=(?: ?\\\\?<!?\\3(?:\\d+|\\.)\\3>)*$)/);\n    Opal.const_set($nesting[0], 'CalloutExtractRxt', \"(\\\\\\\\)?<()(\\\\d+|\\\\.)>(?=(?: ?\\\\\\\\?<(?:\\\\d+|\\\\.)>)*$)\");\n    Opal.const_set($nesting[0], 'CalloutExtractRxMap', $send($$$('::', 'Hash'), 'new', [], ($Asciidoctor$1 = function(h, k){var self = $Asciidoctor$1.$$s || this, $writer = nil;\n\n    \n      \n      if (h == null) {\n        h = nil;\n      };\n      \n      if (k == null) {\n        k = nil;\n      };\n      $writer = [k, new RegExp(\"\" + \"(\" + ((function() {if ($truthy(k['$empty?']())) {\n        return \"\"\n      } else {\n        return \"\" + ($$$('::', 'Regexp').$escape(k)) + \" ?\"\n      }; return nil; })()) + \")?\" + ($$($nesting, 'CalloutExtractRxt')))];\n      $send(h, '[]=', Opal.to_a($writer));\n      return $writer[$rb_minus($writer[\"length\"], 1)];}, $Asciidoctor$1.$$s = self, $Asciidoctor$1.$$arity = 2, $Asciidoctor$1)));\n    Opal.const_set($nesting[0], 'CalloutScanRx', new RegExp(\"\" + \"\\\\\\\\?<!?(|--)(\\\\d+|\\\\.)\\\\1>(?=(?: ?\\\\\\\\?<!?\\\\1(?:\\\\d+|\\\\.)\\\\1>)*\" + ($$($nesting, 'CC_EOL')) + \")\"));\n    Opal.const_set($nesting[0], 'CalloutSourceRx', new RegExp(\"\" + \"((?://|#|--|;;) ?)?(\\\\\\\\)?&lt;!?(|--)(\\\\d+|\\\\.)\\\\3&gt;(?=(?: ?\\\\\\\\?&lt;!?\\\\3(?:\\\\d+|\\\\.)\\\\3&gt;)*\" + ($$($nesting, 'CC_EOL')) + \")\"));\n    Opal.const_set($nesting[0], 'CalloutSourceRxt', \"\" + \"(\\\\\\\\)?&lt;()(\\\\d+|\\\\.)&gt;(?=(?: ?\\\\\\\\?&lt;(?:\\\\d+|\\\\.)&gt;)*\" + ($$($nesting, 'CC_EOL')) + \")\");\n    Opal.const_set($nesting[0], 'CalloutSourceRxMap', $send($$$('::', 'Hash'), 'new', [], ($Asciidoctor$2 = function(h, k){var self = $Asciidoctor$2.$$s || this, $writer = nil;\n\n    \n      \n      if (h == null) {\n        h = nil;\n      };\n      \n      if (k == null) {\n        k = nil;\n      };\n      $writer = [k, new RegExp(\"\" + \"(\" + ((function() {if ($truthy(k['$empty?']())) {\n        return \"\"\n      } else {\n        return \"\" + ($$$('::', 'Regexp').$escape(k)) + \" ?\"\n      }; return nil; })()) + \")?\" + ($$($nesting, 'CalloutSourceRxt')))];\n      $send(h, '[]=', Opal.to_a($writer));\n      return $writer[$rb_minus($writer[\"length\"], 1)];}, $Asciidoctor$2.$$s = self, $Asciidoctor$2.$$arity = 2, $Asciidoctor$2)));\n    Opal.const_set($nesting[0], 'ListRxMap', $hash2([\"ulist\", \"olist\", \"dlist\", \"colist\"], {\"ulist\": $$($nesting, 'UnorderedListRx'), \"olist\": $$($nesting, 'OrderedListRx'), \"dlist\": $$($nesting, 'DescriptionListRx'), \"colist\": $$($nesting, 'CalloutListRx')}));\n    Opal.const_set($nesting[0], 'ColumnSpecRx', /^(?:(\\d+)\\*)?([<^>](?:\\.[<^>]?)?|(?:[<^>]?\\.)?[<^>])?(\\d+%?|~)?([a-z])?$/);\n    Opal.const_set($nesting[0], 'CellSpecStartRx', /^[ \\t]*(?:(\\d+(?:\\.\\d*)?|(?:\\d*\\.)?\\d+)([*+]))?([<^>](?:\\.[<^>]?)?|(?:[<^>]?\\.)?[<^>])?([a-z])?$/);\n    Opal.const_set($nesting[0], 'CellSpecEndRx', /[ \\t]+(?:(\\d+(?:\\.\\d*)?|(?:\\d*\\.)?\\d+)([*+]))?([<^>](?:\\.[<^>]?)?|(?:[<^>]?\\.)?[<^>])?([a-z])?$/);\n    Opal.const_set($nesting[0], 'CustomBlockMacroRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"-]*)::(|\\\\S|\\\\S\" + ($$($nesting, 'CC_ANY')) + \"*?\\\\S)\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockMediaMacroRx', new RegExp(\"\" + \"^(image|video|audio)::(\\\\S|\\\\S\" + ($$($nesting, 'CC_ANY')) + \"*?\\\\S)\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockTocMacroRx', new RegExp(\"\" + \"^toc::\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'InlineAnchorRx', new RegExp(\"\" + \"(\\\\\\\\)?(?:\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+?))?\\\\]\\\\]|anchor:([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)\\\\[(?:\\\\]|(\" + ($$($nesting, 'CC_ANY')) + \"*?[^\\\\\\\\])\\\\]))\"));\n    Opal.const_set($nesting[0], 'InlineAnchorScanRx', new RegExp(\"\" + \"(?:^|[^\\\\\\\\\\\\[])\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+?))?\\\\]\\\\]|(?:^|[^\\\\\\\\])anchor:([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)\\\\[(?:\\\\]|(\" + ($$($nesting, 'CC_ANY')) + \"*?[^\\\\\\\\])\\\\])\"));\n    Opal.const_set($nesting[0], 'LeadingInlineAnchorRx', new RegExp(\"\" + \"^\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+?))?\\\\]\\\\]\"));\n    Opal.const_set($nesting[0], 'InlineBiblioAnchorRx', new RegExp(\"\" + \"^\\\\[\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+?))?\\\\]\\\\]\\\\]\"));\n    Opal.const_set($nesting[0], 'InlineEmailRx', new RegExp(\"\" + \"([\\\\\\\\>:/])?\" + ($$($nesting, 'CG_WORD')) + \"(?:&amp;|[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-.%+])*@\" + ($$($nesting, 'CG_ALNUM')) + \"[\" + ($$($nesting, 'CC_ALNUM')) + \"_\\\\-.]*\\\\.[a-zA-Z]{2,5}\\\\b\"));\n    Opal.const_set($nesting[0], 'InlineFootnoteMacroRx', new RegExp(\"\" + \"\\\\\\\\?footnote(?:(ref):|:([\" + ($$($nesting, 'CC_WORD')) + \"-]+)?)\\\\[(?:|(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\]))\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'InlineImageMacroRx', new RegExp(\"\" + \"\\\\\\\\?i(?:mage|con):([^:\\\\s\\\\[](?:[^\\\\n\\\\[]*[^\\\\s\\\\[])?)\\\\[(|\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'InlineIndextermMacroRx', new RegExp(\"\" + \"\\\\\\\\?(?:(indexterm2?):\\\\[(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]|\\\\(\\\\((\" + ($$($nesting, 'CC_ALL')) + \"+?)\\\\)\\\\)(?!\\\\)))\", 'm'));\n    Opal.const_set($nesting[0], 'InlineKbdBtnMacroRx', new RegExp(\"\" + \"(\\\\\\\\)?(kbd|btn):\\\\[(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'InlineLinkRx', new RegExp(\"\" + \"(^|link:|\" + ($$($nesting, 'CG_BLANK')) + \"|&lt;|[>\\\\(\\\\)\\\\[\\\\];])(\\\\\\\\?(?:https?|file|ftp|irc)://[^\\\\s\\\\[\\\\]<]*([^\\\\s.,\\\\[\\\\]<]))(?:\\\\[(|\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\])?\", 'm'));\n    Opal.const_set($nesting[0], 'InlineLinkMacroRx', new RegExp(\"\" + \"\\\\\\\\?(?:link|(mailto)):(|[^:\\\\s\\\\[][^\\\\s\\\\[]*)\\\\[(|\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'MacroNameRx', new RegExp(\"\" + \"^\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"-]*$\"));\n    Opal.const_set($nesting[0], 'InlineStemMacroRx', new RegExp(\"\" + \"\\\\\\\\?(stem|(?:latex|ascii)math):([a-z]+(?:,[a-z-]+)*)?\\\\[(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'InlineMenuMacroRx', new RegExp(\"\" + \"\\\\\\\\?menu:(\" + ($$($nesting, 'CG_WORD')) + \"|[\" + ($$($nesting, 'CC_WORD')) + \"&][^\\\\n\\\\[]*[^\\\\s\\\\[])\\\\[ *(?:|(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\]))?\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'InlineMenuRx', new RegExp(\"\" + \"\\\\\\\\?\\\"([\" + ($$($nesting, 'CC_WORD')) + \"&][^\\\"]*?[ \\\\n]+&gt;[ \\\\n]+[^\\\"]*)\\\"\"));\n    Opal.const_set($nesting[0], 'InlinePassRx', $hash(false, [\"+\", \"`\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:])(?:\\\\[([^\\\\]]+)\\\\])?(\\\\\\\\?(\\\\+|`)(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\4)(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], true, [\"`\", nil, new RegExp(\"\" + \"(^|[^`\" + ($$($nesting, 'CC_WORD')) + \"])(?:\\\\[([^\\\\]]+)\\\\])?(\\\\\\\\?(`)([^`\\\\s]|[^`\\\\s]\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\4)(?![`\" + ($$($nesting, 'CC_WORD')) + \"])\", 'm')]));\n    Opal.const_set($nesting[0], 'SinglePlusInlinePassRx', new RegExp(\"\" + \"^(\\\\\\\\)?\\\\+(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\+$\", 'm'));\n    Opal.const_set($nesting[0], 'InlinePassMacroRx', new RegExp(\"\" + \"(?:(?:(\\\\\\\\?)\\\\[([^\\\\]]+)\\\\])?(\\\\\\\\{0,2})(\\\\+\\\\+\\\\+?|\\\\$\\\\$)(\" + ($$($nesting, 'CC_ALL')) + \"*?)\\\\4|(\\\\\\\\?)pass:([a-z]+(?:,[a-z-]+)*)?\\\\[(|\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\])\", 'm'));\n    Opal.const_set($nesting[0], 'InlineXrefMacroRx', new RegExp(\"\" + \"\\\\\\\\?(?:&lt;&lt;([\" + ($$($nesting, 'CC_WORD')) + \"#/.:{]\" + ($$($nesting, 'CC_ALL')) + \"*?)&gt;&gt;|xref:([\" + ($$($nesting, 'CC_WORD')) + \"#/.:{]\" + ($$($nesting, 'CC_ALL')) + \"*?)\\\\[(?:\\\\]|(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]))\", 'm'));\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      Opal.const_set($nesting[0], 'HardLineBreakRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CC_ANY')) + \"*) \\\\+$\", 'm'))\n    } else {\n      nil\n    };\n    Opal.const_set($nesting[0], 'MarkdownThematicBreakRx', /^ {0,3}([-*_])( *)\\1\\2\\1$/);\n    Opal.const_set($nesting[0], 'ExtLayoutBreakRx', /^(?:'{3,}|<{3,}|([-*_])( *)\\1\\2\\1)$/);\n    Opal.const_set($nesting[0], 'BlankLineRx', /\\n{2,}/);\n    Opal.const_set($nesting[0], 'EscapedSpaceRx', /\\\\([ \\t\\n])/);\n    Opal.const_set($nesting[0], 'ReplaceableTextRx', /[&']|--|\\.\\.\\.|\\([CRT]M?\\)/);\n    Opal.const_set($nesting[0], 'SpaceDelimiterRx', /([^\\\\])[ \\t\\n]+/);\n    Opal.const_set($nesting[0], 'SubModifierSniffRx', /[+-]/);\n    Opal.const_set($nesting[0], 'TrailingDigitsRx', /\\d+$/);\n    Opal.const_set($nesting[0], 'UriSniffRx', new RegExp(\"\" + \"^\" + ($$($nesting, 'CG_ALPHA')) + \"[\" + ($$($nesting, 'CC_ALNUM')) + \".+-]+:/{0,2}\"));\n    Opal.const_set($nesting[0], 'XmlSanitizeRx', /<[^>]+>/);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/substitutors\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $hash = Opal.hash, $truthy = Opal.truthy, $send = Opal.send, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$freeze', '$+', '$keys', '$empty?', '$!', '$===', '$[]', '$join', '$include?', '$extract_passthroughs', '$each', '$sub_specialchars', '$sub_quotes', '$sub_attributes', '$sub_replacements', '$sub_macros', '$highlight_source', '$sub_callouts', '$sub_post_replacements', '$warn', '$logger', '$restore_passthroughs', '$clear', '$split', '$apply_subs', '$==', '$gsub', '$match?', '$compat_mode', '$convert_quoted_text', '$attributes', '$shift', '$store_attribute', '$!=', '$attribute_undefined', '$counter', '$key?', '$downcase', '$attribute_missing', '$info', '$squeeze', '$delete', '$reject', '$start_with?', '$do_replacement', '$extensions', '$inline_macros?', '$inline_macros', '$regexp', '$instance', '$slice', '$length', '$names', '$config', '$merge', '$[]=', '$-', '$normalize_text', '$parse_attributes', '$process_method', '$text', '$expand_subs', '$text=', '$convert', '$class', '$strip', '$>', '$index', '$min', '$compact', '$end_with?', '$map', '$chop', '$new', '$pop', '$rstrip', '$register', '$tr', '$basename', '$parse', '$<<', '$lstrip', '$split_simple_csv', '$partition', '$sub', '$encode_uri_component', '$style', '$parse_into', '$extname?', '$rindex', '$info?', '$catalog', '$fetch', '$outfilesuffix', '$natural_xrefs', '$resolve_id', '$find', '$footnotes', '$id', '$<', '$size', '$attr?', '$attr', '$to_s', '$read_next_id', '$callouts', '$syntax_highlighter', '$highlight?', '$sub_source', '$extract_callouts', '$name', '$to_sym', '$to_i', '$resolve_lines_to_highlight', '$highlight', '$nil_or_empty?', '$restore_callouts', '$count', '$to_a', '$concat', '$uniq', '$sort', '$*', '$parse_quoted_text_attributes', '$resolve_pass_subs', '$extract_inner_passthrough', '$basebackend?', '$error', '$chr', '$drop', '$&', '$resolve_subs', '$resolve_block_subs', '$private', '$=~', '$shorthand_property_syntax', '$each_char']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Substitutors');\n\n      var $nesting = [self].concat($parent_nesting), $Substitutors_apply_subs$1, $Substitutors_apply_normal_subs$3, $Substitutors_apply_header_subs$4, $Substitutors_apply_reftext_subs$5, $Substitutors_sub_specialchars$6, $Substitutors_sub_quotes$7, $Substitutors_sub_attributes$10, $Substitutors_sub_replacements$16, $Substitutors_sub_macros$19, $Substitutors_sub_post_replacements$41, $Substitutors_sub_source$44, $Substitutors_sub_callouts$45, $Substitutors_highlight_source$47, $Substitutors_resolve_lines_to_highlight$48, $Substitutors_extract_passthroughs$50, $Substitutors_restore_passthroughs$54, $Substitutors_resolve_subs$56, $Substitutors_resolve_block_subs$58, $Substitutors_resolve_pass_subs$59, $Substitutors_expand_subs$60, $Substitutors_commit_subs$62, $Substitutors_parse_attributes$63, $Substitutors_extract_callouts$64, $Substitutors_restore_callouts$67, $Substitutors_extract_inner_passthrough$70, $Substitutors_convert_quoted_text$71, $Substitutors_do_replacement$72, $Substitutors_parse_quoted_text_attributes$73, $Substitutors_normalize_text$74, $Substitutors_split_simple_csv$75;\n\n      \n      Opal.const_set($nesting[0], 'SpecialCharsRx', /[<&>]/);\n      Opal.const_set($nesting[0], 'SpecialCharsTr', $hash2([\">\", \"<\", \"&\"], {\">\": \"&gt;\", \"<\": \"&lt;\", \"&\": \"&amp;\"}));\n      Opal.const_set($nesting[0], 'QuotedTextSniffRx', $hash(false, /[*_`#^~]/, true, /[*'_+#^~]/));\n      Opal.const_set($nesting[0], 'BASIC_SUBS', [\"specialcharacters\"]).$freeze();\n      Opal.const_set($nesting[0], 'HEADER_SUBS', [\"specialcharacters\", \"attributes\"]).$freeze();\n      Opal.const_set($nesting[0], 'NO_SUBS', []).$freeze();\n      Opal.const_set($nesting[0], 'NORMAL_SUBS', [\"specialcharacters\", \"quotes\", \"attributes\", \"replacements\", \"macros\", \"post_replacements\"]).$freeze();\n      Opal.const_set($nesting[0], 'REFTEXT_SUBS', [\"specialcharacters\", \"quotes\", \"replacements\"]).$freeze();\n      Opal.const_set($nesting[0], 'VERBATIM_SUBS', [\"specialcharacters\", \"callouts\"]).$freeze();\n      Opal.const_set($nesting[0], 'SUB_GROUPS', $hash2([\"none\", \"normal\", \"verbatim\", \"specialchars\"], {\"none\": $$($nesting, 'NO_SUBS'), \"normal\": $$($nesting, 'NORMAL_SUBS'), \"verbatim\": $$($nesting, 'VERBATIM_SUBS'), \"specialchars\": $$($nesting, 'BASIC_SUBS')}));\n      Opal.const_set($nesting[0], 'SUB_HINTS', $hash2([\"a\", \"m\", \"n\", \"p\", \"q\", \"r\", \"c\", \"v\"], {\"a\": \"attributes\", \"m\": \"macros\", \"n\": \"normal\", \"p\": \"post_replacements\", \"q\": \"quotes\", \"r\": \"replacements\", \"c\": \"specialcharacters\", \"v\": \"verbatim\"}));\n      Opal.const_set($nesting[0], 'SUB_OPTIONS', $hash2([\"block\", \"inline\"], {\"block\": $rb_plus($rb_plus($$($nesting, 'SUB_GROUPS').$keys(), $$($nesting, 'NORMAL_SUBS')), [\"callouts\"]), \"inline\": $rb_plus($$($nesting, 'SUB_GROUPS').$keys(), $$($nesting, 'NORMAL_SUBS'))}));\n      Opal.const_set($nesting[0], 'CAN', \"\\u0018\");\n      Opal.const_set($nesting[0], 'DEL', \"\\u007F\");\n      Opal.const_set($nesting[0], 'PASS_START', \"\\u0096\");\n      Opal.const_set($nesting[0], 'PASS_END', \"\\u0097\");\n      Opal.const_set($nesting[0], 'PassSlotRx', new RegExp(\"\" + ($$($nesting, 'PASS_START')) + \"(\\\\d+)\" + ($$($nesting, 'PASS_END'))));\n      Opal.const_set($nesting[0], 'HighlightedPassSlotRx', new RegExp(\"\" + \"<span\\\\b[^>]*>\" + ($$($nesting, 'PASS_START')) + \"</span>[^\\\\d]*(\\\\d+)[^\\\\d]*<span\\\\b[^>]*>\" + ($$($nesting, 'PASS_END')) + \"</span>\"));\n      Opal.const_set($nesting[0], 'RS', \"\\\\\");\n      Opal.const_set($nesting[0], 'R_SB', \"]\");\n      Opal.const_set($nesting[0], 'ESC_R_SB', \"\\\\]\");\n      Opal.const_set($nesting[0], 'PLUS', \"+\");\n      \n      Opal.def(self, '$apply_subs', $Substitutors_apply_subs$1 = function $$apply_subs(text, subs) {\n        var $a, $$2, self = this, is_multiline = nil, passthrus = nil, clear_passthrus = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n        if (self.passthroughs_locked == null) self.passthroughs_locked = nil;\n\n        \n        \n        if (subs == null) {\n          subs = $$($nesting, 'NORMAL_SUBS');\n        };\n        if ($truthy(($truthy($a = text['$empty?']()) ? $a : subs['$!']()))) {\n          return text};\n        if ($truthy((is_multiline = $$$('::', 'Array')['$==='](text)))) {\n          text = (function() {if ($truthy(text['$[]'](1))) {\n            \n            return text.$join($$($nesting, 'LF'));\n          } else {\n            return text['$[]'](0)\n          }; return nil; })()};\n        if ($truthy(subs['$include?'](\"macros\"))) {\n          \n          text = self.$extract_passthroughs(text);\n          if ($truthy(self.passthroughs['$empty?']())) {\n          } else {\n            \n            passthrus = self.passthroughs;\n            self.passthroughs_locked = ($truthy($a = self.passthroughs_locked) ? $a : (clear_passthrus = true));\n          };};\n        $send(subs, 'each', [], ($$2 = function(type){var self = $$2.$$s || this, $case = nil;\n\n        \n          \n          if (type == null) {\n            type = nil;\n          };\n          return (function() {$case = type;\n          if (\"specialcharacters\"['$===']($case)) {return (text = self.$sub_specialchars(text))}\n          else if (\"quotes\"['$===']($case)) {return (text = self.$sub_quotes(text))}\n          else if (\"attributes\"['$===']($case)) {if ($truthy(text['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n            return (text = self.$sub_attributes(text))\n          } else {\n            return nil\n          }}\n          else if (\"replacements\"['$===']($case)) {return (text = self.$sub_replacements(text))}\n          else if (\"macros\"['$===']($case)) {return (text = self.$sub_macros(text))}\n          else if (\"highlight\"['$===']($case)) {return (text = self.$highlight_source(text, subs['$include?'](\"callouts\")))}\n          else if (\"callouts\"['$===']($case)) {if ($truthy(subs['$include?'](\"highlight\"))) {\n            return nil\n          } else {\n            return (text = self.$sub_callouts(text))\n          }}\n          else if (\"post_replacements\"['$===']($case)) {return (text = self.$sub_post_replacements(text))}\n          else {return self.$logger().$warn(\"\" + \"unknown substitution type \" + (type))}})();}, $$2.$$s = self, $$2.$$arity = 1, $$2));\n        if ($truthy(passthrus)) {\n          \n          text = self.$restore_passthroughs(text);\n          if ($truthy(clear_passthrus)) {\n            \n            passthrus.$clear();\n            self.passthroughs_locked = nil;};};\n        if ($truthy(is_multiline)) {\n          \n          return text.$split($$($nesting, 'LF'), -1);\n        } else {\n          return text\n        };\n      }, $Substitutors_apply_subs$1.$$arity = -2);\n      \n      Opal.def(self, '$apply_normal_subs', $Substitutors_apply_normal_subs$3 = function $$apply_normal_subs(text) {\n        var self = this;\n\n        return self.$apply_subs(text, $$($nesting, 'NORMAL_SUBS'))\n      }, $Substitutors_apply_normal_subs$3.$$arity = 1);\n      \n      Opal.def(self, '$apply_header_subs', $Substitutors_apply_header_subs$4 = function $$apply_header_subs(text) {\n        var self = this;\n\n        return self.$apply_subs(text, $$($nesting, 'HEADER_SUBS'))\n      }, $Substitutors_apply_header_subs$4.$$arity = 1);\n      Opal.alias(self, \"apply_title_subs\", \"apply_subs\");\n      \n      Opal.def(self, '$apply_reftext_subs', $Substitutors_apply_reftext_subs$5 = function $$apply_reftext_subs(text) {\n        var self = this;\n\n        return self.$apply_subs(text, $$($nesting, 'REFTEXT_SUBS'))\n      }, $Substitutors_apply_reftext_subs$5.$$arity = 1);\n      if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        \n        Opal.def(self, '$sub_specialchars', $Substitutors_sub_specialchars$6 = function $$sub_specialchars(text) {\n          var $a, $b, self = this;\n\n          if ($truthy(($truthy($a = ($truthy($b = text['$include?'](\">\")) ? $b : text['$include?'](\"&\"))) ? $a : text['$include?'](\"<\")))) {\n            \n            return text.$gsub($$($nesting, 'SpecialCharsRx'), $$($nesting, 'SpecialCharsTr'));\n          } else {\n            return text\n          }\n        }, $Substitutors_sub_specialchars$6.$$arity = 1)\n      } else {\n        nil\n      };\n      Opal.alias(self, \"sub_specialcharacters\", \"sub_specialchars\");\n      \n      Opal.def(self, '$sub_quotes', $Substitutors_sub_quotes$7 = function $$sub_quotes(text) {\n        var $$8, self = this, compat = nil;\n        if (self.document == null) self.document = nil;\n\n        \n        if ($truthy($$($nesting, 'QuotedTextSniffRx')['$[]']((compat = self.document.$compat_mode()))['$match?'](text))) {\n          $send($$($nesting, 'QUOTE_SUBS')['$[]'](compat), 'each', [], ($$8 = function(type, scope, pattern){var self = $$8.$$s || this, $$9;\n\n          \n            \n            if (type == null) {\n              type = nil;\n            };\n            \n            if (scope == null) {\n              scope = nil;\n            };\n            \n            if (pattern == null) {\n              pattern = nil;\n            };\n            return (text = $send(text, 'gsub', [pattern], ($$9 = function(){var self = $$9.$$s || this;\n              if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n            return self.$convert_quoted_text($gvars[\"~\"], type, scope)}, $$9.$$s = self, $$9.$$arity = 0, $$9)));}, $$8.$$s = self, $$8.$$arity = 3, $$8))};\n        return text;\n      }, $Substitutors_sub_quotes$7.$$arity = 1);\n      \n      Opal.def(self, '$sub_attributes', $Substitutors_sub_attributes$10 = function $$sub_attributes(text, opts) {\n        var $$11, $$13, $$14, $$15, self = this, doc_attrs = nil, drop = nil, drop_line = nil, drop_line_severity = nil, drop_empty_line = nil, attribute_undefined = nil, attribute_missing = nil, lines = nil;\n        if (self.document == null) self.document = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        doc_attrs = self.document.$attributes();\n        drop = (drop_line = (drop_line_severity = (drop_empty_line = (attribute_undefined = (attribute_missing = nil)))));\n        text = $send(text, 'gsub', [$$($nesting, 'AttributeReferenceRx')], ($$11 = function(){var self = $$11.$$s || this, $a, $b, $c, $$12, $case = nil, args = nil, _ = nil, value = nil, key = nil;\n          if (self.document == null) self.document = nil;\n\n        if ($truthy(($truthy($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))['$==']($$($nesting, 'RS'))) ? $a : (($b = $gvars['~']) === nil ? nil : $b['$[]'](4))['$==']($$($nesting, 'RS'))))) {\n            return \"\" + \"{\" + ((($a = $gvars['~']) === nil ? nil : $a['$[]'](2))) + \"}\"\n          } else if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](3)))) {\n            return (function() {$case = (args = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)).$split(\":\", 3)).$shift();\n            if (\"set\"['$===']($case)) {\n            $b = $$($nesting, 'Parser').$store_attribute(args['$[]'](0), ($truthy($c = args['$[]'](1)) ? $c : \"\"), self.document), $a = Opal.to_ary($b), (_ = ($a[0] == null ? nil : $a[0])), (value = ($a[1] == null ? nil : $a[1])), $b;\n            if ($truthy(($truthy($a = value) ? $a : (attribute_undefined = ($truthy($b = attribute_undefined) ? $b : ($truthy($c = doc_attrs['$[]'](\"attribute-undefined\")) ? $c : $$($nesting, 'Compliance').$attribute_undefined())))['$!='](\"drop-line\")))) {\n              return (drop = (drop_empty_line = $$($nesting, 'DEL')))\n            } else {\n              return (drop = (drop_line = $$($nesting, 'CAN')))\n            };}\n            else if (\"counter2\"['$===']($case)) {\n            $send(self.document, 'counter', Opal.to_a(args));\n            return (drop = (drop_empty_line = $$($nesting, 'DEL')));}\n            else {return $send(self.document, 'counter', Opal.to_a(args))}})()\n          } else if ($truthy(doc_attrs['$key?']((key = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)).$downcase())))) {\n            return doc_attrs['$[]'](key)\n          } else if ($truthy((value = $$($nesting, 'INTRINSIC_ATTRIBUTES')['$[]'](key)))) {\n            return value\n          } else {\n            return (function() {$case = (attribute_missing = ($truthy($a = attribute_missing) ? $a : ($truthy($b = ($truthy($c = opts['$[]'](\"attribute_missing\")) ? $c : doc_attrs['$[]'](\"attribute-missing\"))) ? $b : $$($nesting, 'Compliance').$attribute_missing())));\n            if (\"drop\"['$===']($case)) {return (drop = (drop_empty_line = $$($nesting, 'DEL')))}\n            else if (\"drop-line\"['$===']($case)) {\n            if ((drop_line_severity = ($truthy($a = drop_line_severity) ? $a : ($truthy($b = opts['$[]'](\"drop_line_severity\")) ? $b : \"info\")))['$=='](\"info\")) {\n              $send(self.$logger(), 'info', [], ($$12 = function(){var self = $$12.$$s || this;\n\n              return \"\" + \"dropping line containing reference to missing attribute: \" + (key)}, $$12.$$s = self, $$12.$$arity = 0, $$12))};\n            return (drop = (drop_line = $$($nesting, 'CAN')));}\n            else if (\"warn\"['$===']($case)) {\n            self.$logger().$warn(\"\" + \"skipping reference to missing attribute: \" + (key));\n            return (($a = $gvars['~']) === nil ? nil : $a['$[]'](0));}\n            else {return (($a = $gvars['~']) === nil ? nil : $a['$[]'](0))}})()\n          }}, $$11.$$s = self, $$11.$$arity = 0, $$11));\n        if ($truthy(drop)) {\n          if ($truthy(drop_empty_line)) {\n            \n            lines = text.$squeeze($$($nesting, 'DEL')).$split($$($nesting, 'LF'), -1);\n            if ($truthy(drop_line)) {\n              return $send(lines, 'reject', [], ($$13 = function(line){var self = $$13.$$s || this, $a, $b, $c;\n\n              \n                \n                if (line == null) {\n                  line = nil;\n                };\n                return ($truthy($a = ($truthy($b = ($truthy($c = line['$==']($$($nesting, 'DEL'))) ? $c : line['$==']($$($nesting, 'CAN')))) ? $b : line['$start_with?']($$($nesting, 'CAN')))) ? $a : line['$include?']($$($nesting, 'CAN')));}, $$13.$$s = self, $$13.$$arity = 1, $$13)).$join($$($nesting, 'LF')).$delete($$($nesting, 'DEL'))\n            } else {\n              return $send(lines, 'reject', [], ($$14 = function(line){var self = $$14.$$s || this;\n\n              \n                \n                if (line == null) {\n                  line = nil;\n                };\n                return line['$==']($$($nesting, 'DEL'));}, $$14.$$s = self, $$14.$$arity = 1, $$14)).$join($$($nesting, 'LF')).$delete($$($nesting, 'DEL'))\n            };\n          } else if ($truthy(text['$include?']($$($nesting, 'LF')))) {\n            return $send(text.$split($$($nesting, 'LF'), -1), 'reject', [], ($$15 = function(line){var self = $$15.$$s || this, $a, $b;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return ($truthy($a = ($truthy($b = line['$==']($$($nesting, 'CAN'))) ? $b : line['$start_with?']($$($nesting, 'CAN')))) ? $a : line['$include?']($$($nesting, 'CAN')));}, $$15.$$s = self, $$15.$$arity = 1, $$15)).$join($$($nesting, 'LF'))\n          } else {\n            return \"\"\n          }\n        } else {\n          return text\n        };\n      }, $Substitutors_sub_attributes$10.$$arity = -2);\n      \n      Opal.def(self, '$sub_replacements', $Substitutors_sub_replacements$16 = function $$sub_replacements(text) {\n        var $$17, self = this;\n\n        \n        if ($truthy($$($nesting, 'ReplaceableTextRx')['$match?'](text))) {\n          $send($$($nesting, 'REPLACEMENTS'), 'each', [], ($$17 = function(pattern, replacement, restore){var self = $$17.$$s || this, $$18;\n\n          \n            \n            if (pattern == null) {\n              pattern = nil;\n            };\n            \n            if (replacement == null) {\n              replacement = nil;\n            };\n            \n            if (restore == null) {\n              restore = nil;\n            };\n            return (text = $send(text, 'gsub', [pattern], ($$18 = function(){var self = $$18.$$s || this;\n              if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n            return self.$do_replacement($gvars[\"~\"], replacement, restore)}, $$18.$$s = self, $$18.$$arity = 0, $$18)));}, $$17.$$s = self, $$17.$$arity = 3, $$17))};\n        return text;\n      }, $Substitutors_sub_replacements$16.$$arity = 1);\n      \n      Opal.def(self, '$sub_macros', $Substitutors_sub_macros$19 = function $$sub_macros(text) {\n        var $a, $$20, $b, $$22, $$25, $$27, $$29, $$30, $$33, $$34, $$35, $$36, $$37, $$38, $$39, self = this, found_square_bracket = nil, found_colon = nil, found_macroish = nil, found_macroish_short = nil, doc_attrs = nil, doc = nil, extensions = nil;\n        if (self.document == null) self.document = nil;\n        if (self.context == null) self.context = nil;\n        if (self.parent == null) self.parent = nil;\n\n        \n        found_square_bracket = text['$include?'](\"[\");\n        found_colon = text['$include?'](\":\");\n        found_macroish = ($truthy($a = found_square_bracket) ? found_colon : $a);\n        found_macroish_short = ($truthy($a = found_macroish) ? text['$include?'](\":[\") : $a);\n        doc_attrs = (doc = self.document).$attributes();\n        if ($truthy(($truthy($a = (extensions = doc.$extensions())) ? extensions['$inline_macros?']() : $a))) {\n          $send(extensions.$inline_macros(), 'each', [], ($$20 = function(extension){var self = $$20.$$s || this, $$21;\n\n          \n            \n            if (extension == null) {\n              extension = nil;\n            };\n            return (text = $send(text, 'gsub', [extension.$instance().$regexp()], ($$21 = function(){var self = $$21.$$s || this, $b, $c, match = nil, target = nil, content = nil, attributes = nil, default_attrs = nil, ext_config = nil, $writer = nil, replacement = nil, inline_subs = nil;\n              if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n            \n              if ($truthy((match = (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)))['$start_with?']($$($nesting, 'RS')))) {\n                return (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)).$slice(1, (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)).$length());};\n              if ($truthy($gvars[\"~\"].$names()['$empty?']())) {\n                $b = [(($c = $gvars['~']) === nil ? nil : $c['$[]'](1)), (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))], (target = $b[0]), (content = $b[1]), $b\n              } else {\n                $b = [(function() { try {\n                  return $gvars[\"~\"]['$[]'](\"target\")\n                } catch ($err) {\n                  if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                    try {\n                      return nil\n                    } finally { Opal.pop_exception() }\n                  } else { throw $err; }\n                }})(), (function() { try {\n                  return $gvars[\"~\"]['$[]'](\"content\")\n                } catch ($err) {\n                  if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                    try {\n                      return nil\n                    } finally { Opal.pop_exception() }\n                  } else { throw $err; }\n                }})()], (target = $b[0]), (content = $b[1]), $b\n              };\n              attributes = (function() {if ($truthy((default_attrs = (ext_config = extension.$config())['$[]'](\"default_attrs\")))) {\n                return default_attrs.$merge()\n              } else {\n                return $hash2([], {})\n              }; return nil; })();\n              if ($truthy(content)) {\n                \n                if ($truthy(content['$empty?']())) {\n                  if (ext_config['$[]'](\"content_model\")['$=='](\"attributes\")) {\n                  } else {\n                    \n                    $writer = [\"text\", content];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];\n                  }\n                } else {\n                  \n                  content = self.$normalize_text(content, true, true);\n                  if (ext_config['$[]'](\"content_model\")['$=='](\"attributes\")) {\n                    self.$parse_attributes(content, ($truthy($b = ($truthy($c = ext_config['$[]'](\"positional_attrs\")) ? $c : ext_config['$[]'](\"pos_attrs\"))) ? $b : []), $hash2([\"into\"], {\"into\": attributes}))\n                  } else {\n                    \n                    $writer = [\"text\", content];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];\n                  };\n                };\n                target = ($truthy($b = target) ? $b : (function() {if (ext_config['$[]'](\"format\")['$=='](\"short\")) {\n                  return content\n                } else {\n                  return target\n                }; return nil; })());};\n              if ($truthy($$($nesting, 'Inline')['$===']((replacement = extension.$process_method()['$[]'](self, target, attributes))))) {\n                \n                if ($truthy((inline_subs = replacement.$attributes().$delete(\"subs\")))) {\n                  \n                  $writer = [self.$apply_subs(replacement.$text(), self.$expand_subs(inline_subs))];\n                  $send(replacement, 'text=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n                return replacement.$convert();\n              } else if ($truthy(replacement)) {\n                \n                self.$logger().$info(\"\" + \"expected substitution value for custom inline macro to be of type Inline; got \" + (replacement.$class()) + \": \" + (match));\n                return replacement;\n              } else {\n                return \"\"\n              };}, $$21.$$s = self, $$21.$$arity = 0, $$21)));}, $$20.$$s = self, $$20.$$arity = 1, $$20))};\n        if ($truthy(doc_attrs['$key?'](\"experimental\"))) {\n          \n          if ($truthy(($truthy($a = found_macroish_short) ? ($truthy($b = text['$include?'](\"kbd:\")) ? $b : text['$include?'](\"btn:\")) : $a))) {\n            text = $send(text, 'gsub', [$$($nesting, 'InlineKbdBtnMacroRx')], ($$22 = function(){var self = $$22.$$s || this, $c, $$23, $$24, keys = nil, delim_idx = nil, delim = nil, $writer = nil;\n\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](1)))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length())\n              } else if ((($c = $gvars['~']) === nil ? nil : $c['$[]'](2))['$=='](\"kbd\")) {\n                \n                if ($truthy((keys = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)).$strip())['$include?']($$($nesting, 'R_SB')))) {\n                  keys = keys.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n                if ($truthy(($truthy($c = $rb_gt(keys.$length(), 1)) ? (delim_idx = (function() {if ($truthy((delim_idx = keys.$index(\",\", 1)))) {\n                  return [delim_idx, keys.$index(\"+\", 1)].$compact().$min()\n                } else {\n                  \n                  return keys.$index(\"+\", 1);\n                }; return nil; })()) : $c))) {\n                  \n                  delim = keys.$slice(delim_idx, 1);\n                  if ($truthy(keys['$end_with?'](delim))) {\n                    \n                    keys = $send(keys.$chop().$split(delim, -1), 'map', [], ($$23 = function(key){var self = $$23.$$s || this;\n\n                    \n                      \n                      if (key == null) {\n                        key = nil;\n                      };\n                      return key.$strip();}, $$23.$$s = self, $$23.$$arity = 1, $$23));\n                    \n                    $writer = [-1, $rb_plus(keys['$[]'](-1), delim)];\n                    $send(keys, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];;\n                  } else {\n                    keys = $send(keys.$split(delim), 'map', [], ($$24 = function(key){var self = $$24.$$s || this;\n\n                    \n                      \n                      if (key == null) {\n                        key = nil;\n                      };\n                      return key.$strip();}, $$24.$$s = self, $$24.$$arity = 1, $$24))\n                  };\n                } else {\n                  keys = [keys]\n                };\n                return $$($nesting, 'Inline').$new(self, \"kbd\", nil, $hash2([\"attributes\"], {\"attributes\": $hash2([\"keys\"], {\"keys\": keys})})).$convert();\n              } else {\n                return $$($nesting, 'Inline').$new(self, \"button\", self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)), true, true)).$convert()\n              }}, $$22.$$s = self, $$22.$$arity = 0, $$22))};\n          if ($truthy(($truthy($a = found_macroish) ? text['$include?'](\"menu:\") : $a))) {\n            text = $send(text, 'gsub', [$$($nesting, 'InlineMenuMacroRx')], ($$25 = function(){var self = $$25.$$s || this, $c, $$26, menu = nil, items = nil, delim = nil, submenus = nil, menuitem = nil;\n\n            \n              if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n              menu = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1));\n              if ($truthy((items = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))))) {\n                \n                if ($truthy(items['$include?']($$($nesting, 'R_SB')))) {\n                  items = items.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n                if ($truthy((delim = (function() {if ($truthy(items['$include?'](\"&gt;\"))) {\n                  return \"&gt;\"\n                } else {\n                  \n                  if ($truthy(items['$include?'](\",\"))) {\n                    return \",\"\n                  } else {\n                    return nil\n                  };\n                }; return nil; })()))) {\n                  \n                  submenus = $send(items.$split(delim), 'map', [], ($$26 = function(it){var self = $$26.$$s || this;\n\n                  \n                    \n                    if (it == null) {\n                      it = nil;\n                    };\n                    return it.$strip();}, $$26.$$s = self, $$26.$$arity = 1, $$26));\n                  menuitem = submenus.$pop();\n                } else {\n                  $c = [[], items.$rstrip()], (submenus = $c[0]), (menuitem = $c[1]), $c\n                };\n              } else {\n                $c = [[], nil], (submenus = $c[0]), (menuitem = $c[1]), $c\n              };\n              return $$($nesting, 'Inline').$new(self, \"menu\", nil, $hash2([\"attributes\"], {\"attributes\": $hash2([\"menu\", \"submenus\", \"menuitem\"], {\"menu\": menu, \"submenus\": submenus, \"menuitem\": menuitem})})).$convert();}, $$25.$$s = self, $$25.$$arity = 0, $$25))};\n          if ($truthy(($truthy($a = text['$include?'](\"\\\"\")) ? text['$include?'](\"&gt;\") : $a))) {\n            text = $send(text, 'gsub', [$$($nesting, 'InlineMenuRx')], ($$27 = function(){var self = $$27.$$s || this, $c, $d, $e, $$28, menu = nil, submenus = nil, menuitem = nil;\n\n            \n              if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n              $d = $send((($e = $gvars['~']) === nil ? nil : $e['$[]'](1)).$split(\"&gt;\"), 'map', [], ($$28 = function(it){var self = $$28.$$s || this;\n\n              \n                \n                if (it == null) {\n                  it = nil;\n                };\n                return it.$strip();}, $$28.$$s = self, $$28.$$arity = 1, $$28)), $c = Opal.to_ary($d), (menu = ($c[0] == null ? nil : $c[0])), (submenus = $slice.call($c, 1)), $d;\n              menuitem = submenus.$pop();\n              return $$($nesting, 'Inline').$new(self, \"menu\", nil, $hash2([\"attributes\"], {\"attributes\": $hash2([\"menu\", \"submenus\", \"menuitem\"], {\"menu\": menu, \"submenus\": submenus, \"menuitem\": menuitem})})).$convert();}, $$27.$$s = self, $$27.$$arity = 0, $$27))};};\n        if ($truthy(($truthy($a = found_macroish) ? ($truthy($b = text['$include?'](\"image:\")) ? $b : text['$include?'](\"icon:\")) : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineImageMacroRx')], ($$29 = function(){var self = $$29.$$s || this, $c, type = nil, posattrs = nil, target = nil, attrs = nil, $writer = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());\n            } else if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?'](\"icon:\"))) {\n              $c = [\"icon\", [\"size\"]], (type = $c[0]), (posattrs = $c[1]), $c\n            } else {\n              $c = [\"image\", [\"alt\", \"width\", \"height\"]], (type = $c[0]), (posattrs = $c[1]), $c\n            };\n            target = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1));\n            attrs = self.$parse_attributes((($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), posattrs, $hash2([\"unescape_input\"], {\"unescape_input\": true}));\n            if (type['$=='](\"icon\")) {\n            } else {\n              \n              doc.$register(\"images\", target);\n              \n              $writer = [\"imagesdir\", doc_attrs['$[]'](\"imagesdir\")];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n            };\n            ($truthy($c = attrs['$[]'](\"alt\")) ? $c : (($writer = [\"alt\", (($writer = [\"default-alt\", $$($nesting, 'Helpers').$basename(target, true).$tr(\"_-\", \" \")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n            return $$($nesting, 'Inline').$new(self, \"image\", nil, $hash2([\"type\", \"target\", \"attributes\"], {\"type\": type, \"target\": target, \"attributes\": attrs})).$convert();}, $$29.$$s = self, $$29.$$arity = 0, $$29))};\n        if ($truthy(($truthy($a = ($truthy($b = text['$include?'](\"((\")) ? text['$include?'](\"))\") : $b)) ? $a : ($truthy($b = found_macroish_short) ? text['$include?'](\"dexterm\") : $b)))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineIndextermMacroRx')], ($$30 = function(){var self = $$30.$$s || this, $c, $$31, $d, $$32, $case = nil, attrlist = nil, primary = nil, attrs = nil, $writer = nil, terms = nil, secondary = nil, tertiary = nil, see_also = nil, term = nil, visible = nil, before = nil, after = nil, _ = nil, see = nil, subbed_term = nil;\n\n          return (function() {$case = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1));\n            if (\"indexterm\"['$===']($case)) {\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ($truthy((attrlist = self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), true, true))['$include?'](\"=\"))) {\n              if ($truthy((primary = (attrs = $$($nesting, 'AttributeList').$new(attrlist, self).$parse())['$[]'](1)))) {\n                \n                \n                $writer = [\"terms\", (terms = [primary])];\n                $send(attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                if ($truthy((secondary = attrs['$[]'](2)))) {\n                  \n                  terms['$<<'](secondary);\n                  if ($truthy((tertiary = attrs['$[]'](3)))) {\n                    terms['$<<'](tertiary)};};\n                if ($truthy((see_also = attrs['$[]'](\"see-also\")))) {\n                  \n                  $writer = [\"see-also\", (function() {if ($truthy(see_also['$include?'](\",\"))) {\n                    return $send(see_also.$split(\",\"), 'map', [], ($$31 = function(it){var self = $$31.$$s || this;\n\n                    \n                      \n                      if (it == null) {\n                        it = nil;\n                      };\n                      return it.$lstrip();}, $$31.$$s = self, $$31.$$arity = 1, $$31))\n                  } else {\n                    return [see_also]\n                  }; return nil; })()];\n                  $send(attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n              } else {\n                attrs = $hash2([\"terms\"], {\"terms\": (terms = attrlist)})\n              }\n            } else {\n              attrs = $hash2([\"terms\"], {\"terms\": (terms = self.$split_simple_csv(attrlist))})\n            };\n            return $$($nesting, 'Inline').$new(self, \"indexterm\", nil, $hash2([\"attributes\"], {\"attributes\": attrs})).$convert();}\n            else if (\"indexterm2\"['$===']($case)) {\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ($truthy((term = self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), true, true))['$include?'](\"=\"))) {\n              \n              term = ($truthy($c = ($truthy($d = (attrs = $$($nesting, 'AttributeList').$new(term, self).$parse())['$[]'](1)) ? $d : (attrs = nil))) ? $c : term);\n              if ($truthy(($truthy($c = attrs) ? (see_also = attrs['$[]'](\"see-also\")) : $c))) {\n                \n                $writer = [\"see-also\", (function() {if ($truthy(see_also['$include?'](\",\"))) {\n                  return $send(see_also.$split(\",\"), 'map', [], ($$32 = function(it){var self = $$32.$$s || this;\n\n                  \n                    \n                    if (it == null) {\n                      it = nil;\n                    };\n                    return it.$lstrip();}, $$32.$$s = self, $$32.$$arity = 1, $$32))\n                } else {\n                  return [see_also]\n                }; return nil; })()];\n                $send(attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};};\n            return $$($nesting, 'Inline').$new(self, \"indexterm\", term, $hash2([\"attributes\", \"type\"], {\"attributes\": attrs, \"type\": \"visible\"})).$convert();}\n            else {\n            text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3));\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              if ($truthy(($truthy($c = text['$start_with?'](\"(\")) ? text['$end_with?'](\")\") : $c))) {\n                \n                text = text.$slice(1, $rb_minus(text.$length(), 2));\n                $c = [true, \"(\", \")\"], (visible = $c[0]), (before = $c[1]), (after = $c[2]), $c;\n              } else {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());\n              }\n            } else {\n              \n              visible = true;\n              if ($truthy(text['$start_with?'](\"(\"))) {\n                if ($truthy(text['$end_with?'](\")\"))) {\n                  $c = [text.$slice(1, $rb_minus(text.$length(), 2)), false], (text = $c[0]), (visible = $c[1]), $c\n                } else {\n                  $c = [text.$slice(1, text.$length()), \"(\", \"\"], (text = $c[0]), (before = $c[1]), (after = $c[2]), $c\n                }\n              } else if ($truthy(text['$end_with?'](\")\"))) {\n                $c = [text.$chop(), \"\", \")\"], (text = $c[0]), (before = $c[1]), (after = $c[2]), $c};\n            };\n            if ($truthy(visible)) {\n              \n              if ($truthy((term = self.$normalize_text(text, true))['$include?'](\";&\"))) {\n                if ($truthy(term['$include?'](\" &gt;&gt; \"))) {\n                  \n                  $d = term.$partition(\" &gt;&gt; \"), $c = Opal.to_ary($d), (term = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (see = ($c[2] == null ? nil : $c[2])), $d;\n                  attrs = $hash2([\"see\"], {\"see\": see});\n                } else if ($truthy(term['$include?'](\" &amp;&gt; \"))) {\n                  \n                  $d = term.$split(\" &amp;&gt; \"), $c = Opal.to_ary($d), (term = ($c[0] == null ? nil : $c[0])), (see_also = $slice.call($c, 1)), $d;\n                  attrs = $hash2([\"see-also\"], {\"see-also\": see_also});}};\n              subbed_term = $$($nesting, 'Inline').$new(self, \"indexterm\", term, $hash2([\"attributes\", \"type\"], {\"attributes\": attrs, \"type\": \"visible\"})).$convert();\n            } else {\n              \n              attrs = $hash2([], {});\n              if ($truthy((terms = self.$normalize_text(text, true))['$include?'](\";&\"))) {\n                if ($truthy(terms['$include?'](\" &gt;&gt; \"))) {\n                  \n                  $d = terms.$partition(\" &gt;&gt; \"), $c = Opal.to_ary($d), (terms = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (see = ($c[2] == null ? nil : $c[2])), $d;\n                  \n                  $writer = [\"see\", see];\n                  $send(attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                } else if ($truthy(terms['$include?'](\" &amp;&gt; \"))) {\n                  \n                  $d = terms.$split(\" &amp;&gt; \"), $c = Opal.to_ary($d), (terms = ($c[0] == null ? nil : $c[0])), (see_also = $slice.call($c, 1)), $d;\n                  \n                  $writer = [\"see-also\", see_also];\n                  $send(attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;}};\n              \n              $writer = [\"terms\", (terms = self.$split_simple_csv(terms))];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              subbed_term = $$($nesting, 'Inline').$new(self, \"indexterm\", nil, $hash2([\"attributes\"], {\"attributes\": attrs})).$convert();\n            };\n            if ($truthy(before)) {\n              return \"\" + (before) + (subbed_term) + (after)\n            } else {\n              return subbed_term\n            };}})()}, $$30.$$s = self, $$30.$$arity = 0, $$30))};\n        if ($truthy(($truthy($a = found_colon) ? text['$include?'](\"://\") : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineLinkRx')], ($$33 = function(){var self = $$33.$$s || this, $c, $d, target = nil, prefix = nil, suffix = nil, $case = nil, attrs = nil, link_opts = nil, $writer = nil;\n\n          \n            if ($truthy((target = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2)))['$start_with?']($$($nesting, 'RS')))) {\n              return \"\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))) + (target.$slice(1, target.$length())) + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](4)));};\n            $c = [(($d = $gvars['~']) === nil ? nil : $d['$[]'](1)), \"\"], (prefix = $c[0]), (suffix = $c[1]), $c;\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](4)))) {\n              \n              if (prefix['$=='](\"link:\")) {\n                prefix = \"\"};\n              text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](4));\n            } else {\n              \n              if (prefix['$=='](\"link:\")) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));};\n              text = \"\";\n              $case = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3));\n              if (\")\"['$===']($case)) {\n              target = target.$chop();\n              suffix = \")\";\n              if ($truthy(target['$end_with?'](\"://\"))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));};}\n              else if (\";\"['$===']($case)) {\n              if ($truthy(($truthy($c = prefix['$start_with?'](\"&lt;\")) ? target['$end_with?'](\"&gt;\") : $c))) {\n                \n                prefix = prefix.$slice(4, prefix.$length());\n                target = target.$slice(0, $rb_minus(target.$length(), 4));\n              } else if ($truthy((target = target.$chop())['$end_with?'](\")\"))) {\n                \n                target = target.$chop();\n                suffix = \");\";\n              } else {\n                suffix = \";\"\n              };\n              if ($truthy(target['$end_with?'](\"://\"))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));};}\n              else if (\":\"['$===']($case)) {\n              if ($truthy((target = target.$chop())['$end_with?'](\")\"))) {\n                \n                target = target.$chop();\n                suffix = \"):\";\n              } else {\n                suffix = \":\"\n              };\n              if ($truthy(target['$end_with?'](\"://\"))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));};};\n            };\n            $c = [nil, $hash2([\"type\"], {\"type\": \"link\"})], (attrs = $c[0]), (link_opts = $c[1]), $c;\n            if ($truthy(text['$empty?']())) {\n            } else {\n              \n              if ($truthy(text['$include?']($$($nesting, 'R_SB')))) {\n                text = text.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n              if ($truthy(($truthy($c = doc.$compat_mode()['$!']()) ? text['$include?'](\"=\") : $c))) {\n                \n                text = ($truthy($c = (attrs = $$($nesting, 'AttributeList').$new(text, self).$parse())['$[]'](1)) ? $c : \"\");\n                \n                $writer = [\"id\", attrs['$[]'](\"id\")];\n                $send(link_opts, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;};\n              if ($truthy(text['$end_with?'](\"^\"))) {\n                \n                text = text.$chop();\n                if ($truthy(attrs)) {\n                  ($truthy($c = attrs['$[]'](\"window\")) ? $c : (($writer = [\"window\", \"_blank\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n                } else {\n                  attrs = $hash2([\"window\"], {\"window\": \"_blank\"})\n                };};\n            };\n            if ($truthy(text['$empty?']())) {\n              \n              text = (function() {if ($truthy(doc_attrs['$key?'](\"hide-uri-scheme\"))) {\n                \n                return target.$sub($$($nesting, 'UriSniffRx'), \"\");\n              } else {\n                return target\n              }; return nil; })();\n              if ($truthy(attrs)) {\n                \n                $writer = [\"role\", (function() {if ($truthy(attrs['$key?'](\"role\"))) {\n                  return \"\" + \"bare \" + (attrs['$[]'](\"role\"))\n                } else {\n                  return \"bare\"\n                }; return nil; })()];\n                $send(attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              } else {\n                attrs = $hash2([\"role\"], {\"role\": \"bare\"})\n              };};\n            doc.$register(\"links\", (($writer = [\"target\", target]), $send(link_opts, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n            if ($truthy(attrs)) {\n              \n              $writer = [\"attributes\", attrs];\n              $send(link_opts, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            return \"\" + (prefix) + ($$($nesting, 'Inline').$new(self, \"anchor\", text, link_opts).$convert()) + (suffix);}, $$33.$$s = self, $$33.$$arity = 0, $$33))};\n        if ($truthy(($truthy($a = found_macroish) ? ($truthy($b = text['$include?'](\"link:\")) ? $b : text['$include?'](\"ilto:\")) : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineLinkMacroRx')], ($$34 = function(){var self = $$34.$$s || this, $c, mailto = nil, target = nil, mailto_text = nil, attrs = nil, link_opts = nil, $writer = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());\n            } else if ($truthy((mailto = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1))))) {\n              target = $rb_plus(\"mailto:\", (mailto_text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))))\n            } else {\n              target = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))\n            };\n            $c = [nil, $hash2([\"type\"], {\"type\": \"link\"})], (attrs = $c[0]), (link_opts = $c[1]), $c;\n            if ($truthy((text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))['$empty?']())) {\n            } else {\n              \n              if ($truthy(text['$include?']($$($nesting, 'R_SB')))) {\n                text = text.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n              if ($truthy(mailto)) {\n                if ($truthy(($truthy($c = doc.$compat_mode()['$!']()) ? text['$include?'](\",\") : $c))) {\n                  \n                  text = ($truthy($c = (attrs = $$($nesting, 'AttributeList').$new(text, self).$parse())['$[]'](1)) ? $c : \"\");\n                  \n                  $writer = [\"id\", attrs['$[]'](\"id\")];\n                  $send(link_opts, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                  if ($truthy(attrs['$key?'](2))) {\n                    if ($truthy(attrs['$key?'](3))) {\n                      target = \"\" + (target) + \"?subject=\" + ($$($nesting, 'Helpers').$encode_uri_component(attrs['$[]'](2))) + \"&amp;body=\" + ($$($nesting, 'Helpers').$encode_uri_component(attrs['$[]'](3)))\n                    } else {\n                      target = \"\" + (target) + \"?subject=\" + ($$($nesting, 'Helpers').$encode_uri_component(attrs['$[]'](2)))\n                    }};}\n              } else if ($truthy(($truthy($c = doc.$compat_mode()['$!']()) ? text['$include?'](\"=\") : $c))) {\n                \n                text = ($truthy($c = (attrs = $$($nesting, 'AttributeList').$new(text, self).$parse())['$[]'](1)) ? $c : \"\");\n                \n                $writer = [\"id\", attrs['$[]'](\"id\")];\n                $send(link_opts, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;};\n              if ($truthy(text['$end_with?'](\"^\"))) {\n                \n                text = text.$chop();\n                if ($truthy(attrs)) {\n                  ($truthy($c = attrs['$[]'](\"window\")) ? $c : (($writer = [\"window\", \"_blank\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n                } else {\n                  attrs = $hash2([\"window\"], {\"window\": \"_blank\"})\n                };};\n            };\n            if ($truthy(text['$empty?']())) {\n              if ($truthy(mailto)) {\n                text = mailto_text\n              } else {\n                \n                if ($truthy(doc_attrs['$key?'](\"hide-uri-scheme\"))) {\n                  if ($truthy((text = target.$sub($$($nesting, 'UriSniffRx'), \"\"))['$empty?']())) {\n                    text = target}\n                } else {\n                  text = target\n                };\n                if ($truthy(attrs)) {\n                  \n                  $writer = [\"role\", (function() {if ($truthy(attrs['$key?'](\"role\"))) {\n                    return \"\" + \"bare \" + (attrs['$[]'](\"role\"))\n                  } else {\n                    return \"bare\"\n                  }; return nil; })()];\n                  $send(attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];\n                } else {\n                  attrs = $hash2([\"role\"], {\"role\": \"bare\"})\n                };\n              }};\n            doc.$register(\"links\", (($writer = [\"target\", target]), $send(link_opts, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n            if ($truthy(attrs)) {\n              \n              $writer = [\"attributes\", attrs];\n              $send(link_opts, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            return $$($nesting, 'Inline').$new(self, \"anchor\", text, link_opts).$convert();}, $$34.$$s = self, $$34.$$arity = 0, $$34))};\n        if ($truthy(text['$include?'](\"@\"))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineEmailRx')], ($$35 = function(){var self = $$35.$$s || this, $c, target = nil, address = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](1)))) {\n              return (function() {if ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))['$==']($$($nesting, 'RS'))) {\n                \n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());\n              } else {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0))\n              }; return nil; })();};\n            target = $rb_plus(\"mailto:\", (address = (($c = $gvars['~']) === nil ? nil : $c['$[]'](0))));\n            doc.$register(\"links\", target);\n            return $$($nesting, 'Inline').$new(self, \"anchor\", address, $hash2([\"type\", \"target\"], {\"type\": \"link\", \"target\": target})).$convert();}, $$35.$$s = self, $$35.$$arity = 0, $$35))};\n        if ($truthy(($truthy($a = ($truthy($b = found_square_bracket) ? self.context['$=='](\"list_item\") : $b)) ? self.parent.$style()['$=='](\"bibliography\") : $a))) {\n          text = $send(text, 'sub', [$$($nesting, 'InlineBiblioAnchorRx')], ($$36 = function(){var self = $$36.$$s || this, $c;\n\n          return $$($nesting, 'Inline').$new(self, \"anchor\", (($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), $hash2([\"type\", \"id\"], {\"type\": \"bibref\", \"id\": (($c = $gvars['~']) === nil ? nil : $c['$[]'](1))})).$convert()}, $$36.$$s = self, $$36.$$arity = 0, $$36))};\n        if ($truthy(($truthy($a = ($truthy($b = found_square_bracket) ? text['$include?'](\"[[\") : $b)) ? $a : ($truthy($b = found_macroish) ? text['$include?'](\"or:\") : $b)))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineAnchorRx')], ($$37 = function(){var self = $$37.$$s || this, $c, $d, id = nil, reftext = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](1)))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ($truthy((id = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))))) {\n              reftext = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))\n            } else {\n              \n              id = (($c = $gvars['~']) === nil ? nil : $c['$[]'](4));\n              if ($truthy(($truthy($c = (reftext = (($d = $gvars['~']) === nil ? nil : $d['$[]'](5)))) ? reftext['$include?']($$($nesting, 'R_SB')) : $c))) {\n                reftext = reftext.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n            };\n            return $$($nesting, 'Inline').$new(self, \"anchor\", reftext, $hash2([\"type\", \"id\"], {\"type\": \"ref\", \"id\": id})).$convert();}, $$37.$$s = self, $$37.$$arity = 0, $$37))};\n        if ($truthy(($truthy($a = ($truthy($b = text['$include?'](\"&\")) ? text['$include?'](\";&l\") : $b)) ? $a : ($truthy($b = found_macroish) ? text['$include?'](\"xref:\") : $b)))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineXrefMacroRx')], ($$38 = function(){var self = $$38.$$s || this, $c, $d, attrs = nil, refid = nil, macro = nil, fragment = nil, hash_idx = nil, fragment_len = nil, path = nil, src2src = nil, target = nil, $writer = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            attrs = $hash2([], {});\n            if ($truthy((refid = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1))))) {\n              \n              $d = refid.$split(\",\", 2), $c = Opal.to_ary($d), (refid = ($c[0] == null ? nil : $c[0])), (text = ($c[1] == null ? nil : $c[1])), $d;\n              if ($truthy(text)) {\n                text = text.$lstrip()};\n            } else {\n              \n              macro = true;\n              refid = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2));\n              if ($truthy((text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))))) {\n                \n                if ($truthy(text['$include?']($$($nesting, 'R_SB')))) {\n                  text = text.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n                if ($truthy(($truthy($c = doc.$compat_mode()['$!']()) ? text['$include?'](\"=\") : $c))) {\n                  text = $$($nesting, 'AttributeList').$new(text, self).$parse_into(attrs)['$[]'](1)};};\n            };\n            if ($truthy(doc.$compat_mode())) {\n              fragment = refid\n            } else if ($truthy((hash_idx = refid.$index(\"#\")))) {\n              if ($truthy($rb_gt(hash_idx, 0))) {\n                \n                if ($truthy($rb_gt((fragment_len = $rb_minus($rb_minus(refid.$length(), 1), hash_idx)), 0))) {\n                  $c = [refid.$slice(0, hash_idx), refid.$slice($rb_plus(hash_idx, 1), fragment_len)], (path = $c[0]), (fragment = $c[1]), $c\n                } else {\n                  path = refid.$chop()\n                };\n                if ($truthy(macro)) {\n                  if ($truthy(path['$end_with?'](\".adoc\"))) {\n                    src2src = (path = path.$slice(0, $rb_minus(path.$length(), 5)))\n                  } else if ($truthy($$($nesting, 'Helpers')['$extname?'](path)['$!']())) {\n                    src2src = path}\n                } else if ($truthy($send(path, 'end_with?', Opal.to_a($$($nesting, 'ASCIIDOC_EXTENSIONS').$keys())))) {\n                  src2src = (path = path.$slice(0, path.$rindex(\".\")))\n                } else {\n                  src2src = path\n                };\n              } else {\n                $c = [refid, refid.$slice(1, refid.$length())], (target = $c[0]), (fragment = $c[1]), $c\n              }\n            } else if ($truthy(macro)) {\n              if ($truthy(refid['$end_with?'](\".adoc\"))) {\n                src2src = (path = refid.$slice(0, $rb_minus(refid.$length(), 5)))\n              } else if ($truthy($$($nesting, 'Helpers')['$extname?'](refid))) {\n                path = refid\n              } else {\n                fragment = refid\n              }\n            } else {\n              fragment = refid\n            };\n            if ($truthy(target)) {\n              \n              refid = fragment;\n              if ($truthy(($truthy($c = self.$logger()['$info?']()) ? doc.$catalog()['$[]'](\"refs\")['$[]'](refid)['$!']() : $c))) {\n                self.$logger().$info(\"\" + \"possible invalid reference: \" + (refid))};\n            } else if ($truthy(path)) {\n              if ($truthy(($truthy($c = src2src) ? ($truthy($d = doc.$attributes()['$[]'](\"docname\")['$=='](path)) ? $d : doc.$catalog()['$[]'](\"includes\")['$[]'](path)) : $c))) {\n                if ($truthy(fragment)) {\n                  \n                  $c = [fragment, nil, \"\" + \"#\" + (fragment)], (refid = $c[0]), (path = $c[1]), (target = $c[2]), $c;\n                  if ($truthy(($truthy($c = self.$logger()['$info?']()) ? doc.$catalog()['$[]'](\"refs\")['$[]'](refid)['$!']() : $c))) {\n                    self.$logger().$info(\"\" + \"possible invalid reference: \" + (refid))};\n                } else {\n                  $c = [nil, nil, \"#\"], (refid = $c[0]), (path = $c[1]), (target = $c[2]), $c\n                }\n              } else {\n                \n                $c = [path, \"\" + (doc.$attributes()['$[]'](\"relfileprefix\")) + (path) + ((function() {if ($truthy(src2src)) {\n                  \n                  return doc.$attributes().$fetch(\"relfilesuffix\", doc.$outfilesuffix());\n                } else {\n                  return \"\"\n                }; return nil; })())], (refid = $c[0]), (path = $c[1]), $c;\n                if ($truthy(fragment)) {\n                  $c = [\"\" + (refid) + \"#\" + (fragment), \"\" + (path) + \"#\" + (fragment)], (refid = $c[0]), (target = $c[1]), $c\n                } else {\n                  target = path\n                };\n              }\n            } else if ($truthy(($truthy($c = doc.$compat_mode()) ? $c : $$($nesting, 'Compliance').$natural_xrefs()['$!']()))) {\n              \n              $c = [fragment, \"\" + \"#\" + (fragment)], (refid = $c[0]), (target = $c[1]), $c;\n              if ($truthy(($truthy($c = self.$logger()['$info?']()) ? doc.$catalog()['$[]'](\"refs\")['$[]'](refid) : $c))) {\n                self.$logger().$info(\"\" + \"possible invalid reference: \" + (refid))};\n            } else if ($truthy(doc.$catalog()['$[]'](\"refs\")['$[]'](fragment))) {\n              $c = [fragment, \"\" + \"#\" + (fragment)], (refid = $c[0]), (target = $c[1]), $c\n            } else if ($truthy(($truthy($c = ($truthy($d = fragment['$include?'](\" \")) ? $d : fragment.$downcase()['$!='](fragment))) ? (refid = doc.$resolve_id(fragment)) : $c))) {\n              $c = [refid, \"\" + \"#\" + (refid)], (fragment = $c[0]), (target = $c[1]), $c\n            } else {\n              \n              $c = [fragment, \"\" + \"#\" + (fragment)], (refid = $c[0]), (target = $c[1]), $c;\n              if ($truthy(self.$logger()['$info?']())) {\n                self.$logger().$info(\"\" + \"possible invalid reference: \" + (refid))};\n            };\n            \n            $writer = [\"path\", path];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"fragment\", fragment];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"refid\", refid];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return $$($nesting, 'Inline').$new(self, \"anchor\", text, $hash2([\"type\", \"target\", \"attributes\"], {\"type\": \"xref\", \"target\": target, \"attributes\": attrs})).$convert();}, $$38.$$s = self, $$38.$$arity = 0, $$38))};\n        if ($truthy(($truthy($a = found_macroish) ? text['$include?'](\"tnote\") : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineFootnoteMacroRx')], ($$39 = function(){var self = $$39.$$s || this, $c, $d, $e, $$40, id = nil, index = nil, type = nil, target = nil, footnote = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](1)))) {\n              if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))) {\n                \n                $d = (($e = $gvars['~']) === nil ? nil : $e['$[]'](3)).$split(\",\", 2), $c = Opal.to_ary($d), (id = ($c[0] == null ? nil : $c[0])), (text = ($c[1] == null ? nil : $c[1])), $d;\n                if ($truthy(doc.$compat_mode())) {\n                } else {\n                  self.$logger().$warn(\"\" + \"found deprecated footnoteref macro: \" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))) + \"; use footnote macro with target instead\")\n                };\n              } else {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));\n              }\n            } else {\n              \n              id = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2));\n              text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3));\n            };\n            if ($truthy(id)) {\n              if ($truthy(text)) {\n                \n                text = self.$restore_passthroughs(self.$normalize_text(text, true, true));\n                index = doc.$counter(\"footnote-number\");\n                doc.$register(\"footnotes\", $$$($$($nesting, 'Document'), 'Footnote').$new(index, id, text));\n                $c = [\"ref\", nil], (type = $c[0]), (target = $c[1]), $c;\n              } else {\n                \n                if ($truthy((footnote = $send(doc.$footnotes(), 'find', [], ($$40 = function(candidate){var self = $$40.$$s || this;\n\n                \n                  \n                  if (candidate == null) {\n                    candidate = nil;\n                  };\n                  return candidate.$id()['$=='](id);}, $$40.$$s = self, $$40.$$arity = 1, $$40))))) {\n                  $c = [footnote.$index(), footnote.$text()], (index = $c[0]), (text = $c[1]), $c\n                } else {\n                  \n                  self.$logger().$warn(\"\" + \"invalid footnote reference: \" + (id));\n                  $c = [nil, id], (index = $c[0]), (text = $c[1]), $c;\n                };\n                $c = [\"xref\", id, nil], (type = $c[0]), (target = $c[1]), (id = $c[2]), $c;\n              }\n            } else if ($truthy(text)) {\n              \n              text = self.$restore_passthroughs(self.$normalize_text(text, true, true));\n              index = doc.$counter(\"footnote-number\");\n              doc.$register(\"footnotes\", $$$($$($nesting, 'Document'), 'Footnote').$new(index, id, text));\n              type = (target = nil);\n            } else {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));\n            };\n            return $$($nesting, 'Inline').$new(self, \"footnote\", text, $hash2([\"attributes\", \"id\", \"target\", \"type\"], {\"attributes\": $hash2([\"index\"], {\"index\": index}), \"id\": id, \"target\": target, \"type\": type})).$convert();}, $$39.$$s = self, $$39.$$arity = 0, $$39))};\n        return text;\n      }, $Substitutors_sub_macros$19.$$arity = 1);\n      \n      Opal.def(self, '$sub_post_replacements', $Substitutors_sub_post_replacements$41 = function $$sub_post_replacements(text) {\n        var $a, $$42, $$43, self = this, lines = nil, last = nil;\n        if (self.attributes == null) self.attributes = nil;\n        if (self.document == null) self.document = nil;\n\n        if ($truthy(($truthy($a = self.attributes['$[]'](\"hardbreaks-option\")) ? $a : self.document.$attributes()['$[]'](\"hardbreaks-option\")))) {\n          \n          lines = text.$split($$($nesting, 'LF'), -1);\n          if ($truthy($rb_lt(lines.$size(), 2))) {\n            return text};\n          last = lines.$pop();\n          return $send(lines, 'map', [], ($$42 = function(line){var self = $$42.$$s || this;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            return $$($nesting, 'Inline').$new(self, \"break\", (function() {if ($truthy(line['$end_with?']($$($nesting, 'HARD_LINE_BREAK')))) {\n              \n              return line.$slice(0, $rb_minus(line.$length(), 2));\n            } else {\n              return line\n            }; return nil; })(), $hash2([\"type\"], {\"type\": \"line\"})).$convert();}, $$42.$$s = self, $$42.$$arity = 1, $$42))['$<<'](last).$join($$($nesting, 'LF'));\n        } else if ($truthy(($truthy($a = text['$include?']($$($nesting, 'PLUS'))) ? text['$include?']($$($nesting, 'HARD_LINE_BREAK')) : $a))) {\n          return $send(text, 'gsub', [$$($nesting, 'HardLineBreakRx')], ($$43 = function(){var self = $$43.$$s || this, $b;\n\n          return $$($nesting, 'Inline').$new(self, \"break\", (($b = $gvars['~']) === nil ? nil : $b['$[]'](1)), $hash2([\"type\"], {\"type\": \"line\"})).$convert()}, $$43.$$s = self, $$43.$$arity = 0, $$43))\n        } else {\n          return text\n        }\n      }, $Substitutors_sub_post_replacements$41.$$arity = 1);\n      \n      Opal.def(self, '$sub_source', $Substitutors_sub_source$44 = function $$sub_source(source, process_callouts) {\n        var self = this;\n\n        if ($truthy(process_callouts)) {\n          return self.$sub_callouts(self.$sub_specialchars(source))\n        } else {\n          \n          return self.$sub_specialchars(source);\n        }\n      }, $Substitutors_sub_source$44.$$arity = 2);\n      \n      Opal.def(self, '$sub_callouts', $Substitutors_sub_callouts$45 = function $$sub_callouts(text) {\n        var $$46, self = this, callout_rx = nil, autonum = nil;\n\n        \n        callout_rx = (function() {if ($truthy(self['$attr?'](\"line-comment\"))) {\n          return $$($nesting, 'CalloutSourceRxMap')['$[]'](self.$attr(\"line-comment\"))\n        } else {\n          return $$($nesting, 'CalloutSourceRx')\n        }; return nil; })();\n        autonum = 0;\n        return $send(text, 'gsub', [callout_rx], ($$46 = function(){var self = $$46.$$s || this, $a;\n          if (self.document == null) self.document = nil;\n\n        if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](2)))) {\n            return (($a = $gvars['~']) === nil ? nil : $a['$[]'](0)).$sub($$($nesting, 'RS'), \"\")\n          } else {\n            return $$($nesting, 'Inline').$new(self, \"callout\", (function() {if ((($a = $gvars['~']) === nil ? nil : $a['$[]'](4))['$=='](\".\")) {\n              return (autonum = $rb_plus(autonum, 1)).$to_s()\n            } else {\n              return (($a = $gvars['~']) === nil ? nil : $a['$[]'](4))\n            }; return nil; })(), $hash2([\"id\", \"attributes\"], {\"id\": self.document.$callouts().$read_next_id(), \"attributes\": $hash2([\"guard\"], {\"guard\": (($a = $gvars['~']) === nil ? nil : $a['$[]'](1))})})).$convert()\n          }}, $$46.$$s = self, $$46.$$arity = 0, $$46));\n      }, $Substitutors_sub_callouts$45.$$arity = 1);\n      \n      Opal.def(self, '$highlight_source', $Substitutors_highlight_source$47 = function $$highlight_source(source, process_callouts) {\n        var $a, $b, $c, self = this, syntax_hl = nil, callout_marks = nil, doc_attrs = nil, syntax_hl_name = nil, linenums_mode = nil, start_line_number = nil, highlight_lines = nil, highlighted = nil, source_offset = nil;\n        if (self.document == null) self.document = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n\n        \n        if ($truthy(($truthy($a = (syntax_hl = self.document.$syntax_highlighter())) ? syntax_hl['$highlight?']() : $a))) {\n        } else {\n          return self.$sub_source(source, process_callouts)\n        };\n        if ($truthy(process_callouts)) {\n          $b = self.$extract_callouts(source), $a = Opal.to_ary($b), (source = ($a[0] == null ? nil : $a[0])), (callout_marks = ($a[1] == null ? nil : $a[1])), $b};\n        doc_attrs = self.document.$attributes();\n        syntax_hl_name = syntax_hl.$name();\n        if ($truthy((linenums_mode = (function() {if ($truthy(self['$attr?'](\"linenums\"))) {\n          return ($truthy($a = doc_attrs['$[]'](\"\" + (syntax_hl_name) + \"-linenums-mode\")) ? $a : \"table\").$to_sym()\n        } else {\n          return nil\n        }; return nil; })()))) {\n          if ($truthy($rb_lt((start_line_number = self.$attr(\"start\", 1).$to_i()), 1))) {\n            start_line_number = 1}};\n        if ($truthy(self['$attr?'](\"highlight\"))) {\n          highlight_lines = self.$resolve_lines_to_highlight(source, self.$attr(\"highlight\"))};\n        $b = syntax_hl.$highlight(self, source, self.$attr(\"language\"), $hash2([\"callouts\", \"css_mode\", \"highlight_lines\", \"number_lines\", \"start_line_number\", \"style\"], {\"callouts\": callout_marks, \"css_mode\": ($truthy($c = doc_attrs['$[]'](\"\" + (syntax_hl_name) + \"-css\")) ? $c : \"class\").$to_sym(), \"highlight_lines\": highlight_lines, \"number_lines\": linenums_mode, \"start_line_number\": start_line_number, \"style\": doc_attrs['$[]'](\"\" + (syntax_hl_name) + \"-style\")})), $a = Opal.to_ary($b), (highlighted = ($a[0] == null ? nil : $a[0])), (source_offset = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy(self.passthroughs['$empty?']())) {\n        } else {\n          highlighted = highlighted.$gsub($$($nesting, 'HighlightedPassSlotRx'), \"\" + ($$($nesting, 'PASS_START')) + \"\\\\1\" + ($$($nesting, 'PASS_END')))\n        };\n        if ($truthy(callout_marks['$nil_or_empty?']())) {\n          return highlighted\n        } else {\n          \n          return self.$restore_callouts(highlighted, callout_marks, source_offset);\n        };\n      }, $Substitutors_highlight_source$47.$$arity = 2);\n      \n      Opal.def(self, '$resolve_lines_to_highlight', $Substitutors_resolve_lines_to_highlight$48 = function $$resolve_lines_to_highlight(source, spec) {\n        var $$49, self = this, lines = nil;\n\n        \n        lines = [];\n        if ($truthy(spec['$include?'](\" \"))) {\n          spec = spec.$delete(\" \")};\n        $send((function() {if ($truthy(spec['$include?'](\",\"))) {\n          \n          return spec.$split(\",\");\n        } else {\n          \n          return spec.$split(\";\");\n        }; return nil; })(), 'map', [], ($$49 = function(entry){var self = $$49.$$s || this, $a, $b, negate = nil, delim = nil, from = nil, to = nil, line_nums = nil;\n\n        \n          \n          if (entry == null) {\n            entry = nil;\n          };\n          if ($truthy(entry['$start_with?'](\"!\"))) {\n            \n            entry = entry.$slice(1, entry.$length());\n            negate = true;};\n          if ($truthy((delim = (function() {if ($truthy(entry['$include?'](\"..\"))) {\n            return \"..\"\n          } else {\n            \n            if ($truthy(entry['$include?'](\"-\"))) {\n              return \"-\"\n            } else {\n              return nil\n            };\n          }; return nil; })()))) {\n            \n            $b = entry.$partition(delim), $a = Opal.to_ary($b), (from = ($a[0] == null ? nil : $a[0])), (delim = ($a[1] == null ? nil : $a[1])), (to = ($a[2] == null ? nil : $a[2])), $b;\n            if ($truthy(($truthy($a = to['$empty?']()) ? $a : $rb_lt((to = to.$to_i()), 0)))) {\n              to = $rb_plus(source.$count($$($nesting, 'LF')), 1)};\n            line_nums = Opal.Range.$new(from.$to_i(), to, false).$to_a();\n            if ($truthy(negate)) {\n              return (lines = $rb_minus(lines, line_nums))\n            } else {\n              return lines.$concat(line_nums)\n            };\n          } else if ($truthy(negate)) {\n            return lines.$delete(entry.$to_i())\n          } else {\n            return lines['$<<'](entry.$to_i())\n          };}, $$49.$$s = self, $$49.$$arity = 1, $$49));\n        return lines.$sort().$uniq();\n      }, $Substitutors_resolve_lines_to_highlight$48.$$arity = 2);\n      \n      Opal.def(self, '$extract_passthroughs', $Substitutors_extract_passthroughs$50 = function $$extract_passthroughs(text) {\n        var $a, $b, $$51, $$52, $$53, self = this, compat_mode = nil, passthrus = nil, pass_inline_char1 = nil, pass_inline_char2 = nil, pass_inline_rx = nil;\n        if (self.document == null) self.document = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n\n        \n        compat_mode = self.document.$compat_mode();\n        passthrus = self.passthroughs;\n        if ($truthy(($truthy($a = ($truthy($b = text['$include?'](\"++\")) ? $b : text['$include?'](\"$$\"))) ? $a : text['$include?'](\"ss:\")))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlinePassMacroRx')], ($$51 = function(){var self = $$51.$$s || this, $c, boundary = nil, attrlist = nil, escape_count = nil, preceding = nil, old_behavior = nil, attributes = nil, subs = nil, $writer = nil, passthru_key = nil;\n\n          \n            if ($truthy((boundary = (($c = $gvars['~']) === nil ? nil : $c['$[]'](4))))) {\n              \n              if ($truthy(($truthy($c = compat_mode) ? boundary['$=='](\"++\") : $c))) {\n                return \"\" + ((function() {if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](2)))) {\n                  return \"\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))) + \"[\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](2))) + \"]\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))\n                } else {\n                  return \"\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))) + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))\n                }; return nil; })()) + \"++\" + (self.$extract_passthroughs((($c = $gvars['~']) === nil ? nil : $c['$[]'](5)))) + \"++\";};\n              if ($truthy((attrlist = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))))) {\n                if ($truthy($rb_gt((escape_count = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)).$length()), 0))) {\n                  return \"\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))) + \"[\" + (attrlist) + \"]\" + ($rb_times($$($nesting, 'RS'), $rb_minus(escape_count, 1))) + (boundary) + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](5))) + (boundary);\n                } else if ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))['$==']($$($nesting, 'RS'))) {\n                  preceding = \"\" + \"[\" + (attrlist) + \"]\"\n                } else {\n                  \n                  if ($truthy((($c = boundary['$=='](\"++\")) ? attrlist['$end_with?'](\"x-\") : boundary['$=='](\"++\")))) {\n                    \n                    old_behavior = true;\n                    attrlist = attrlist.$slice(0, $rb_minus(attrlist.$length(), 2));};\n                  attributes = self.$parse_quoted_text_attributes(attrlist);\n                }\n              } else if ($truthy($rb_gt((escape_count = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)).$length()), 0))) {\n                return \"\" + ($rb_times($$($nesting, 'RS'), $rb_minus(escape_count, 1))) + (boundary) + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](5))) + (boundary);};\n              subs = (function() {if (boundary['$=='](\"+++\")) {\n                return []\n              } else {\n                return $$($nesting, 'BASIC_SUBS')\n              }; return nil; })();\n              if ($truthy(attributes)) {\n                if ($truthy(old_behavior)) {\n                  \n                  $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"type\", \"attributes\"], {\"text\": (($c = $gvars['~']) === nil ? nil : $c['$[]'](5)), \"subs\": $$($nesting, 'NORMAL_SUBS'), \"type\": \"monospaced\", \"attributes\": attributes})];\n                  $send(passthrus, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];\n                } else {\n                  \n                  $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"type\", \"attributes\"], {\"text\": (($c = $gvars['~']) === nil ? nil : $c['$[]'](5)), \"subs\": subs, \"type\": \"unquoted\", \"attributes\": attributes})];\n                  $send(passthrus, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];\n                }\n              } else {\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\"], {\"text\": (($c = $gvars['~']) === nil ? nil : $c['$[]'](5)), \"subs\": subs})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n            } else {\n              \n              if ((($c = $gvars['~']) === nil ? nil : $c['$[]'](6))['$==']($$($nesting, 'RS'))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n              if ($truthy((subs = (($c = $gvars['~']) === nil ? nil : $c['$[]'](7))))) {\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\"], {\"text\": self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](8)), nil, true), \"subs\": self.$resolve_pass_subs(subs)})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              } else {\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\"], {\"text\": self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](8)), nil, true)})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n            };\n            return \"\" + (($truthy($c = preceding) ? $c : \"\")) + ($$($nesting, 'PASS_START')) + (passthru_key) + ($$($nesting, 'PASS_END'));}, $$51.$$s = self, $$51.$$arity = 0, $$51))};\n        $b = $$($nesting, 'InlinePassRx')['$[]'](compat_mode), $a = Opal.to_ary($b), (pass_inline_char1 = ($a[0] == null ? nil : $a[0])), (pass_inline_char2 = ($a[1] == null ? nil : $a[1])), (pass_inline_rx = ($a[2] == null ? nil : $a[2])), $b;\n        if ($truthy(($truthy($a = text['$include?'](pass_inline_char1)) ? $a : ($truthy($b = pass_inline_char2) ? text['$include?'](pass_inline_char2) : $b)))) {\n          text = $send(text, 'gsub', [pass_inline_rx], ($$52 = function(){var self = $$52.$$s || this, $c, preceding = nil, attrlist = nil, quoted_text = nil, escape_mark = nil, format_mark = nil, content = nil, old_behavior = nil, attributes = nil, $writer = nil, passthru_key = nil, subs = nil;\n\n          \n            preceding = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1));\n            attrlist = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2));\n            if ($truthy((quoted_text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))['$start_with?']($$($nesting, 'RS')))) {\n              escape_mark = $$($nesting, 'RS')};\n            format_mark = (($c = $gvars['~']) === nil ? nil : $c['$[]'](4));\n            content = (($c = $gvars['~']) === nil ? nil : $c['$[]'](5));\n            if ($truthy(compat_mode)) {\n              old_behavior = true\n            } else if ($truthy((old_behavior = ($truthy($c = attrlist) ? attrlist['$end_with?'](\"x-\") : $c)))) {\n              attrlist = attrlist.$slice(0, $rb_minus(attrlist.$length(), 2))};\n            if ($truthy(attrlist)) {\n              if ($truthy((($c = format_mark['$=='](\"`\")) ? old_behavior['$!']() : format_mark['$=='](\"`\")))) {\n                return self.$extract_inner_passthrough(content, \"\" + (preceding) + \"[\" + (attrlist) + \"]\" + (escape_mark));\n              } else if ($truthy(escape_mark)) {\n                return \"\" + (preceding) + \"[\" + (attrlist) + \"]\" + (quoted_text.$slice(1, quoted_text.$length()));\n              } else if (preceding['$==']($$($nesting, 'RS'))) {\n                preceding = \"\" + \"[\" + (attrlist) + \"]\"\n              } else {\n                attributes = self.$parse_quoted_text_attributes(attrlist)\n              }\n            } else if ($truthy((($c = format_mark['$=='](\"`\")) ? old_behavior['$!']() : format_mark['$=='](\"`\")))) {\n              return self.$extract_inner_passthrough(content, \"\" + (preceding) + (escape_mark));\n            } else if ($truthy(escape_mark)) {\n              return \"\" + (preceding) + (quoted_text.$slice(1, quoted_text.$length()));};\n            if ($truthy(compat_mode)) {\n              \n              $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"attributes\", \"type\"], {\"text\": content, \"subs\": $$($nesting, 'BASIC_SUBS'), \"attributes\": attributes, \"type\": \"monospaced\"})];\n              $send(passthrus, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else if ($truthy(attributes)) {\n              if ($truthy(old_behavior)) {\n                \n                subs = (function() {if (format_mark['$=='](\"`\")) {\n                  return $$($nesting, 'BASIC_SUBS')\n                } else {\n                  return $$($nesting, 'NORMAL_SUBS')\n                }; return nil; })();\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"attributes\", \"type\"], {\"text\": content, \"subs\": subs, \"attributes\": attributes, \"type\": \"monospaced\"})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n              } else {\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"attributes\", \"type\"], {\"text\": content, \"subs\": $$($nesting, 'BASIC_SUBS'), \"attributes\": attributes, \"type\": \"unquoted\"})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              }\n            } else {\n              \n              $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\"], {\"text\": content, \"subs\": $$($nesting, 'BASIC_SUBS')})];\n              $send(passthrus, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            return \"\" + (preceding) + ($$($nesting, 'PASS_START')) + (passthru_key) + ($$($nesting, 'PASS_END'));}, $$52.$$s = self, $$52.$$arity = 0, $$52))};\n        if ($truthy(($truthy($a = text['$include?'](\":\")) ? ($truthy($b = text['$include?'](\"stem:\")) ? $b : text['$include?'](\"math:\")) : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineStemMacroRx')], ($$53 = function(){var self = $$53.$$s || this, $c, $d, type = nil, subs = nil, content = nil, $writer = nil, passthru_key = nil;\n            if (self.document == null) self.document = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ((type = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1)).$to_sym())['$=='](\"stem\")) {\n              type = $$($nesting, 'STEM_TYPE_ALIASES')['$[]'](self.document.$attributes()['$[]'](\"stem\")).$to_sym()};\n            subs = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2));\n            content = self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)), nil, true);\n            if ($truthy(($truthy($c = (($d = type['$=='](\"latexmath\")) ? content['$start_with?'](\"$\") : type['$=='](\"latexmath\"))) ? content['$end_with?'](\"$\") : $c))) {\n              content = content.$slice(1, $rb_minus(content.$length(), 2))};\n            subs = (function() {if ($truthy(subs)) {\n              \n              return self.$resolve_pass_subs(subs);\n            } else {\n              \n              if ($truthy(self.document['$basebackend?'](\"html\"))) {\n                return $$($nesting, 'BASIC_SUBS')\n              } else {\n                return nil\n              };\n            }; return nil; })();\n            \n            $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"type\"], {\"text\": content, \"subs\": subs, \"type\": type})];\n            $send(passthrus, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return \"\" + ($$($nesting, 'PASS_START')) + (passthru_key) + ($$($nesting, 'PASS_END'));}, $$53.$$s = self, $$53.$$arity = 0, $$53))};\n        return text;\n      }, $Substitutors_extract_passthroughs$50.$$arity = 1);\n      \n      Opal.def(self, '$restore_passthroughs', $Substitutors_restore_passthroughs$54 = function $$restore_passthroughs(text) {\n        var $$55, self = this, passthrus = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n\n        \n        passthrus = self.passthroughs;\n        return $send(text, 'gsub', [$$($nesting, 'PassSlotRx')], ($$55 = function(){var self = $$55.$$s || this, $a, pass = nil, subbed_text = nil, type = nil, attributes = nil, id = nil;\n\n        if ($truthy((pass = passthrus['$[]']((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)).$to_i())))) {\n            \n            subbed_text = self.$apply_subs(pass['$[]'](\"text\"), pass['$[]'](\"subs\"));\n            if ($truthy((type = pass['$[]'](\"type\")))) {\n              \n              if ($truthy((attributes = pass['$[]'](\"attributes\")))) {\n                id = attributes['$[]'](\"id\")};\n              subbed_text = $$($nesting, 'Inline').$new(self, \"quoted\", subbed_text, $hash2([\"type\", \"id\", \"attributes\"], {\"type\": type, \"id\": id, \"attributes\": attributes})).$convert();};\n            if ($truthy(subbed_text['$include?']($$($nesting, 'PASS_START')))) {\n              return self.$restore_passthroughs(subbed_text)\n            } else {\n              return subbed_text\n            };\n          } else {\n            \n            self.$logger().$error(\"\" + \"unresolved passthrough detected: \" + (text));\n            return \"??pass??\";\n          }}, $$55.$$s = self, $$55.$$arity = 0, $$55));\n      }, $Substitutors_restore_passthroughs$54.$$arity = 1);\n      \n      Opal.def(self, '$resolve_subs', $Substitutors_resolve_subs$56 = function $$resolve_subs(subs, type, defaults, subject) {\n        var $$57, self = this, candidates = nil, modifiers_present = nil, resolved = nil, invalid = nil;\n\n        \n        \n        if (type == null) {\n          type = \"block\";\n        };\n        \n        if (defaults == null) {\n          defaults = nil;\n        };\n        \n        if (subject == null) {\n          subject = nil;\n        };\n        if ($truthy(subs['$nil_or_empty?']())) {\n          return nil};\n        candidates = nil;\n        if ($truthy(subs['$include?'](\" \"))) {\n          subs = subs.$delete(\" \")};\n        modifiers_present = $$($nesting, 'SubModifierSniffRx')['$match?'](subs);\n        $send(subs.$split(\",\"), 'each', [], ($$57 = function(key){var self = $$57.$$s || this, $a, $b, modifier_operation = nil, first = nil, resolved_keys = nil, resolved_key = nil, candidate = nil, $case = nil;\n\n        \n          \n          if (key == null) {\n            key = nil;\n          };\n          modifier_operation = nil;\n          if ($truthy(modifiers_present)) {\n            if ((first = key.$chr())['$=='](\"+\")) {\n              \n              modifier_operation = \"append\";\n              key = key.$slice(1, key.$length());\n            } else if (first['$=='](\"-\")) {\n              \n              modifier_operation = \"remove\";\n              key = key.$slice(1, key.$length());\n            } else if ($truthy(key['$end_with?'](\"+\"))) {\n              \n              modifier_operation = \"prepend\";\n              key = key.$chop();}};\n          key = key.$to_sym();\n          if ($truthy((($a = type['$=='](\"inline\")) ? ($truthy($b = key['$=='](\"verbatim\")) ? $b : key['$=='](\"v\")) : type['$=='](\"inline\")))) {\n            resolved_keys = $$($nesting, 'BASIC_SUBS')\n          } else if ($truthy($$($nesting, 'SUB_GROUPS')['$key?'](key))) {\n            resolved_keys = $$($nesting, 'SUB_GROUPS')['$[]'](key)\n          } else if ($truthy(($truthy($a = (($b = type['$=='](\"inline\")) ? key.$length()['$=='](1) : type['$=='](\"inline\"))) ? $$($nesting, 'SUB_HINTS')['$key?'](key) : $a))) {\n            \n            resolved_key = $$($nesting, 'SUB_HINTS')['$[]'](key);\n            if ($truthy((candidate = $$($nesting, 'SUB_GROUPS')['$[]'](resolved_key)))) {\n              resolved_keys = candidate\n            } else {\n              resolved_keys = [resolved_key]\n            };\n          } else {\n            resolved_keys = [key]\n          };\n          if ($truthy(modifier_operation)) {\n            \n            candidates = ($truthy($a = candidates) ? $a : (function() {if ($truthy(defaults)) {\n              \n              return defaults.$drop(0);\n            } else {\n              return []\n            }; return nil; })());\n            return (function() {$case = modifier_operation;\n            if (\"append\"['$===']($case)) {return (candidates = $rb_plus(candidates, resolved_keys))}\n            else if (\"prepend\"['$===']($case)) {return (candidates = $rb_plus(resolved_keys, candidates))}\n            else if (\"remove\"['$===']($case)) {return (candidates = $rb_minus(candidates, resolved_keys))}\n            else { return nil }})();\n          } else {\n            \n            candidates = ($truthy($a = candidates) ? $a : []);\n            return (candidates = $rb_plus(candidates, resolved_keys));\n          };}, $$57.$$s = self, $$57.$$arity = 1, $$57));\n        if ($truthy(candidates)) {\n        } else {\n          return nil\n        };\n        resolved = candidates['$&']($$($nesting, 'SUB_OPTIONS')['$[]'](type));\n        if ($truthy($rb_minus(candidates, resolved)['$empty?']())) {\n        } else {\n          \n          invalid = $rb_minus(candidates, resolved);\n          self.$logger().$warn(\"\" + \"invalid substitution type\" + ((function() {if ($truthy($rb_gt(invalid.$size(), 1))) {\n            return \"s\"\n          } else {\n            return \"\"\n          }; return nil; })()) + ((function() {if ($truthy(subject)) {\n            return \" for \"\n          } else {\n            return \"\"\n          }; return nil; })()) + (subject) + \": \" + (invalid.$join(\", \")));\n        };\n        return resolved;\n      }, $Substitutors_resolve_subs$56.$$arity = -2);\n      \n      Opal.def(self, '$resolve_block_subs', $Substitutors_resolve_block_subs$58 = function $$resolve_block_subs(subs, defaults, subject) {\n        var self = this;\n\n        return self.$resolve_subs(subs, \"block\", defaults, subject)\n      }, $Substitutors_resolve_block_subs$58.$$arity = 3);\n      \n      Opal.def(self, '$resolve_pass_subs', $Substitutors_resolve_pass_subs$59 = function $$resolve_pass_subs(subs) {\n        var self = this;\n\n        return self.$resolve_subs(subs, \"inline\", nil, \"passthrough macro\")\n      }, $Substitutors_resolve_pass_subs$59.$$arity = 1);\n      \n      Opal.def(self, '$expand_subs', $Substitutors_expand_subs$60 = function $$expand_subs(subs) {\n        var $a, $$61, self = this, expanded_subs = nil;\n\n        if ($truthy($$$('::', 'Symbol')['$==='](subs))) {\n          if (subs['$=='](\"none\")) {\n            return nil\n          } else {\n            return ($truthy($a = $$($nesting, 'SUB_GROUPS')['$[]'](subs)) ? $a : [subs])\n          }\n        } else {\n          \n          expanded_subs = [];\n          $send(subs, 'each', [], ($$61 = function(key){var self = $$61.$$s || this, sub_group = nil;\n\n          \n            \n            if (key == null) {\n              key = nil;\n            };\n            if (key['$=='](\"none\")) {\n              return nil\n            } else if ($truthy((sub_group = $$($nesting, 'SUB_GROUPS')['$[]'](key)))) {\n              return (expanded_subs = $rb_plus(expanded_subs, sub_group))\n            } else {\n              return expanded_subs['$<<'](key)\n            };}, $$61.$$s = self, $$61.$$arity = 1, $$61));\n          if ($truthy(expanded_subs['$empty?']())) {\n            return nil\n          } else {\n            return expanded_subs\n          };\n        }\n      }, $Substitutors_expand_subs$60.$$arity = 1);\n      \n      Opal.def(self, '$commit_subs', $Substitutors_commit_subs$62 = function $$commit_subs() {\n        var $a, $b, $c, $d, self = this, default_subs = nil, $case = nil, custom_subs = nil, syntax_hl = nil, idx = nil, $writer = nil;\n        if (self.default_subs == null) self.default_subs = nil;\n        if (self.content_model == null) self.content_model = nil;\n        if (self.context == null) self.context = nil;\n        if (self.subs == null) self.subs = nil;\n        if (self.attributes == null) self.attributes = nil;\n        if (self.style == null) self.style = nil;\n        if (self.document == null) self.document = nil;\n\n        \n        if ($truthy((default_subs = self.default_subs))) {\n        } else {\n          $case = self.content_model;\n          if (\"simple\"['$===']($case)) {default_subs = $$($nesting, 'NORMAL_SUBS')}\n          else if (\"verbatim\"['$===']($case)) {default_subs = (function() {if (self.context['$=='](\"verse\")) {\n            return $$($nesting, 'NORMAL_SUBS')\n          } else {\n            return $$($nesting, 'VERBATIM_SUBS')\n          }; return nil; })()}\n          else if (\"raw\"['$===']($case)) {default_subs = (function() {if (self.context['$=='](\"stem\")) {\n            return $$($nesting, 'BASIC_SUBS')\n          } else {\n            return $$($nesting, 'NO_SUBS')\n          }; return nil; })()}\n          else {return self.subs}\n        };\n        if ($truthy((custom_subs = self.attributes['$[]'](\"subs\")))) {\n          self.subs = ($truthy($a = self.$resolve_block_subs(custom_subs, default_subs, self.context)) ? $a : [])\n        } else {\n          self.subs = default_subs.$drop(0)\n        };\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = (($d = self.context['$=='](\"listing\")) ? self.style['$=='](\"source\") : self.context['$=='](\"listing\"))) ? (syntax_hl = self.document.$syntax_highlighter()) : $c)) ? syntax_hl['$highlight?']() : $b)) ? (idx = self.subs.$index(\"specialcharacters\")) : $a))) {\n          \n          $writer = [idx, \"highlight\"];\n          $send(self.subs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        return nil;\n      }, $Substitutors_commit_subs$62.$$arity = 0);\n      \n      Opal.def(self, '$parse_attributes', $Substitutors_parse_attributes$63 = function $$parse_attributes(attrlist, posattrs, opts) {\n        var $a, self = this, block = nil, into = nil;\n        if (self.document == null) self.document = nil;\n\n        \n        \n        if (posattrs == null) {\n          posattrs = [];\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy((function() {if ($truthy(attrlist)) {\n          return attrlist['$empty?']()\n        } else {\n          return true\n        }; return nil; })())) {\n          return $hash2([], {})};\n        if ($truthy(opts['$[]'](\"unescape_input\"))) {\n          attrlist = self.$normalize_text(attrlist, true, true)};\n        if ($truthy(($truthy($a = opts['$[]'](\"sub_input\")) ? attrlist['$include?']($$($nesting, 'ATTR_REF_HEAD')) : $a))) {\n          attrlist = self.document.$sub_attributes(attrlist)};\n        if ($truthy(opts['$[]'](\"sub_result\"))) {\n          block = self};\n        if ($truthy((into = opts['$[]'](\"into\")))) {\n          return $$($nesting, 'AttributeList').$new(attrlist, block).$parse_into(into, posattrs)\n        } else {\n          return $$($nesting, 'AttributeList').$new(attrlist, block).$parse(posattrs)\n        };\n      }, $Substitutors_parse_attributes$63.$$arity = -2);\n      self.$private();\n      \n      Opal.def(self, '$extract_callouts', $Substitutors_extract_callouts$64 = function $$extract_callouts(source) {\n        var $$65, self = this, callout_marks = nil, lineno = nil, last_lineno = nil, callout_rx = nil;\n\n        \n        callout_marks = $hash2([], {});\n        lineno = 0;\n        last_lineno = nil;\n        callout_rx = (function() {if ($truthy(self['$attr?'](\"line-comment\"))) {\n          return $$($nesting, 'CalloutExtractRxMap')['$[]'](self.$attr(\"line-comment\"))\n        } else {\n          return $$($nesting, 'CalloutExtractRx')\n        }; return nil; })();\n        source = $send(source.$split($$($nesting, 'LF'), -1), 'map', [], ($$65 = function(line){var self = $$65.$$s || this, $$66;\n\n        \n          \n          if (line == null) {\n            line = nil;\n          };\n          lineno = $rb_plus(lineno, 1);\n          return $send(line, 'gsub', [callout_rx], ($$66 = function(){var self = $$66.$$s || this, $a, $writer = nil;\n\n          if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](2)))) {\n              return (($a = $gvars['~']) === nil ? nil : $a['$[]'](0)).$sub($$($nesting, 'RS'), \"\")\n            } else {\n              \n              ($truthy($a = callout_marks['$[]'](lineno)) ? $a : (($writer = [lineno, []]), $send(callout_marks, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$<<']([(($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](4))]);\n              last_lineno = lineno;\n              return \"\";\n            }}, $$66.$$s = self, $$66.$$arity = 0, $$66));}, $$65.$$s = self, $$65.$$arity = 1, $$65)).$join($$($nesting, 'LF'));\n        if ($truthy(last_lineno)) {\n          if (last_lineno['$=='](lineno)) {\n            source = \"\" + (source) + ($$($nesting, 'LF'))}\n        } else {\n          callout_marks = nil\n        };\n        return [source, callout_marks];\n      }, $Substitutors_extract_callouts$64.$$arity = 1);\n      \n      Opal.def(self, '$restore_callouts', $Substitutors_restore_callouts$67 = function $$restore_callouts(source, callout_marks, source_offset) {\n        var $$68, self = this, preamble = nil, autonum = nil, lineno = nil;\n\n        \n        \n        if (source_offset == null) {\n          source_offset = nil;\n        };\n        if ($truthy(source_offset)) {\n          \n          preamble = source.$slice(0, source_offset);\n          source = source.$slice(source_offset, source.$length());\n        } else {\n          preamble = \"\"\n        };\n        autonum = (lineno = 0);\n        return $rb_plus(preamble, $send(source.$split($$($nesting, 'LF'), -1), 'map', [], ($$68 = function(line){var self = $$68.$$s || this, $a, $b, $$69, conums = nil, guard = nil, conum = nil;\n          if (self.document == null) self.document = nil;\n\n        \n          \n          if (line == null) {\n            line = nil;\n          };\n          if ($truthy((conums = callout_marks.$delete((lineno = $rb_plus(lineno, 1)))))) {\n            if (conums.$size()['$=='](1)) {\n              \n              $b = conums['$[]'](0), $a = Opal.to_ary($b), (guard = ($a[0] == null ? nil : $a[0])), (conum = ($a[1] == null ? nil : $a[1])), $b;\n              return \"\" + (line) + ($$($nesting, 'Inline').$new(self, \"callout\", (function() {if (conum['$=='](\".\")) {\n                return (autonum = $rb_plus(autonum, 1)).$to_s()\n              } else {\n                return conum\n              }; return nil; })(), $hash2([\"id\", \"attributes\"], {\"id\": self.document.$callouts().$read_next_id(), \"attributes\": $hash2([\"guard\"], {\"guard\": guard})})).$convert());\n            } else {\n              return \"\" + (line) + ($send(conums, 'map', [], ($$69 = function(guard_it, conum_it){var self = $$69.$$s || this;\n                if (self.document == null) self.document = nil;\n\n              \n                \n                if (guard_it == null) {\n                  guard_it = nil;\n                };\n                \n                if (conum_it == null) {\n                  conum_it = nil;\n                };\n                return $$($nesting, 'Inline').$new(self, \"callout\", (function() {if (conum_it['$=='](\".\")) {\n                  return (autonum = $rb_plus(autonum, 1)).$to_s()\n                } else {\n                  return conum_it\n                }; return nil; })(), $hash2([\"id\", \"attributes\"], {\"id\": self.document.$callouts().$read_next_id(), \"attributes\": $hash2([\"guard\"], {\"guard\": guard_it})})).$convert();}, $$69.$$s = self, $$69.$$arity = 2, $$69)).$join(\" \"))\n            }\n          } else {\n            return line\n          };}, $$68.$$s = self, $$68.$$arity = 1, $$68)).$join($$($nesting, 'LF')));\n      }, $Substitutors_restore_callouts$67.$$arity = -3);\n      \n      Opal.def(self, '$extract_inner_passthrough', $Substitutors_extract_inner_passthrough$70 = function $$extract_inner_passthrough(text, pre) {\n        var $a, $b, self = this, $writer = nil, passthru_key = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n\n        if ($truthy(($truthy($a = ($truthy($b = text['$end_with?'](\"+\")) ? text['$start_with?'](\"+\", \"\\\\+\") : $b)) ? $$($nesting, 'SinglePlusInlinePassRx')['$=~'](text) : $a))) {\n          if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)))) {\n            return \"\" + (pre) + \"`+\" + ((($a = $gvars['~']) === nil ? nil : $a['$[]'](2))) + \"+`\"\n          } else {\n            \n            \n            $writer = [(passthru_key = self.passthroughs.$size()), $hash2([\"text\", \"subs\"], {\"text\": (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), \"subs\": $$($nesting, 'BASIC_SUBS')})];\n            $send(self.passthroughs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return \"\" + (pre) + \"`\" + ($$($nesting, 'PASS_START')) + (passthru_key) + ($$($nesting, 'PASS_END')) + \"`\";\n          }\n        } else {\n          return \"\" + (pre) + \"`\" + (text) + \"`\"\n        }\n      }, $Substitutors_extract_inner_passthrough$70.$$arity = 2);\n      \n      Opal.def(self, '$convert_quoted_text', $Substitutors_convert_quoted_text$71 = function $$convert_quoted_text(match, type, scope) {\n        var $a, self = this, attrs = nil, unescaped_attrs = nil, attrlist = nil, id = nil, attributes = nil;\n\n        \n        if ($truthy(match['$[]'](0)['$start_with?']($$($nesting, 'RS')))) {\n          if ($truthy((($a = scope['$=='](\"constrained\")) ? (attrs = match['$[]'](2)) : scope['$=='](\"constrained\")))) {\n            unescaped_attrs = \"\" + \"[\" + (attrs) + \"]\"\n          } else {\n            return match['$[]'](0).$slice(1, match['$[]'](0).$length())\n          }};\n        if (scope['$=='](\"constrained\")) {\n          if ($truthy(unescaped_attrs)) {\n            return \"\" + (unescaped_attrs) + ($$($nesting, 'Inline').$new(self, \"quoted\", match['$[]'](3), $hash2([\"type\"], {\"type\": type})).$convert())\n          } else {\n            \n            if ($truthy((attrlist = match['$[]'](2)))) {\n              \n              id = (attributes = self.$parse_quoted_text_attributes(attrlist))['$[]'](\"id\");\n              if (type['$=='](\"mark\")) {\n                type = \"unquoted\"};};\n            return \"\" + (match['$[]'](1)) + ($$($nesting, 'Inline').$new(self, \"quoted\", match['$[]'](3), $hash2([\"type\", \"id\", \"attributes\"], {\"type\": type, \"id\": id, \"attributes\": attributes})).$convert());\n          }\n        } else {\n          \n          if ($truthy((attrlist = match['$[]'](1)))) {\n            \n            id = (attributes = self.$parse_quoted_text_attributes(attrlist))['$[]'](\"id\");\n            if (type['$=='](\"mark\")) {\n              type = \"unquoted\"};};\n          return $$($nesting, 'Inline').$new(self, \"quoted\", match['$[]'](2), $hash2([\"type\", \"id\", \"attributes\"], {\"type\": type, \"id\": id, \"attributes\": attributes})).$convert();\n        };\n      }, $Substitutors_convert_quoted_text$71.$$arity = 3);\n      \n      Opal.def(self, '$do_replacement', $Substitutors_do_replacement$72 = function $$do_replacement(m, replacement, restore) {\n        var self = this, captured = nil, $case = nil;\n\n        if ($truthy((captured = m['$[]'](0))['$include?']($$($nesting, 'RS')))) {\n          return captured.$sub($$($nesting, 'RS'), \"\")\n        } else {\n          return (function() {$case = restore;\n          if (\"none\"['$===']($case)) {return replacement}\n          else if (\"bounding\"['$===']($case)) {return $rb_plus($rb_plus(m['$[]'](1), replacement), m['$[]'](2))}\n          else {return $rb_plus(m['$[]'](1), replacement)}})()\n        }\n      }, $Substitutors_do_replacement$72.$$arity = 3);\n      if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      } else {\n        nil\n      };\n      \n      Opal.def(self, '$parse_quoted_text_attributes', $Substitutors_parse_quoted_text_attributes$73 = function $$parse_quoted_text_attributes(str) {\n        var $a, $b, self = this, segments = nil, id = nil, more_roles = nil, roles = nil, attrs = nil, $writer = nil;\n\n        \n        if ($truthy((str = str.$rstrip())['$empty?']())) {\n          return $hash2([], {})};\n        if ($truthy(str['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n          str = self.$sub_attributes(str)};\n        if ($truthy(str['$include?'](\",\"))) {\n          str = str.$slice(0, str.$index(\",\"))};\n        if ($truthy(($truthy($a = str['$start_with?'](\".\", \"#\")) ? $$($nesting, 'Compliance').$shorthand_property_syntax() : $a))) {\n          \n          segments = str.$split(\"#\", 2);\n          if ($truthy($rb_gt(segments.$size(), 1))) {\n            $b = segments['$[]'](1).$split(\".\"), $a = Opal.to_ary($b), (id = ($a[0] == null ? nil : $a[0])), (more_roles = $slice.call($a, 1)), $b\n          } else {\n            more_roles = []\n          };\n          roles = (function() {if ($truthy(segments['$[]'](0)['$empty?']())) {\n            return []\n          } else {\n            return segments['$[]'](0).$split(\".\")\n          }; return nil; })();\n          if ($truthy($rb_gt(roles.$size(), 1))) {\n            roles.$shift()};\n          if ($truthy($rb_gt(more_roles.$size(), 0))) {\n            roles.$concat(more_roles)};\n          attrs = $hash2([], {});\n          if ($truthy(id)) {\n            \n            $writer = [\"id\", id];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy(roles['$empty?']())) {\n          } else {\n            \n            $writer = [\"role\", roles.$join(\" \")];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          return attrs;\n        } else {\n          return $hash2([\"role\"], {\"role\": str})\n        };\n      }, $Substitutors_parse_quoted_text_attributes$73.$$arity = 1);\n      \n      Opal.def(self, '$normalize_text', $Substitutors_normalize_text$74 = function $$normalize_text(text, normalize_whitespace, unescape_closing_square_brackets) {\n        var $a, self = this;\n\n        \n        \n        if (normalize_whitespace == null) {\n          normalize_whitespace = nil;\n        };\n        \n        if (unescape_closing_square_brackets == null) {\n          unescape_closing_square_brackets = nil;\n        };\n        if ($truthy(text['$empty?']())) {\n        } else {\n          \n          if ($truthy(normalize_whitespace)) {\n            text = text.$strip().$tr($$($nesting, 'LF'), \" \")};\n          if ($truthy(($truthy($a = unescape_closing_square_brackets) ? text['$include?']($$($nesting, 'R_SB')) : $a))) {\n            text = text.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n        };\n        return text;\n      }, $Substitutors_normalize_text$74.$$arity = -2);\n      \n      Opal.def(self, '$split_simple_csv', $Substitutors_split_simple_csv$75 = function $$split_simple_csv(str) {\n        var $$76, $$77, self = this, values = nil, accum = nil, quote_open = nil;\n\n        if ($truthy(str['$empty?']())) {\n          return []\n        } else if ($truthy(str['$include?'](\"\\\"\"))) {\n          \n          values = [];\n          accum = \"\";\n          quote_open = nil;\n          $send(str, 'each_char', [], ($$76 = function(c){var self = $$76.$$s || this, $case = nil;\n\n          \n            \n            if (c == null) {\n              c = nil;\n            };\n            return (function() {$case = c;\n            if (\",\"['$===']($case)) {if ($truthy(quote_open)) {\n              return (accum = $rb_plus(accum, c))\n            } else {\n              \n              values['$<<'](accum.$strip());\n              return (accum = \"\");\n            }}\n            else if (\"\\\"\"['$===']($case)) {return (quote_open = quote_open['$!']())}\n            else {return (accum = $rb_plus(accum, c))}})();}, $$76.$$s = self, $$76.$$arity = 1, $$76));\n          return values['$<<'](accum.$strip());\n        } else {\n          return $send(str.$split(\",\"), 'map', [], ($$77 = function(it){var self = $$77.$$s || this;\n\n          \n            \n            if (it == null) {\n              it = nil;\n            };\n            return it.$strip();}, $$77.$$s = self, $$77.$$arity = 1, $$77))\n        }\n      }, $Substitutors_split_simple_csv$75.$$arity = 1);\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/version\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    Opal.const_set($nesting[0], 'VERSION', \"2.0.10\")\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/abstract_node\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$include', '$attr_reader', '$attr_accessor', '$==', '$document', '$to_s', '$[]', '$merge', '$raise', '$converter', '$attributes', '$key?', '$[]=', '$-', '$delete', '$tap', '$new', '$each_key', '$end_with?', '$<<', '$slice', '$length', '$update', '$split', '$include?', '$empty?', '$join', '$apply_reftext_subs', '$attr?', '$attr', '$extname?', '$image_uri', '$<', '$safe', '$uriish?', '$encode_spaces_in_uri', '$normalize_web_path', '$generate_data_uri_from_uri', '$generate_data_uri', '$extname', '$normalize_system_path', '$readable?', '$strict_encode64', '$binread', '$warn', '$logger', '$require_library', '$!', '$open_uri', '$content_type', '$read', '$base_dir', '$root?', '$path_resolver', '$system_path', '$web_path', '$===', '$!=', '$prepare_source_string', '$fetch', '$read_asset']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'AbstractNode');\n\n      var $nesting = [self].concat($parent_nesting), $AbstractNode_initialize$1, $AbstractNode_block$ques$2, $AbstractNode_inline$ques$3, $AbstractNode_converter$4, $AbstractNode_parent$eq$5, $AbstractNode_attr$6, $AbstractNode_attr$ques$7, $AbstractNode_set_attr$8, $AbstractNode_remove_attr$9, $AbstractNode_option$ques$10, $AbstractNode_set_option$11, $AbstractNode_enabled_options$12, $AbstractNode_update_attributes$15, $AbstractNode_role$16, $AbstractNode_roles$17, $AbstractNode_role$ques$18, $AbstractNode_has_role$ques$19, $AbstractNode_add_role$20, $AbstractNode_remove_role$21, $AbstractNode_reftext$22, $AbstractNode_reftext$ques$23, $AbstractNode_icon_uri$24, $AbstractNode_image_uri$25, $AbstractNode_media_uri$26, $AbstractNode_generate_data_uri$27, $AbstractNode_generate_data_uri_from_uri$28, $AbstractNode_normalize_asset_path$30, $AbstractNode_normalize_system_path$31, $AbstractNode_normalize_web_path$32, $AbstractNode_read_asset$33, $AbstractNode_read_contents$34, $AbstractNode_is_uri$ques$37;\n\n      self.$$prototype.document = self.$$prototype.attributes = self.$$prototype.parent = nil;\n      \n      self.$include($$($nesting, 'Substitutors'), $$($nesting, 'Logging'));\n      self.$attr_reader(\"attributes\");\n      self.$attr_reader(\"context\");\n      self.$attr_reader(\"document\");\n      self.$attr_accessor(\"id\");\n      self.$attr_reader(\"node_name\");\n      self.$attr_reader(\"parent\");\n      \n      Opal.def(self, '$initialize', $AbstractNode_initialize$1 = function $$initialize(parent, context, opts) {\n        var self = this, attrs = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if (context['$=='](\"document\")) {\n          self.document = self\n        } else if ($truthy(parent)) {\n          self.document = (self.parent = parent).$document()};\n        self.node_name = (self.context = context).$to_s();\n        self.attributes = (function() {if ($truthy((attrs = opts['$[]'](\"attributes\")))) {\n          return attrs.$merge()\n        } else {\n          return $hash2([], {})\n        }; return nil; })();\n        return (self.passthroughs = []);\n      }, $AbstractNode_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$block?', $AbstractNode_block$ques$2 = function() {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'))\n      }, $AbstractNode_block$ques$2.$$arity = 0);\n      \n      Opal.def(self, '$inline?', $AbstractNode_inline$ques$3 = function() {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'))\n      }, $AbstractNode_inline$ques$3.$$arity = 0);\n      \n      Opal.def(self, '$converter', $AbstractNode_converter$4 = function $$converter() {\n        var self = this;\n\n        return self.document.$converter()\n      }, $AbstractNode_converter$4.$$arity = 0);\n      \n      Opal.def(self, '$parent=', $AbstractNode_parent$eq$5 = function(parent) {\n        var $a, self = this;\n\n        return $a = [parent, parent.$document()], (self.parent = $a[0]), (self.document = $a[1]), $a\n      }, $AbstractNode_parent$eq$5.$$arity = 1);\n      \n      Opal.def(self, '$attr', $AbstractNode_attr$6 = function $$attr(name, default_value, fallback_name) {\n        var $a, $b, $c, $d, self = this;\n\n        \n        \n        if (default_value == null) {\n          default_value = nil;\n        };\n        \n        if (fallback_name == null) {\n          fallback_name = nil;\n        };\n        return ($truthy($a = self.attributes['$[]'](name.$to_s())) ? $a : ($truthy($b = ($truthy($c = ($truthy($d = fallback_name) ? self.parent : $d)) ? self.document.$attributes()['$[]']((function() {if (fallback_name['$=='](true)) {\n          return name\n        } else {\n          return fallback_name\n        }; return nil; })().$to_s()) : $c)) ? $b : default_value));\n      }, $AbstractNode_attr$6.$$arity = -2);\n      \n      Opal.def(self, '$attr?', $AbstractNode_attr$ques$7 = function(name, expected_value, fallback_name) {\n        var $a, $b, self = this;\n\n        \n        \n        if (expected_value == null) {\n          expected_value = nil;\n        };\n        \n        if (fallback_name == null) {\n          fallback_name = nil;\n        };\n        if ($truthy(expected_value)) {\n          return expected_value['$=='](($truthy($a = self.attributes['$[]'](name.$to_s())) ? $a : (function() {if ($truthy(($truthy($b = fallback_name) ? self.parent : $b))) {\n            return self.document.$attributes()['$[]']((function() {if (fallback_name['$=='](true)) {\n              return name\n            } else {\n              return fallback_name\n            }; return nil; })().$to_s())\n          } else {\n            return nil\n          }; return nil; })()))\n        } else {\n          return ($truthy($a = self.attributes['$key?'](name.$to_s())) ? $a : (function() {if ($truthy(($truthy($b = fallback_name) ? self.parent : $b))) {\n            \n            return self.document.$attributes()['$key?']((function() {if (fallback_name['$=='](true)) {\n              return name\n            } else {\n              return fallback_name\n            }; return nil; })().$to_s());\n          } else {\n            return false\n          }; return nil; })())\n        };\n      }, $AbstractNode_attr$ques$7.$$arity = -2);\n      \n      Opal.def(self, '$set_attr', $AbstractNode_set_attr$8 = function $$set_attr(name, value, overwrite) {\n        var $a, self = this, $writer = nil;\n\n        \n        \n        if (value == null) {\n          value = \"\";\n        };\n        \n        if (overwrite == null) {\n          overwrite = true;\n        };\n        if ($truthy((($a = overwrite['$=='](false)) ? self.attributes['$key?'](name) : overwrite['$=='](false)))) {\n          return false\n        } else {\n          \n          \n          $writer = [name, value];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return true;\n        };\n      }, $AbstractNode_set_attr$8.$$arity = -2);\n      \n      Opal.def(self, '$remove_attr', $AbstractNode_remove_attr$9 = function $$remove_attr(name) {\n        var self = this;\n\n        return self.attributes.$delete(name)\n      }, $AbstractNode_remove_attr$9.$$arity = 1);\n      \n      Opal.def(self, '$option?', $AbstractNode_option$ques$10 = function(name) {\n        var self = this;\n\n        if ($truthy(self.attributes['$[]'](\"\" + (name) + \"-option\"))) {\n          return true\n        } else {\n          return false\n        }\n      }, $AbstractNode_option$ques$10.$$arity = 1);\n      \n      Opal.def(self, '$set_option', $AbstractNode_set_option$11 = function $$set_option(name) {\n        var self = this, $writer = nil;\n\n        \n        \n        $writer = [\"\" + (name) + \"-option\", \"\"];\n        $send(self.attributes, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        return nil;\n      }, $AbstractNode_set_option$11.$$arity = 1);\n      \n      Opal.def(self, '$enabled_options', $AbstractNode_enabled_options$12 = function $$enabled_options() {\n        var $$13, self = this;\n\n        return $send($$$('::', 'Set').$new(), 'tap', [], ($$13 = function(accum){var self = $$13.$$s || this, $$14;\n          if (self.attributes == null) self.attributes = nil;\n\n        \n          \n          if (accum == null) {\n            accum = nil;\n          };\n          return $send(self.attributes, 'each_key', [], ($$14 = function(k){var self = $$14.$$s || this;\n\n          \n            \n            if (k == null) {\n              k = nil;\n            };\n            if ($truthy(k.$to_s()['$end_with?'](\"-option\"))) {\n              return accum['$<<'](k.$slice(0, $rb_minus(k.$length(), 7)))\n            } else {\n              return nil\n            };}, $$14.$$s = self, $$14.$$arity = 1, $$14));}, $$13.$$s = self, $$13.$$arity = 1, $$13))\n      }, $AbstractNode_enabled_options$12.$$arity = 0);\n      \n      Opal.def(self, '$update_attributes', $AbstractNode_update_attributes$15 = function $$update_attributes(new_attributes) {\n        var self = this;\n\n        return self.attributes.$update(new_attributes)\n      }, $AbstractNode_update_attributes$15.$$arity = 1);\n      \n      Opal.def(self, '$role', $AbstractNode_role$16 = function $$role() {\n        var self = this;\n\n        return self.attributes['$[]'](\"role\")\n      }, $AbstractNode_role$16.$$arity = 0);\n      \n      Opal.def(self, '$roles', $AbstractNode_roles$17 = function $$roles() {\n        var self = this, val = nil;\n\n        if ($truthy((val = self.attributes['$[]'](\"role\")))) {\n          return val.$split()\n        } else {\n          return []\n        }\n      }, $AbstractNode_roles$17.$$arity = 0);\n      \n      Opal.def(self, '$role?', $AbstractNode_role$ques$18 = function(expected_value) {\n        var self = this;\n\n        \n        \n        if (expected_value == null) {\n          expected_value = nil;\n        };\n        if ($truthy(expected_value)) {\n          return expected_value['$=='](self.attributes['$[]'](\"role\"))\n        } else {\n          \n          return self.attributes['$key?'](\"role\");\n        };\n      }, $AbstractNode_role$ques$18.$$arity = -1);\n      \n      Opal.def(self, '$has_role?', $AbstractNode_has_role$ques$19 = function(name) {\n        var self = this, val = nil;\n\n        if ($truthy((val = self.attributes['$[]'](\"role\")))) {\n          \n          return (((\"\" + \" \") + (val)) + \" \")['$include?'](\"\" + \" \" + (name) + \" \");\n        } else {\n          return false\n        }\n      }, $AbstractNode_has_role$ques$19.$$arity = 1);\n      \n      Opal.def(self, '$add_role', $AbstractNode_add_role$20 = function $$add_role(name) {\n        var self = this, val = nil, $writer = nil;\n\n        if ($truthy((val = self.attributes['$[]'](\"role\")))) {\n          if ($truthy((((\"\" + \" \") + (val)) + \" \")['$include?'](\"\" + \" \" + (name) + \" \"))) {\n            return false\n          } else {\n            \n            \n            $writer = [\"role\", \"\" + (val) + \" \" + (name)];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return true;\n          }\n        } else {\n          \n          \n          $writer = [\"role\", name];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return true;\n        }\n      }, $AbstractNode_add_role$20.$$arity = 1);\n      \n      Opal.def(self, '$remove_role', $AbstractNode_remove_role$21 = function $$remove_role(name) {\n        var $a, self = this, val = nil, $writer = nil;\n\n        if ($truthy(($truthy($a = (val = self.attributes['$[]'](\"role\"))) ? (val = val.$split()).$delete(name) : $a))) {\n          \n          if ($truthy(val['$empty?']())) {\n            self.attributes.$delete(\"role\")\n          } else {\n            \n            $writer = [\"role\", val.$join(\" \")];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          return true;\n        } else {\n          return false\n        }\n      }, $AbstractNode_remove_role$21.$$arity = 1);\n      \n      Opal.def(self, '$reftext', $AbstractNode_reftext$22 = function $$reftext() {\n        var self = this, val = nil;\n\n        if ($truthy((val = self.attributes['$[]'](\"reftext\")))) {\n          \n          return self.$apply_reftext_subs(val);\n        } else {\n          return nil\n        }\n      }, $AbstractNode_reftext$22.$$arity = 0);\n      \n      Opal.def(self, '$reftext?', $AbstractNode_reftext$ques$23 = function() {\n        var self = this;\n\n        return self.attributes['$key?'](\"reftext\")\n      }, $AbstractNode_reftext$ques$23.$$arity = 0);\n      \n      Opal.def(self, '$icon_uri', $AbstractNode_icon_uri$24 = function $$icon_uri(name) {\n        var self = this, icon = nil;\n\n        \n        if ($truthy(self['$attr?'](\"icon\"))) {\n          \n          icon = self.$attr(\"icon\");\n          if ($truthy($$($nesting, 'Helpers')['$extname?'](icon))) {\n          } else {\n            icon = \"\" + (icon) + \".\" + (self.document.$attr(\"icontype\", \"png\"))\n          };\n        } else {\n          icon = \"\" + (name) + \".\" + (self.document.$attr(\"icontype\", \"png\"))\n        };\n        return self.$image_uri(icon, \"iconsdir\");\n      }, $AbstractNode_icon_uri$24.$$arity = 1);\n      \n      Opal.def(self, '$image_uri', $AbstractNode_image_uri$25 = function $$image_uri(target_image, asset_dir_key) {\n        var $a, $b, $c, $d, self = this, doc = nil, images_base = nil;\n\n        \n        \n        if (asset_dir_key == null) {\n          asset_dir_key = \"imagesdir\";\n        };\n        if ($truthy(($truthy($a = $rb_lt((doc = self.document).$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE'))) ? doc['$attr?'](\"data-uri\") : $a))) {\n          if ($truthy(($truthy($a = ($truthy($b = $$($nesting, 'Helpers')['$uriish?'](target_image)) ? (target_image = $$($nesting, 'Helpers').$encode_spaces_in_uri(target_image)) : $b)) ? $a : ($truthy($b = ($truthy($c = ($truthy($d = asset_dir_key) ? (images_base = doc.$attr(asset_dir_key)) : $d)) ? $$($nesting, 'Helpers')['$uriish?'](images_base) : $c)) ? (target_image = self.$normalize_web_path(target_image, images_base, false)) : $b)))) {\n            if ($truthy(doc['$attr?'](\"allow-uri-read\"))) {\n              \n              return self.$generate_data_uri_from_uri(target_image, doc['$attr?'](\"cache-uri\"));\n            } else {\n              return target_image\n            }\n          } else {\n            return self.$generate_data_uri(target_image, asset_dir_key)\n          }\n        } else {\n          return self.$normalize_web_path(target_image, (function() {if ($truthy(asset_dir_key)) {\n            \n            return doc.$attr(asset_dir_key);\n          } else {\n            return nil\n          }; return nil; })())\n        };\n      }, $AbstractNode_image_uri$25.$$arity = -2);\n      \n      Opal.def(self, '$media_uri', $AbstractNode_media_uri$26 = function $$media_uri(target, asset_dir_key) {\n        var self = this;\n\n        \n        \n        if (asset_dir_key == null) {\n          asset_dir_key = \"imagesdir\";\n        };\n        return self.$normalize_web_path(target, (function() {if ($truthy(asset_dir_key)) {\n          return self.document.$attr(asset_dir_key)\n        } else {\n          return nil\n        }; return nil; })());\n      }, $AbstractNode_media_uri$26.$$arity = -2);\n      \n      Opal.def(self, '$generate_data_uri', $AbstractNode_generate_data_uri$27 = function $$generate_data_uri(target_image, asset_dir_key) {\n        var self = this, ext = nil, mimetype = nil, image_path = nil;\n\n        \n        \n        if (asset_dir_key == null) {\n          asset_dir_key = nil;\n        };\n        if ($truthy((ext = $$($nesting, 'Helpers').$extname(target_image, nil)))) {\n          mimetype = (function() {if (ext['$=='](\".svg\")) {\n            return \"image/svg+xml\"\n          } else {\n            return \"\" + \"image/\" + (ext.$slice(1, ext.$length()))\n          }; return nil; })()\n        } else {\n          mimetype = \"application/octet-stream\"\n        };\n        if ($truthy(asset_dir_key)) {\n          image_path = self.$normalize_system_path(target_image, self.document.$attr(asset_dir_key), nil, $hash2([\"target_name\"], {\"target_name\": \"image\"}))\n        } else {\n          image_path = self.$normalize_system_path(target_image)\n        };\n        if ($truthy($$$('::', 'File')['$readable?'](image_path))) {\n          return \"\" + \"data:\" + (mimetype) + \";base64,\" + ($$$('::', 'Base64').$strict_encode64($$$('::', 'File').$binread(image_path)))\n        } else {\n          \n          self.$logger().$warn(\"\" + \"image to embed not found or not readable: \" + (image_path));\n          return \"\" + \"data:\" + (mimetype) + \";base64,\";\n        };\n      }, $AbstractNode_generate_data_uri$27.$$arity = -2);\n      \n      Opal.def(self, '$generate_data_uri_from_uri', $AbstractNode_generate_data_uri_from_uri$28 = function $$generate_data_uri_from_uri(image_uri, cache_uri) {\n        var $a, $b, $$29, self = this, mimetype = nil, bindata = nil;\n\n        \n        \n        if (cache_uri == null) {\n          cache_uri = false;\n        };\n        if ($truthy(cache_uri)) {\n          $$($nesting, 'Helpers').$require_library(\"open-uri/cached\", \"open-uri-cached\")\n        } else if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL')['$!']())) {\n          $$$('::', 'OpenURI')};\n        \n        try {\n          \n          $b = $send($$$('::', 'OpenURI'), 'open_uri', [image_uri, $$($nesting, 'URI_READ_MODE')], ($$29 = function(f){var self = $$29.$$s || this;\n\n          \n            \n            if (f == null) {\n              f = nil;\n            };\n            return [f.$content_type(), f.$read()];}, $$29.$$s = self, $$29.$$arity = 1, $$29)), $a = Opal.to_ary($b), (mimetype = ($a[0] == null ? nil : $a[0])), (bindata = ($a[1] == null ? nil : $a[1])), $b;\n          return \"\" + \"data:\" + (mimetype) + \";base64,\" + ($$$('::', 'Base64').$strict_encode64(bindata));\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n            try {\n              \n              self.$logger().$warn(\"\" + \"could not retrieve image data from URI: \" + (image_uri));\n              return image_uri;\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };;\n      }, $AbstractNode_generate_data_uri_from_uri$28.$$arity = -2);\n      \n      Opal.def(self, '$normalize_asset_path', $AbstractNode_normalize_asset_path$30 = function $$normalize_asset_path(asset_ref, asset_name, autocorrect) {\n        var self = this;\n\n        \n        \n        if (asset_name == null) {\n          asset_name = \"path\";\n        };\n        \n        if (autocorrect == null) {\n          autocorrect = true;\n        };\n        return self.$normalize_system_path(asset_ref, self.document.$base_dir(), nil, $hash2([\"target_name\", \"recover\"], {\"target_name\": asset_name, \"recover\": autocorrect}));\n      }, $AbstractNode_normalize_asset_path$30.$$arity = -2);\n      \n      Opal.def(self, '$normalize_system_path', $AbstractNode_normalize_system_path$31 = function $$normalize_system_path(target, start, jail, opts) {\n        var self = this, doc = nil;\n\n        \n        \n        if (start == null) {\n          start = nil;\n        };\n        \n        if (jail == null) {\n          jail = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy($rb_lt((doc = self.document).$safe(), $$$($$($nesting, 'SafeMode'), 'SAFE')))) {\n          if ($truthy(start)) {\n            if ($truthy(doc.$path_resolver()['$root?'](start))) {\n            } else {\n              start = $$$('::', 'File').$join(doc.$base_dir(), start)\n            }\n          } else {\n            start = doc.$base_dir()\n          }\n        } else {\n          \n          if ($truthy(start)) {\n          } else {\n            start = doc.$base_dir()\n          };\n          if ($truthy(jail)) {\n          } else {\n            jail = doc.$base_dir()\n          };\n        };\n        return doc.$path_resolver().$system_path(target, start, jail, opts);\n      }, $AbstractNode_normalize_system_path$31.$$arity = -2);\n      \n      Opal.def(self, '$normalize_web_path', $AbstractNode_normalize_web_path$32 = function $$normalize_web_path(target, start, preserve_uri_target) {\n        var $a, self = this;\n\n        \n        \n        if (start == null) {\n          start = nil;\n        };\n        \n        if (preserve_uri_target == null) {\n          preserve_uri_target = true;\n        };\n        if ($truthy(($truthy($a = preserve_uri_target) ? $$($nesting, 'Helpers')['$uriish?'](target) : $a))) {\n          return $$($nesting, 'Helpers').$encode_spaces_in_uri(target)\n        } else {\n          return self.document.$path_resolver().$web_path(target, start)\n        };\n      }, $AbstractNode_normalize_web_path$32.$$arity = -2);\n      \n      Opal.def(self, '$read_asset', $AbstractNode_read_asset$33 = function $$read_asset(path, opts) {\n        var $a, self = this;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy($$$('::', 'Hash')['$==='](opts))) {\n        } else {\n          opts = $hash2([\"warn_on_failure\"], {\"warn_on_failure\": opts['$!='](false)})\n        };\n        if ($truthy($$$('::', 'File')['$readable?'](path))) {\n          if ($truthy(opts['$[]'](\"normalize\"))) {\n            \n            return $$($nesting, 'Helpers').$prepare_source_string($$$('::', 'File').$read(path, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_READ_MODE')}))).$join($$($nesting, 'LF'));\n          } else {\n            \n            return $$$('::', 'File').$read(path, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_READ_MODE')}));\n          }\n        } else if ($truthy(opts['$[]'](\"warn_on_failure\"))) {\n          \n          self.$logger().$warn(\"\" + (($truthy($a = self.$attr(\"docfile\")) ? $a : \"<stdin>\")) + \": \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"file\")) + \" does not exist or cannot be read: \" + (path));\n          return nil;\n        } else {\n          return nil\n        };\n      }, $AbstractNode_read_asset$33.$$arity = -2);\n      \n      Opal.def(self, '$read_contents', $AbstractNode_read_contents$34 = function $$read_contents(target, opts) {\n        var $a, $b, $c, $$35, $$36, self = this, doc = nil, start = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        doc = self.document;\n        if ($truthy(($truthy($a = $$($nesting, 'Helpers')['$uriish?'](target)) ? $a : ($truthy($b = ($truthy($c = (start = opts['$[]'](\"start\"))) ? $$($nesting, 'Helpers')['$uriish?'](start) : $c)) ? (target = doc.$path_resolver().$web_path(target, start)) : $b)))) {\n          if ($truthy(doc['$attr?'](\"allow-uri-read\"))) {\n            \n            if ($truthy(doc['$attr?'](\"cache-uri\"))) {\n              $$($nesting, 'Helpers').$require_library(\"open-uri/cached\", \"open-uri-cached\")};\n            \n            try {\n              if ($truthy(opts['$[]'](\"normalize\"))) {\n                return $$($nesting, 'Helpers').$prepare_source_string($send($$$('::', 'OpenURI'), 'open_uri', [target, $$($nesting, 'URI_READ_MODE')], ($$35 = function(f){var self = $$35.$$s || this;\n\n                \n                  \n                  if (f == null) {\n                    f = nil;\n                  };\n                  return f.$read();}, $$35.$$s = self, $$35.$$arity = 1, $$35))).$join($$($nesting, 'LF'))\n              } else {\n                return $send($$$('::', 'OpenURI'), 'open_uri', [target, $$($nesting, 'URI_READ_MODE')], ($$36 = function(f){var self = $$36.$$s || this;\n\n                \n                  \n                  if (f == null) {\n                    f = nil;\n                  };\n                  return f.$read();}, $$36.$$s = self, $$36.$$arity = 1, $$36))\n              }\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  \n                  if ($truthy(opts.$fetch(\"warn_on_failure\", true))) {\n                    self.$logger().$warn(\"\" + \"could not retrieve contents of \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")) + \" at URI: \" + (target))};\n                  return nil;\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };;\n          } else {\n            \n            if ($truthy(opts.$fetch(\"warn_on_failure\", true))) {\n              self.$logger().$warn(\"\" + \"cannot retrieve contents of \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")) + \" at URI: \" + (target) + \" (allow-uri-read attribute not enabled)\")};\n            return nil;\n          }\n        } else {\n          \n          target = self.$normalize_system_path(target, opts['$[]'](\"start\"), nil, $hash2([\"target_name\"], {\"target_name\": ($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")}));\n          return self.$read_asset(target, $hash2([\"normalize\", \"warn_on_failure\", \"label\"], {\"normalize\": opts['$[]'](\"normalize\"), \"warn_on_failure\": opts.$fetch(\"warn_on_failure\", true), \"label\": opts['$[]'](\"label\")}));\n        };\n      }, $AbstractNode_read_contents$34.$$arity = -2);\n      return (Opal.def(self, '$is_uri?', $AbstractNode_is_uri$ques$37 = function(str) {\n        var self = this;\n\n        return $$($nesting, 'Helpers')['$uriish?'](str)\n      }, $AbstractNode_is_uri$ques$37.$$arity = 1), nil) && 'is_uri?';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/abstract_block\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_reader', '$attr_writer', '$attr_accessor', '$==', '$===', '$level', '$file', '$lineno', '$playback_attributes', '$convert', '$converter', '$join', '$map', '$to_s', '$parent', '$parent=', '$-', '$<<', '$empty?', '$>', '$Integer', '$find_by_internal', '$to_proc', '$context', '$[]', '$items', '$+', '$find_index', '$include?', '$next_adjacent_block', '$blocks', '$select', '$sub_specialchars', '$match?', '$sub_replacements', '$title', '$apply_title_subs', '$delete', '$reftext', '$!', '$sub_placeholder', '$sub_quotes', '$compat_mode', '$attributes', '$chomp', '$increment_and_store_counter', '$index=', '$numbered', '$sectname', '$counter', '$numeral=', '$numeral', '$caption=', '$int_to_roman', '$each', '$assign_numeral', '$reindex_sections', '$protected', '$has_role?', '$raise', '$header?', '$!=', '$flatten', '$head', '$rows', '$merge', '$body', '$foot', '$style', '$inner_document']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'AbstractBlock');\n\n      var $nesting = [self].concat($parent_nesting), $AbstractBlock_initialize$1, $AbstractBlock_block$ques$2, $AbstractBlock_inline$ques$3, $AbstractBlock_file$4, $AbstractBlock_lineno$5, $AbstractBlock_convert$6, $AbstractBlock_content$7, $AbstractBlock_context$eq$9, $AbstractBlock_$lt$lt$10, $AbstractBlock_blocks$ques$11, $AbstractBlock_sections$ques$12, $AbstractBlock_number$13, $AbstractBlock_find_by$14, $AbstractBlock_next_adjacent_block$15, $AbstractBlock_sections$17, $AbstractBlock_alt$19, $AbstractBlock_caption$20, $AbstractBlock_captioned_title$21, $AbstractBlock_list_marker_keyword$22, $AbstractBlock_title$23, $AbstractBlock_title$ques$24, $AbstractBlock_title$eq$25, $AbstractBlock_sub$ques$26, $AbstractBlock_remove_sub$27, $AbstractBlock_xreftext$28, $AbstractBlock_assign_caption$29, $AbstractBlock_assign_numeral$30, $AbstractBlock_reindex_sections$31, $AbstractBlock_find_by_internal$33;\n\n      self.$$prototype.source_location = self.$$prototype.document = self.$$prototype.attributes = self.$$prototype.blocks = self.$$prototype.next_section_index = self.$$prototype.numeral = self.$$prototype.context = self.$$prototype.parent = self.$$prototype.caption = self.$$prototype.style = self.$$prototype.converted_title = self.$$prototype.title = self.$$prototype.subs = self.$$prototype.next_section_ordinal = self.$$prototype.id = self.$$prototype.header = nil;\n      \n      self.$attr_reader(\"blocks\");\n      self.$attr_writer(\"caption\");\n      self.$attr_accessor(\"content_model\");\n      self.$attr_accessor(\"level\");\n      self.$attr_accessor(\"numeral\");\n      self.$attr_accessor(\"source_location\");\n      self.$attr_accessor(\"style\");\n      self.$attr_reader(\"subs\");\n      \n      Opal.def(self, '$initialize', $AbstractBlock_initialize$1 = function $$initialize(parent, context, opts) {\n        var $a, $iter = $AbstractBlock_initialize$1.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $AbstractBlock_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $AbstractBlock_initialize$1, false), $zuper, $iter);\n        self.content_model = \"compound\";\n        self.blocks = [];\n        self.subs = [];\n        self.id = (self.title = (self.caption = (self.numeral = (self.style = (self.default_subs = (self.source_location = nil))))));\n        if ($truthy(($truthy($a = context['$=='](\"document\")) ? $a : context['$=='](\"section\")))) {\n          \n          self.level = (self.next_section_index = 0);\n          return (self.next_section_ordinal = 1);\n        } else if ($truthy($$($nesting, 'AbstractBlock')['$==='](parent))) {\n          return (self.level = parent.$level())\n        } else {\n          return (self.level = nil)\n        };\n      }, $AbstractBlock_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$block?', $AbstractBlock_block$ques$2 = function() {\n        var self = this;\n\n        return true\n      }, $AbstractBlock_block$ques$2.$$arity = 0);\n      \n      Opal.def(self, '$inline?', $AbstractBlock_inline$ques$3 = function() {\n        var self = this;\n\n        return false\n      }, $AbstractBlock_inline$ques$3.$$arity = 0);\n      \n      Opal.def(self, '$file', $AbstractBlock_file$4 = function $$file() {\n        var $a, self = this;\n\n        return ($truthy($a = self.source_location) ? self.source_location.$file() : $a)\n      }, $AbstractBlock_file$4.$$arity = 0);\n      \n      Opal.def(self, '$lineno', $AbstractBlock_lineno$5 = function $$lineno() {\n        var $a, self = this;\n\n        return ($truthy($a = self.source_location) ? self.source_location.$lineno() : $a)\n      }, $AbstractBlock_lineno$5.$$arity = 0);\n      \n      Opal.def(self, '$convert', $AbstractBlock_convert$6 = function $$convert() {\n        var self = this;\n\n        \n        self.document.$playback_attributes(self.attributes);\n        return self.$converter().$convert(self);\n      }, $AbstractBlock_convert$6.$$arity = 0);\n      Opal.alias(self, \"render\", \"convert\");\n      \n      Opal.def(self, '$content', $AbstractBlock_content$7 = function $$content() {\n        var $$8, self = this;\n\n        return $send(self.blocks, 'map', [], ($$8 = function(b){var self = $$8.$$s || this;\n\n        \n          \n          if (b == null) {\n            b = nil;\n          };\n          return b.$convert();}, $$8.$$s = self, $$8.$$arity = 1, $$8)).$join($$($nesting, 'LF'))\n      }, $AbstractBlock_content$7.$$arity = 0);\n      \n      Opal.def(self, '$context=', $AbstractBlock_context$eq$9 = function(context) {\n        var self = this;\n\n        return (self.node_name = (self.context = context).$to_s())\n      }, $AbstractBlock_context$eq$9.$$arity = 1);\n      \n      Opal.def(self, '$<<', $AbstractBlock_$lt$lt$10 = function(block) {\n        var self = this, $writer = nil;\n\n        \n        if (block.$parent()['$=='](self)) {\n        } else {\n          \n          $writer = [self];\n          $send(block, 'parent=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        self.blocks['$<<'](block);\n        return self;\n      }, $AbstractBlock_$lt$lt$10.$$arity = 1);\n      Opal.alias(self, \"append\", \"<<\");\n      \n      Opal.def(self, '$blocks?', $AbstractBlock_blocks$ques$11 = function() {\n        var self = this;\n\n        if ($truthy(self.blocks['$empty?']())) {\n          return false\n        } else {\n          return true\n        }\n      }, $AbstractBlock_blocks$ques$11.$$arity = 0);\n      \n      Opal.def(self, '$sections?', $AbstractBlock_sections$ques$12 = function() {\n        var self = this;\n\n        return $rb_gt(self.next_section_index, 0)\n      }, $AbstractBlock_sections$ques$12.$$arity = 0);\n      \n      Opal.def(self, '$number', $AbstractBlock_number$13 = function $$number() {\n        var self = this;\n\n        try {\n          \n          return self.$Integer(self.numeral);\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n            try {\n              return self.numeral\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        }\n      }, $AbstractBlock_number$13.$$arity = 0);\n      \n      Opal.def(self, '$find_by', $AbstractBlock_find_by$14 = function $$find_by(selector) {\n        var $iter = $AbstractBlock_find_by$14.$$p, block = $iter || nil, self = this, result = nil;\n\n        if ($iter) $AbstractBlock_find_by$14.$$p = null;\n        \n        \n        if ($iter) $AbstractBlock_find_by$14.$$p = null;;\n        \n        if (selector == null) {\n          selector = $hash2([], {});\n        };\n        try {\n          return $send(self, 'find_by_internal', [selector, (result = [])], block.$to_proc())\n        } catch ($err) {\n          if (Opal.rescue($err, [$$$('::', 'StopIteration')])) {\n            try {\n              return result\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };\n      }, $AbstractBlock_find_by$14.$$arity = -1);\n      Opal.alias(self, \"query\", \"find_by\");\n      \n      Opal.def(self, '$next_adjacent_block', $AbstractBlock_next_adjacent_block$15 = function $$next_adjacent_block() {\n        var $a, $$16, self = this, p = nil, sib = nil;\n\n        if (self.context['$=='](\"document\")) {\n          return nil\n        } else if ($truthy((($a = (p = self.parent).$context()['$=='](\"dlist\")) ? self.context['$=='](\"list_item\") : (p = self.parent).$context()['$=='](\"dlist\")))) {\n          if ($truthy((sib = p.$items()['$[]']($rb_plus($send(p.$items(), 'find_index', [], ($$16 = function(terms, desc){var self = $$16.$$s || this, $b;\n\n          \n            \n            if (terms == null) {\n              terms = nil;\n            };\n            \n            if (desc == null) {\n              desc = nil;\n            };\n            return ($truthy($b = terms['$include?'](self)) ? $b : desc['$=='](self));}, $$16.$$s = self, $$16.$$arity = 2, $$16)), 1))))) {\n            return sib\n          } else {\n            return p.$next_adjacent_block()\n          }\n        } else if ($truthy((sib = p.$blocks()['$[]']($rb_plus(p.$blocks().$find_index(self), 1))))) {\n          return sib\n        } else {\n          return p.$next_adjacent_block()\n        }\n      }, $AbstractBlock_next_adjacent_block$15.$$arity = 0);\n      \n      Opal.def(self, '$sections', $AbstractBlock_sections$17 = function $$sections() {\n        var $$18, self = this;\n\n        return $send(self.blocks, 'select', [], ($$18 = function(block){var self = $$18.$$s || this;\n\n        \n          \n          if (block == null) {\n            block = nil;\n          };\n          return block.$context()['$=='](\"section\");}, $$18.$$s = self, $$18.$$arity = 1, $$18))\n      }, $AbstractBlock_sections$17.$$arity = 0);\n      \n      Opal.def(self, '$alt', $AbstractBlock_alt$19 = function $$alt() {\n        var self = this, text = nil;\n\n        if ($truthy((text = self.attributes['$[]'](\"alt\")))) {\n          if (text['$=='](self.attributes['$[]'](\"default-alt\"))) {\n            return self.$sub_specialchars(text)\n          } else {\n            \n            text = self.$sub_specialchars(text);\n            if ($truthy($$($nesting, 'ReplaceableTextRx')['$match?'](text))) {\n              \n              return self.$sub_replacements(text);\n            } else {\n              return text\n            };\n          }\n        } else {\n          return \"\"\n        }\n      }, $AbstractBlock_alt$19.$$arity = 0);\n      \n      Opal.def(self, '$caption', $AbstractBlock_caption$20 = function $$caption() {\n        var self = this;\n\n        if (self.context['$=='](\"admonition\")) {\n          return self.attributes['$[]'](\"textlabel\")\n        } else {\n          return self.caption\n        }\n      }, $AbstractBlock_caption$20.$$arity = 0);\n      \n      Opal.def(self, '$captioned_title', $AbstractBlock_captioned_title$21 = function $$captioned_title() {\n        var self = this;\n\n        return \"\" + (self.caption) + (self.$title())\n      }, $AbstractBlock_captioned_title$21.$$arity = 0);\n      \n      Opal.def(self, '$list_marker_keyword', $AbstractBlock_list_marker_keyword$22 = function $$list_marker_keyword(list_type) {\n        var $a, self = this;\n\n        \n        \n        if (list_type == null) {\n          list_type = nil;\n        };\n        return $$($nesting, 'ORDERED_LIST_KEYWORDS')['$[]'](($truthy($a = list_type) ? $a : self.style));\n      }, $AbstractBlock_list_marker_keyword$22.$$arity = -1);\n      \n      Opal.def(self, '$title', $AbstractBlock_title$23 = function $$title() {\n        var $a, $b, self = this;\n\n        return (self.converted_title = ($truthy($a = self.converted_title) ? $a : ($truthy($b = self.title) ? self.$apply_title_subs(self.title) : $b)))\n      }, $AbstractBlock_title$23.$$arity = 0);\n      \n      Opal.def(self, '$title?', $AbstractBlock_title$ques$24 = function() {\n        var self = this;\n\n        if ($truthy(self.title)) {\n          return true\n        } else {\n          return false\n        }\n      }, $AbstractBlock_title$ques$24.$$arity = 0);\n      \n      Opal.def(self, '$title=', $AbstractBlock_title$eq$25 = function(val) {\n        var self = this;\n\n        \n        self.converted_title = nil;\n        return (self.title = val);\n      }, $AbstractBlock_title$eq$25.$$arity = 1);\n      \n      Opal.def(self, '$sub?', $AbstractBlock_sub$ques$26 = function(name) {\n        var self = this;\n\n        return self.subs['$include?'](name)\n      }, $AbstractBlock_sub$ques$26.$$arity = 1);\n      \n      Opal.def(self, '$remove_sub', $AbstractBlock_remove_sub$27 = function $$remove_sub(sub) {\n        var self = this;\n\n        \n        self.subs.$delete(sub);\n        return nil;\n      }, $AbstractBlock_remove_sub$27.$$arity = 1);\n      \n      Opal.def(self, '$xreftext', $AbstractBlock_xreftext$28 = function $$xreftext(xrefstyle) {\n        var $a, $b, self = this, val = nil, $case = nil, quoted_title = nil, caption_attr_name = nil, prefix = nil;\n\n        \n        \n        if (xrefstyle == null) {\n          xrefstyle = nil;\n        };\n        if ($truthy(($truthy($a = (val = self.$reftext())) ? val['$empty?']()['$!']() : $a))) {\n          return val\n        } else if ($truthy(($truthy($a = ($truthy($b = xrefstyle) ? self.title : $b)) ? self.caption : $a))) {\n          return (function() {$case = xrefstyle;\n          if (\"full\"['$===']($case)) {\n          quoted_title = self.$sub_placeholder(self.$sub_quotes((function() {if ($truthy(self.document.$compat_mode())) {\n            return \"``%s''\"\n          } else {\n            return \"\\\"`%s`\\\"\"\n          }; return nil; })()), self.$title());\n          if ($truthy(($truthy($a = ($truthy($b = self.numeral) ? (caption_attr_name = $$($nesting, 'CAPTION_ATTR_NAMES')['$[]'](self.context)) : $b)) ? (prefix = self.document.$attributes()['$[]'](caption_attr_name)) : $a))) {\n            return \"\" + (prefix) + \" \" + (self.numeral) + \", \" + (quoted_title)\n          } else {\n            return \"\" + (self.caption.$chomp(\". \")) + \", \" + (quoted_title)\n          };}\n          else if (\"short\"['$===']($case)) {if ($truthy(($truthy($a = ($truthy($b = self.numeral) ? (caption_attr_name = $$($nesting, 'CAPTION_ATTR_NAMES')['$[]'](self.context)) : $b)) ? (prefix = self.document.$attributes()['$[]'](caption_attr_name)) : $a))) {\n            return \"\" + (prefix) + \" \" + (self.numeral)\n          } else {\n            return self.caption.$chomp(\". \")\n          }}\n          else {return self.$title()}})()\n        } else {\n          return self.$title()\n        };\n      }, $AbstractBlock_xreftext$28.$$arity = -1);\n      \n      Opal.def(self, '$assign_caption', $AbstractBlock_assign_caption$29 = function $$assign_caption(value, caption_context) {\n        var $a, $b, self = this, attr_name = nil, prefix = nil;\n\n        \n        \n        if (caption_context == null) {\n          caption_context = self.context;\n        };\n        if ($truthy(($truthy($a = ($truthy($b = self.caption) ? $b : self.title['$!']())) ? $a : (self.caption = ($truthy($b = value) ? $b : self.document.$attributes()['$[]'](\"caption\")))))) {\n          return nil\n        } else if ($truthy(($truthy($a = (attr_name = $$($nesting, 'CAPTION_ATTR_NAMES')['$[]'](caption_context))) ? (prefix = self.document.$attributes()['$[]'](attr_name)) : $a))) {\n          \n          self.caption = \"\" + (prefix) + \" \" + ((self.numeral = self.document.$increment_and_store_counter(\"\" + (caption_context) + \"-number\", self))) + \". \";\n          return nil;\n        } else {\n          return nil\n        };\n      }, $AbstractBlock_assign_caption$29.$$arity = -2);\n      \n      Opal.def(self, '$assign_numeral', $AbstractBlock_assign_numeral$30 = function $$assign_numeral(section) {\n        var $a, self = this, $writer = nil, like = nil, sectname = nil, caption = nil;\n\n        \n        self.next_section_index = $rb_plus((($writer = [self.next_section_index]), $send(section, 'index=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]), 1);\n        if ($truthy((like = section.$numbered()))) {\n          if ((sectname = section.$sectname())['$=='](\"appendix\")) {\n            \n            \n            $writer = [self.document.$counter(\"appendix-number\", \"A\")];\n            $send(section, 'numeral=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [(function() {if ($truthy((caption = self.document.$attributes()['$[]'](\"appendix-caption\")))) {\n              return \"\" + (caption) + \" \" + (section.$numeral()) + \": \"\n            } else {\n              return \"\" + (section.$numeral()) + \". \"\n            }; return nil; })()];\n            $send(section, 'caption=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else if ($truthy(($truthy($a = sectname['$=='](\"chapter\")) ? $a : like['$=='](\"chapter\")))) {\n            \n            $writer = [self.document.$counter(\"chapter-number\", 1).$to_s()];\n            $send(section, 'numeral=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            \n            \n            $writer = [(function() {if (sectname['$=='](\"part\")) {\n              \n              return $$($nesting, 'Helpers').$int_to_roman(self.next_section_ordinal);\n            } else {\n              return self.next_section_ordinal.$to_s()\n            }; return nil; })()];\n            $send(section, 'numeral=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            self.next_section_ordinal = $rb_plus(self.next_section_ordinal, 1);\n          }};\n        return nil;\n      }, $AbstractBlock_assign_numeral$30.$$arity = 1);\n      \n      Opal.def(self, '$reindex_sections', $AbstractBlock_reindex_sections$31 = function $$reindex_sections() {\n        var $$32, self = this;\n\n        \n        self.next_section_index = 0;\n        self.next_section_ordinal = 1;\n        return $send(self.blocks, 'each', [], ($$32 = function(block){var self = $$32.$$s || this;\n\n        \n          \n          if (block == null) {\n            block = nil;\n          };\n          if (block.$context()['$=='](\"section\")) {\n            \n            self.$assign_numeral(block);\n            return block.$reindex_sections();\n          } else {\n            return nil\n          };}, $$32.$$s = self, $$32.$$arity = 1, $$32));\n      }, $AbstractBlock_reindex_sections$31.$$arity = 0);\n      self.$protected();\n      return (Opal.def(self, '$find_by_internal', $AbstractBlock_find_by_internal$33 = function $$find_by_internal(selector, result) {\n        var $iter = $AbstractBlock_find_by_internal$33.$$p, block = $iter || nil, $a, $b, $c, $d, $$34, $$35, $$36, $$38, $$40, $$42, self = this, any_context = nil, context_selector = nil, style_selector = nil, role_selector = nil, id_selector = nil, verdict = nil, $case = nil;\n\n        if ($iter) $AbstractBlock_find_by_internal$33.$$p = null;\n        \n        \n        if ($iter) $AbstractBlock_find_by_internal$33.$$p = null;;\n        \n        if (selector == null) {\n          selector = $hash2([], {});\n        };\n        \n        if (result == null) {\n          result = [];\n        };\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = ($truthy($d = (any_context = (function() {if ($truthy((context_selector = selector['$[]'](\"context\")))) {\n          return nil\n        } else {\n          return true\n        }; return nil; })())) ? $d : context_selector['$=='](self.context))) ? ($truthy($d = (style_selector = selector['$[]'](\"style\"))['$!']()) ? $d : style_selector['$=='](self.style)) : $c)) ? ($truthy($c = (role_selector = selector['$[]'](\"role\"))['$!']()) ? $c : self['$has_role?'](role_selector)) : $b)) ? ($truthy($b = (id_selector = selector['$[]'](\"id\"))['$!']()) ? $b : id_selector['$=='](self.id)) : $a))) {\n          if ((block !== nil)) {\n            if ($truthy((verdict = Opal.yield1(block, self)))) {\n              $case = verdict;\n              if (\"prune\"['$===']($case)) {\n              result['$<<'](self);\n              if ($truthy(id_selector)) {\n                self.$raise($$$('::', 'StopIteration'))};\n              return result;}\n              else if (\"reject\"['$===']($case)) {\n              if ($truthy(id_selector)) {\n                self.$raise($$$('::', 'StopIteration'))};\n              return result;}\n              else if (\"stop\"['$===']($case)) {self.$raise($$$('::', 'StopIteration'))}\n              else {\n              result['$<<'](self);\n              if ($truthy(id_selector)) {\n                self.$raise($$$('::', 'StopIteration'))};}\n            } else if ($truthy(id_selector)) {\n              self.$raise($$$('::', 'StopIteration'))}\n          } else {\n            \n            result['$<<'](self);\n            if ($truthy(id_selector)) {\n              self.$raise($$$('::', 'StopIteration'))};\n          }};\n        $case = self.context;\n        if (\"document\"['$===']($case)) {if (context_selector['$=='](\"document\")) {\n        } else {\n          \n          if ($truthy(($truthy($a = self['$header?']()) ? ($truthy($b = any_context) ? $b : context_selector['$=='](\"section\")) : $a))) {\n            $send(self.header, 'find_by_internal', [selector, result], block.$to_proc())};\n          $send(self.blocks, 'each', [], ($$34 = function(b){var self = $$34.$$s || this, $e;\n\n          \n            \n            if (b == null) {\n              b = nil;\n            };\n            if ($truthy((($e = context_selector['$=='](\"section\")) ? b.$context()['$!='](\"section\") : context_selector['$=='](\"section\")))) {\n              return nil;};\n            return $send(b, 'find_by_internal', [selector, result], block.$to_proc());}, $$34.$$s = self, $$34.$$arity = 1, $$34));\n        }}\n        else if (\"dlist\"['$===']($case)) {if ($truthy(($truthy($a = any_context) ? $a : context_selector['$!='](\"section\")))) {\n          $send(self.blocks.$flatten(), 'each', [], ($$35 = function(b){var self = $$35.$$s || this;\n\n          \n            \n            if (b == null) {\n              b = nil;\n            };\n            if ($truthy(b)) {\n              return $send(b, 'find_by_internal', [selector, result], block.$to_proc())\n            } else {\n              return nil\n            };}, $$35.$$s = self, $$35.$$arity = 1, $$35))}}\n        else if (\"table\"['$===']($case)) {if ($truthy(selector['$[]'](\"traverse_documents\"))) {\n          \n          $send(self.$rows().$head(), 'each', [], ($$36 = function(r){var self = $$36.$$s || this, $$37;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            return $send(r, 'each', [], ($$37 = function(c){var self = $$37.$$s || this;\n\n            \n              \n              if (c == null) {\n                c = nil;\n              };\n              return $send(c, 'find_by_internal', [selector, result], block.$to_proc());}, $$37.$$s = self, $$37.$$arity = 1, $$37));}, $$36.$$s = self, $$36.$$arity = 1, $$36));\n          if (context_selector['$=='](\"inner_document\")) {\n            selector = selector.$merge($hash2([\"context\"], {\"context\": \"document\"}))};\n          $send($rb_plus(self.$rows().$body(), self.$rows().$foot()), 'each', [], ($$38 = function(r){var self = $$38.$$s || this, $$39;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            return $send(r, 'each', [], ($$39 = function(c){var self = $$39.$$s || this;\n\n            \n              \n              if (c == null) {\n                c = nil;\n              };\n              $send(c, 'find_by_internal', [selector, result], block.$to_proc());\n              if (c.$style()['$=='](\"asciidoc\")) {\n                return $send(c.$inner_document(), 'find_by_internal', [selector, result], block.$to_proc())\n              } else {\n                return nil\n              };}, $$39.$$s = self, $$39.$$arity = 1, $$39));}, $$38.$$s = self, $$38.$$arity = 1, $$38));\n        } else {\n          $send($rb_plus($rb_plus(self.$rows().$head(), self.$rows().$body()), self.$rows().$foot()), 'each', [], ($$40 = function(r){var self = $$40.$$s || this, $$41;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            return $send(r, 'each', [], ($$41 = function(c){var self = $$41.$$s || this;\n\n            \n              \n              if (c == null) {\n                c = nil;\n              };\n              return $send(c, 'find_by_internal', [selector, result], block.$to_proc());}, $$41.$$s = self, $$41.$$arity = 1, $$41));}, $$40.$$s = self, $$40.$$arity = 1, $$40))\n        }}\n        else {$send(self.blocks, 'each', [], ($$42 = function(b){var self = $$42.$$s || this, $e;\n\n        \n          \n          if (b == null) {\n            b = nil;\n          };\n          if ($truthy((($e = context_selector['$=='](\"section\")) ? b.$context()['$!='](\"section\") : context_selector['$=='](\"section\")))) {\n            return nil;};\n          return $send(b, 'find_by_internal', [selector, result], block.$to_proc());}, $$42.$$s = self, $$42.$$arity = 1, $$42))};\n        return result;\n      }, $AbstractBlock_find_by_internal$33.$$arity = -1), nil) && 'find_by_internal';\n    })($nesting[0], $$($nesting, 'AbstractNode'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/attribute_list\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash = Opal.hash, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$new', '$[]', '$update', '$parse', '$parse_attribute', '$eos?', '$skip_delimiter', '$+', '$rekey', '$each', '$[]=', '$-', '$private', '$skip_blank', '$==', '$peek', '$parse_attribute_value', '$get_byte', '$start_with?', '$scan_name', '$!', '$!=', '$*', '$scan_to_delimiter', '$===', '$include?', '$delete', '$split', '$empty?', '$apply_subs', '$scan_to_quote', '$gsub', '$skip', '$scan']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'AttributeList');\n\n      var $nesting = [self].concat($parent_nesting), $AttributeList_initialize$1, $AttributeList_parse_into$2, $AttributeList_parse$3, $AttributeList_rekey$4, $AttributeList_rekey$5, $AttributeList_parse_attribute$7, $AttributeList_parse_attribute_value$9, $AttributeList_skip_blank$10, $AttributeList_skip_delimiter$11, $AttributeList_scan_name$12, $AttributeList_scan_to_delimiter$13, $AttributeList_scan_to_quote$14;\n\n      self.$$prototype.attributes = self.$$prototype.scanner = self.$$prototype.delimiter = self.$$prototype.block = self.$$prototype.delimiter_skip_pattern = self.$$prototype.delimiter_boundary_pattern = nil;\n      \n      Opal.const_set($nesting[0], 'BACKSLASH', \"\\\\\");\n      Opal.const_set($nesting[0], 'APOS', \"'\");\n      Opal.const_set($nesting[0], 'BoundaryRxs', $hash(\"\\\"\", /.*?[^\\\\](?=\")/, $$($nesting, 'APOS'), /.*?[^\\\\](?=')/, \",\", /.*?(?=[ \\t]*(,|$))/));\n      Opal.const_set($nesting[0], 'EscapedQuotes', $hash(\"\\\"\", \"\\\\\\\"\", $$($nesting, 'APOS'), \"\\\\'\"));\n      Opal.const_set($nesting[0], 'NameRx', new RegExp(\"\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-.]*\"));\n      Opal.const_set($nesting[0], 'BlankRx', /[ \\t]+/);\n      Opal.const_set($nesting[0], 'SkipRxs', $hash2([\",\"], {\",\": /[ \\t]*(,|$)/}));\n      \n      Opal.def(self, '$initialize', $AttributeList_initialize$1 = function $$initialize(source, block, delimiter) {\n        var self = this;\n\n        \n        \n        if (block == null) {\n          block = nil;\n        };\n        \n        if (delimiter == null) {\n          delimiter = \",\";\n        };\n        self.scanner = $$$('::', 'StringScanner').$new(source);\n        self.block = block;\n        self.delimiter = delimiter;\n        self.delimiter_skip_pattern = $$($nesting, 'SkipRxs')['$[]'](delimiter);\n        self.delimiter_boundary_pattern = $$($nesting, 'BoundaryRxs')['$[]'](delimiter);\n        return (self.attributes = nil);\n      }, $AttributeList_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$parse_into', $AttributeList_parse_into$2 = function $$parse_into(attributes, positional_attrs) {\n        var self = this;\n\n        \n        \n        if (positional_attrs == null) {\n          positional_attrs = [];\n        };\n        return attributes.$update(self.$parse(positional_attrs));\n      }, $AttributeList_parse_into$2.$$arity = -2);\n      \n      Opal.def(self, '$parse', $AttributeList_parse$3 = function $$parse(positional_attrs) {\n        var $a, self = this, index = nil;\n\n        \n        \n        if (positional_attrs == null) {\n          positional_attrs = [];\n        };\n        if ($truthy(self.attributes)) {\n          return self.attributes};\n        self.attributes = $hash2([], {});\n        index = 0;\n        while ($truthy(self.$parse_attribute(index, positional_attrs))) {\n          \n          if ($truthy(self.scanner['$eos?']())) {\n            break;};\n          self.$skip_delimiter();\n          index = $rb_plus(index, 1);\n        };\n        return self.attributes;\n      }, $AttributeList_parse$3.$$arity = -1);\n      \n      Opal.def(self, '$rekey', $AttributeList_rekey$4 = function $$rekey(positional_attrs) {\n        var self = this;\n\n        return $$($nesting, 'AttributeList').$rekey(self.attributes, positional_attrs)\n      }, $AttributeList_rekey$4.$$arity = 1);\n      Opal.defs(self, '$rekey', $AttributeList_rekey$5 = function $$rekey(attributes, positional_attrs) {\n        var $$6, self = this, index = nil;\n\n        \n        index = 0;\n        $send(positional_attrs, 'each', [], ($$6 = function(key){var self = $$6.$$s || this, val = nil, $writer = nil;\n\n        \n          \n          if (key == null) {\n            key = nil;\n          };\n          index = $rb_plus(index, 1);\n          if ($truthy(key)) {\n            if ($truthy((val = attributes['$[]'](index)))) {\n              \n              $writer = [key, val];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              return nil\n            }\n          } else {\n            return nil\n          };}, $$6.$$s = self, $$6.$$arity = 1, $$6));\n        return attributes;\n      }, $AttributeList_rekey$5.$$arity = 2);\n      self.$private();\n      \n      Opal.def(self, '$parse_attribute', $AttributeList_parse_attribute$7 = function $$parse_attribute(index, positional_attrs) {\n        var $a, $$8, self = this, single_quoted_value = nil, first = nil, name = nil, value = nil, skipped = nil, c = nil, $case = nil, $writer = nil, resolved_name = nil, positional_attr_name = nil;\n\n        \n        \n        if (index == null) {\n          index = 0;\n        };\n        \n        if (positional_attrs == null) {\n          positional_attrs = [];\n        };\n        single_quoted_value = false;\n        self.$skip_blank();\n        if ((first = self.scanner.$peek(1))['$=='](\"\\\"\")) {\n          \n          name = self.$parse_attribute_value(self.scanner.$get_byte());\n          value = nil;\n        } else if (first['$==']($$($nesting, 'APOS'))) {\n          \n          name = self.$parse_attribute_value(self.scanner.$get_byte());\n          value = nil;\n          if ($truthy(name['$start_with?']($$($nesting, 'APOS')))) {\n          } else {\n            single_quoted_value = true\n          };\n        } else {\n          \n          name = self.$scan_name();\n          skipped = 0;\n          c = nil;\n          if ($truthy(self.scanner['$eos?']())) {\n            if ($truthy(name)) {\n            } else {\n              return false\n            }\n          } else {\n            \n            skipped = ($truthy($a = self.$skip_blank()) ? $a : 0);\n            c = self.scanner.$get_byte();\n          };\n          if ($truthy(($truthy($a = c['$!']()) ? $a : c['$=='](self.delimiter)))) {\n            value = nil\n          } else if ($truthy(($truthy($a = c['$!='](\"=\")) ? $a : name['$!']()))) {\n            \n            name = \"\" + (name) + ($rb_times(\" \", skipped)) + (c) + (self.$scan_to_delimiter());\n            value = nil;\n          } else {\n            \n            self.$skip_blank();\n            if ($truthy(self.scanner.$peek(1))) {\n              if ((c = self.scanner.$get_byte())['$=='](\"\\\"\")) {\n                value = self.$parse_attribute_value(c)\n              } else if (c['$==']($$($nesting, 'APOS'))) {\n                \n                value = self.$parse_attribute_value(c);\n                if ($truthy(value['$start_with?']($$($nesting, 'APOS')))) {\n                } else {\n                  single_quoted_value = true\n                };\n              } else if (c['$=='](self.delimiter)) {\n                value = \"\"\n              } else {\n                \n                value = \"\" + (c) + (self.$scan_to_delimiter());\n                if (value['$=='](\"None\")) {\n                  return true};\n              }};\n          };\n        };\n        if ($truthy(value)) {\n          $case = name;\n          if (\"options\"['$===']($case) || \"opts\"['$===']($case)) {if ($truthy(value['$include?'](\",\"))) {\n            \n            if ($truthy(value['$include?'](\" \"))) {\n              value = value.$delete(\" \")};\n            $send(value.$split(\",\"), 'each', [], ($$8 = function(opt){var self = $$8.$$s || this, $writer = nil;\n              if (self.attributes == null) self.attributes = nil;\n\n            \n              \n              if (opt == null) {\n                opt = nil;\n              };\n              if ($truthy(opt['$empty?']())) {\n                return nil\n              } else {\n                \n                $writer = [\"\" + (opt) + \"-option\", \"\"];\n                $send(self.attributes, '[]=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];\n              };}, $$8.$$s = self, $$8.$$arity = 1, $$8));\n          } else if ($truthy(value['$empty?']())) {\n          } else {\n            \n            $writer = [\"\" + (value) + \"-option\", \"\"];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          }}\n          else {if ($truthy(($truthy($a = single_quoted_value) ? self.block : $a))) {\n            $case = name;\n            if (\"title\"['$===']($case) || \"reftext\"['$===']($case)) {\n            $writer = [name, value];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else {\n            $writer = [name, self.block.$apply_subs(value)];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n          } else {\n            \n            $writer = [name, value];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          }}\n        } else {\n          \n          resolved_name = (function() {if ($truthy(($truthy($a = single_quoted_value) ? self.block : $a))) {\n            \n            return self.block.$apply_subs(name);\n          } else {\n            return name\n          }; return nil; })();\n          if ($truthy((positional_attr_name = positional_attrs['$[]'](index)))) {\n            \n            $writer = [positional_attr_name, resolved_name];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          \n          $writer = [$rb_plus(index, 1), resolved_name];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n        };\n        return true;\n      }, $AttributeList_parse_attribute$7.$$arity = -1);\n      \n      Opal.def(self, '$parse_attribute_value', $AttributeList_parse_attribute_value$9 = function $$parse_attribute_value(quote) {\n        var self = this, value = nil;\n\n        \n        if (self.scanner.$peek(1)['$=='](quote)) {\n          \n          self.scanner.$get_byte();\n          return \"\";};\n        if ($truthy((value = self.$scan_to_quote(quote)))) {\n          \n          self.scanner.$get_byte();\n          if ($truthy(value['$include?']($$($nesting, 'BACKSLASH')))) {\n            return value.$gsub($$($nesting, 'EscapedQuotes')['$[]'](quote), quote)\n          } else {\n            return value\n          };\n        } else {\n          return \"\" + (quote) + (self.$scan_to_delimiter())\n        };\n      }, $AttributeList_parse_attribute_value$9.$$arity = 1);\n      \n      Opal.def(self, '$skip_blank', $AttributeList_skip_blank$10 = function $$skip_blank() {\n        var self = this;\n\n        return self.scanner.$skip($$($nesting, 'BlankRx'))\n      }, $AttributeList_skip_blank$10.$$arity = 0);\n      \n      Opal.def(self, '$skip_delimiter', $AttributeList_skip_delimiter$11 = function $$skip_delimiter() {\n        var self = this;\n\n        return self.scanner.$skip(self.delimiter_skip_pattern)\n      }, $AttributeList_skip_delimiter$11.$$arity = 0);\n      \n      Opal.def(self, '$scan_name', $AttributeList_scan_name$12 = function $$scan_name() {\n        var self = this;\n\n        return self.scanner.$scan($$($nesting, 'NameRx'))\n      }, $AttributeList_scan_name$12.$$arity = 0);\n      \n      Opal.def(self, '$scan_to_delimiter', $AttributeList_scan_to_delimiter$13 = function $$scan_to_delimiter() {\n        var self = this;\n\n        return self.scanner.$scan(self.delimiter_boundary_pattern)\n      }, $AttributeList_scan_to_delimiter$13.$$arity = 0);\n      return (Opal.def(self, '$scan_to_quote', $AttributeList_scan_to_quote$14 = function $$scan_to_quote(quote) {\n        var self = this;\n\n        return self.scanner.$scan($$($nesting, 'BoundaryRxs')['$[]'](quote))\n      }, $AttributeList_scan_to_quote$14.$$arity = 1), nil) && 'scan_to_quote';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/block\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$default=', '$-', '$attr_accessor', '$[]', '$key?', '$==', '$===', '$drop', '$delete', '$[]=', '$commit_subs', '$nil_or_empty?', '$prepare_source_string', '$apply_subs', '$join', '$<', '$size', '$empty?', '$rstrip', '$shift', '$pop', '$warn', '$logger', '$to_s', '$class', '$object_id', '$inspect']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Block');\n\n      var $nesting = [self].concat($parent_nesting), $Block_initialize$1, $Block_content$2, $Block_source$3, $Block_to_s$4, $writer = nil;\n\n      self.$$prototype.attributes = self.$$prototype.content_model = self.$$prototype.lines = self.$$prototype.subs = self.$$prototype.blocks = self.$$prototype.context = self.$$prototype.style = nil;\n      \n      \n      $writer = [\"simple\"];\n      $send(Opal.const_set($nesting[0], 'DEFAULT_CONTENT_MODEL', $hash2([\"audio\", \"image\", \"listing\", \"literal\", \"stem\", \"open\", \"page_break\", \"pass\", \"thematic_break\", \"video\"], {\"audio\": \"empty\", \"image\": \"empty\", \"listing\": \"verbatim\", \"literal\": \"verbatim\", \"stem\": \"raw\", \"open\": \"compound\", \"page_break\": \"empty\", \"pass\": \"raw\", \"thematic_break\": \"empty\", \"video\": \"empty\"})), 'default=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      Opal.alias(self, \"blockname\", \"context\");\n      self.$attr_accessor(\"lines\");\n      \n      Opal.def(self, '$initialize', $Block_initialize$1 = function $$initialize(parent, context, opts) {\n        var $a, $iter = $Block_initialize$1.$$p, $yield = $iter || nil, self = this, subs = nil, $writer = nil, raw_source = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Block_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Block_initialize$1, false), $zuper, $iter);\n        self.content_model = ($truthy($a = opts['$[]'](\"content_model\")) ? $a : $$($nesting, 'DEFAULT_CONTENT_MODEL')['$[]'](context));\n        if ($truthy(opts['$key?'](\"subs\"))) {\n          if ($truthy((subs = opts['$[]'](\"subs\")))) {\n            \n            if (subs['$=='](\"default\")) {\n              self.default_subs = opts['$[]'](\"default_subs\")\n            } else if ($truthy($$$('::', 'Array')['$==='](subs))) {\n              \n              self.default_subs = subs.$drop(0);\n              self.attributes.$delete(\"subs\");\n            } else {\n              \n              self.default_subs = nil;\n              \n              $writer = [\"subs\", \"\" + (subs)];\n              $send(self.attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n            };\n            self.$commit_subs();\n          } else {\n            \n            self.default_subs = [];\n            self.attributes.$delete(\"subs\");\n          }\n        } else {\n          self.default_subs = nil\n        };\n        if ($truthy((raw_source = opts['$[]'](\"source\"))['$nil_or_empty?']())) {\n          return (self.lines = [])\n        } else if ($truthy($$$('::', 'String')['$==='](raw_source))) {\n          return (self.lines = $$($nesting, 'Helpers').$prepare_source_string(raw_source))\n        } else {\n          return (self.lines = raw_source.$drop(0))\n        };\n      }, $Block_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$content', $Block_content$2 = function $$content() {\n        var $a, $b, $iter = $Block_content$2.$$p, $yield = $iter || nil, self = this, $case = nil, result = nil, first = nil, last = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Block_content$2.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        return (function() {$case = self.content_model;\n        if (\"compound\"['$===']($case)) {return $send(self, Opal.find_super_dispatcher(self, 'content', $Block_content$2, false), $zuper, $iter)}\n        else if (\"simple\"['$===']($case)) {return self.$apply_subs(self.lines.$join($$($nesting, 'LF')), self.subs)}\n        else if (\"verbatim\"['$===']($case) || \"raw\"['$===']($case)) {\n        result = self.$apply_subs(self.lines, self.subs);\n        if ($truthy($rb_lt(result.$size(), 2))) {\n          return result['$[]'](0)\n        } else {\n          \n          while ($truthy(($truthy($b = (first = result['$[]'](0))) ? first.$rstrip()['$empty?']() : $b))) {\n            result.$shift()\n          };\n          while ($truthy(($truthy($b = (last = result['$[]'](-1))) ? last.$rstrip()['$empty?']() : $b))) {\n            result.$pop()\n          };\n          return result.$join($$($nesting, 'LF'));\n        };}\n        else {\n        if (self.content_model['$=='](\"empty\")) {\n        } else {\n          self.$logger().$warn(\"\" + \"Unknown content model '\" + (self.content_model) + \"' for block: \" + (self.$to_s()))\n        };\n        return nil;}})()\n      }, $Block_content$2.$$arity = 0);\n      \n      Opal.def(self, '$source', $Block_source$3 = function $$source() {\n        var self = this;\n\n        return self.lines.$join($$($nesting, 'LF'))\n      }, $Block_source$3.$$arity = 0);\n      return (Opal.def(self, '$to_s', $Block_to_s$4 = function $$to_s() {\n        var self = this, content_summary = nil;\n\n        \n        content_summary = (function() {if (self.content_model['$=='](\"compound\")) {\n          return \"\" + \"blocks: \" + (self.blocks.$size())\n        } else {\n          return \"\" + \"lines: \" + (self.lines.$size())\n        }; return nil; })();\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {context: \" + (self.context.$inspect()) + \", content_model: \" + (self.content_model.$inspect()) + \", style: \" + (self.style.$inspect()) + \", \" + (content_summary) + \"}>\";\n      }, $Block_to_s$4.$$arity = 0), nil) && 'to_s';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/callouts\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$next_list', '$<<', '$current_list', '$to_i', '$generate_next_callout_id', '$+', '$<=', '$size', '$[]', '$-', '$chop', '$join', '$map', '$==', '$<', '$private', '$generate_callout_id']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Callouts');\n\n      var $nesting = [self].concat($parent_nesting), $Callouts_initialize$1, $Callouts_register$2, $Callouts_read_next_id$3, $Callouts_callout_ids$4, $Callouts_current_list$6, $Callouts_next_list$7, $Callouts_rewind$8, $Callouts_generate_next_callout_id$9, $Callouts_generate_callout_id$10;\n\n      self.$$prototype.co_index = self.$$prototype.lists = self.$$prototype.list_index = nil;\n      \n      \n      Opal.def(self, '$initialize', $Callouts_initialize$1 = function $$initialize() {\n        var self = this;\n\n        \n        self.lists = [];\n        self.list_index = 0;\n        return self.$next_list();\n      }, $Callouts_initialize$1.$$arity = 0);\n      \n      Opal.def(self, '$register', $Callouts_register$2 = function $$register(li_ordinal) {\n        var self = this, id = nil;\n\n        \n        self.$current_list()['$<<']($hash2([\"ordinal\", \"id\"], {\"ordinal\": li_ordinal.$to_i(), \"id\": (id = self.$generate_next_callout_id())}));\n        self.co_index = $rb_plus(self.co_index, 1);\n        return id;\n      }, $Callouts_register$2.$$arity = 1);\n      \n      Opal.def(self, '$read_next_id', $Callouts_read_next_id$3 = function $$read_next_id() {\n        var self = this, id = nil, list = nil;\n\n        \n        id = nil;\n        list = self.$current_list();\n        if ($truthy($rb_le(self.co_index, list.$size()))) {\n          id = list['$[]']($rb_minus(self.co_index, 1))['$[]'](\"id\")};\n        self.co_index = $rb_plus(self.co_index, 1);\n        return id;\n      }, $Callouts_read_next_id$3.$$arity = 0);\n      \n      Opal.def(self, '$callout_ids', $Callouts_callout_ids$4 = function $$callout_ids(li_ordinal) {\n        var $$5, self = this;\n\n        return $send(self.$current_list(), 'map', [], ($$5 = function(it){var self = $$5.$$s || this;\n\n        \n          \n          if (it == null) {\n            it = nil;\n          };\n          if (it['$[]'](\"ordinal\")['$=='](li_ordinal)) {\n            return \"\" + (it['$[]'](\"id\")) + \" \"\n          } else {\n            return \"\"\n          };}, $$5.$$s = self, $$5.$$arity = 1, $$5)).$join().$chop()\n      }, $Callouts_callout_ids$4.$$arity = 1);\n      \n      Opal.def(self, '$current_list', $Callouts_current_list$6 = function $$current_list() {\n        var self = this;\n\n        return self.lists['$[]']($rb_minus(self.list_index, 1))\n      }, $Callouts_current_list$6.$$arity = 0);\n      \n      Opal.def(self, '$next_list', $Callouts_next_list$7 = function $$next_list() {\n        var self = this;\n\n        \n        self.list_index = $rb_plus(self.list_index, 1);\n        if ($truthy($rb_lt(self.lists.$size(), self.list_index))) {\n          self.lists['$<<']([])};\n        self.co_index = 1;\n        return nil;\n      }, $Callouts_next_list$7.$$arity = 0);\n      \n      Opal.def(self, '$rewind', $Callouts_rewind$8 = function $$rewind() {\n        var self = this;\n\n        \n        self.list_index = 1;\n        self.co_index = 1;\n        return nil;\n      }, $Callouts_rewind$8.$$arity = 0);\n      self.$private();\n      \n      Opal.def(self, '$generate_next_callout_id', $Callouts_generate_next_callout_id$9 = function $$generate_next_callout_id() {\n        var self = this;\n\n        return self.$generate_callout_id(self.list_index, self.co_index)\n      }, $Callouts_generate_next_callout_id$9.$$arity = 0);\n      return (Opal.def(self, '$generate_callout_id', $Callouts_generate_callout_id$10 = function $$generate_callout_id(list_index, co_index) {\n        var self = this;\n\n        return \"\" + \"CO\" + (list_index) + \"-\" + (co_index)\n      }, $Callouts_generate_callout_id$10.$$arity = 2), nil) && 'generate_callout_id';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/converter\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send, $klass = Opal.klass, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$autoload', '$__dir__', '$attr_reader', '$raise', '$class', '$[]', '$sub', '$slice', '$length', '$==', '$[]=', '$backend_traits', '$-', '$derive_backend_traits', '$register', '$map', '$to_s', '$new', '$create', '$default', '$each', '$default=', '$registry', '$for', '$===', '$supports_templates?', '$merge', '$private', '$include', '$delete', '$clear', '$private_class_method', '$send', '$extend', '$node_name', '$+', '$receiver', '$name', '$warn', '$logger', '$respond_to?', '$content']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Converter');\n\n      var $nesting = [self].concat($parent_nesting), $Converter_initialize$1, $Converter_convert$2, $Converter_handles$ques$3, $Converter_derive_backend_traits$4, $a, $Converter_included$28;\n\n      \n      self.$autoload(\"CompositeConverter\", \"\" + (self.$__dir__()) + \"/converter/composite\");\n      self.$autoload(\"TemplateConverter\", \"\" + (self.$__dir__()) + \"/converter/template\");\n      self.$attr_reader(\"backend\");\n      \n      Opal.def(self, '$initialize', $Converter_initialize$1 = function $$initialize(backend, opts) {\n        var self = this;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        return (self.backend = backend);\n      }, $Converter_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$convert', $Converter_convert$2 = function $$convert(node, transform, opts) {\n        var self = this;\n        if (self.backend == null) self.backend = nil;\n\n        \n        \n        if (transform == null) {\n          transform = nil;\n        };\n        \n        if (opts == null) {\n          opts = nil;\n        };\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + (self.$class()) + \" (backend: \" + (self.backend) + \") must implement the #\" + (\"convert\") + \" method\");\n      }, $Converter_convert$2.$$arity = -2);\n      \n      Opal.def(self, '$handles?', $Converter_handles$ques$3 = function(transform) {\n        var self = this;\n\n        return true\n      }, $Converter_handles$ques$3.$$arity = 1);\n      Opal.defs(self, '$derive_backend_traits', $Converter_derive_backend_traits$4 = function $$derive_backend_traits(backend) {\n        var self = this, t_outfilesuffix = nil, t_basebackend = nil, t_filetype = nil;\n\n        \n        if ($truthy(backend)) {\n        } else {\n          return $hash2([], {})\n        };\n        if ($truthy((t_outfilesuffix = $$($nesting, 'DEFAULT_EXTENSIONS')['$[]']((t_basebackend = backend.$sub($$($nesting, 'TrailingDigitsRx'), \"\")))))) {\n          t_filetype = t_outfilesuffix.$slice(1, t_outfilesuffix.$length())\n        } else {\n          t_outfilesuffix = \"\" + \".\" + ((t_filetype = t_basebackend))\n        };\n        if (t_filetype['$=='](\"html\")) {\n          return $hash2([\"basebackend\", \"filetype\", \"htmlsyntax\", \"outfilesuffix\"], {\"basebackend\": t_basebackend, \"filetype\": t_filetype, \"htmlsyntax\": \"html\", \"outfilesuffix\": t_outfilesuffix})\n        } else {\n          return $hash2([\"basebackend\", \"filetype\", \"outfilesuffix\"], {\"basebackend\": t_basebackend, \"filetype\": t_filetype, \"outfilesuffix\": t_outfilesuffix})\n        };\n      }, $Converter_derive_backend_traits$4.$$arity = 1);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'BackendTraits');\n\n        var $nesting = [self].concat($parent_nesting), $BackendTraits_basebackend$5, $BackendTraits_filetype$6, $BackendTraits_htmlsyntax$7, $BackendTraits_outfilesuffix$8, $BackendTraits_supports_templates$9, $BackendTraits_supports_templates$ques$10, $BackendTraits_init_backend_traits$11, $BackendTraits_backend_traits$12, $BackendTraits_derive_backend_traits$13;\n\n        \n        \n        Opal.def(self, '$basebackend', $BackendTraits_basebackend$5 = function $$basebackend(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          if ($truthy(value)) {\n            \n            \n            $writer = [\"basebackend\", value];\n            $send(self.$backend_traits(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            return self.$backend_traits()['$[]'](\"basebackend\")\n          };\n        }, $BackendTraits_basebackend$5.$$arity = -1);\n        \n        Opal.def(self, '$filetype', $BackendTraits_filetype$6 = function $$filetype(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          if ($truthy(value)) {\n            \n            \n            $writer = [\"filetype\", value];\n            $send(self.$backend_traits(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            return self.$backend_traits()['$[]'](\"filetype\")\n          };\n        }, $BackendTraits_filetype$6.$$arity = -1);\n        \n        Opal.def(self, '$htmlsyntax', $BackendTraits_htmlsyntax$7 = function $$htmlsyntax(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          if ($truthy(value)) {\n            \n            \n            $writer = [\"htmlsyntax\", value];\n            $send(self.$backend_traits(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            return self.$backend_traits()['$[]'](\"htmlsyntax\")\n          };\n        }, $BackendTraits_htmlsyntax$7.$$arity = -1);\n        \n        Opal.def(self, '$outfilesuffix', $BackendTraits_outfilesuffix$8 = function $$outfilesuffix(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          if ($truthy(value)) {\n            \n            \n            $writer = [\"outfilesuffix\", value];\n            $send(self.$backend_traits(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            return self.$backend_traits()['$[]'](\"outfilesuffix\")\n          };\n        }, $BackendTraits_outfilesuffix$8.$$arity = -1);\n        \n        Opal.def(self, '$supports_templates', $BackendTraits_supports_templates$9 = function $$supports_templates(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = true;\n          };\n          $writer = [\"supports_templates\", value];\n          $send(self.$backend_traits(), '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        }, $BackendTraits_supports_templates$9.$$arity = -1);\n        \n        Opal.def(self, '$supports_templates?', $BackendTraits_supports_templates$ques$10 = function() {\n          var self = this;\n\n          return self.$backend_traits()['$[]'](\"supports_templates\")\n        }, $BackendTraits_supports_templates$ques$10.$$arity = 0);\n        \n        Opal.def(self, '$init_backend_traits', $BackendTraits_init_backend_traits$11 = function $$init_backend_traits(value) {\n          var $a, self = this;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          return (self.backend_traits = ($truthy($a = value) ? $a : $hash2([], {})));\n        }, $BackendTraits_init_backend_traits$11.$$arity = -1);\n        \n        Opal.def(self, '$backend_traits', $BackendTraits_backend_traits$12 = function $$backend_traits() {\n          var $a, self = this;\n          if (self.backend_traits == null) self.backend_traits = nil;\n          if (self.backend == null) self.backend = nil;\n\n          return (self.backend_traits = ($truthy($a = self.backend_traits) ? $a : $$($nesting, 'Converter').$derive_backend_traits(self.backend)))\n        }, $BackendTraits_backend_traits$12.$$arity = 0);\n        Opal.alias(self, \"backend_info\", \"backend_traits\");\n        Opal.defs(self, '$derive_backend_traits', $BackendTraits_derive_backend_traits$13 = function $$derive_backend_traits(backend) {\n          var self = this;\n\n          return $$($nesting, 'Converter').$derive_backend_traits(backend)\n        }, $BackendTraits_derive_backend_traits$13.$$arity = 1);\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Config');\n\n        var $nesting = [self].concat($parent_nesting), $Config_register_for$14;\n\n        \n        Opal.def(self, '$register_for', $Config_register_for$14 = function $$register_for($a) {\n          var $post_args, backends, $$15, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          backends = $post_args;;\n          return $send($$($nesting, 'Converter'), 'register', [self].concat(Opal.to_a($send(backends, 'map', [], ($$15 = function(backend){var self = $$15.$$s || this;\n\n          \n            \n            if (backend == null) {\n              backend = nil;\n            };\n            return backend.$to_s();}, $$15.$$s = self, $$15.$$arity = 1, $$15)))));\n        }, $Config_register_for$14.$$arity = -1)\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Factory');\n\n        var $nesting = [self].concat($parent_nesting), $Factory_new$16, $Factory_default$17, $Factory_create$18, $Factory_register$19, $Factory_for$21, $Factory_create$22, $Factory_converters$23, $Factory_registry$24;\n\n        \n        Opal.defs(self, '$new', $Factory_new$16 = function($a, $b) {\n          var $post_args, $kwargs, converters, proxy_default, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          $kwargs = Opal.extract_kwargs($post_args);\n          \n          if ($kwargs == null) {\n            $kwargs = $hash2([], {});\n          } else if (!$kwargs.$$is_hash) {\n            throw Opal.ArgumentError.$new('expected kwargs');\n          };\n          \n          if ($post_args.length > 0) {\n            converters = $post_args[0];\n            $post_args.splice(0, 1);\n          }\n          if (converters == null) {\n            converters = nil;\n          };\n          \n          proxy_default = $kwargs.$$smap[\"proxy_default\"];\n          if (proxy_default == null) {\n            proxy_default = true\n          };\n          if ($truthy(proxy_default)) {\n            \n            return $$($nesting, 'DefaultFactoryProxy').$new(converters);\n          } else {\n            \n            return $$($nesting, 'CustomFactory').$new(converters);\n          };\n        }, $Factory_new$16.$$arity = -1);\n        Opal.defs(self, '$default', $Factory_default$17 = function($a) {\n          var $post_args, args, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $$($nesting, 'Converter');\n        }, $Factory_default$17.$$arity = -1);\n        Opal.defs(self, '$create', $Factory_create$18 = function $$create(backend, opts) {\n          var self = this;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          return self.$default().$create(backend, opts);\n        }, $Factory_create$18.$$arity = -2);\n        \n        Opal.def(self, '$register', $Factory_register$19 = function $$register(converter, $a) {\n          var $post_args, backends, $$20, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          backends = $post_args;;\n          return $send(backends, 'each', [], ($$20 = function(backend){var self = $$20.$$s || this, $writer = nil;\n\n          \n            \n            if (backend == null) {\n              backend = nil;\n            };\n            if (backend['$=='](\"*\")) {\n              \n              \n              $writer = [converter];\n              $send(self.$registry(), 'default=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else {\n              \n              \n              $writer = [backend, converter];\n              $send(self.$registry(), '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            };}, $$20.$$s = self, $$20.$$arity = 1, $$20));\n        }, $Factory_register$19.$$arity = -2);\n        \n        Opal.def(self, '$for', $Factory_for$21 = function(backend) {\n          var self = this;\n\n          return self.$registry()['$[]'](backend)\n        }, $Factory_for$21.$$arity = 1);\n        \n        Opal.def(self, '$create', $Factory_create$22 = function $$create(backend, opts) {\n          var $a, $b, self = this, converter = nil, template_dirs = nil, delegate_backend = nil;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy((converter = self.$for(backend)))) {\n            \n            if ($truthy($$$('::', 'Class')['$==='](converter))) {\n              converter = converter.$new(backend, opts)};\n            if ($truthy(($truthy($a = ($truthy($b = (template_dirs = opts['$[]'](\"template_dirs\"))) ? $$($nesting, 'BackendTraits')['$==='](converter) : $b)) ? converter['$supports_templates?']() : $a))) {\n              return $$($nesting, 'CompositeConverter').$new(backend, $$($nesting, 'TemplateConverter').$new(backend, template_dirs, opts), converter, $hash2([\"backend_traits_source\"], {\"backend_traits_source\": converter}))\n            } else {\n              return converter\n            };\n          } else if ($truthy((template_dirs = opts['$[]'](\"template_dirs\")))) {\n            if ($truthy(($truthy($a = (delegate_backend = opts['$[]'](\"delegate_backend\"))) ? (converter = self.$for(delegate_backend)) : $a))) {\n              \n              if ($truthy($$$('::', 'Class')['$==='](converter))) {\n                converter = converter.$new(delegate_backend, opts)};\n              return $$($nesting, 'CompositeConverter').$new(backend, $$($nesting, 'TemplateConverter').$new(backend, template_dirs, opts), converter, $hash2([\"backend_traits_source\"], {\"backend_traits_source\": converter}));\n            } else {\n              return $$($nesting, 'TemplateConverter').$new(backend, template_dirs, opts)\n            }\n          } else {\n            return nil\n          };\n        }, $Factory_create$22.$$arity = -2);\n        \n        Opal.def(self, '$converters', $Factory_converters$23 = function $$converters() {\n          var self = this;\n\n          return self.$registry().$merge()\n        }, $Factory_converters$23.$$arity = 0);\n        self.$private();\n        \n        Opal.def(self, '$registry', $Factory_registry$24 = function $$registry() {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Factory')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"registry\") + \" method\")\n        }, $Factory_registry$24.$$arity = 0);\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'CustomFactory');\n\n        var $nesting = [self].concat($parent_nesting), $CustomFactory_initialize$25, $CustomFactory_unregister_all$26;\n\n        \n        self.$include($$($nesting, 'Factory'));\n        \n        Opal.def(self, '$initialize', $CustomFactory_initialize$25 = function $$initialize(seed_registry) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (seed_registry == null) {\n            seed_registry = nil;\n          };\n          if ($truthy(seed_registry)) {\n            \n            \n            $writer = [seed_registry.$delete(\"*\")];\n            $send(seed_registry, 'default=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return (self.registry = seed_registry);\n          } else {\n            return (self.registry = $hash2([], {}))\n          };\n        }, $CustomFactory_initialize$25.$$arity = -1);\n        \n        Opal.def(self, '$unregister_all', $CustomFactory_unregister_all$26 = function $$unregister_all() {\n          var self = this, $writer = nil;\n\n          \n          $writer = [nil];\n          $send(self.$registry().$clear(), 'default=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        }, $CustomFactory_unregister_all$26.$$arity = 0);\n        self.$private();\n        return self.$attr_reader(\"registry\");\n      })($nesting[0], null, $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'DefaultFactory');\n\n        var $nesting = [self].concat($parent_nesting), $DefaultFactory_registry$27;\n\n        \n        self.$include($$($nesting, 'Factory'));\n        self.$private();\n        (Opal.class_variable_set($nesting[0], '@@registry', $hash2([], {})));\n        \n        Opal.def(self, '$registry', $DefaultFactory_registry$27 = function $$registry() {\n          var $a, self = this;\n\n          return (($a = $nesting[0].$$cvars['@@registry']) == null ? nil : $a)\n        }, $DefaultFactory_registry$27.$$arity = 0);\n        if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        } else {\n          nil\n        };\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'DefaultFactoryProxy');\n\n        var $nesting = [self].concat($parent_nesting);\n\n        \n        self.$include($$($nesting, 'DefaultFactory'));\n        if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n          return nil\n        } else {\n          return nil\n        };\n      })($nesting[0], $$($nesting, 'CustomFactory'), $nesting);\n      self.$private_class_method(($truthy($a = (Opal.defs(self, '$included', $Converter_included$28 = function $$included(into) {\n        var self = this;\n\n        \n        into.$send(\"include\", $$($nesting, 'BackendTraits'));\n        return into.$extend($$($nesting, 'Config'));\n      }, $Converter_included$28.$$arity = 1), nil) && 'included') ? $a : \"included\"));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Base');\n\n        var $nesting = [self].concat($parent_nesting), $Base_convert$29, $Base_handles$ques$30, $Base_content_only$31, $Base_skip$32;\n\n        self.$$prototype.backend = nil;\n        \n        self.$include($$($nesting, 'Converter'), $$($nesting, 'Logging'));\n        \n        Opal.def(self, '$convert', $Base_convert$29 = function $$convert(node, transform, opts) {\n          var $a, $b, self = this, ex = nil;\n          if ($gvars[\"!\"] == null) $gvars[\"!\"] = nil;\n\n          \n          \n          if (transform == null) {\n            transform = node.$node_name();\n          };\n          \n          if (opts == null) {\n            opts = nil;\n          };\n          try {\n            if ($truthy(opts)) {\n              \n              return self.$send($rb_plus(\"convert_\", transform), node, opts);\n            } else {\n              \n              return self.$send($rb_plus(\"convert_\", transform), node);\n            }\n          } catch ($err) {\n            if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n              try {\n                \n                if ($truthy(($truthy($a = ($truthy($b = $$$('::', 'NoMethodError')['$===']((ex = $gvars[\"!\"]))) ? ex.$receiver()['$=='](self) : $b)) ? ex.$name().$to_s()['$=='](transform) : $a))) {\n                } else {\n                  self.$raise()\n                };\n                self.$logger().$warn(\"\" + \"missing convert handler for \" + (ex.$name()) + \" node in \" + (self.backend) + \" backend (\" + (self.$class()) + \")\");\n                return nil;\n              } finally { Opal.pop_exception() }\n            } else { throw $err; }\n          };\n        }, $Base_convert$29.$$arity = -2);\n        \n        Opal.def(self, '$handles?', $Base_handles$ques$30 = function(transform) {\n          var self = this;\n\n          return self['$respond_to?'](\"\" + \"convert_\" + (transform))\n        }, $Base_handles$ques$30.$$arity = 1);\n        \n        Opal.def(self, '$content_only', $Base_content_only$31 = function $$content_only(node) {\n          var self = this;\n\n          return node.$content()\n        }, $Base_content_only$31.$$arity = 1);\n        return (Opal.def(self, '$skip', $Base_skip$32 = function $$skip(node) {\n          var self = this;\n\n          return nil\n        }, $Base_skip$32.$$arity = 1), nil) && 'skip';\n      })($nesting[0], null, $nesting);\n      self.$extend($$($nesting, 'DefaultFactory'));\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/document\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2, $gvars = Opal.gvars, $hash = Opal.hash;\n\n  Opal.add_stubs(['$new', '$attr_reader', '$nil?', '$<<', '$[]', '$[]=', '$-', '$include?', '$strip', '$squeeze', '$gsub', '$empty?', '$!', '$rpartition', '$attr_accessor', '$delete', '$base_dir', '$options', '$merge', '$catalog', '$attributes', '$safe', '$compat_mode', '$outfilesuffix', '$sourcemap', '$path_resolver', '$converter', '$extensions', '$syntax_highlighter', '$each', '$end_with?', '$start_with?', '$slice', '$length', '$chop', '$==', '$downcase', '$extname', '$===', '$value_for_name', '$key?', '$freeze', '$attribute_undefined', '$attribute_missing', '$name_for_value', '$expand_path', '$pwd', '$>=', '$+', '$abs', '$to_i', '$delete_if', '$update_doctype_attributes', '$cursor', '$parse', '$restore_attributes', '$update_backend_attributes', '$fetch', '$fill_datetime_attributes', '$activate', '$create', '$to_proc', '$groups', '$preprocessors?', '$preprocessors', '$process_method', '$tree_processors?', '$tree_processors', '$!=', '$counter', '$nil_or_empty?', '$nextval', '$to_s', '$value', '$save_to', '$register', '$tap', '$xreftext', '$source', '$source_lines', '$doctitle', '$sectname=', '$title=', '$first_section', '$title', '$reftext', '$>', '$<', '$find', '$context', '$assign_numeral', '$clear_playback_attributes', '$save_attributes', '$name', '$negate', '$rewind', '$replace', '$attribute_locked?', '$apply_attribute_value_subs', '$delete?', '$start', '$doctype', '$content_model', '$warn', '$logger', '$content', '$convert', '$postprocessors?', '$postprocessors', '$record', '$write', '$respond_to?', '$chomp', '$class', '$write_alternate_pages', '$map', '$split', '$resolve_docinfo_subs', '$&', '$normalize_system_path', '$read_asset', '$apply_subs', '$docinfo_processors?', '$join', '$concat', '$compact', '$docinfo_processors', '$object_id', '$inspect', '$size', '$private', '$=~', '$resolve_pass_subs', '$apply_header_subs', '$limit_bytesize', '$bytesize', '$valid_encoding?', '$byteslice', '$resolve_subs', '$utc', '$at', '$Integer', '$now', '$index', '$strftime', '$year', '$utc_offset', '$partition', '$create_converter', '$basebackend', '$filetype', '$htmlsyntax', '$derive_backend_traits', '$raise']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Document');\n\n      var $nesting = [self].concat($parent_nesting), $Document$1, $Document_initialize$8, $Document_parse$11, $Document_parsed$ques$14, $Document_counter$15, $Document_increment_and_store_counter$16, $Document_register$17, $Document_resolve_id$18, $Document_footnotes$ques$23, $Document_footnotes$24, $Document_callouts$25, $Document_nested$ques$26, $Document_embedded$ques$27, $Document_extensions$ques$28, $Document_source$29, $Document_source_lines$30, $Document_basebackend$ques$31, $Document_title$32, $Document_title$eq$33, $Document_doctitle$34, $Document_xreftext$35, $Document_author$36, $Document_authors$37, $Document_revdate$38, $Document_notitle$39, $Document_noheader$40, $Document_nofooter$41, $Document_first_section$42, $Document_header$ques$44, $Document_$lt$lt$45, $Document_finalize_header$46, $Document_playback_attributes$47, $Document_restore_attributes$49, $Document_set_attribute$50, $Document_delete_attribute$51, $Document_attribute_locked$ques$52, $Document_set_header_attribute$53, $Document_convert$54, $Document_write$56, $Document_content$57, $Document_docinfo$58, $Document_docinfo_processors$ques$61, $Document_to_s$62, $Document_apply_attribute_value_subs$63, $Document_limit_bytesize$64, $Document_resolve_docinfo_subs$65, $Document_create_converter$66, $Document_clear_playback_attributes$67, $Document_save_attributes$68, $Document_fill_datetime_attributes$70, $Document_update_backend_attributes$71, $Document_update_doctype_attributes$72;\n\n      self.$$prototype.attributes = self.$$prototype.safe = self.$$prototype.sourcemap = self.$$prototype.reader = self.$$prototype.base_dir = self.$$prototype.parsed = self.$$prototype.parent_document = self.$$prototype.extensions = self.$$prototype.options = self.$$prototype.counters = self.$$prototype.catalog = self.$$prototype.reftexts = self.$$prototype.header = self.$$prototype.blocks = self.$$prototype.header_attributes = self.$$prototype.attributes_modified = self.$$prototype.backend = self.$$prototype.attribute_overrides = self.$$prototype.timings = self.$$prototype.converter = self.$$prototype.outfilesuffix = self.$$prototype.docinfo_processor_extensions = self.$$prototype.document = self.$$prototype.max_attribute_value_size = self.$$prototype.id = self.$$prototype.doctype = nil;\n      \n      Opal.const_set($nesting[0], 'ImageReference', $send($$$('::', 'Struct'), 'new', [\"target\", \"imagesdir\"], ($Document$1 = function(){var self = $Document$1.$$s || this;\n\n      return Opal.alias(self, \"to_s\", \"target\")}, $Document$1.$$s = self, $Document$1.$$arity = 0, $Document$1)));\n      Opal.const_set($nesting[0], 'Footnote', $$$('::', 'Struct').$new(\"index\", \"id\", \"text\"));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'AttributeEntry');\n\n        var $nesting = [self].concat($parent_nesting), $AttributeEntry_initialize$2, $AttributeEntry_save_to$3;\n\n        \n        self.$attr_reader(\"name\", \"value\", \"negate\");\n        \n        Opal.def(self, '$initialize', $AttributeEntry_initialize$2 = function $$initialize(name, value, negate) {\n          var self = this;\n\n          \n          \n          if (negate == null) {\n            negate = nil;\n          };\n          self.name = name;\n          self.value = value;\n          return (self.negate = (function() {if ($truthy(negate['$nil?']())) {\n            return value['$nil?']()\n          } else {\n            return negate\n          }; return nil; })());\n        }, $AttributeEntry_initialize$2.$$arity = -3);\n        return (Opal.def(self, '$save_to', $AttributeEntry_save_to$3 = function $$save_to(block_attributes) {\n          var $a, self = this, $writer = nil;\n\n          \n          ($truthy($a = block_attributes['$[]'](\"attribute_entries\")) ? $a : (($writer = [\"attribute_entries\", []]), $send(block_attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$<<'](self);\n          return self;\n        }, $AttributeEntry_save_to$3.$$arity = 1), nil) && 'save_to';\n      })($nesting[0], null, $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Title');\n\n        var $nesting = [self].concat($parent_nesting), $Title_initialize$4, $Title_sanitized$ques$5, $Title_subtitle$ques$6, $Title_to_s$7;\n\n        self.$$prototype.sanitized = self.$$prototype.subtitle = self.$$prototype.combined = nil;\n        \n        self.$attr_reader(\"main\");\n        Opal.alias(self, \"title\", \"main\");\n        self.$attr_reader(\"subtitle\");\n        self.$attr_reader(\"combined\");\n        \n        Opal.def(self, '$initialize', $Title_initialize$4 = function $$initialize(val, opts) {\n          var $a, $b, self = this, sep = nil, _ = nil;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy(($truthy($a = (self.sanitized = opts['$[]'](\"sanitize\"))) ? val['$include?'](\"<\") : $a))) {\n            val = val.$gsub($$($nesting, 'XmlSanitizeRx'), \"\").$squeeze(\" \").$strip()};\n          if ($truthy(($truthy($a = (sep = ($truthy($b = opts['$[]'](\"separator\")) ? $b : \":\"))['$empty?']()) ? $a : val['$include?']((sep = \"\" + (sep) + \" \"))['$!']()))) {\n            \n            self.main = val;\n            self.subtitle = nil;\n          } else {\n            $b = val.$rpartition(sep), $a = Opal.to_ary($b), (self.main = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (self.subtitle = ($a[2] == null ? nil : $a[2])), $b\n          };\n          return (self.combined = val);\n        }, $Title_initialize$4.$$arity = -2);\n        \n        Opal.def(self, '$sanitized?', $Title_sanitized$ques$5 = function() {\n          var self = this;\n\n          return self.sanitized\n        }, $Title_sanitized$ques$5.$$arity = 0);\n        \n        Opal.def(self, '$subtitle?', $Title_subtitle$ques$6 = function() {\n          var self = this;\n\n          if ($truthy(self.subtitle)) {\n            return true\n          } else {\n            return false\n          }\n        }, $Title_subtitle$ques$6.$$arity = 0);\n        return (Opal.def(self, '$to_s', $Title_to_s$7 = function $$to_s() {\n          var self = this;\n\n          return self.combined\n        }, $Title_to_s$7.$$arity = 0), nil) && 'to_s';\n      })($nesting[0], null, $nesting);\n      Opal.const_set($nesting[0], 'Author', $$$('::', 'Struct').$new(\"name\", \"firstname\", \"middlename\", \"lastname\", \"initials\", \"email\"));\n      self.$attr_reader(\"safe\");\n      self.$attr_reader(\"compat_mode\");\n      self.$attr_reader(\"backend\");\n      self.$attr_reader(\"doctype\");\n      self.$attr_accessor(\"sourcemap\");\n      self.$attr_reader(\"catalog\");\n      Opal.alias(self, \"references\", \"catalog\");\n      self.$attr_reader(\"counters\");\n      self.$attr_reader(\"header\");\n      self.$attr_reader(\"base_dir\");\n      self.$attr_reader(\"options\");\n      self.$attr_reader(\"outfilesuffix\");\n      self.$attr_reader(\"parent_document\");\n      self.$attr_reader(\"reader\");\n      self.$attr_reader(\"path_resolver\");\n      self.$attr_reader(\"converter\");\n      self.$attr_reader(\"syntax_highlighter\");\n      self.$attr_reader(\"extensions\");\n      \n      Opal.def(self, '$initialize', $Document_initialize$8 = function $$initialize(data, options) {\n        var $a, $$9, $b, $c, $$10, $d, $e, $f, $g, $iter = $Document_initialize$8.$$p, $yield = $iter || nil, self = this, parent_doc = nil, $writer = nil, attr_overrides = nil, parent_doctype = nil, initialize_extensions = nil, to_file = nil, safe_mode = nil, input_mtime = nil, standalone = nil, attrs = nil, safe_mode_name = nil, base_dir_val = nil, backend_val = nil, doctype_val = nil, size = nil, initial_backend = nil, ext_registry = nil, ext_block = nil;\n\n        if ($iter) $Document_initialize$8.$$p = null;\n        \n        \n        if (data == null) {\n          data = nil;\n        };\n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Document_initialize$8, false), [self, \"document\"], null);\n        if ($truthy((parent_doc = options.$delete(\"parent\")))) {\n          \n          self.parent_document = parent_doc;\n          ($truthy($a = options['$[]'](\"base_dir\")) ? $a : (($writer = [\"base_dir\", parent_doc.$base_dir()]), $send(options, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          if ($truthy(parent_doc.$options()['$[]'](\"catalog_assets\"))) {\n            \n            $writer = [\"catalog_assets\", true];\n            $send(options, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          self.catalog = parent_doc.$catalog().$merge($hash2([\"footnotes\"], {\"footnotes\": []}));\n          self.attribute_overrides = (attr_overrides = parent_doc.$attributes().$merge());\n          parent_doctype = attr_overrides.$delete(\"doctype\");\n          attr_overrides.$delete(\"compat-mode\");\n          attr_overrides.$delete(\"toc\");\n          attr_overrides.$delete(\"toc-placement\");\n          attr_overrides.$delete(\"toc-position\");\n          self.safe = parent_doc.$safe();\n          if ($truthy((self.compat_mode = parent_doc.$compat_mode()))) {\n            \n            $writer = [\"compat-mode\", \"\"];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          self.outfilesuffix = parent_doc.$outfilesuffix();\n          self.sourcemap = parent_doc.$sourcemap();\n          self.timings = nil;\n          self.path_resolver = parent_doc.$path_resolver();\n          self.converter = parent_doc.$converter();\n          initialize_extensions = nil;\n          self.extensions = parent_doc.$extensions();\n          self.syntax_highlighter = parent_doc.$syntax_highlighter();\n        } else {\n          \n          self.parent_document = nil;\n          self.catalog = $hash2([\"ids\", \"refs\", \"footnotes\", \"links\", \"images\", \"callouts\", \"includes\"], {\"ids\": $hash2([], {}), \"refs\": $hash2([], {}), \"footnotes\": [], \"links\": [], \"images\": [], \"callouts\": $$($nesting, 'Callouts').$new(), \"includes\": $hash2([], {})});\n          self.attribute_overrides = (attr_overrides = $hash2([], {}));\n          $send(($truthy($a = options['$[]'](\"attributes\")) ? $a : $hash2([], {})), 'each', [], ($$9 = function(key, val){var self = $$9.$$s || this, $b;\n\n          \n            \n            if (key == null) {\n              key = nil;\n            };\n            \n            if (val == null) {\n              val = nil;\n            };\n            if ($truthy(key['$end_with?'](\"@\"))) {\n              if ($truthy(key['$start_with?'](\"!\"))) {\n                $b = [key.$slice(1, $rb_minus(key.$length(), 2)), false], (key = $b[0]), (val = $b[1]), $b\n              } else if ($truthy(key['$end_with?'](\"!@\"))) {\n                $b = [key.$slice(0, $rb_minus(key.$length(), 2)), false], (key = $b[0]), (val = $b[1]), $b\n              } else {\n                $b = [key.$chop(), \"\" + (val) + \"@\"], (key = $b[0]), (val = $b[1]), $b\n              }\n            } else if ($truthy(key['$start_with?'](\"!\"))) {\n              $b = [key.$slice(1, key.$length()), (function() {if (val['$=='](\"@\")) {\n                return false\n              } else {\n                return nil\n              }; return nil; })()], (key = $b[0]), (val = $b[1]), $b\n            } else if ($truthy(key['$end_with?'](\"!\"))) {\n              $b = [key.$chop(), (function() {if (val['$=='](\"@\")) {\n                return false\n              } else {\n                return nil\n              }; return nil; })()], (key = $b[0]), (val = $b[1]), $b};\n            \n            $writer = [key.$downcase(), val];\n            $send(attr_overrides, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$9.$$s = self, $$9.$$arity = 2, $$9));\n          if ($truthy((to_file = options['$[]'](\"to_file\")))) {\n            \n            $writer = [\"outfilesuffix\", $$($nesting, 'Helpers').$extname(to_file)];\n            $send(attr_overrides, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy((safe_mode = options['$[]'](\"safe\"))['$!']())) {\n            self.safe = $$$($$($nesting, 'SafeMode'), 'SECURE')\n          } else if ($truthy($$$('::', 'Integer')['$==='](safe_mode))) {\n            self.safe = safe_mode\n          } else {\n            self.safe = (function() { try {\n              \n              return $$($nesting, 'SafeMode').$value_for_name(safe_mode);\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  return $$$($$($nesting, 'SafeMode'), 'SECURE')\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            }})()\n          };\n          input_mtime = options.$delete(\"input_mtime\");\n          self.compat_mode = attr_overrides['$key?'](\"compat-mode\");\n          self.sourcemap = options['$[]'](\"sourcemap\");\n          self.timings = options.$delete(\"timings\");\n          self.path_resolver = $$($nesting, 'PathResolver').$new();\n          initialize_extensions = (function() {if ($truthy((($b = $$$('::', 'Asciidoctor', 'skip_raise')) && ($a = $$$($b, 'Extensions', 'skip_raise')) ? 'constant' : nil))) {\n            return true\n          } else {\n            return nil\n          }; return nil; })();\n          self.extensions = nil;\n          if ($truthy(($truthy($c = options['$key?'](\"header_footer\")) ? options['$key?'](\"standalone\")['$!']() : $c))) {\n            \n            $writer = [\"standalone\", options['$[]'](\"header_footer\")];\n            $send(options, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n        };\n        self.parsed = (self.reftexts = (self.header = (self.header_attributes = nil)));\n        self.counters = $hash2([], {});\n        self.attributes_modified = $$$('::', 'Set').$new();\n        self.docinfo_processor_extensions = $hash2([], {});\n        standalone = options['$[]'](\"standalone\");\n        (self.options = options).$freeze();\n        attrs = self.attributes;\n        \n        $writer = [\"sectids\", \"\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"toc-placement\", \"auto\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        if ($truthy(standalone)) {\n          \n          \n          $writer = [\"copycss\", \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"embedded\", nil];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n        } else {\n          \n          \n          $writer = [\"notitle\", \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"embedded\", \"\"];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n        };\n        \n        $writer = [\"stylesheet\", \"\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"webfonts\", \"\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"prewrap\", \"\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"attribute-undefined\", $$($nesting, 'Compliance').$attribute_undefined()];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"attribute-missing\", $$($nesting, 'Compliance').$attribute_missing()];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"iconfont-remote\", \"\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"caution-caption\", \"Caution\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"important-caption\", \"Important\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"note-caption\", \"Note\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"tip-caption\", \"Tip\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"warning-caption\", \"Warning\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"example-caption\", \"Example\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"figure-caption\", \"Figure\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"table-caption\", \"Table\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"toc-title\", \"Table of Contents\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"section-refsig\", \"Section\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"part-refsig\", \"Part\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"chapter-refsig\", \"Chapter\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"appendix-caption\", (($writer = [\"appendix-refsig\", \"Appendix\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"untitled-label\", \"Untitled\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"version-label\", \"Version\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"last-update-label\", \"Last updated\"];\n        $send(attrs, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"asciidoctor\", \"\"];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"asciidoctor-version\", $$$($$$('::', 'Asciidoctor'), 'VERSION')];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"safe-mode-name\", (safe_mode_name = $$($nesting, 'SafeMode').$name_for_value(self.safe))];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"\" + \"safe-mode-\" + (safe_mode_name), \"\"];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"safe-mode-level\", self.safe];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        ($truthy($c = attr_overrides['$[]'](\"max-include-depth\")) ? $c : (($writer = [\"max-include-depth\", 64]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($c = attr_overrides['$[]'](\"allow-uri-read\")) ? $c : (($writer = [\"allow-uri-read\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        \n        $writer = [\"user-home\", $$($nesting, 'USER_HOME')];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        if ($truthy(attr_overrides['$key?'](\"numbered\"))) {\n          \n          $writer = [\"sectnums\", attr_overrides.$delete(\"numbered\")];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy(attr_overrides['$key?'](\"hardbreaks\"))) {\n          \n          $writer = [\"hardbreaks-option\", attr_overrides.$delete(\"hardbreaks\")];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy((base_dir_val = options['$[]'](\"base_dir\")))) {\n          self.base_dir = (($writer = [\"docdir\", $$$('::', 'File').$expand_path(base_dir_val)]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n        } else if ($truthy(attr_overrides['$[]'](\"docdir\"))) {\n          self.base_dir = attr_overrides['$[]'](\"docdir\")\n        } else {\n          self.base_dir = (($writer = [\"docdir\", $$$('::', 'Dir').$pwd()]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n        };\n        if ($truthy((backend_val = options['$[]'](\"backend\")))) {\n          \n          $writer = [\"backend\", \"\" + (backend_val)];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy((doctype_val = options['$[]'](\"doctype\")))) {\n          \n          $writer = [\"doctype\", \"\" + (doctype_val)];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy($rb_ge(self.safe, $$$($$($nesting, 'SafeMode'), 'SERVER')))) {\n          \n          ($truthy($c = attr_overrides['$[]'](\"copycss\")) ? $c : (($writer = [\"copycss\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          ($truthy($c = attr_overrides['$[]'](\"source-highlighter\")) ? $c : (($writer = [\"source-highlighter\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          ($truthy($c = attr_overrides['$[]'](\"backend\")) ? $c : (($writer = [\"backend\", $$($nesting, 'DEFAULT_BACKEND')]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          if ($truthy(($truthy($c = parent_doc['$!']()) ? attr_overrides['$key?'](\"docfile\") : $c))) {\n            \n            $writer = [\"docfile\", attr_overrides['$[]'](\"docfile\")['$[]'](Opal.Range.$new($rb_plus(attr_overrides['$[]'](\"docdir\").$length(), 1), -1, false))];\n            $send(attr_overrides, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          \n          $writer = [\"docdir\", \"\"];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"user-home\", \".\"];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy($rb_ge(self.safe, $$$($$($nesting, 'SafeMode'), 'SECURE')))) {\n            \n            if ($truthy(attr_overrides['$key?'](\"max-attribute-value-size\"))) {\n            } else {\n              \n              $writer = [\"max-attribute-value-size\", 4096];\n              $send(attr_overrides, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            if ($truthy(attr_overrides['$key?'](\"linkcss\"))) {\n            } else {\n              \n              $writer = [\"linkcss\", \"\"];\n              $send(attr_overrides, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            ($truthy($c = attr_overrides['$[]'](\"icons\")) ? $c : (($writer = [\"icons\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));};};\n        self.max_attribute_value_size = (function() {if ($truthy((size = ($truthy($c = attr_overrides['$[]'](\"max-attribute-value-size\")) ? $c : (($writer = [\"max-attribute-value-size\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))))) {\n          return size.$to_i().$abs()\n        } else {\n          return nil\n        }; return nil; })();\n        $send(attr_overrides, 'delete_if', [], ($$10 = function(key, val){var self = $$10.$$s || this, $d, verdict = nil;\n\n        \n          \n          if (key == null) {\n            key = nil;\n          };\n          \n          if (val == null) {\n            val = nil;\n          };\n          if ($truthy(val)) {\n            \n            if ($truthy(($truthy($d = $$$('::', 'String')['$==='](val)) ? val['$end_with?'](\"@\") : $d))) {\n              $d = [val.$chop(), true], (val = $d[0]), (verdict = $d[1]), $d};\n            \n            $writer = [key, val];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            \n            attrs.$delete(key);\n            verdict = val['$=='](false);\n          };\n          return verdict;}, $$10.$$s = self, $$10.$$arity = 2, $$10));\n        if ($truthy(parent_doc)) {\n          \n          self.backend = attrs['$[]'](\"backend\");\n          if ((self.doctype = (($writer = [\"doctype\", parent_doctype]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$==']($$($nesting, 'DEFAULT_DOCTYPE'))) {\n          } else {\n            self.$update_doctype_attributes($$($nesting, 'DEFAULT_DOCTYPE'))\n          };\n          self.reader = $$($nesting, 'Reader').$new(data, options['$[]'](\"cursor\"));\n          if ($truthy(self.sourcemap)) {\n            self.source_location = self.reader.$cursor()};\n          $$($nesting, 'Parser').$parse(self.reader, self);\n          self.$restore_attributes();\n          return (self.parsed = true);\n        } else {\n          \n          self.backend = nil;\n          if ((initial_backend = ($truthy($c = attrs['$[]'](\"backend\")) ? $c : $$($nesting, 'DEFAULT_BACKEND')))['$=='](\"manpage\")) {\n            self.doctype = (($writer = [\"doctype\", (($writer = [\"doctype\", \"manpage\"]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n          } else {\n            self.doctype = ($truthy($c = attrs['$[]'](\"doctype\")) ? $c : (($writer = [\"doctype\", $$($nesting, 'DEFAULT_DOCTYPE')]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n          };\n          self.$update_backend_attributes(initial_backend, true);\n          ($truthy($c = attrs['$[]'](\"stylesdir\")) ? $c : (($writer = [\"stylesdir\", \".\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          ($truthy($c = attrs['$[]'](\"iconsdir\")) ? $c : (($writer = [\"iconsdir\", \"\" + (attrs.$fetch(\"imagesdir\", \"./images\")) + \"/icons\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          self.$fill_datetime_attributes(attrs, input_mtime);\n          if ($truthy(initialize_extensions)) {\n            if ($truthy((ext_registry = options['$[]'](\"extension_registry\")))) {\n              if ($truthy(($truthy($c = $$$($$($nesting, 'Extensions'), 'Registry')['$==='](ext_registry)) ? $c : ($truthy($d = (($g = $$$('::', 'AsciidoctorJ', 'skip_raise')) && ($f = $$$($g, 'Extensions', 'skip_raise')) && ($e = $$$($f, 'ExtensionRegistry', 'skip_raise')) ? 'constant' : nil)) ? $$$($$$($$$('::', 'AsciidoctorJ'), 'Extensions'), 'ExtensionRegistry')['$==='](ext_registry) : $d)))) {\n                self.extensions = ext_registry.$activate(self)}\n            } else if ($truthy($$$('::', 'Proc')['$===']((ext_block = options['$[]'](\"extensions\"))))) {\n              self.extensions = $send($$($nesting, 'Extensions'), 'create', [], ext_block.$to_proc()).$activate(self)\n            } else if ($truthy($$($nesting, 'Extensions').$groups()['$empty?']()['$!']())) {\n              self.extensions = $$$($$($nesting, 'Extensions'), 'Registry').$new().$activate(self)}};\n          self.reader = $$($nesting, 'PreprocessorReader').$new(self, data, $$$($$($nesting, 'Reader'), 'Cursor').$new(attrs['$[]'](\"docfile\"), self.base_dir), $hash2([\"normalize\"], {\"normalize\": true}));\n          if ($truthy(self.sourcemap)) {\n            return (self.source_location = self.reader.$cursor())\n          } else {\n            return nil\n          };\n        };\n      }, $Document_initialize$8.$$arity = -1);\n      \n      Opal.def(self, '$parse', $Document_parse$11 = function $$parse(data) {\n        var $a, $$12, $$13, self = this, doc = nil, exts = nil;\n\n        \n        \n        if (data == null) {\n          data = nil;\n        };\n        if ($truthy(self.parsed)) {\n          return self\n        } else {\n          \n          doc = self;\n          if ($truthy(data)) {\n            \n            self.reader = $$($nesting, 'PreprocessorReader').$new(doc, data, $$$($$($nesting, 'Reader'), 'Cursor').$new(self.attributes['$[]'](\"docfile\"), self.base_dir), $hash2([\"normalize\"], {\"normalize\": true}));\n            if ($truthy(self.sourcemap)) {\n              self.source_location = self.reader.$cursor()};};\n          if ($truthy(($truthy($a = (exts = (function() {if ($truthy(self.parent_document)) {\n            return nil\n          } else {\n            return self.extensions\n          }; return nil; })())) ? exts['$preprocessors?']() : $a))) {\n            $send(exts.$preprocessors(), 'each', [], ($$12 = function(ext){var self = $$12.$$s || this, $b;\n              if (self.reader == null) self.reader = nil;\n\n            \n              \n              if (ext == null) {\n                ext = nil;\n              };\n              return (self.reader = ($truthy($b = ext.$process_method()['$[]'](doc, self.reader)) ? $b : self.reader));}, $$12.$$s = self, $$12.$$arity = 1, $$12))};\n          $$($nesting, 'Parser').$parse(self.reader, doc, $hash2([\"header_only\"], {\"header_only\": self.options['$[]'](\"parse_header_only\")}));\n          self.$restore_attributes();\n          if ($truthy(($truthy($a = exts) ? exts['$tree_processors?']() : $a))) {\n            $send(exts.$tree_processors(), 'each', [], ($$13 = function(ext){var self = $$13.$$s || this, $b, $c, result = nil;\n\n            \n              \n              if (ext == null) {\n                ext = nil;\n              };\n              if ($truthy(($truthy($b = ($truthy($c = (result = ext.$process_method()['$[]'](doc))) ? $$($nesting, 'Document')['$==='](result) : $c)) ? result['$!='](doc) : $b))) {\n                return (doc = result)\n              } else {\n                return nil\n              };}, $$13.$$s = self, $$13.$$arity = 1, $$13))};\n          self.parsed = true;\n          return doc;\n        };\n      }, $Document_parse$11.$$arity = -1);\n      \n      Opal.def(self, '$parsed?', $Document_parsed$ques$14 = function() {\n        var self = this;\n\n        return self.parsed\n      }, $Document_parsed$ques$14.$$arity = 0);\n      \n      Opal.def(self, '$counter', $Document_counter$15 = function $$counter(name, seed) {\n        var $a, self = this, attr_seed = nil, attr_val = nil, $writer = nil;\n\n        \n        \n        if (seed == null) {\n          seed = nil;\n        };\n        if ($truthy(self.parent_document)) {\n          return self.parent_document.$counter(name, seed)};\n        if ($truthy(($truthy($a = (attr_seed = (attr_val = self.attributes['$[]'](name))['$nil_or_empty?']()['$!']())) ? self.counters['$key?'](name) : $a))) {\n          \n          $writer = [name, (($writer = [name, $$($nesting, 'Helpers').$nextval(attr_val)]), $send(self.counters, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        } else if ($truthy(seed)) {\n          \n          $writer = [name, (($writer = [name, (function() {if (seed['$=='](seed.$to_i().$to_s())) {\n            return seed.$to_i()\n          } else {\n            return seed\n          }; return nil; })()]), $send(self.counters, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        } else {\n          \n          $writer = [name, (($writer = [name, $$($nesting, 'Helpers').$nextval((function() {if ($truthy(attr_seed)) {\n            return attr_val\n          } else {\n            return 0\n          }; return nil; })())]), $send(self.counters, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n      }, $Document_counter$15.$$arity = -2);\n      \n      Opal.def(self, '$increment_and_store_counter', $Document_increment_and_store_counter$16 = function $$increment_and_store_counter(counter_name, block) {\n        var self = this;\n\n        return $$($nesting, 'AttributeEntry').$new(counter_name, self.$counter(counter_name)).$save_to(block.$attributes()).$value()\n      }, $Document_increment_and_store_counter$16.$$arity = 2);\n      Opal.alias(self, \"counter_increment\", \"increment_and_store_counter\");\n      \n      Opal.def(self, '$register', $Document_register$17 = function $$register(type, value) {\n        var $a, self = this, $case = nil, id = nil, $logical_op_recvr_tmp_1 = nil, $writer = nil, ref = nil;\n\n        return (function() {$case = type;\n        if (\"ids\"['$===']($case)) {return self.$register(\"refs\", [(id = value['$[]'](0)), $$($nesting, 'Inline').$new(self, \"anchor\", value['$[]'](1), $hash2([\"type\", \"id\"], {\"type\": \"ref\", \"id\": id}))])}\n        else if (\"refs\"['$===']($case)) {\n        \n        $logical_op_recvr_tmp_1 = self.catalog['$[]'](\"refs\");\n        ($truthy($a = $logical_op_recvr_tmp_1['$[]'](value['$[]'](0))) ? $a : (($writer = [value['$[]'](0), (ref = value['$[]'](1))]), $send($logical_op_recvr_tmp_1, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));;\n        return ref;}\n        else if (\"footnotes\"['$===']($case)) {return self.catalog['$[]'](type)['$<<'](value)}\n        else {if ($truthy(self.options['$[]'](\"catalog_assets\"))) {\n          return self.catalog['$[]'](type)['$<<']((function() {if (type['$=='](\"images\")) {\n            \n            return $$($nesting, 'ImageReference').$new(value, self.attributes['$[]'](\"imagesdir\"));\n          } else {\n            return value\n          }; return nil; })())\n        } else {\n          return nil\n        }}})()\n      }, $Document_register$17.$$arity = 2);\n      \n      Opal.def(self, '$resolve_id', $Document_resolve_id$18 = function $$resolve_id(text) {\n        var $$19, $$21, self = this, resolved_id = nil;\n\n        if ($truthy(self.reftexts)) {\n          return self.reftexts['$[]'](text)\n        } else if ($truthy(self.parsed)) {\n          return $send((self.reftexts = $hash2([], {})), 'tap', [], ($$19 = function(accum){var self = $$19.$$s || this, $$20;\n            if (self.catalog == null) self.catalog = nil;\n\n          \n            \n            if (accum == null) {\n              accum = nil;\n            };\n            return $send(self.catalog['$[]'](\"refs\"), 'each', [], ($$20 = function(id, ref){var self = $$20.$$s || this, $a, $writer = nil;\n\n            \n              \n              if (id == null) {\n                id = nil;\n              };\n              \n              if (ref == null) {\n                ref = nil;\n              };\n              return ($truthy($a = accum['$[]'](ref.$xreftext())) ? $a : (($writer = [ref.$xreftext(), id]), $send(accum, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));}, $$20.$$s = self, $$20.$$arity = 2, $$20));}, $$19.$$s = self, $$19.$$arity = 1, $$19))['$[]'](text)\n        } else {\n          \n          resolved_id = nil;\n          (function(){var $brk = Opal.new_brk(); try {return $send((self.reftexts = $hash2([], {})), 'tap', [], ($$21 = function(accum){var self = $$21.$$s || this, $$22;\n            if (self.catalog == null) self.catalog = nil;\n\n          \n            \n            if (accum == null) {\n              accum = nil;\n            };\n            return (function(){var $brk = Opal.new_brk(); try {return $send(self.catalog['$[]'](\"refs\"), 'each', [], ($$22 = function(id, ref){var self = $$22.$$s || this, $a, xreftext = nil, $writer = nil;\n\n            \n              \n              if (id == null) {\n                id = nil;\n              };\n              \n              if (ref == null) {\n                ref = nil;\n              };\n              if ((xreftext = ref.$xreftext())['$=='](text)) {\n                \n                \n                Opal.brk((resolved_id = id), $brk);\n              } else {\n                \n                return ($truthy($a = accum['$[]'](xreftext)) ? $a : (($writer = [xreftext, id]), $send(accum, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n              };}, $$22.$$s = self, $$22.$$brk = $brk, $$22.$$arity = 2, $$22))\n            } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();}, $$21.$$s = self, $$21.$$brk = $brk, $$21.$$arity = 1, $$21))\n          } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n          self.reftexts = nil;\n          return resolved_id;\n        }\n      }, $Document_resolve_id$18.$$arity = 1);\n      \n      Opal.def(self, '$footnotes?', $Document_footnotes$ques$23 = function() {\n        var self = this;\n\n        if ($truthy(self.catalog['$[]'](\"footnotes\")['$empty?']())) {\n          return false\n        } else {\n          return true\n        }\n      }, $Document_footnotes$ques$23.$$arity = 0);\n      \n      Opal.def(self, '$footnotes', $Document_footnotes$24 = function $$footnotes() {\n        var self = this;\n\n        return self.catalog['$[]'](\"footnotes\")\n      }, $Document_footnotes$24.$$arity = 0);\n      \n      Opal.def(self, '$callouts', $Document_callouts$25 = function $$callouts() {\n        var self = this;\n\n        return self.catalog['$[]'](\"callouts\")\n      }, $Document_callouts$25.$$arity = 0);\n      \n      Opal.def(self, '$nested?', $Document_nested$ques$26 = function() {\n        var self = this;\n\n        if ($truthy(self.parent_document)) {\n          return true\n        } else {\n          return false\n        }\n      }, $Document_nested$ques$26.$$arity = 0);\n      \n      Opal.def(self, '$embedded?', $Document_embedded$ques$27 = function() {\n        var self = this;\n\n        return self.attributes['$key?'](\"embedded\")\n      }, $Document_embedded$ques$27.$$arity = 0);\n      \n      Opal.def(self, '$extensions?', $Document_extensions$ques$28 = function() {\n        var self = this;\n\n        if ($truthy(self.extensions)) {\n          return true\n        } else {\n          return false\n        }\n      }, $Document_extensions$ques$28.$$arity = 0);\n      \n      Opal.def(self, '$source', $Document_source$29 = function $$source() {\n        var self = this;\n\n        if ($truthy(self.reader)) {\n          return self.reader.$source()\n        } else {\n          return nil\n        }\n      }, $Document_source$29.$$arity = 0);\n      \n      Opal.def(self, '$source_lines', $Document_source_lines$30 = function $$source_lines() {\n        var self = this;\n\n        if ($truthy(self.reader)) {\n          return self.reader.$source_lines()\n        } else {\n          return nil\n        }\n      }, $Document_source_lines$30.$$arity = 0);\n      \n      Opal.def(self, '$basebackend?', $Document_basebackend$ques$31 = function(base) {\n        var self = this;\n\n        return self.attributes['$[]'](\"basebackend\")['$=='](base)\n      }, $Document_basebackend$ques$31.$$arity = 1);\n      \n      Opal.def(self, '$title', $Document_title$32 = function $$title() {\n        var self = this;\n\n        return self.$doctitle()\n      }, $Document_title$32.$$arity = 0);\n      \n      Opal.def(self, '$title=', $Document_title$eq$33 = function(title) {\n        var self = this, sect = nil, $writer = nil;\n\n        \n        if ($truthy((sect = self.header))) {\n        } else {\n          \n          $writer = [\"header\"];\n          $send((sect = (self.header = $$($nesting, 'Section').$new(self, 0))), 'sectname=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        \n        $writer = [title];\n        $send(sect, 'title=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];;\n      }, $Document_title$eq$33.$$arity = 1);\n      \n      Opal.def(self, '$doctitle', $Document_doctitle$34 = function $$doctitle(opts) {\n        var $a, self = this, val = nil, sect = nil, separator = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy((val = self.attributes['$[]'](\"title\")))) {\n        } else if ($truthy((sect = self.$first_section()))) {\n          val = sect.$title()\n        } else if ($truthy(($truthy($a = opts['$[]'](\"use_fallback\")) ? (val = self.attributes['$[]'](\"untitled-label\")) : $a)['$!']())) {\n          return nil};\n        if ($truthy((separator = opts['$[]'](\"partition\")))) {\n          return $$($nesting, 'Title').$new(val, opts.$merge($hash2([\"separator\"], {\"separator\": (function() {if (separator['$=='](true)) {\n            return self.attributes['$[]'](\"title-separator\")\n          } else {\n            return separator\n          }; return nil; })()})))\n        } else if ($truthy(($truthy($a = opts['$[]'](\"sanitize\")) ? val['$include?'](\"<\") : $a))) {\n          return val.$gsub($$($nesting, 'XmlSanitizeRx'), \"\").$squeeze(\" \").$strip()\n        } else {\n          return val\n        };\n      }, $Document_doctitle$34.$$arity = -1);\n      Opal.alias(self, \"name\", \"doctitle\");\n      \n      Opal.def(self, '$xreftext', $Document_xreftext$35 = function $$xreftext(xrefstyle) {\n        var $a, self = this, val = nil;\n\n        \n        \n        if (xrefstyle == null) {\n          xrefstyle = nil;\n        };\n        if ($truthy(($truthy($a = (val = self.$reftext())) ? val['$empty?']()['$!']() : $a))) {\n          return val\n        } else {\n          return self.$title()\n        };\n      }, $Document_xreftext$35.$$arity = -1);\n      \n      Opal.def(self, '$author', $Document_author$36 = function $$author() {\n        var self = this;\n\n        return self.attributes['$[]'](\"author\")\n      }, $Document_author$36.$$arity = 0);\n      \n      Opal.def(self, '$authors', $Document_authors$37 = function $$authors() {\n        var $a, self = this, attrs = nil, authors = nil, num_authors = nil, idx = nil;\n\n        if ($truthy((attrs = self.attributes)['$key?'](\"author\"))) {\n          \n          authors = [$$($nesting, 'Author').$new(attrs['$[]'](\"author\"), attrs['$[]'](\"firstname\"), attrs['$[]'](\"middlename\"), attrs['$[]'](\"lastname\"), attrs['$[]'](\"authorinitials\"), attrs['$[]'](\"email\"))];\n          if ($truthy($rb_gt((num_authors = ($truthy($a = attrs['$[]'](\"authorcount\")) ? $a : 0)), 1))) {\n            \n            idx = 1;\n            while ($truthy($rb_lt(idx, num_authors))) {\n              \n              idx = $rb_plus(idx, 1);\n              authors['$<<']($$($nesting, 'Author').$new(attrs['$[]'](\"\" + \"author_\" + (idx)), attrs['$[]'](\"\" + \"firstname_\" + (idx)), attrs['$[]'](\"\" + \"middlename_\" + (idx)), attrs['$[]'](\"\" + \"lastname_\" + (idx)), attrs['$[]'](\"\" + \"authorinitials_\" + (idx)), attrs['$[]'](\"\" + \"email_\" + (idx))));\n            };};\n          return authors;\n        } else {\n          return []\n        }\n      }, $Document_authors$37.$$arity = 0);\n      \n      Opal.def(self, '$revdate', $Document_revdate$38 = function $$revdate() {\n        var self = this;\n\n        return self.attributes['$[]'](\"revdate\")\n      }, $Document_revdate$38.$$arity = 0);\n      \n      Opal.def(self, '$notitle', $Document_notitle$39 = function $$notitle() {\n        var $a, self = this;\n\n        return ($truthy($a = self.attributes['$key?'](\"showtitle\")['$!']()) ? self.attributes['$key?'](\"notitle\") : $a)\n      }, $Document_notitle$39.$$arity = 0);\n      \n      Opal.def(self, '$noheader', $Document_noheader$40 = function $$noheader() {\n        var self = this;\n\n        return self.attributes['$key?'](\"noheader\")\n      }, $Document_noheader$40.$$arity = 0);\n      \n      Opal.def(self, '$nofooter', $Document_nofooter$41 = function $$nofooter() {\n        var self = this;\n\n        return self.attributes['$key?'](\"nofooter\")\n      }, $Document_nofooter$41.$$arity = 0);\n      \n      Opal.def(self, '$first_section', $Document_first_section$42 = function $$first_section() {\n        var $a, $$43, self = this;\n\n        return ($truthy($a = self.header) ? $a : $send(self.blocks, 'find', [], ($$43 = function(e){var self = $$43.$$s || this;\n\n        \n          \n          if (e == null) {\n            e = nil;\n          };\n          return e.$context()['$=='](\"section\");}, $$43.$$s = self, $$43.$$arity = 1, $$43)))\n      }, $Document_first_section$42.$$arity = 0);\n      \n      Opal.def(self, '$header?', $Document_header$ques$44 = function() {\n        var self = this;\n\n        if ($truthy(self.header)) {\n          return true\n        } else {\n          return false\n        }\n      }, $Document_header$ques$44.$$arity = 0);\n      Opal.alias(self, \"has_header?\", \"header?\");\n      \n      Opal.def(self, '$<<', $Document_$lt$lt$45 = function(block) {\n        var $iter = $Document_$lt$lt$45.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Document_$lt$lt$45.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        if (block.$context()['$=='](\"section\")) {\n          self.$assign_numeral(block)};\n        return $send(self, Opal.find_super_dispatcher(self, '<<', $Document_$lt$lt$45, false), $zuper, $iter);\n      }, $Document_$lt$lt$45.$$arity = 1);\n      \n      Opal.def(self, '$finalize_header', $Document_finalize_header$46 = function $$finalize_header(unrooted_attributes, header_valid) {\n        var self = this, $writer = nil;\n\n        \n        \n        if (header_valid == null) {\n          header_valid = true;\n        };\n        self.$clear_playback_attributes(unrooted_attributes);\n        self.$save_attributes();\n        if ($truthy(header_valid)) {\n        } else {\n          \n          $writer = [\"invalid-header\", true];\n          $send(unrooted_attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        return unrooted_attributes;\n      }, $Document_finalize_header$46.$$arity = -2);\n      \n      Opal.def(self, '$playback_attributes', $Document_playback_attributes$47 = function $$playback_attributes(block_attributes) {\n        var $$48, self = this;\n\n        if ($truthy(block_attributes['$key?'](\"attribute_entries\"))) {\n          return $send(block_attributes['$[]'](\"attribute_entries\"), 'each', [], ($$48 = function(entry){var self = $$48.$$s || this, name = nil, $writer = nil;\n            if (self.attributes == null) self.attributes = nil;\n\n          \n            \n            if (entry == null) {\n              entry = nil;\n            };\n            name = entry.$name();\n            if ($truthy(entry.$negate())) {\n              \n              self.attributes.$delete(name);\n              if (name['$=='](\"compat-mode\")) {\n                return (self.compat_mode = false)\n              } else {\n                return nil\n              };\n            } else {\n              \n              \n              $writer = [name, entry.$value()];\n              $send(self.attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              if (name['$=='](\"compat-mode\")) {\n                return (self.compat_mode = true)\n              } else {\n                return nil\n              };\n            };}, $$48.$$s = self, $$48.$$arity = 1, $$48))\n        } else {\n          return nil\n        }\n      }, $Document_playback_attributes$47.$$arity = 1);\n      \n      Opal.def(self, '$restore_attributes', $Document_restore_attributes$49 = function $$restore_attributes() {\n        var self = this;\n\n        \n        if ($truthy(self.parent_document)) {\n        } else {\n          self.catalog['$[]'](\"callouts\").$rewind()\n        };\n        return self.attributes.$replace(self.header_attributes);\n      }, $Document_restore_attributes$49.$$arity = 0);\n      \n      Opal.def(self, '$set_attribute', $Document_set_attribute$50 = function $$set_attribute(name, value) {\n        var $a, self = this, $writer = nil, $case = nil;\n\n        \n        \n        if (value == null) {\n          value = \"\";\n        };\n        if ($truthy(self['$attribute_locked?'](name))) {\n          return nil\n        } else {\n          \n          if ($truthy(value['$empty?']())) {\n          } else {\n            value = self.$apply_attribute_value_subs(value)\n          };\n          if ($truthy(self.header_attributes)) {\n            \n            $writer = [name, value];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            \n            $case = name;\n            if (\"backend\"['$===']($case)) {self.$update_backend_attributes(value, ($truthy($a = self.attributes_modified['$delete?'](\"htmlsyntax\")) ? value['$=='](self.backend) : $a))}\n            else if (\"doctype\"['$===']($case)) {self.$update_doctype_attributes(value)}\n            else {\n            $writer = [name, value];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n            self.attributes_modified['$<<'](name);\n          };\n          return value;\n        };\n      }, $Document_set_attribute$50.$$arity = -2);\n      \n      Opal.def(self, '$delete_attribute', $Document_delete_attribute$51 = function $$delete_attribute(name) {\n        var self = this;\n\n        if ($truthy(self['$attribute_locked?'](name))) {\n          return false\n        } else {\n          \n          self.attributes.$delete(name);\n          self.attributes_modified['$<<'](name);\n          return true;\n        }\n      }, $Document_delete_attribute$51.$$arity = 1);\n      \n      Opal.def(self, '$attribute_locked?', $Document_attribute_locked$ques$52 = function(name) {\n        var self = this;\n\n        return self.attribute_overrides['$key?'](name)\n      }, $Document_attribute_locked$ques$52.$$arity = 1);\n      \n      Opal.def(self, '$set_header_attribute', $Document_set_header_attribute$53 = function $$set_header_attribute(name, value, overwrite) {\n        var $a, self = this, attrs = nil, $writer = nil;\n\n        \n        \n        if (value == null) {\n          value = \"\";\n        };\n        \n        if (overwrite == null) {\n          overwrite = true;\n        };\n        attrs = ($truthy($a = self.header_attributes) ? $a : self.attributes);\n        if ($truthy((($a = overwrite['$=='](false)) ? attrs['$key?'](name) : overwrite['$=='](false)))) {\n          return false\n        } else {\n          \n          \n          $writer = [name, value];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return true;\n        };\n      }, $Document_set_header_attribute$53.$$arity = -2);\n      \n      Opal.def(self, '$convert', $Document_convert$54 = function $$convert(opts) {\n        var $a, $$55, self = this, $writer = nil, block = nil, output = nil, transform = nil, exts = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy(self.timings)) {\n          self.timings.$start(\"convert\")};\n        if ($truthy(self.parsed)) {\n        } else {\n          self.$parse()\n        };\n        if ($truthy(($truthy($a = $rb_ge(self.safe, $$$($$($nesting, 'SafeMode'), 'SERVER'))) ? $a : opts['$empty?']()))) {\n        } else {\n          \n          if ($truthy((($writer = [\"outfile\", opts['$[]'](\"outfile\")]), $send(self.attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))) {\n          } else {\n            self.attributes.$delete(\"outfile\")\n          };\n          if ($truthy((($writer = [\"outdir\", opts['$[]'](\"outdir\")]), $send(self.attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))) {\n          } else {\n            self.attributes.$delete(\"outdir\")\n          };\n        };\n        if (self.$doctype()['$=='](\"inline\")) {\n          if ($truthy((block = ($truthy($a = self.blocks['$[]'](0)) ? $a : self.header)))) {\n            if ($truthy(($truthy($a = block.$content_model()['$=='](\"compound\")) ? $a : block.$content_model()['$=='](\"empty\")))) {\n              self.$logger().$warn(\"no inline candidate; use the inline doctype to convert a single paragragh, verbatim, or raw block\")\n            } else {\n              output = block.$content()\n            }}\n        } else {\n          \n          if ($truthy(opts['$key?'](\"standalone\"))) {\n            transform = (function() {if ($truthy(opts['$[]'](\"standalone\"))) {\n              return \"document\"\n            } else {\n              return \"embedded\"\n            }; return nil; })()\n          } else if ($truthy(opts['$key?'](\"header_footer\"))) {\n            transform = (function() {if ($truthy(opts['$[]'](\"header_footer\"))) {\n              return \"document\"\n            } else {\n              return \"embedded\"\n            }; return nil; })()\n          } else {\n            transform = (function() {if ($truthy(self.options['$[]'](\"standalone\"))) {\n              return \"document\"\n            } else {\n              return \"embedded\"\n            }; return nil; })()\n          };\n          output = self.converter.$convert(self, transform);\n        };\n        if ($truthy(self.parent_document)) {\n        } else if ($truthy(($truthy($a = (exts = self.extensions)) ? exts['$postprocessors?']() : $a))) {\n          $send(exts.$postprocessors(), 'each', [], ($$55 = function(ext){var self = $$55.$$s || this;\n\n          \n            \n            if (ext == null) {\n              ext = nil;\n            };\n            return (output = ext.$process_method()['$[]'](self, output));}, $$55.$$s = self, $$55.$$arity = 1, $$55))};\n        if ($truthy(self.timings)) {\n          self.timings.$record(\"convert\")};\n        return output;\n      }, $Document_convert$54.$$arity = -1);\n      Opal.alias(self, \"render\", \"convert\");\n      \n      Opal.def(self, '$write', $Document_write$56 = function $$write(output, target) {\n        var $a, $b, self = this;\n\n        \n        if ($truthy(self.timings)) {\n          self.timings.$start(\"write\")};\n        if ($truthy($$($nesting, 'Writer')['$==='](self.converter))) {\n          self.converter.$write(output, target)\n        } else {\n          \n          if ($truthy(target['$respond_to?'](\"write\"))) {\n            if ($truthy(output['$nil_or_empty?']())) {\n            } else {\n              \n              target.$write(output.$chomp());\n              target.$write($$($nesting, 'LF'));\n            }\n          } else {\n            $$$('::', 'File').$write(target, output, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}))\n          };\n          if ($truthy(($truthy($a = (($b = self.backend['$=='](\"manpage\")) ? $$$('::', 'String')['$==='](target) : self.backend['$=='](\"manpage\"))) ? self.converter.$class()['$respond_to?'](\"write_alternate_pages\") : $a))) {\n            self.converter.$class().$write_alternate_pages(self.attributes['$[]'](\"mannames\"), self.attributes['$[]'](\"manvolnum\"), target)};\n        };\n        if ($truthy(self.timings)) {\n          self.timings.$record(\"write\")};\n        return nil;\n      }, $Document_write$56.$$arity = 2);\n      \n      Opal.def(self, '$content', $Document_content$57 = function $$content() {\n        var $iter = $Document_content$57.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Document_content$57.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        self.attributes.$delete(\"title\");\n        return $send(self, Opal.find_super_dispatcher(self, 'content', $Document_content$57, false), $zuper, $iter);\n      }, $Document_content$57.$$arity = 0);\n      \n      Opal.def(self, '$docinfo', $Document_docinfo$58 = function $$docinfo(location, suffix) {\n        var $$59, $a, $$60, self = this, qualifier = nil, docinfo = nil, content = nil, docinfo_file = nil, docinfo_dir = nil, docinfo_subs = nil, docinfo_path = nil, shared_docinfo = nil, private_docinfo = nil;\n\n        \n        \n        if (location == null) {\n          location = \"head\";\n        };\n        \n        if (suffix == null) {\n          suffix = nil;\n        };\n        if ($truthy($rb_lt(self.$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')))) {\n          \n          if (location['$=='](\"head\")) {\n          } else {\n            qualifier = \"\" + \"-\" + (location)\n          };\n          if ($truthy(suffix)) {\n          } else {\n            suffix = self.outfilesuffix\n          };\n          if ($truthy((docinfo = self.attributes['$[]'](\"docinfo\"))['$nil_or_empty?']())) {\n            if ($truthy(self.attributes['$key?'](\"docinfo2\"))) {\n              docinfo = [\"private\", \"shared\"]\n            } else if ($truthy(self.attributes['$key?'](\"docinfo1\"))) {\n              docinfo = [\"shared\"]\n            } else {\n              docinfo = (function() {if ($truthy(docinfo)) {\n                return [\"private\"]\n              } else {\n                return nil\n              }; return nil; })()\n            }\n          } else {\n            docinfo = $send(docinfo.$split(\",\"), 'map', [], ($$59 = function(it){var self = $$59.$$s || this;\n\n            \n              \n              if (it == null) {\n                it = nil;\n              };\n              return it.$strip();}, $$59.$$s = self, $$59.$$arity = 1, $$59))\n          };\n          if ($truthy(docinfo)) {\n            \n            content = [];\n            $a = [\"\" + \"docinfo\" + (qualifier) + (suffix), self.attributes['$[]'](\"docinfodir\"), self.$resolve_docinfo_subs()], (docinfo_file = $a[0]), (docinfo_dir = $a[1]), (docinfo_subs = $a[2]), $a;\n            if ($truthy(docinfo['$&']([\"shared\", \"\" + \"shared-\" + (location)])['$empty?']())) {\n            } else {\n              \n              docinfo_path = self.$normalize_system_path(docinfo_file, docinfo_dir);\n              if ($truthy((shared_docinfo = self.$read_asset(docinfo_path, $hash2([\"normalize\"], {\"normalize\": true}))))) {\n                content['$<<'](self.$apply_subs(shared_docinfo, docinfo_subs))};\n            };\n            if ($truthy(($truthy($a = self.attributes['$[]'](\"docname\")['$nil_or_empty?']()) ? $a : docinfo['$&']([\"private\", \"\" + \"private-\" + (location)])['$empty?']()))) {\n            } else {\n              \n              docinfo_path = self.$normalize_system_path(\"\" + (self.attributes['$[]'](\"docname\")) + \"-\" + (docinfo_file), docinfo_dir);\n              if ($truthy((private_docinfo = self.$read_asset(docinfo_path, $hash2([\"normalize\"], {\"normalize\": true}))))) {\n                content['$<<'](self.$apply_subs(private_docinfo, docinfo_subs))};\n            };};};\n        if ($truthy(($truthy($a = self.extensions) ? self['$docinfo_processors?'](location) : $a))) {\n          return ($truthy($a = content) ? $a : []).$concat($send(self.docinfo_processor_extensions['$[]'](location), 'map', [], ($$60 = function(ext){var self = $$60.$$s || this;\n\n          \n            \n            if (ext == null) {\n              ext = nil;\n            };\n            return ext.$process_method()['$[]'](self);}, $$60.$$s = self, $$60.$$arity = 1, $$60)).$compact()).$join($$($nesting, 'LF'))\n        } else if ($truthy(content)) {\n          return content.$join($$($nesting, 'LF'))\n        } else {\n          return \"\"\n        };\n      }, $Document_docinfo$58.$$arity = -1);\n      \n      Opal.def(self, '$docinfo_processors?', $Document_docinfo_processors$ques$61 = function(location) {\n        var $a, self = this, $writer = nil;\n\n        \n        \n        if (location == null) {\n          location = \"head\";\n        };\n        if ($truthy(self.docinfo_processor_extensions['$key?'](location))) {\n          return self.docinfo_processor_extensions['$[]'](location)['$!='](false)\n        } else if ($truthy(($truthy($a = self.extensions) ? self.document.$extensions()['$docinfo_processors?'](location) : $a))) {\n          return (($writer = [location, self.document.$extensions().$docinfo_processors(location)]), $send(self.docinfo_processor_extensions, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])['$!']()['$!']()\n        } else {\n          \n          $writer = [location, false];\n          $send(self.docinfo_processor_extensions, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n      }, $Document_docinfo_processors$ques$61.$$arity = -1);\n      \n      Opal.def(self, '$to_s', $Document_to_s$62 = function $$to_s() {\n        var self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {doctype: \" + (self.$doctype().$inspect()) + \", doctitle: \" + ((function() {if ($truthy(self.header['$!='](nil))) {\n          return self.header.$title()\n        } else {\n          return nil\n        }; return nil; })().$inspect()) + \", blocks: \" + (self.blocks.$size()) + \"}>\"\n      }, $Document_to_s$62.$$arity = 0);\n      self.$private();\n      \n      Opal.def(self, '$apply_attribute_value_subs', $Document_apply_attribute_value_subs$63 = function $$apply_attribute_value_subs(value) {\n        var $a, self = this;\n\n        \n        if ($truthy($$($nesting, 'AttributeEntryPassMacroRx')['$=~'](value))) {\n          \n          value = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2));\n          if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)))) {\n            value = self.$apply_subs(value, self.$resolve_pass_subs((($a = $gvars['~']) === nil ? nil : $a['$[]'](1))))};\n        } else {\n          value = self.$apply_header_subs(value)\n        };\n        if ($truthy(self.max_attribute_value_size)) {\n          \n          return self.$limit_bytesize(value, self.max_attribute_value_size);\n        } else {\n          return value\n        };\n      }, $Document_apply_attribute_value_subs$63.$$arity = 1);\n      \n      Opal.def(self, '$limit_bytesize', $Document_limit_bytesize$64 = function $$limit_bytesize(str, max) {\n        var $a, self = this;\n\n        \n        if ($truthy($rb_gt(str.$bytesize(), max))) {\n          while (!($truthy((str = str.$byteslice(0, max))['$valid_encoding?']()))) {\n            max = $rb_minus(max, 1)\n          }};\n        return str;\n      }, $Document_limit_bytesize$64.$$arity = 2);\n      \n      Opal.def(self, '$resolve_docinfo_subs', $Document_resolve_docinfo_subs$65 = function $$resolve_docinfo_subs() {\n        var self = this;\n\n        if ($truthy(self.attributes['$key?'](\"docinfosubs\"))) {\n          \n          return self.$resolve_subs(self.attributes['$[]'](\"docinfosubs\"), \"block\", nil, \"docinfo\");\n        } else {\n          return [\"attributes\"]\n        }\n      }, $Document_resolve_docinfo_subs$65.$$arity = 0);\n      \n      Opal.def(self, '$create_converter', $Document_create_converter$66 = function $$create_converter(backend, delegate_backend) {\n        var $a, self = this, converter_opts = nil, template_dirs = nil, opts = nil, $writer = nil, converter = nil;\n\n        \n        converter_opts = $hash2([\"document\", \"htmlsyntax\"], {\"document\": self, \"htmlsyntax\": self.attributes['$[]'](\"htmlsyntax\")});\n        if ($truthy((template_dirs = ($truthy($a = (opts = self.options)['$[]'](\"template_dirs\")) ? $a : opts['$[]'](\"template_dir\"))))) {\n          \n          \n          $writer = [\"template_dirs\", [].concat(Opal.to_a(template_dirs))];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"template_cache\", opts.$fetch(\"template_cache\", true)];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"template_engine\", opts['$[]'](\"template_engine\")];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"template_engine_options\", opts['$[]'](\"template_engine_options\")];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"eruby\", opts['$[]'](\"eruby\")];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"safe\", self.safe];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(delegate_backend)) {\n            \n            $writer = [\"delegate_backend\", delegate_backend];\n            $send(converter_opts, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};};\n        if ($truthy((converter = opts['$[]'](\"converter\")))) {\n          return $$$($$($nesting, 'Converter'), 'CustomFactory').$new($hash(backend, converter)).$create(backend, converter_opts)\n        } else {\n          return opts.$fetch(\"converter_factory\", $$($nesting, 'Converter')).$create(backend, converter_opts)\n        };\n      }, $Document_create_converter$66.$$arity = 2);\n      \n      Opal.def(self, '$clear_playback_attributes', $Document_clear_playback_attributes$67 = function $$clear_playback_attributes(attributes) {\n        var self = this;\n\n        return attributes.$delete(\"attribute_entries\")\n      }, $Document_clear_playback_attributes$67.$$arity = 1);\n      \n      Opal.def(self, '$save_attributes', $Document_save_attributes$68 = function $$save_attributes() {\n        var $a, $$69, self = this, attrs = nil, doctitle_val = nil, $writer = nil, toc_val = nil, toc_position_val = nil, toc_placement_val = nil, default_toc_position = nil, default_toc_class = nil, position = nil, $case = nil, icons_val = nil, basebackend = nil, syntax_hl_name = nil, syntax_hl_factory = nil, syntax_hls = nil;\n\n        \n        if ($truthy(($truthy($a = (attrs = self.attributes)['$key?'](\"doctitle\")) ? $a : (doctitle_val = self.$doctitle())['$!']()))) {\n        } else {\n          \n          $writer = [\"doctitle\", doctitle_val];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        self.id = ($truthy($a = self.id) ? $a : attrs['$[]'](\"css-signature\"));\n        if ($truthy((toc_val = (function() {if ($truthy(attrs.$delete(\"toc2\"))) {\n          return \"left\"\n        } else {\n          return attrs['$[]'](\"toc\")\n        }; return nil; })()))) {\n          \n          toc_position_val = (function() {if ($truthy(($truthy($a = (toc_placement_val = attrs.$fetch(\"toc-placement\", \"macro\"))) ? toc_placement_val['$!='](\"auto\") : $a))) {\n            return toc_placement_val\n          } else {\n            return attrs['$[]'](\"toc-position\")\n          }; return nil; })();\n          if ($truthy(($truthy($a = toc_val['$empty?']()) ? toc_position_val['$nil_or_empty?']() : $a))) {\n          } else {\n            \n            default_toc_position = \"left\";\n            default_toc_class = \"toc2\";\n            position = (function() {if ($truthy(toc_position_val['$nil_or_empty?']())) {\n              \n              if ($truthy(toc_val['$empty?']())) {\n                return default_toc_position\n              } else {\n                return toc_val\n              };\n            } else {\n              return toc_position_val\n            }; return nil; })();\n            \n            $writer = [\"toc\", \"\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"toc-placement\", \"auto\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            $case = position;\n            if (\"left\"['$===']($case) || \"<\"['$===']($case) || \"&lt;\"['$===']($case)) {\n            $writer = [\"toc-position\", \"left\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else if (\"right\"['$===']($case) || \">\"['$===']($case) || \"&gt;\"['$===']($case)) {\n            $writer = [\"toc-position\", \"right\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else if (\"top\"['$===']($case) || \"^\"['$===']($case)) {\n            $writer = [\"toc-position\", \"top\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else if (\"bottom\"['$===']($case) || \"v\"['$===']($case)) {\n            $writer = [\"toc-position\", \"bottom\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else if (\"preamble\"['$===']($case) || \"macro\"['$===']($case)) {\n            \n            $writer = [\"toc-position\", \"content\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"toc-placement\", position];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            default_toc_class = nil;}\n            else {\n            attrs.$delete(\"toc-position\");\n            default_toc_class = nil;};\n            if ($truthy(default_toc_class)) {\n              ($truthy($a = attrs['$[]'](\"toc-class\")) ? $a : (($writer = [\"toc-class\", default_toc_class]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))};\n          };};\n        if ($truthy(($truthy($a = (icons_val = attrs['$[]'](\"icons\"))) ? attrs['$key?'](\"icontype\")['$!']() : $a))) {\n          $case = icons_val;\n          if (\"\"['$===']($case) || \"font\"['$===']($case)) {nil}\n          else {\n          \n          $writer = [\"icons\", \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if (icons_val['$=='](\"image\")) {\n          } else {\n            \n            $writer = [\"icontype\", icons_val];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };}};\n        if ($truthy((self.compat_mode = attrs['$key?'](\"compat-mode\")))) {\n          if ($truthy(attrs['$key?'](\"language\"))) {\n            \n            $writer = [\"source-language\", attrs['$[]'](\"language\")];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}};\n        if ($truthy(self.parent_document)) {\n        } else {\n          \n          if ((basebackend = attrs['$[]'](\"basebackend\"))['$=='](\"html\")) {\n            if ($truthy(($truthy($a = (syntax_hl_name = attrs['$[]'](\"source-highlighter\"))) ? attrs['$[]'](\"\" + (syntax_hl_name) + \"-unavailable\")['$!']() : $a))) {\n              if ($truthy((syntax_hl_factory = self.options['$[]'](\"syntax_highlighter_factory\")))) {\n                self.syntax_highlighter = syntax_hl_factory.$create(syntax_hl_name, self.backend, $hash2([\"document\"], {\"document\": self}))\n              } else if ($truthy((syntax_hls = self.options['$[]'](\"syntax_highlighters\")))) {\n                self.syntax_highlighter = $$$($$($nesting, 'SyntaxHighlighter'), 'DefaultFactoryProxy').$new(syntax_hls).$create(syntax_hl_name, self.backend, $hash2([\"document\"], {\"document\": self}))\n              } else {\n                self.syntax_highlighter = $$($nesting, 'SyntaxHighlighter').$create(syntax_hl_name, self.backend, $hash2([\"document\"], {\"document\": self}))\n              }}\n          } else if (basebackend['$=='](\"docbook\")) {\n            \n            if ($truthy(($truthy($a = self['$attribute_locked?'](\"toc\")) ? $a : self.attributes_modified['$include?'](\"toc\")))) {\n            } else {\n              \n              $writer = [\"toc\", \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            if ($truthy(($truthy($a = self['$attribute_locked?'](\"sectnums\")) ? $a : self.attributes_modified['$include?'](\"sectnums\")))) {\n            } else {\n              \n              $writer = [\"sectnums\", \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };};\n          self.outfilesuffix = attrs['$[]'](\"outfilesuffix\");\n          $send($$($nesting, 'FLEXIBLE_ATTRIBUTES'), 'each', [], ($$69 = function(name){var self = $$69.$$s || this, $b;\n            if (self.attribute_overrides == null) self.attribute_overrides = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            if ($truthy(($truthy($b = self.attribute_overrides['$key?'](name)) ? self.attribute_overrides['$[]'](name) : $b))) {\n              return self.attribute_overrides.$delete(name)\n            } else {\n              return nil\n            };}, $$69.$$s = self, $$69.$$arity = 1, $$69));\n        };\n        return (self.header_attributes = attrs.$merge());\n      }, $Document_save_attributes$68.$$arity = 0);\n      \n      Opal.def(self, '$fill_datetime_attributes', $Document_fill_datetime_attributes$70 = function $$fill_datetime_attributes(attrs, input_mtime) {\n        var $a, $b, self = this, now = nil, source_date_epoch = nil, localdate = nil, $writer = nil, localtime = nil, docdate = nil, doctime = nil;\n\n        \n        now = (function() {if ($truthy($$$('::', 'ENV')['$key?'](\"SOURCE_DATE_EPOCH\"))) {\n          \n          return (source_date_epoch = $$$('::', 'Time').$at(self.$Integer($$$('::', 'ENV')['$[]'](\"SOURCE_DATE_EPOCH\"))).$utc());\n        } else {\n          return $$$('::', 'Time').$now()\n        }; return nil; })();\n        if ($truthy((localdate = attrs['$[]'](\"localdate\")))) {\n          ($truthy($a = attrs['$[]'](\"localyear\")) ? $a : (($writer = [\"localyear\", (function() {if (localdate.$index(\"-\")['$=='](4)) {\n            \n            return localdate.$slice(0, 4);\n          } else {\n            return nil\n          }; return nil; })()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n        } else {\n          \n          localdate = (($writer = [\"localdate\", now.$strftime(\"%F\")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]);\n          ($truthy($a = attrs['$[]'](\"localyear\")) ? $a : (($writer = [\"localyear\", now.$year().$to_s()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        };\n        localtime = ($truthy($a = attrs['$[]'](\"localtime\")) ? $a : (($writer = [\"localtime\", now.$strftime(\"\" + \"%T \" + ((function() {if (now.$utc_offset()['$=='](0)) {\n          return \"UTC\"\n        } else {\n          return \"%z\"\n        }; return nil; })()))]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($a = attrs['$[]'](\"localdatetime\")) ? $a : (($writer = [\"localdatetime\", \"\" + (localdate) + \" \" + (localtime)]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        input_mtime = ($truthy($a = ($truthy($b = source_date_epoch) ? $b : input_mtime)) ? $a : now);\n        if ($truthy((docdate = attrs['$[]'](\"docdate\")))) {\n          ($truthy($a = attrs['$[]'](\"docyear\")) ? $a : (($writer = [\"docyear\", (function() {if (docdate.$index(\"-\")['$=='](4)) {\n            \n            return docdate.$slice(0, 4);\n          } else {\n            return nil\n          }; return nil; })()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n        } else {\n          \n          docdate = (($writer = [\"docdate\", input_mtime.$strftime(\"%F\")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]);\n          ($truthy($a = attrs['$[]'](\"docyear\")) ? $a : (($writer = [\"docyear\", input_mtime.$year().$to_s()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        };\n        doctime = ($truthy($a = attrs['$[]'](\"doctime\")) ? $a : (($writer = [\"doctime\", input_mtime.$strftime(\"\" + \"%T \" + ((function() {if (input_mtime.$utc_offset()['$=='](0)) {\n          return \"UTC\"\n        } else {\n          return \"%z\"\n        }; return nil; })()))]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($a = attrs['$[]'](\"docdatetime\")) ? $a : (($writer = [\"docdatetime\", \"\" + (docdate) + \" \" + (doctime)]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        return nil;\n      }, $Document_fill_datetime_attributes$70.$$arity = 2);\n      \n      Opal.def(self, '$update_backend_attributes', $Document_update_backend_attributes$71 = function $$update_backend_attributes(new_backend, init) {\n        var $a, $b, self = this, current_backend = nil, current_basebackend = nil, attrs = nil, current_doctype = nil, actual_backend = nil, _ = nil, $writer = nil, delegate_backend = nil, converter = nil, new_basebackend = nil, new_filetype = nil, htmlsyntax = nil, backend_traits = nil, current_filetype = nil, page_width = nil;\n\n        \n        \n        if (init == null) {\n          init = nil;\n        };\n        if ($truthy(($truthy($a = init) ? $a : new_backend['$!='](self.backend)))) {\n          \n          current_backend = self.backend;\n          current_basebackend = (attrs = self.attributes)['$[]'](\"basebackend\");\n          current_doctype = self.doctype;\n          if ($truthy(new_backend['$include?'](\":\"))) {\n            $b = new_backend.$partition(\":\"), $a = Opal.to_ary($b), (actual_backend = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (new_backend = ($a[2] == null ? nil : $a[2])), $b};\n          if ($truthy(new_backend['$start_with?'](\"xhtml\"))) {\n            \n            \n            $writer = [\"htmlsyntax\", \"xml\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            new_backend = new_backend.$slice(1, new_backend.$length());\n          } else if ($truthy(new_backend['$start_with?'](\"html\"))) {\n            ($truthy($a = attrs['$[]'](\"htmlsyntax\")) ? $a : (($writer = [\"htmlsyntax\", \"html\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))};\n          new_backend = ($truthy($a = $$($nesting, 'BACKEND_ALIASES')['$[]'](new_backend)) ? $a : new_backend);\n          if ($truthy(actual_backend)) {\n            $a = [actual_backend, new_backend], (new_backend = $a[0]), (delegate_backend = $a[1]), $a};\n          if ($truthy(current_doctype)) {\n            \n            if ($truthy(current_backend)) {\n              \n              attrs.$delete(\"\" + \"backend-\" + (current_backend));\n              attrs.$delete(\"\" + \"backend-\" + (current_backend) + \"-doctype-\" + (current_doctype));};\n            \n            $writer = [\"\" + \"backend-\" + (new_backend) + \"-doctype-\" + (current_doctype), \"\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"\" + \"doctype-\" + (current_doctype), \"\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else if ($truthy(current_backend)) {\n            attrs.$delete(\"\" + \"backend-\" + (current_backend))};\n          \n          $writer = [\"\" + \"backend-\" + (new_backend), \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          self.backend = (($writer = [\"backend\", new_backend]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]);\n          if ($truthy($$$($$($nesting, 'Converter'), 'BackendTraits')['$===']((converter = self.$create_converter(new_backend, delegate_backend))))) {\n            \n            new_basebackend = converter.$basebackend();\n            new_filetype = converter.$filetype();\n            if ($truthy((htmlsyntax = converter.$htmlsyntax()))) {\n              \n              $writer = [\"htmlsyntax\", htmlsyntax];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(init)) {\n              ($truthy($a = attrs['$[]'](\"outfilesuffix\")) ? $a : (($writer = [\"outfilesuffix\", converter.$outfilesuffix()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n            } else if ($truthy(self['$attribute_locked?'](\"outfilesuffix\"))) {\n            } else {\n              \n              $writer = [\"outfilesuffix\", converter.$outfilesuffix()];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n          } else if ($truthy(converter)) {\n            \n            backend_traits = $$($nesting, 'Converter').$derive_backend_traits(new_backend);\n            new_basebackend = backend_traits['$[]'](\"basebackend\");\n            new_filetype = backend_traits['$[]'](\"filetype\");\n            if ($truthy(init)) {\n              ($truthy($a = attrs['$[]'](\"outfilesuffix\")) ? $a : (($writer = [\"outfilesuffix\", backend_traits['$[]'](\"outfilesuffix\")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n            } else if ($truthy(self['$attribute_locked?'](\"outfilesuffix\"))) {\n            } else {\n              \n              $writer = [\"outfilesuffix\", backend_traits['$[]'](\"outfilesuffix\")];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n          } else {\n            self.$raise($$$('::', 'NotImplementedError'), \"\" + \"asciidoctor: FAILED: missing converter for backend '\" + (new_backend) + \"'. Processing aborted.\")\n          };\n          self.converter = converter;\n          if ($truthy((current_filetype = attrs['$[]'](\"filetype\")))) {\n            attrs.$delete(\"\" + \"filetype-\" + (current_filetype))};\n          \n          $writer = [\"filetype\", new_filetype];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"\" + \"filetype-\" + (new_filetype), \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy((page_width = $$($nesting, 'DEFAULT_PAGE_WIDTHS')['$[]'](new_basebackend)))) {\n            \n            $writer = [\"pagewidth\", page_width];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            attrs.$delete(\"pagewidth\")\n          };\n          if ($truthy(new_basebackend['$!='](current_basebackend))) {\n            \n            if ($truthy(current_doctype)) {\n              \n              if ($truthy(current_basebackend)) {\n                \n                attrs.$delete(\"\" + \"basebackend-\" + (current_basebackend));\n                attrs.$delete(\"\" + \"basebackend-\" + (current_basebackend) + \"-doctype-\" + (current_doctype));};\n              \n              $writer = [\"\" + \"basebackend-\" + (new_basebackend) + \"-doctype-\" + (current_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else if ($truthy(current_basebackend)) {\n              attrs.$delete(\"\" + \"basebackend-\" + (current_basebackend))};\n            \n            $writer = [\"\" + \"basebackend-\" + (new_basebackend), \"\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"basebackend\", new_basebackend];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;};\n          return new_backend;\n        } else {\n          return nil\n        };\n      }, $Document_update_backend_attributes$71.$$arity = -2);\n      return (Opal.def(self, '$update_doctype_attributes', $Document_update_doctype_attributes$72 = function $$update_doctype_attributes(new_doctype) {\n        var $a, self = this, attrs = nil, current_backend = nil, current_basebackend = nil, current_doctype = nil, $writer = nil;\n\n        if ($truthy(($truthy($a = new_doctype) ? new_doctype['$!='](self.doctype) : $a))) {\n          \n          $a = [self.backend, (attrs = self.attributes)['$[]'](\"basebackend\"), self.doctype], (current_backend = $a[0]), (current_basebackend = $a[1]), (current_doctype = $a[2]), $a;\n          if ($truthy(current_doctype)) {\n            \n            attrs.$delete(\"\" + \"doctype-\" + (current_doctype));\n            if ($truthy(current_backend)) {\n              \n              attrs.$delete(\"\" + \"backend-\" + (current_backend) + \"-doctype-\" + (current_doctype));\n              \n              $writer = [\"\" + \"backend-\" + (current_backend) + \"-doctype-\" + (new_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n            if ($truthy(current_basebackend)) {\n              \n              attrs.$delete(\"\" + \"basebackend-\" + (current_basebackend) + \"-doctype-\" + (current_doctype));\n              \n              $writer = [\"\" + \"basebackend-\" + (current_basebackend) + \"-doctype-\" + (new_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n          } else {\n            \n            if ($truthy(current_backend)) {\n              \n              $writer = [\"\" + \"backend-\" + (current_backend) + \"-doctype-\" + (new_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(current_basebackend)) {\n              \n              $writer = [\"\" + \"basebackend-\" + (current_basebackend) + \"-doctype-\" + (new_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n          };\n          \n          $writer = [\"\" + \"doctype-\" + (new_doctype), \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return (self.doctype = (($writer = [\"doctype\", new_doctype]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        } else {\n          return nil\n        }\n      }, $Document_update_doctype_attributes$72.$$arity = 1), nil) && 'update_doctype_attributes';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/inline\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_accessor', '$attr_reader', '$[]', '$convert', '$converter', '$attr', '$==', '$apply_reftext_subs', '$reftext']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Inline');\n\n      var $nesting = [self].concat($parent_nesting), $Inline_initialize$1, $Inline_block$ques$2, $Inline_inline$ques$3, $Inline_convert$4, $Inline_alt$5, $Inline_reftext$ques$6, $Inline_reftext$7, $Inline_xreftext$8;\n\n      self.$$prototype.text = self.$$prototype.type = nil;\n      \n      self.$attr_accessor(\"text\");\n      self.$attr_reader(\"type\");\n      self.$attr_accessor(\"target\");\n      \n      Opal.def(self, '$initialize', $Inline_initialize$1 = function $$initialize(parent, context, text, opts) {\n        var $iter = $Inline_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $Inline_initialize$1.$$p = null;\n        \n        \n        if (text == null) {\n          text = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Inline_initialize$1, false), [parent, context, opts], null);\n        self.node_name = \"\" + \"inline_\" + (context);\n        self.text = text;\n        self.id = opts['$[]'](\"id\");\n        self.type = opts['$[]'](\"type\");\n        return (self.target = opts['$[]'](\"target\"));\n      }, $Inline_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$block?', $Inline_block$ques$2 = function() {\n        var self = this;\n\n        return false\n      }, $Inline_block$ques$2.$$arity = 0);\n      \n      Opal.def(self, '$inline?', $Inline_inline$ques$3 = function() {\n        var self = this;\n\n        return true\n      }, $Inline_inline$ques$3.$$arity = 0);\n      \n      Opal.def(self, '$convert', $Inline_convert$4 = function $$convert() {\n        var self = this;\n\n        return self.$converter().$convert(self)\n      }, $Inline_convert$4.$$arity = 0);\n      Opal.alias(self, \"render\", \"convert\");\n      \n      Opal.def(self, '$alt', $Inline_alt$5 = function $$alt() {\n        var $a, self = this;\n\n        return ($truthy($a = self.$attr(\"alt\")) ? $a : \"\")\n      }, $Inline_alt$5.$$arity = 0);\n      \n      Opal.def(self, '$reftext?', $Inline_reftext$ques$6 = function() {\n        var $a, $b, self = this;\n\n        return ($truthy($a = self.text) ? ($truthy($b = self.type['$=='](\"ref\")) ? $b : self.type['$=='](\"bibref\")) : $a)\n      }, $Inline_reftext$ques$6.$$arity = 0);\n      \n      Opal.def(self, '$reftext', $Inline_reftext$7 = function $$reftext() {\n        var self = this, val = nil;\n\n        if ($truthy((val = self.text))) {\n          \n          return self.$apply_reftext_subs(val);\n        } else {\n          return nil\n        }\n      }, $Inline_reftext$7.$$arity = 0);\n      return (Opal.def(self, '$xreftext', $Inline_xreftext$8 = function $$xreftext(xrefstyle) {\n        var self = this;\n\n        \n        \n        if (xrefstyle == null) {\n          xrefstyle = nil;\n        };\n        return self.$reftext();\n      }, $Inline_xreftext$8.$$arity = -1), nil) && 'xreftext';\n    })($nesting[0], $$($nesting, 'AbstractNode'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/list\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$==', '$next_list', '$callouts', '$class', '$object_id', '$inspect', '$size', '$items', '$attr_accessor', '$level', '$drop', '$nil_or_empty?', '$apply_subs', '$empty?', '$===', '$[]', '$outline?', '$!', '$simple?', '$source', '$shift', '$context', '$parent']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'List');\n\n      var $nesting = [self].concat($parent_nesting), $List_initialize$1, $List_outline$ques$2, $List_convert$3, $List_to_s$4;\n\n      self.$$prototype.context = self.$$prototype.document = self.$$prototype.style = nil;\n      \n      Opal.alias(self, \"items\", \"blocks\");\n      Opal.alias(self, \"content\", \"blocks\");\n      Opal.alias(self, \"items?\", \"blocks?\");\n      \n      Opal.def(self, '$initialize', $List_initialize$1 = function $$initialize(parent, context, opts) {\n        var $iter = $List_initialize$1.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $List_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        return $send(self, Opal.find_super_dispatcher(self, 'initialize', $List_initialize$1, false), $zuper, $iter);\n      }, $List_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$outline?', $List_outline$ques$2 = function() {\n        var $a, self = this;\n\n        return ($truthy($a = self.context['$=='](\"ulist\")) ? $a : self.context['$=='](\"olist\"))\n      }, $List_outline$ques$2.$$arity = 0);\n      \n      Opal.def(self, '$convert', $List_convert$3 = function $$convert() {\n        var $iter = $List_convert$3.$$p, $yield = $iter || nil, self = this, result = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $List_convert$3.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        if (self.context['$=='](\"colist\")) {\n          \n          result = $send(self, Opal.find_super_dispatcher(self, 'convert', $List_convert$3, false), $zuper, $iter);\n          self.document.$callouts().$next_list();\n          return result;\n        } else {\n          return $send(self, Opal.find_super_dispatcher(self, 'convert', $List_convert$3, false), $zuper, $iter)\n        }\n      }, $List_convert$3.$$arity = 0);\n      Opal.alias(self, \"render\", \"convert\");\n      return (Opal.def(self, '$to_s', $List_to_s$4 = function $$to_s() {\n        var self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {context: \" + (self.context.$inspect()) + \", style: \" + (self.style.$inspect()) + \", items: \" + (self.$items().$size()) + \"}>\"\n      }, $List_to_s$4.$$arity = 0), nil) && 'to_s';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'ListItem');\n\n      var $nesting = [self].concat($parent_nesting), $ListItem_initialize$5, $ListItem_text$ques$6, $ListItem_text$7, $ListItem_text$eq$8, $ListItem_simple$ques$9, $ListItem_compound$ques$10, $ListItem_fold_first$11, $ListItem_to_s$12;\n\n      self.$$prototype.text = self.$$prototype.subs = self.$$prototype.blocks = nil;\n      \n      Opal.alias(self, \"list\", \"parent\");\n      self.$attr_accessor(\"marker\");\n      \n      Opal.def(self, '$initialize', $ListItem_initialize$5 = function $$initialize(parent, text) {\n        var $iter = $ListItem_initialize$5.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $ListItem_initialize$5.$$p = null;\n        \n        \n        if (text == null) {\n          text = nil;\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $ListItem_initialize$5, false), [parent, \"list_item\"], null);\n        self.text = text;\n        self.level = parent.$level();\n        return (self.subs = $$($nesting, 'NORMAL_SUBS').$drop(0));\n      }, $ListItem_initialize$5.$$arity = -2);\n      \n      Opal.def(self, '$text?', $ListItem_text$ques$6 = function() {\n        var self = this;\n\n        if ($truthy(self.text['$nil_or_empty?']())) {\n          return false\n        } else {\n          return true\n        }\n      }, $ListItem_text$ques$6.$$arity = 0);\n      \n      Opal.def(self, '$text', $ListItem_text$7 = function $$text() {\n        var $a, self = this;\n\n        return ($truthy($a = self.text) ? self.$apply_subs(self.text, self.subs) : $a)\n      }, $ListItem_text$7.$$arity = 0);\n      \n      Opal.def(self, '$text=', $ListItem_text$eq$8 = function(val) {\n        var self = this;\n\n        return (self.text = val)\n      }, $ListItem_text$eq$8.$$arity = 1);\n      \n      Opal.def(self, '$simple?', $ListItem_simple$ques$9 = function() {\n        var $a, $b, $c, self = this, blk = nil;\n\n        return ($truthy($a = self.blocks['$empty?']()) ? $a : ($truthy($b = (($c = self.blocks.$size()['$=='](1)) ? $$($nesting, 'List')['$===']((blk = self.blocks['$[]'](0))) : self.blocks.$size()['$=='](1))) ? blk['$outline?']() : $b))\n      }, $ListItem_simple$ques$9.$$arity = 0);\n      \n      Opal.def(self, '$compound?', $ListItem_compound$ques$10 = function() {\n        var self = this;\n\n        return self['$simple?']()['$!']()\n      }, $ListItem_compound$ques$10.$$arity = 0);\n      \n      Opal.def(self, '$fold_first', $ListItem_fold_first$11 = function $$fold_first() {\n        var self = this;\n\n        \n        self.text = (function() {if ($truthy(self.text['$nil_or_empty?']())) {\n          return self.blocks.$shift().$source()\n        } else {\n          return \"\" + (self.text) + ($$($nesting, 'LF')) + (self.blocks.$shift().$source())\n        }; return nil; })();\n        return nil;\n      }, $ListItem_fold_first$11.$$arity = 0);\n      return (Opal.def(self, '$to_s', $ListItem_to_s$12 = function $$to_s() {\n        var $a, self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {list_context: \" + (self.$parent().$context().$inspect()) + \", text: \" + (self.text.$inspect()) + \", blocks: \" + (($truthy($a = self.blocks) ? $a : []).$size()) + \"}>\"\n      }, $ListItem_to_s$12.$$arity = 0), nil) && 'to_s';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/parser\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$include', '$new', '$proc', '$start_with?', '$match?', '$is_delimited_block?', '$private_class_method', '$parse_document_header', '$[]', '$has_more_lines?', '$next_section', '$assign_numeral', '$<<', '$blocks', '$parse_block_metadata_lines', '$attributes', '$is_next_line_doctitle?', '$finalize_header', '$nil_or_empty?', '$title=', '$-', '$sourcemap', '$cursor', '$parse_section_title', '$id=', '$apply_header_subs', '$[]=', '$source_location=', '$header', '$attribute_locked?', '$id', '$clear', '$delete', '$instance_variable_get', '$parse_header_metadata', '$include?', '$==', '$!', '$register', '$doctype', '$parse_manpage_header', '$=~', '$downcase', '$sub_attributes', '$error', '$logger', '$message_with_context', '$cursor_at_line', '$backend', '$skip_blank_lines', '$save', '$update', '$is_next_line_section?', '$initialize_section', '$join', '$map', '$read_lines_until', '$lstrip', '$title', '$split', '$restore_save', '$discard_save', '$context', '$empty?', '$header?', '$!=', '$attr?', '$attr', '$key?', '$document', '$+', '$level', '$special', '$sectname', '$to_i', '$<', '$>', '$warn', '$next_block', '$blocks?', '$style', '$context=', '$style=', '$parent=', '$size', '$content_model', '$shift', '$unwrap_standalone_preamble', '$merge', '$fetch', '$parse_block_metadata_line', '$extensions', '$block_macros?', '$mark', '$read_line', '$terminator', '$to_s', '$masq', '$to_sym', '$registered_for_block?', '$debug?', '$debug', '$cursor_at_mark', '$strict_verbatim_paragraphs', '$unshift_line', '$markdown_syntax', '$keys', '$chr', '$uniform?', '$length', '$end_with?', '$===', '$parse_attributes', '$attribute_missing', '$tr', '$basename', '$assign_caption', '$registered_for_block_macro?', '$config', '$process_method', '$replace', '$parse_callout_list', '$callouts', '$parse_list', '$parse_description_list', '$underline_style_section_titles', '$is_section_title?', '$peek_line', '$atx_section_title?', '$generate_id', '$level=', '$read_paragraph_lines', '$adjust_indentation!', '$map!', '$slice', '$pop', '$build_block', '$apply_subs', '$chop', '$catalog_inline_anchors', '$rekey', '$index', '$strip', '$parse_table', '$each', '$raise', '$title?', '$update_attributes', '$commit_subs', '$sub?', '$catalog_callouts', '$source', '$remove_sub', '$block_terminates_paragraph', '$to_proc', '$nil?', '$lines', '$parse_blocks', '$parse_list_item', '$items', '$scan', '$gsub', '$count', '$advance', '$dup', '$match', '$callout_ids', '$next_list', '$catalog_inline_anchor', '$source_location', '$marker=', '$catalog_inline_biblio_anchor', '$set_option', '$text=', '$resolve_ordered_list_marker', '$read_lines_for_list_item', '$skip_line_comments', '$unshift_lines', '$fold_first', '$text?', '$is_sibling_list_item?', '$concat', '$find', '$casecmp', '$sectname=', '$special=', '$numbered=', '$numbered', '$lineno', '$peek_lines', '$setext_section_title?', '$abs', '$cursor_at_prev_line', '$process_attribute_entries', '$next_line_empty?', '$process_authors', '$rstrip', '$each_with_index', '$compact', '$squeeze', '$to_a', '$parse_style_attribute', '$process_attribute_entry', '$skip_comment_lines', '$store_attribute', '$sanitize_attribute_name', '$set_attribute', '$save_to', '$delete_attribute', '$ord', '$int_to_roman', '$resolve_list_marker', '$parse_colspecs', '$create_columns', '$format', '$starts_with_delimiter?', '$close_open_cell', '$parse_cellspec', '$delimiter', '$match_delimiter', '$pre_match', '$post_match', '$buffer_has_unclosed_quotes?', '$skip_past_delimiter', '$buffer', '$buffer=', '$skip_past_escaped_delimiter', '$keep_cell_open', '$push_cellspec', '$close_cell', '$cell_open?', '$columns', '$assign_column_widths', '$has_header_option=', '$partition_header_footer', '$upto', '$partition', '$shorthand_property_syntax', '$each_char', '$yield_buffered_attribute', '$any?', '$*', '$each_byte', '$%']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Parser');\n\n      var $nesting = [self].concat($parent_nesting), $Parser$1, $Parser$2, $Parser$3, $Parser_parse$4, $Parser_parse_document_header$5, $Parser_parse_manpage_header$6, $Parser_next_section$9, $Parser_next_block$10, $Parser_read_paragraph_lines$14, $Parser_is_delimited_block$ques$15, $Parser_build_block$16, $Parser_parse_blocks$17, $Parser_parse_list$18, $Parser_catalog_callouts$19, $Parser_catalog_inline_anchor$21, $Parser_catalog_inline_anchors$22, $Parser_catalog_inline_biblio_anchor$24, $Parser_parse_description_list$25, $Parser_parse_callout_list$26, $Parser_parse_list_item$27, $Parser_read_lines_for_list_item$28, $Parser_initialize_section$34, $Parser_is_next_line_section$ques$35, $Parser_is_next_line_doctitle$ques$36, $Parser_is_section_title$ques$37, $Parser_atx_section_title$ques$38, $Parser_setext_section_title$ques$39, $Parser_parse_section_title$40, $Parser_parse_header_metadata$41, $Parser_process_authors$46, $Parser_parse_block_metadata_lines$51, $Parser_parse_block_metadata_line$52, $Parser_process_attribute_entries$53, $Parser_process_attribute_entry$54, $Parser_store_attribute$55, $Parser_resolve_list_marker$56, $Parser_resolve_ordered_list_marker$57, $Parser_is_sibling_list_item$ques$59, $Parser_parse_table$60, $Parser_parse_colspecs$61, $Parser_parse_cellspec$65, $Parser_parse_style_attribute$66, $Parser_yield_buffered_attribute$69, $Parser_adjust_indentation$excl$70, $Parser_uniform$ques$79, $Parser_sanitize_attribute_name$80;\n\n      \n      self.$include($$($nesting, 'Logging'));\n      Opal.const_set($nesting[0], 'BlockMatchData', $$($nesting, 'Struct').$new(\"context\", \"masq\", \"tip\", \"terminator\"));\n      Opal.const_set($nesting[0], 'TAB', \"\\t\");\n      Opal.const_set($nesting[0], 'TabIndentRx', /^\\t+/);\n      Opal.const_set($nesting[0], 'StartOfBlockProc', $send(self, 'proc', [], ($Parser$1 = function(l){var self = $Parser$1.$$s || this, $a, $b;\n\n      \n        \n        if (l == null) {\n          l = nil;\n        };\n        return ($truthy($a = ($truthy($b = l['$start_with?'](\"[\")) ? $$($nesting, 'BlockAttributeLineRx')['$match?'](l) : $b)) ? $a : self['$is_delimited_block?'](l));}, $Parser$1.$$s = self, $Parser$1.$$arity = 1, $Parser$1)));\n      Opal.const_set($nesting[0], 'StartOfListProc', $send(self, 'proc', [], ($Parser$2 = function(l){var self = $Parser$2.$$s || this;\n\n      \n        \n        if (l == null) {\n          l = nil;\n        };\n        return $$($nesting, 'AnyListRx')['$match?'](l);}, $Parser$2.$$s = self, $Parser$2.$$arity = 1, $Parser$2)));\n      Opal.const_set($nesting[0], 'StartOfBlockOrListProc', $send(self, 'proc', [], ($Parser$3 = function(l){var self = $Parser$3.$$s || this, $a, $b, $c;\n\n      \n        \n        if (l == null) {\n          l = nil;\n        };\n        return ($truthy($a = ($truthy($b = self['$is_delimited_block?'](l)) ? $b : ($truthy($c = l['$start_with?'](\"[\")) ? $$($nesting, 'BlockAttributeLineRx')['$match?'](l) : $c))) ? $a : $$($nesting, 'AnyListRx')['$match?'](l));}, $Parser$3.$$s = self, $Parser$3.$$arity = 1, $Parser$3)));\n      Opal.const_set($nesting[0], 'NoOp', nil);\n      Opal.const_set($nesting[0], 'AuthorKeys', [\"author\", \"authorinitials\", \"firstname\", \"middlename\", \"lastname\", \"email\"]);\n      Opal.const_set($nesting[0], 'TableCellHorzAlignments', $hash2([\"<\", \">\", \"^\"], {\"<\": \"left\", \">\": \"right\", \"^\": \"center\"}));\n      Opal.const_set($nesting[0], 'TableCellVertAlignments', $hash2([\"<\", \">\", \"^\"], {\"<\": \"top\", \">\": \"bottom\", \"^\": \"middle\"}));\n      Opal.const_set($nesting[0], 'TableCellStyles', $hash2([\"d\", \"s\", \"e\", \"m\", \"h\", \"l\", \"a\"], {\"d\": \"none\", \"s\": \"strong\", \"e\": \"emphasis\", \"m\": \"monospaced\", \"h\": \"header\", \"l\": \"literal\", \"a\": \"asciidoc\"}));\n      self.$private_class_method(\"new\");\n      Opal.defs(self, '$parse', $Parser_parse$4 = function $$parse(reader, document, options) {\n        var $a, $b, $c, self = this, block_attributes = nil, new_section = nil;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        block_attributes = self.$parse_document_header(reader, document);\n        if ($truthy(options['$[]'](\"header_only\"))) {\n        } else {\n          while ($truthy(reader['$has_more_lines?']())) {\n            \n            $c = self.$next_section(reader, document, block_attributes), $b = Opal.to_ary($c), (new_section = ($b[0] == null ? nil : $b[0])), (block_attributes = ($b[1] == null ? nil : $b[1])), $c;\n            if ($truthy(new_section)) {\n              \n              document.$assign_numeral(new_section);\n              document.$blocks()['$<<'](new_section);};\n          }\n        };\n        return document;\n      }, $Parser_parse$4.$$arity = -3);\n      Opal.defs(self, '$parse_document_header', $Parser_parse_document_header$5 = function $$parse_document_header(reader, document) {\n        var $a, $b, self = this, block_attrs = nil, doc_attrs = nil, implicit_doctitle = nil, val = nil, $writer = nil, doctitle_attr_val = nil, source_location = nil, _ = nil, l0_section_title = nil, atx = nil, separator = nil, doc_id = nil, role = nil, reftext = nil, modified_attrs = nil;\n\n        \n        block_attrs = self.$parse_block_metadata_lines(reader, document);\n        doc_attrs = document.$attributes();\n        if ($truthy(($truthy($a = (implicit_doctitle = self['$is_next_line_doctitle?'](reader, block_attrs, doc_attrs['$[]'](\"leveloffset\")))) ? block_attrs['$[]'](\"title\") : $a))) {\n          return document.$finalize_header(block_attrs, false)};\n        if ($truthy((val = doc_attrs['$[]'](\"doctitle\"))['$nil_or_empty?']())) {\n        } else {\n          \n          $writer = [(doctitle_attr_val = val)];\n          $send(document, 'title=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        if ($truthy(implicit_doctitle)) {\n          \n          if ($truthy(document.$sourcemap())) {\n            source_location = reader.$cursor()};\n          $b = self.$parse_section_title(reader, document), $a = Opal.to_ary($b), document['$id='](($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (l0_section_title = ($a[2] == null ? nil : $a[2])), (_ = ($a[3] == null ? nil : $a[3])), (atx = ($a[4] == null ? nil : $a[4])), $b;\n          if ($truthy(doctitle_attr_val)) {\n            l0_section_title = nil\n          } else {\n            \n            \n            $writer = [l0_section_title];\n            $send(document, 'title=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"doctitle\", (doctitle_attr_val = document.$apply_header_subs(l0_section_title))];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          };\n          if ($truthy(source_location)) {\n            \n            $writer = [source_location];\n            $send(document.$header(), 'source_location=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy(($truthy($a = atx) ? $a : document['$attribute_locked?'](\"compat-mode\")))) {\n          } else {\n            \n            $writer = [\"compat-mode\", \"\"];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          if ($truthy((separator = block_attrs['$[]'](\"separator\")))) {\n            if ($truthy(document['$attribute_locked?'](\"title-separator\"))) {\n            } else {\n              \n              $writer = [\"title-separator\", separator];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            }};\n          if ($truthy((doc_id = block_attrs['$[]'](\"id\")))) {\n            \n            $writer = [doc_id];\n            $send(document, 'id=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            doc_id = document.$id()\n          };\n          if ($truthy((role = block_attrs['$[]'](\"role\")))) {\n            \n            $writer = [\"role\", role];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy((reftext = block_attrs['$[]'](\"reftext\")))) {\n            \n            $writer = [\"reftext\", reftext];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          block_attrs.$clear();\n          (modified_attrs = document.$instance_variable_get(\"@attributes_modified\")).$delete(\"doctitle\");\n          self.$parse_header_metadata(reader, document);\n          if ($truthy(modified_attrs['$include?'](\"doctitle\"))) {\n            if ($truthy(($truthy($a = (val = doc_attrs['$[]'](\"doctitle\"))['$nil_or_empty?']()) ? $a : val['$=='](doctitle_attr_val)))) {\n              \n              $writer = [\"doctitle\", doctitle_attr_val];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              \n              $writer = [val];\n              $send(document, 'title=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            }\n          } else if ($truthy(l0_section_title['$!']())) {\n            modified_attrs['$<<'](\"doctitle\")};\n          if ($truthy(doc_id)) {\n            document.$register(\"refs\", [doc_id, document])};};\n        if (document.$doctype()['$=='](\"manpage\")) {\n          self.$parse_manpage_header(reader, document, block_attrs)};\n        return document.$finalize_header(block_attrs);\n      }, $Parser_parse_document_header$5.$$arity = 2);\n      Opal.defs(self, '$parse_manpage_header', $Parser_parse_manpage_header$6 = function $$parse_manpage_header(reader, document, block_attributes) {\n        var $a, $b, $$7, $$8, self = this, doc_attrs = nil, $writer = nil, manvolnum = nil, mantitle = nil, manname = nil, name_section_level = nil, name_section = nil, name_section_buffer = nil, mannames = nil, error_msg = nil;\n\n        \n        if ($truthy($$($nesting, 'ManpageTitleVolnumRx')['$=~']((doc_attrs = document.$attributes())['$[]'](\"doctitle\")))) {\n          \n          \n          $writer = [\"manvolnum\", (manvolnum = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)))];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"mantitle\", (function() {if ($truthy((mantitle = (($a = $gvars['~']) === nil ? nil : $a['$[]'](1)))['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n            \n            return document.$sub_attributes(mantitle);\n          } else {\n            return mantitle\n          }; return nil; })().$downcase()];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n        } else {\n          \n          self.$logger().$error(self.$message_with_context(\"non-conforming manpage title\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_line(1)})));\n          \n          $writer = [\"mantitle\", ($truthy($a = ($truthy($b = doc_attrs['$[]'](\"doctitle\")) ? $b : doc_attrs['$[]'](\"docname\"))) ? $a : \"command\")];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"manvolnum\", (manvolnum = \"1\")];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n        };\n        if ($truthy(($truthy($a = (manname = doc_attrs['$[]'](\"manname\"))) ? doc_attrs['$[]'](\"manpurpose\") : $a))) {\n          \n          ($truthy($a = doc_attrs['$[]'](\"manname-title\")) ? $a : (($writer = [\"manname-title\", \"Name\"]), $send(doc_attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          \n          $writer = [\"mannames\", [manname]];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if (document.$backend()['$=='](\"manpage\")) {\n            \n            \n            $writer = [\"docname\", manname];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"outfilesuffix\", \"\" + \".\" + (manvolnum)];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;};\n        } else {\n          \n          reader.$skip_blank_lines();\n          reader.$save();\n          block_attributes.$update(self.$parse_block_metadata_lines(reader, document));\n          if ($truthy((name_section_level = self['$is_next_line_section?'](reader, $hash2([], {}))))) {\n            if (name_section_level['$=='](1)) {\n              \n              name_section = self.$initialize_section(reader, document, $hash2([], {}));\n              name_section_buffer = $send(reader.$read_lines_until($hash2([\"break_on_blank_lines\", \"skip_line_comments\"], {\"break_on_blank_lines\": true, \"skip_line_comments\": true})), 'map', [], ($$7 = function(l){var self = $$7.$$s || this;\n\n              \n                \n                if (l == null) {\n                  l = nil;\n                };\n                return l.$lstrip();}, $$7.$$s = self, $$7.$$arity = 1, $$7)).$join(\" \");\n              if ($truthy($$($nesting, 'ManpageNamePurposeRx')['$=~'](name_section_buffer))) {\n                \n                ($truthy($a = doc_attrs['$[]'](\"manname-title\")) ? $a : (($writer = [\"manname-title\", name_section.$title()]), $send(doc_attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n                if ($truthy(name_section.$id())) {\n                  \n                  $writer = [\"manname-id\", name_section.$id()];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n                \n                $writer = [\"manpurpose\", (($a = $gvars['~']) === nil ? nil : $a['$[]'](2))];\n                $send(doc_attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                if ($truthy((manname = (($a = $gvars['~']) === nil ? nil : $a['$[]'](1)))['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                  manname = document.$sub_attributes(manname)};\n                if ($truthy(manname['$include?'](\",\"))) {\n                  manname = (mannames = $send(manname.$split(\",\"), 'map', [], ($$8 = function(n){var self = $$8.$$s || this;\n\n                  \n                    \n                    if (n == null) {\n                      n = nil;\n                    };\n                    return n.$lstrip();}, $$8.$$s = self, $$8.$$arity = 1, $$8)))['$[]'](0)\n                } else {\n                  mannames = [manname]\n                };\n                \n                $writer = [\"manname\", manname];\n                $send(doc_attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                \n                $writer = [\"mannames\", mannames];\n                $send(doc_attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                if (document.$backend()['$=='](\"manpage\")) {\n                  \n                  \n                  $writer = [\"docname\", manname];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                  \n                  $writer = [\"outfilesuffix\", \"\" + \".\" + (manvolnum)];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;};\n              } else {\n                error_msg = \"non-conforming name section body\"\n              };\n            } else {\n              error_msg = \"name section must be at level 1\"\n            }\n          } else {\n            error_msg = \"name section expected\"\n          };\n          if ($truthy(error_msg)) {\n            \n            reader.$restore_save();\n            self.$logger().$error(self.$message_with_context(error_msg, $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})));\n            \n            $writer = [\"manname\", (manname = ($truthy($a = doc_attrs['$[]'](\"docname\")) ? $a : \"command\"))];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"mannames\", [manname]];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if (document.$backend()['$=='](\"manpage\")) {\n              \n              \n              $writer = [\"docname\", manname];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [\"outfilesuffix\", \"\" + \".\" + (manvolnum)];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n          } else {\n            reader.$discard_save()\n          };\n        };\n        return nil;\n      }, $Parser_parse_manpage_header$6.$$arity = 3);\n      Opal.defs(self, '$next_section', $Parser_next_section$9 = function $$next_section(reader, parent, attributes) {\n        var $a, $b, $c, $d, self = this, preamble = nil, intro = nil, part = nil, has_header = nil, book = nil, document = nil, $writer = nil, section = nil, current_level = nil, expected_next_level = nil, expected_next_level_alt = nil, title = nil, sectname = nil, next_level = nil, expected_condition = nil, new_section = nil, block_cursor = nil, new_block = nil, first_block = nil, child_block = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        preamble = (intro = (part = false));\n        if ($truthy(($truthy($a = (($b = parent.$context()['$=='](\"document\")) ? parent.$blocks()['$empty?']() : parent.$context()['$=='](\"document\"))) ? ($truthy($b = ($truthy($c = (has_header = parent['$header?']())) ? $c : attributes.$delete(\"invalid-header\"))) ? $b : self['$is_next_line_section?'](reader, attributes)['$!']()) : $a))) {\n          \n          book = (document = parent).$doctype()['$=='](\"book\");\n          if ($truthy(($truthy($a = has_header) ? $a : ($truthy($b = book) ? attributes['$[]'](1)['$!='](\"abstract\") : $b)))) {\n            \n            preamble = (intro = $$($nesting, 'Block').$new(parent, \"preamble\", $hash2([\"content_model\"], {\"content_model\": \"compound\"})));\n            if ($truthy(($truthy($a = book) ? parent['$attr?'](\"preface-title\") : $a))) {\n              \n              $writer = [parent.$attr(\"preface-title\")];\n              $send(preamble, 'title=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            parent.$blocks()['$<<'](preamble);};\n          section = parent;\n          current_level = 0;\n          if ($truthy(parent.$attributes()['$key?'](\"fragment\"))) {\n            expected_next_level = -1\n          } else if ($truthy(book)) {\n            $a = [1, 0], (expected_next_level = $a[0]), (expected_next_level_alt = $a[1]), $a\n          } else {\n            expected_next_level = 1\n          };\n        } else {\n          \n          book = (document = parent.$document()).$doctype()['$=='](\"book\");\n          section = self.$initialize_section(reader, parent, attributes);\n          attributes = (function() {if ($truthy((title = attributes['$[]'](\"title\")))) {\n            return $hash2([\"title\"], {\"title\": title})\n          } else {\n            return $hash2([], {})\n          }; return nil; })();\n          expected_next_level = $rb_plus((current_level = section.$level()), 1);\n          if (current_level['$=='](0)) {\n            part = book\n          } else if ($truthy((($a = current_level['$=='](1)) ? section.$special() : current_level['$=='](1)))) {\n            if ($truthy(($truthy($a = ($truthy($b = (sectname = section.$sectname())['$=='](\"appendix\")) ? $b : sectname['$=='](\"preface\"))) ? $a : sectname['$=='](\"abstract\")))) {\n            } else {\n              expected_next_level = nil\n            }};\n        };\n        reader.$skip_blank_lines();\n        while ($truthy(reader['$has_more_lines?']())) {\n          \n          self.$parse_block_metadata_lines(reader, document, attributes);\n          if ($truthy((next_level = self['$is_next_line_section?'](reader, attributes)))) {\n            \n            if ($truthy(document['$attr?'](\"leveloffset\"))) {\n              \n              next_level = $rb_plus(next_level, document.$attr(\"leveloffset\").$to_i());\n              if ($truthy($rb_lt(next_level, 0))) {\n                next_level = 0};};\n            if ($truthy($rb_gt(next_level, current_level))) {\n              \n              if ($truthy(expected_next_level)) {\n                if ($truthy(($truthy($b = ($truthy($c = next_level['$=='](expected_next_level)) ? $c : ($truthy($d = expected_next_level_alt) ? next_level['$=='](expected_next_level_alt) : $d))) ? $b : $rb_lt(expected_next_level, 0)))) {\n                } else {\n                  \n                  expected_condition = (function() {if ($truthy(expected_next_level_alt)) {\n                    return \"\" + \"expected levels \" + (expected_next_level_alt) + \" or \" + (expected_next_level)\n                  } else {\n                    return \"\" + \"expected level \" + (expected_next_level)\n                  }; return nil; })();\n                  self.$logger().$warn(self.$message_with_context(\"\" + \"section title out of sequence: \" + (expected_condition) + \", got level \" + (next_level), $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})));\n                }\n              } else {\n                self.$logger().$error(self.$message_with_context(\"\" + (sectname) + \" sections do not support nested sections\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))\n              };\n              $c = self.$next_section(reader, section, attributes), $b = Opal.to_ary($c), (new_section = ($b[0] == null ? nil : $b[0])), (attributes = ($b[1] == null ? nil : $b[1])), $c;\n              section.$assign_numeral(new_section);\n              section.$blocks()['$<<'](new_section);\n            } else if ($truthy((($b = next_level['$=='](0)) ? section['$=='](document) : next_level['$=='](0)))) {\n              \n              if ($truthy(book)) {\n              } else {\n                self.$logger().$error(self.$message_with_context(\"level 0 sections can only be used when doctype is book\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))\n              };\n              $c = self.$next_section(reader, section, attributes), $b = Opal.to_ary($c), (new_section = ($b[0] == null ? nil : $b[0])), (attributes = ($b[1] == null ? nil : $b[1])), $c;\n              section.$assign_numeral(new_section);\n              section.$blocks()['$<<'](new_section);\n            } else {\n              break;\n            };\n          } else {\n            \n            block_cursor = reader.$cursor();\n            if ($truthy((new_block = self.$next_block(reader, ($truthy($b = intro) ? $b : section), attributes, $hash2([\"parse_metadata\"], {\"parse_metadata\": false}))))) {\n              \n              if ($truthy(part)) {\n                if ($truthy(section['$blocks?']()['$!']())) {\n                  if ($truthy(new_block.$style()['$!='](\"partintro\"))) {\n                    if (new_block.$context()['$=='](\"paragraph\")) {\n                      \n                      \n                      $writer = [\"open\"];\n                      $send(new_block, 'context=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      \n                      $writer = [\"partintro\"];\n                      $send(new_block, 'style=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                    } else {\n                      \n                      \n                      $writer = [(intro = $$($nesting, 'Block').$new(section, \"open\", $hash2([\"content_model\"], {\"content_model\": \"compound\"})))];\n                      $send(new_block, 'parent=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      \n                      $writer = [\"partintro\"];\n                      $send(intro, 'style=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      section.$blocks()['$<<'](intro);\n                    }}\n                } else if (section.$blocks().$size()['$=='](1)) {\n                  \n                  first_block = section.$blocks()['$[]'](0);\n                  if ($truthy(($truthy($b = intro['$!']()) ? first_block.$content_model()['$=='](\"compound\") : $b))) {\n                    self.$logger().$error(self.$message_with_context(\"illegal block content outside of partintro block\", $hash2([\"source_location\"], {\"source_location\": block_cursor})))\n                  } else if ($truthy(first_block.$content_model()['$!='](\"compound\"))) {\n                    \n                    \n                    $writer = [(intro = $$($nesting, 'Block').$new(section, \"open\", $hash2([\"content_model\"], {\"content_model\": \"compound\"})))];\n                    $send(new_block, 'parent=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];;\n                    \n                    $writer = [\"partintro\"];\n                    $send(intro, 'style=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];;\n                    section.$blocks().$shift();\n                    if (first_block.$style()['$=='](\"partintro\")) {\n                      \n                      \n                      $writer = [\"paragraph\"];\n                      $send(first_block, 'context=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      \n                      $writer = [nil];\n                      $send(first_block, 'style=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;};\n                    intro['$<<'](first_block);\n                    section.$blocks()['$<<'](intro);};}};\n              ($truthy($b = intro) ? $b : section).$blocks()['$<<'](new_block);\n              attributes.$clear();};\n          };\n          if ($truthy($b = reader.$skip_blank_lines())) {\n            $b\n          } else {\n            break;\n          };\n        };\n        if ($truthy(part)) {\n          if ($truthy(($truthy($a = section['$blocks?']()) ? section.$blocks()['$[]'](-1).$context()['$=='](\"section\") : $a))) {\n          } else {\n            self.$logger().$error(self.$message_with_context(\"invalid part, must have at least one section (e.g., chapter, appendix, etc.)\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))\n          }\n        } else if ($truthy(preamble)) {\n          if ($truthy(preamble['$blocks?']())) {\n            if ($truthy(($truthy($a = ($truthy($b = book) ? $b : document.$blocks()['$[]'](1))) ? $a : $$($nesting, 'Compliance').$unwrap_standalone_preamble()['$!']()))) {\n            } else {\n              \n              document.$blocks().$shift();\n              while ($truthy((child_block = preamble.$blocks().$shift()))) {\n                document['$<<'](child_block)\n              };\n            }\n          } else {\n            document.$blocks().$shift()\n          }};\n        return [(function() {if ($truthy(section['$!='](parent))) {\n          return section\n        } else {\n          return nil\n        }; return nil; })(), attributes.$merge()];\n      }, $Parser_next_section$9.$$arity = -3);\n      Opal.defs(self, '$next_block', $Parser_next_block$10 = function $$next_block(reader, parent, attributes, options) {try {\n\n        var $a, $b, $c, $d, $$11, $$12, $$13, self = this, skipped = nil, text_only = nil, document = nil, extensions = nil, block_extensions = nil, block_macro_extensions = nil, this_line = nil, doc_attrs = nil, style = nil, block = nil, block_context = nil, cloaked_context = nil, terminator = nil, delimited_block = nil, $writer = nil, indented = nil, md_syntax = nil, ch0 = nil, layout_break_chars = nil, ll = nil, blk_ctx = nil, target = nil, blk_attrs = nil, $case = nil, posattrs = nil, expanded_target = nil, scaledwidth = nil, block_title = nil, extension = nil, report_unknown_block_macro = nil, content = nil, ext_config = nil, default_attrs = nil, float_id = nil, float_reftext = nil, float_level = nil, lines = nil, content_adjacent = nil, admonition_name = nil, credit_line = nil, attribution = nil, citetitle = nil, language = nil, comma_idx = nil, block_cursor = nil, block_reader = nil, content_model = nil, positional_attrs = nil, caption_attr_name = nil, block_id = nil;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        if ($truthy((skipped = reader.$skip_blank_lines()))) {\n        } else {\n          return nil\n        };\n        if ($truthy(($truthy($a = (text_only = options['$[]'](\"text_only\"))) ? $rb_gt(skipped, 0) : $a))) {\n          \n          options.$delete(\"text_only\");\n          text_only = nil;};\n        document = parent.$document();\n        if ($truthy(options.$fetch(\"parse_metadata\", true))) {\n          while ($truthy(self.$parse_block_metadata_line(reader, document, attributes, options))) {\n            \n            reader.$shift();\n            ($truthy($b = reader.$skip_blank_lines()) ? $b : Opal.ret(nil));\n          }};\n        if ($truthy((extensions = document.$extensions()))) {\n          $a = [extensions['$blocks?'](), extensions['$block_macros?']()], (block_extensions = $a[0]), (block_macro_extensions = $a[1]), $a};\n        reader.$mark();\n        $a = [reader.$read_line(), document.$attributes(), attributes['$[]'](1)], (this_line = $a[0]), (doc_attrs = $a[1]), (style = $a[2]), $a;\n        block = (block_context = (cloaked_context = (terminator = nil)));\n        if ($truthy((delimited_block = self['$is_delimited_block?'](this_line, true)))) {\n          \n          block_context = (cloaked_context = delimited_block.$context());\n          terminator = delimited_block.$terminator();\n          if ($truthy(style)) {\n            if (style['$=='](block_context.$to_s())) {\n            } else if ($truthy(delimited_block.$masq()['$include?'](style))) {\n              block_context = style.$to_sym()\n            } else if ($truthy(($truthy($a = delimited_block.$masq()['$include?'](\"admonition\")) ? $$($nesting, 'ADMONITION_STYLES')['$include?'](style) : $a))) {\n              block_context = \"admonition\"\n            } else if ($truthy(($truthy($a = block_extensions) ? extensions['$registered_for_block?'](style, block_context) : $a))) {\n              block_context = style.$to_sym()\n            } else {\n              \n              if ($truthy(self.$logger()['$debug?']())) {\n                self.$logger().$debug(self.$message_with_context(\"\" + \"unknown style for \" + (block_context) + \" block: \" + (style), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))};\n              style = block_context.$to_s();\n            }\n          } else {\n            style = (($writer = [\"style\", block_context.$to_s()]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n          };};\n        if ($truthy(delimited_block)) {\n        } else {\n          while ($truthy(true)) {\n            \n            if ($truthy(($truthy($b = ($truthy($c = style) ? $$($nesting, 'Compliance').$strict_verbatim_paragraphs() : $c)) ? $$($nesting, 'VERBATIM_STYLES')['$include?'](style) : $b))) {\n              \n              block_context = style.$to_sym();\n              reader.$unshift_line(this_line);\n              break;;};\n            if ($truthy(text_only)) {\n              indented = this_line['$start_with?'](\" \", $$($nesting, 'TAB'))\n            } else {\n              \n              md_syntax = $$($nesting, 'Compliance').$markdown_syntax();\n              if ($truthy(this_line['$start_with?'](\" \"))) {\n                \n                $b = [true, \" \"], (indented = $b[0]), (ch0 = $b[1]), $b;\n                if ($truthy(($truthy($b = ($truthy($c = md_syntax) ? $send(this_line.$lstrip(), 'start_with?', Opal.to_a($$($nesting, 'MARKDOWN_THEMATIC_BREAK_CHARS').$keys())) : $c)) ? $$($nesting, 'MarkdownThematicBreakRx')['$match?'](this_line) : $b))) {\n                  \n                  block = $$($nesting, 'Block').$new(parent, \"thematic_break\", $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n                  break;;};\n              } else if ($truthy(this_line['$start_with?']($$($nesting, 'TAB')))) {\n                $b = [true, $$($nesting, 'TAB')], (indented = $b[0]), (ch0 = $b[1]), $b\n              } else {\n                \n                $b = [false, this_line.$chr()], (indented = $b[0]), (ch0 = $b[1]), $b;\n                layout_break_chars = (function() {if ($truthy(md_syntax)) {\n                  return $$($nesting, 'HYBRID_LAYOUT_BREAK_CHARS')\n                } else {\n                  return $$($nesting, 'LAYOUT_BREAK_CHARS')\n                }; return nil; })();\n                if ($truthy(($truthy($b = layout_break_chars['$key?'](ch0)) ? (function() {if ($truthy(md_syntax)) {\n                  \n                  return $$($nesting, 'ExtLayoutBreakRx')['$match?'](this_line);\n                } else {\n                  return ($truthy($c = self['$uniform?'](this_line, ch0, (ll = this_line.$length()))) ? $rb_gt(ll, 2) : $c)\n                }; return nil; })() : $b))) {\n                  \n                  block = $$($nesting, 'Block').$new(parent, layout_break_chars['$[]'](ch0), $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n                  break;;\n                } else if ($truthy(($truthy($b = this_line['$end_with?'](\"]\")) ? this_line['$include?'](\"::\") : $b))) {\n                  if ($truthy(($truthy($b = ($truthy($c = ch0['$=='](\"i\")) ? $c : this_line['$start_with?'](\"video:\", \"audio:\"))) ? $$($nesting, 'BlockMediaMacroRx')['$=~'](this_line) : $b))) {\n                    \n                    $b = [(($c = $gvars['~']) === nil ? nil : $c['$[]'](1)).$to_sym(), (($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))], (blk_ctx = $b[0]), (target = $b[1]), (blk_attrs = $b[2]), $b;\n                    block = $$($nesting, 'Block').$new(parent, blk_ctx, $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n                    if ($truthy(blk_attrs)) {\n                      \n                      $case = blk_ctx;\n                      if (\"video\"['$===']($case)) {posattrs = [\"poster\", \"width\", \"height\"]}\n                      else if (\"audio\"['$===']($case)) {posattrs = []}\n                      else {posattrs = [\"alt\", \"width\", \"height\"]};\n                      block.$parse_attributes(blk_attrs, posattrs, $hash2([\"sub_input\", \"into\"], {\"sub_input\": true, \"into\": attributes}));};\n                    if ($truthy(attributes['$key?'](\"style\"))) {\n                      attributes.$delete(\"style\")};\n                    if ($truthy(target['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                      if ($truthy(($truthy($b = ($truthy($c = (expanded_target = block.$sub_attributes(target))['$empty?']()) ? ($truthy($d = doc_attrs['$[]'](\"attribute-missing\")) ? $d : $$($nesting, 'Compliance').$attribute_missing())['$=='](\"drop-line\") : $c)) ? block.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : $b))) {\n                        \n                        attributes.$clear();\n                        return nil;\n                      } else {\n                        target = expanded_target\n                      }};\n                    if (blk_ctx['$=='](\"image\")) {\n                      \n                      document.$register(\"images\", target);\n                      \n                      $writer = [\"imagesdir\", doc_attrs['$[]'](\"imagesdir\")];\n                      $send(attributes, '[]=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      ($truthy($b = attributes['$[]'](\"alt\")) ? $b : (($writer = [\"alt\", ($truthy($c = style) ? $c : (($writer = [\"default-alt\", $$($nesting, 'Helpers').$basename(target, true).$tr(\"_-\", \" \")]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n                      if ($truthy((scaledwidth = attributes.$delete(\"scaledwidth\"))['$nil_or_empty?']())) {\n                      } else {\n                        \n                        $writer = [\"scaledwidth\", (function() {if ($truthy($$($nesting, 'TrailingDigitsRx')['$match?'](scaledwidth))) {\n                          return \"\" + (scaledwidth) + \"%\"\n                        } else {\n                          return scaledwidth\n                        }; return nil; })()];\n                        $send(attributes, '[]=', Opal.to_a($writer));\n                        $writer[$rb_minus($writer[\"length\"], 1)];\n                      };\n                      if ($truthy(attributes['$[]'](\"title\"))) {\n                        \n                        \n                        $writer = [(block_title = attributes.$delete(\"title\"))];\n                        $send(block, 'title=', Opal.to_a($writer));\n                        $writer[$rb_minus($writer[\"length\"], 1)];;\n                        block.$assign_caption(attributes.$delete(\"caption\"), \"figure\");};};\n                    \n                    $writer = [\"target\", target];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];;\n                    break;;\n                  } else if ($truthy(($truthy($b = (($c = ch0['$=='](\"t\")) ? this_line['$start_with?'](\"toc:\") : ch0['$=='](\"t\"))) ? $$($nesting, 'BlockTocMacroRx')['$=~'](this_line) : $b))) {\n                    \n                    block = $$($nesting, 'Block').$new(parent, \"toc\", $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n                    if ($truthy((($b = $gvars['~']) === nil ? nil : $b['$[]'](1)))) {\n                      block.$parse_attributes((($b = $gvars['~']) === nil ? nil : $b['$[]'](1)), [], $hash2([\"into\"], {\"into\": attributes}))};\n                    break;;\n                  } else if ($truthy((function() {if ($truthy(block_macro_extensions)) {\n                    \n                    return ($truthy($b = ($truthy($c = $$($nesting, 'CustomBlockMacroRx')['$=~'](this_line)) ? (extension = extensions['$registered_for_block_macro?']((($d = $gvars['~']) === nil ? nil : $d['$[]'](1)))) : $c)) ? $b : (report_unknown_block_macro = self.$logger()['$debug?']()));\n                  } else {\n                    \n                    return ($truthy($b = self.$logger()['$debug?']()) ? (report_unknown_block_macro = $$($nesting, 'CustomBlockMacroRx')['$=~'](this_line)) : $b);\n                  }; return nil; })())) {\n                    if ($truthy(report_unknown_block_macro)) {\n                      self.$logger().$debug(self.$message_with_context(\"\" + \"unknown name for block macro: \" + ((($b = $gvars['~']) === nil ? nil : $b['$[]'](1))), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))\n                    } else {\n                      \n                      content = (($b = $gvars['~']) === nil ? nil : $b['$[]'](3));\n                      if ($truthy((target = (($b = $gvars['~']) === nil ? nil : $b['$[]'](2)))['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                        if ($truthy(($truthy($b = ($truthy($c = (expanded_target = parent.$sub_attributes(target))['$empty?']()) ? ($truthy($d = doc_attrs['$[]'](\"attribute-missing\")) ? $d : $$($nesting, 'Compliance').$attribute_missing())['$=='](\"drop-line\") : $c)) ? parent.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : $b))) {\n                          \n                          attributes.$clear();\n                          return nil;\n                        } else {\n                          target = expanded_target\n                        }};\n                      if ((ext_config = extension.$config())['$[]'](\"content_model\")['$=='](\"attributes\")) {\n                        if ($truthy(content)) {\n                          document.$parse_attributes(content, ($truthy($b = ($truthy($c = ext_config['$[]'](\"positional_attrs\")) ? $c : ext_config['$[]'](\"pos_attrs\"))) ? $b : []), $hash2([\"sub_input\", \"into\"], {\"sub_input\": true, \"into\": attributes}))}\n                      } else {\n                        \n                        $writer = [\"text\", ($truthy($b = content) ? $b : \"\")];\n                        $send(attributes, '[]=', Opal.to_a($writer));\n                        $writer[$rb_minus($writer[\"length\"], 1)];\n                      };\n                      if ($truthy((default_attrs = ext_config['$[]'](\"default_attrs\")))) {\n                        $send(attributes, 'update', [default_attrs], ($$11 = function(_, old_v){var self = $$11.$$s || this;\n\n                        \n                          \n                          if (_ == null) {\n                            _ = nil;\n                          };\n                          \n                          if (old_v == null) {\n                            old_v = nil;\n                          };\n                          return old_v;}, $$11.$$s = self, $$11.$$arity = 2, $$11))};\n                      if ($truthy((block = extension.$process_method()['$[]'](parent, target, attributes)))) {\n                        \n                        attributes.$replace(block.$attributes());\n                        break;;\n                      } else {\n                        \n                        attributes.$clear();\n                        return nil;\n                      };\n                    }}};\n              };\n            };\n            if ($truthy(($truthy($b = ($truthy($c = indented['$!']()) ? (ch0 = ($truthy($d = ch0) ? $d : this_line.$chr()))['$=='](\"<\") : $c)) ? $$($nesting, 'CalloutListRx')['$=~'](this_line) : $b))) {\n              \n              reader.$unshift_line(this_line);\n              block = self.$parse_callout_list(reader, $gvars[\"~\"], parent, document.$callouts());\n              \n              $writer = [\"style\", \"arabic\"];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              break;;\n            } else if ($truthy($$($nesting, 'UnorderedListRx')['$match?'](this_line))) {\n              \n              reader.$unshift_line(this_line);\n              if ($truthy(($truthy($b = ($truthy($c = style['$!']()) ? $$($nesting, 'Section')['$==='](parent) : $c)) ? parent.$sectname()['$=='](\"bibliography\") : $b))) {\n                \n                $writer = [\"style\", (style = \"bibliography\")];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              block = self.$parse_list(reader, \"ulist\", parent, style);\n              break;;\n            } else if ($truthy($$($nesting, 'OrderedListRx')['$match?'](this_line))) {\n              \n              reader.$unshift_line(this_line);\n              block = self.$parse_list(reader, \"olist\", parent, style);\n              if ($truthy(block.$style())) {\n                \n                $writer = [\"style\", block.$style()];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              break;;\n            } else if ($truthy(($truthy($b = ($truthy($c = this_line['$include?'](\"::\")) ? $c : this_line['$include?'](\";;\"))) ? $$($nesting, 'DescriptionListRx')['$=~'](this_line) : $b))) {\n              \n              reader.$unshift_line(this_line);\n              block = self.$parse_description_list(reader, $gvars[\"~\"], parent);\n              break;;\n            } else if ($truthy(($truthy($b = ($truthy($c = style['$=='](\"float\")) ? $c : style['$=='](\"discrete\"))) ? (function() {if ($truthy($$($nesting, 'Compliance').$underline_style_section_titles())) {\n              \n              return self['$is_section_title?'](this_line, reader.$peek_line());\n            } else {\n              return ($truthy($c = indented['$!']()) ? self['$atx_section_title?'](this_line) : $c)\n            }; return nil; })() : $b))) {\n              \n              reader.$unshift_line(this_line);\n              $c = self.$parse_section_title(reader, document, attributes['$[]'](\"id\")), $b = Opal.to_ary($c), (float_id = ($b[0] == null ? nil : $b[0])), (float_reftext = ($b[1] == null ? nil : $b[1])), (block_title = ($b[2] == null ? nil : $b[2])), (float_level = ($b[3] == null ? nil : $b[3])), $c;\n              if ($truthy(float_reftext)) {\n                \n                $writer = [\"reftext\", float_reftext];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              block = $$($nesting, 'Block').$new(parent, \"floating_title\", $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n              \n              $writer = [block_title];\n              $send(block, 'title=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              attributes.$delete(\"title\");\n              \n              $writer = [($truthy($b = float_id) ? $b : (function() {if ($truthy(doc_attrs['$key?'](\"sectids\"))) {\n                \n                return $$($nesting, 'Section').$generate_id(block.$title(), document);\n              } else {\n                return nil\n              }; return nil; })())];\n              $send(block, 'id=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [float_level];\n              $send(block, 'level=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              break;;\n            } else if ($truthy(($truthy($b = style) ? style['$!='](\"normal\") : $b))) {\n              if ($truthy($$($nesting, 'PARAGRAPH_STYLES')['$include?'](style))) {\n                \n                block_context = style.$to_sym();\n                cloaked_context = \"paragraph\";\n                reader.$unshift_line(this_line);\n                break;;\n              } else if ($truthy($$($nesting, 'ADMONITION_STYLES')['$include?'](style))) {\n                \n                block_context = \"admonition\";\n                cloaked_context = \"paragraph\";\n                reader.$unshift_line(this_line);\n                break;;\n              } else if ($truthy(($truthy($b = block_extensions) ? extensions['$registered_for_block?'](style, \"paragraph\") : $b))) {\n                \n                block_context = style.$to_sym();\n                cloaked_context = \"paragraph\";\n                reader.$unshift_line(this_line);\n                break;;\n              } else {\n                \n                if ($truthy(self.$logger()['$debug?']())) {\n                  self.$logger().$debug(self.$message_with_context(\"\" + \"unknown style for paragraph: \" + (style), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))};\n                style = nil;\n              }};\n            reader.$unshift_line(this_line);\n            if ($truthy(($truthy($b = indented) ? style['$!']() : $b))) {\n              \n              lines = self.$read_paragraph_lines(reader, (content_adjacent = (function() {if (skipped['$=='](0)) {\n                return options['$[]'](\"list_type\")\n              } else {\n                return nil\n              }; return nil; })()), $hash2([\"skip_line_comments\"], {\"skip_line_comments\": text_only}));\n              self['$adjust_indentation!'](lines);\n              if ($truthy(($truthy($b = text_only) ? $b : content_adjacent['$=='](\"dlist\")))) {\n                block = $$($nesting, 'Block').$new(parent, \"paragraph\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}))\n              } else {\n                block = $$($nesting, 'Block').$new(parent, \"literal\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"verbatim\", \"source\": lines, \"attributes\": attributes}))\n              };\n            } else {\n              \n              lines = self.$read_paragraph_lines(reader, (($b = skipped['$=='](0)) ? options['$[]'](\"list_type\") : skipped['$=='](0)), $hash2([\"skip_line_comments\"], {\"skip_line_comments\": true}));\n              if ($truthy(text_only)) {\n                \n                if ($truthy(($truthy($b = indented) ? style['$=='](\"normal\") : $b))) {\n                  self['$adjust_indentation!'](lines)};\n                block = $$($nesting, 'Block').$new(parent, \"paragraph\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}));\n              } else if ($truthy(($truthy($b = ($truthy($c = $$($nesting, 'ADMONITION_STYLE_HEADS')['$include?'](ch0)) ? this_line['$include?'](\":\") : $c)) ? $$($nesting, 'AdmonitionParagraphRx')['$=~'](this_line) : $b))) {\n                \n                \n                $writer = [0, (($b = $gvars['~']) === nil ? nil : $b.$post_match())];\n                $send(lines, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                \n                $writer = [\"name\", (admonition_name = (($writer = [\"style\", (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]).$downcase())];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                \n                $writer = [\"textlabel\", ($truthy($b = attributes.$delete(\"caption\")) ? $b : doc_attrs['$[]'](\"\" + (admonition_name) + \"-caption\"))];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                block = $$($nesting, 'Block').$new(parent, \"admonition\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}));\n              } else if ($truthy(($truthy($b = ($truthy($c = md_syntax) ? ch0['$=='](\">\") : $c)) ? this_line['$start_with?'](\"> \") : $b))) {\n                \n                $send(lines, 'map!', [], ($$12 = function(line){var self = $$12.$$s || this;\n\n                \n                  \n                  if (line == null) {\n                    line = nil;\n                  };\n                  if (line['$=='](\">\")) {\n                    \n                    return line.$slice(1, line.$length());\n                  } else {\n                    \n                    if ($truthy(line['$start_with?'](\"> \"))) {\n                      \n                      return line.$slice(2, line.$length());\n                    } else {\n                      return line\n                    };\n                  };}, $$12.$$s = self, $$12.$$arity = 1, $$12));\n                if ($truthy(lines['$[]'](-1)['$start_with?'](\"-- \"))) {\n                  \n                  credit_line = (credit_line = lines.$pop()).$slice(3, credit_line.$length());\n                  if ($truthy(lines['$empty?']())) {\n                  } else {\n                    while ($truthy(lines['$[]'](-1)['$empty?']())) {\n                      lines.$pop()\n                    }\n                  };};\n                \n                $writer = [\"style\", \"quote\"];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                block = self.$build_block(\"quote\", \"compound\", false, parent, $$($nesting, 'Reader').$new(lines), attributes);\n                if ($truthy(credit_line)) {\n                  \n                  $c = block.$apply_subs(credit_line).$split(\", \", 2), $b = Opal.to_ary($c), (attribution = ($b[0] == null ? nil : $b[0])), (citetitle = ($b[1] == null ? nil : $b[1])), $c;\n                  if ($truthy(attribution)) {\n                    \n                    $writer = [\"attribution\", attribution];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];};\n                  if ($truthy(citetitle)) {\n                    \n                    $writer = [\"citetitle\", citetitle];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];};};\n              } else if ($truthy(($truthy($b = ($truthy($c = (($d = ch0['$=='](\"\\\"\")) ? $rb_gt(lines.$size(), 1) : ch0['$=='](\"\\\"\"))) ? lines['$[]'](-1)['$start_with?'](\"-- \") : $c)) ? lines['$[]'](-2)['$end_with?'](\"\\\"\") : $b))) {\n                \n                \n                $writer = [0, this_line.$slice(1, this_line.$length())];\n                $send(lines, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                credit_line = (credit_line = lines.$pop()).$slice(3, credit_line.$length());\n                while ($truthy(lines['$[]'](-1)['$empty?']())) {\n                  lines.$pop()\n                };\n                lines['$<<'](lines.$pop().$chop());\n                \n                $writer = [\"style\", \"quote\"];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                block = $$($nesting, 'Block').$new(parent, \"quote\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}));\n                $c = block.$apply_subs(credit_line).$split(\", \", 2), $b = Opal.to_ary($c), (attribution = ($b[0] == null ? nil : $b[0])), (citetitle = ($b[1] == null ? nil : $b[1])), $c;\n                if ($truthy(attribution)) {\n                  \n                  $writer = [\"attribution\", attribution];\n                  $send(attributes, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n                if ($truthy(citetitle)) {\n                  \n                  $writer = [\"citetitle\", citetitle];\n                  $send(attributes, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n              } else {\n                \n                if ($truthy(($truthy($b = indented) ? style['$=='](\"normal\") : $b))) {\n                  self['$adjust_indentation!'](lines)};\n                block = $$($nesting, 'Block').$new(parent, \"paragraph\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}));\n              };\n              self.$catalog_inline_anchors(lines.$join($$($nesting, 'LF')), block, document, reader);\n            };\n            break;;\n          }\n        };\n        if ($truthy(block)) {\n        } else {\n          $case = block_context;\n          if (\"listing\"['$===']($case) || \"source\"['$===']($case)) {\n          if ($truthy(($truthy($a = block_context['$=='](\"source\")) ? $a : ($truthy($b = attributes['$[]'](1)['$!']()) ? (language = ($truthy($c = attributes['$[]'](2)) ? $c : doc_attrs['$[]'](\"source-language\"))) : $b)))) {\n            \n            if ($truthy(language)) {\n              \n              \n              $writer = [\"style\", \"source\"];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [\"language\", language];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              $$($nesting, 'AttributeList').$rekey(attributes, [nil, nil, \"linenums\"]);\n            } else {\n              \n              $$($nesting, 'AttributeList').$rekey(attributes, [nil, \"language\", \"linenums\"]);\n              if ($truthy(attributes['$key?'](\"language\"))) {\n              } else if ($truthy(doc_attrs['$key?'](\"source-language\"))) {\n                \n                $writer = [\"language\", doc_attrs['$[]'](\"source-language\")];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n            };\n            if ($truthy(attributes['$key?'](\"linenums\"))) {\n            } else if ($truthy(($truthy($a = attributes['$[]'](\"linenums-option\")) ? $a : doc_attrs['$[]'](\"source-linenums-option\")))) {\n              \n              $writer = [\"linenums\", \"\"];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(attributes['$key?'](\"indent\"))) {\n            } else if ($truthy(doc_attrs['$key?'](\"source-indent\"))) {\n              \n              $writer = [\"indent\", doc_attrs['$[]'](\"source-indent\")];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};};\n          block = self.$build_block(\"listing\", \"verbatim\", terminator, parent, reader, attributes);}\n          else if (\"fenced_code\"['$===']($case)) {\n          \n          $writer = [\"style\", \"source\"];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy($rb_gt((ll = this_line.$length()), 3))) {\n            if ($truthy((comma_idx = (language = this_line.$slice(3, ll)).$index(\",\")))) {\n              if ($truthy($rb_gt(comma_idx, 0))) {\n                \n                language = language.$slice(0, comma_idx).$strip();\n                if ($truthy($rb_lt(comma_idx, $rb_minus(ll, 4)))) {\n                  \n                  $writer = [\"linenums\", \"\"];\n                  $send(attributes, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n              } else if ($truthy($rb_gt(ll, 4))) {\n                \n                $writer = [\"linenums\", \"\"];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];}\n            } else {\n              language = language.$lstrip()\n            }};\n          if ($truthy(language['$nil_or_empty?']())) {\n            if ($truthy(doc_attrs['$key?'](\"source-language\"))) {\n              \n              $writer = [\"language\", doc_attrs['$[]'](\"source-language\")];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];}\n          } else {\n            \n            $writer = [\"language\", language];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          if ($truthy(attributes['$key?'](\"linenums\"))) {\n          } else if ($truthy(($truthy($a = attributes['$[]'](\"linenums-option\")) ? $a : doc_attrs['$[]'](\"source-linenums-option\")))) {\n            \n            $writer = [\"linenums\", \"\"];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy(attributes['$key?'](\"indent\"))) {\n          } else if ($truthy(doc_attrs['$key?'](\"source-indent\"))) {\n            \n            $writer = [\"indent\", doc_attrs['$[]'](\"source-indent\")];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          terminator = terminator.$slice(0, 3);\n          block = self.$build_block(\"listing\", \"verbatim\", terminator, parent, reader, attributes);}\n          else if (\"table\"['$===']($case)) {\n          block_cursor = reader.$cursor();\n          block_reader = $$($nesting, 'Reader').$new(reader.$read_lines_until($hash2([\"terminator\", \"skip_line_comments\", \"context\", \"cursor\"], {\"terminator\": terminator, \"skip_line_comments\": true, \"context\": \"table\", \"cursor\": \"at_mark\"})), block_cursor);\n          if ($truthy(terminator['$start_with?'](\"|\", \"!\"))) {\n          } else {\n            ($truthy($a = attributes['$[]'](\"format\")) ? $a : (($writer = [\"format\", (function() {if ($truthy(terminator['$start_with?'](\",\"))) {\n              return \"csv\"\n            } else {\n              return \"dsv\"\n            }; return nil; })()]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n          };\n          block = self.$parse_table(block_reader, parent, attributes);}\n          else if (\"sidebar\"['$===']($case)) {block = self.$build_block(block_context, \"compound\", terminator, parent, reader, attributes)}\n          else if (\"admonition\"['$===']($case)) {\n          \n          $writer = [\"name\", (admonition_name = style.$downcase())];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"textlabel\", ($truthy($a = attributes.$delete(\"caption\")) ? $a : doc_attrs['$[]'](\"\" + (admonition_name) + \"-caption\"))];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          block = self.$build_block(block_context, \"compound\", terminator, parent, reader, attributes);}\n          else if (\"open\"['$===']($case) || \"abstract\"['$===']($case) || \"partintro\"['$===']($case)) {block = self.$build_block(\"open\", \"compound\", terminator, parent, reader, attributes)}\n          else if (\"literal\"['$===']($case)) {block = self.$build_block(block_context, \"verbatim\", terminator, parent, reader, attributes)}\n          else if (\"example\"['$===']($case)) {block = self.$build_block(block_context, \"compound\", terminator, parent, reader, attributes)}\n          else if (\"quote\"['$===']($case) || \"verse\"['$===']($case)) {\n          $$($nesting, 'AttributeList').$rekey(attributes, [nil, \"attribution\", \"citetitle\"]);\n          block = self.$build_block(block_context, (function() {if (block_context['$=='](\"verse\")) {\n            return \"verbatim\"\n          } else {\n            return \"compound\"\n          }; return nil; })(), terminator, parent, reader, attributes);}\n          else if (\"stem\"['$===']($case) || \"latexmath\"['$===']($case) || \"asciimath\"['$===']($case)) {\n          if (block_context['$=='](\"stem\")) {\n            \n            $writer = [\"style\", $$($nesting, 'STEM_TYPE_ALIASES')['$[]'](($truthy($a = attributes['$[]'](2)) ? $a : doc_attrs['$[]'](\"stem\")))];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          block = self.$build_block(\"stem\", \"raw\", terminator, parent, reader, attributes);}\n          else if (\"pass\"['$===']($case)) {block = self.$build_block(block_context, \"raw\", terminator, parent, reader, attributes)}\n          else if (\"comment\"['$===']($case)) {\n          self.$build_block(block_context, \"skip\", terminator, parent, reader, attributes);\n          attributes.$clear();\n          return nil;}\n          else {if ($truthy(($truthy($a = block_extensions) ? (extension = extensions['$registered_for_block?'](block_context, cloaked_context)) : $a))) {\n            \n            if ((content_model = (ext_config = extension.$config())['$[]'](\"content_model\"))['$=='](\"skip\")) {\n            } else {\n              \n              if ($truthy((positional_attrs = ($truthy($a = ext_config['$[]'](\"positional_attrs\")) ? $a : ext_config['$[]'](\"pos_attrs\")))['$nil_or_empty?']())) {\n              } else {\n                $$($nesting, 'AttributeList').$rekey(attributes, $rb_plus([nil], positional_attrs))\n              };\n              if ($truthy((default_attrs = ext_config['$[]'](\"default_attrs\")))) {\n                $send(default_attrs, 'each', [], ($$13 = function(k, v){var self = $$13.$$s || this, $e;\n\n                \n                  \n                  if (k == null) {\n                    k = nil;\n                  };\n                  \n                  if (v == null) {\n                    v = nil;\n                  };\n                  return ($truthy($e = attributes['$[]'](k)) ? $e : (($writer = [k, v]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));}, $$13.$$s = self, $$13.$$arity = 2, $$13))};\n              \n              $writer = [\"cloaked-context\", cloaked_context];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n            };\n            if ($truthy((block = self.$build_block(block_context, content_model, terminator, parent, reader, attributes, $hash2([\"extension\"], {\"extension\": extension}))))) {\n            } else {\n              \n              attributes.$clear();\n              return nil;\n            };\n          } else {\n            self.$raise(\"\" + \"Unsupported block type \" + (block_context) + \" at \" + (reader.$cursor()))\n          }}\n        };\n        if ($truthy(document.$sourcemap())) {\n          \n          $writer = [reader.$cursor_at_mark()];\n          $send(block, 'source_location=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy(attributes['$[]'](\"title\"))) {\n          \n          \n          $writer = [(block_title = attributes.$delete(\"title\"))];\n          $send(block, 'title=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(($truthy($a = (caption_attr_name = $$($nesting, 'CAPTION_ATTR_NAMES')['$[]'](block.$context()))) ? document.$attributes()['$[]'](caption_attr_name) : $a))) {\n            block.$assign_caption(attributes.$delete(\"caption\"))};};\n        \n        $writer = [attributes['$[]'](\"style\")];\n        $send(block, 'style=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        if ($truthy((block_id = ($truthy($a = block.$id()) ? $a : (($writer = [attributes['$[]'](\"id\")]), $send(block, 'id=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))))) {\n          \n          if ($truthy((function() {if ($truthy(block_title)) {\n            \n            return block_title['$include?']($$($nesting, 'ATTR_REF_HEAD'));\n          } else {\n            return block['$title?']()\n          }; return nil; })())) {\n            block.$title()};\n          if ($truthy(document.$register(\"refs\", [block_id, block]))) {\n          } else {\n            self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to block already in use: \" + (block_id), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))\n          };};\n        if ($truthy(attributes['$empty?']())) {\n        } else {\n          block.$update_attributes(attributes)\n        };\n        block.$commit_subs();\n        if ($truthy(block['$sub?'](\"callouts\"))) {\n          if ($truthy(self.$catalog_callouts(block.$source(), document))) {\n          } else {\n            block.$remove_sub(\"callouts\")\n          }};\n        return block;\n        } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n      }, $Parser_next_block$10.$$arity = -3);\n      Opal.defs(self, '$read_paragraph_lines', $Parser_read_paragraph_lines$14 = function $$read_paragraph_lines(reader, break_at_list, opts) {\n        var self = this, $writer = nil, break_condition = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        \n        $writer = [\"break_on_blank_lines\", true];\n        $send(opts, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"break_on_list_continuation\", true];\n        $send(opts, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"preserve_last_line\", true];\n        $send(opts, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        break_condition = (function() {if ($truthy(break_at_list)) {\n          \n          if ($truthy($$($nesting, 'Compliance').$block_terminates_paragraph())) {\n            return $$($nesting, 'StartOfBlockOrListProc')\n          } else {\n            return $$($nesting, 'StartOfListProc')\n          };\n        } else {\n          \n          if ($truthy($$($nesting, 'Compliance').$block_terminates_paragraph())) {\n            return $$($nesting, 'StartOfBlockProc')\n          } else {\n            return $$($nesting, 'NoOp')\n          };\n        }; return nil; })();\n        return $send(reader, 'read_lines_until', [opts], break_condition.$to_proc());\n      }, $Parser_read_paragraph_lines$14.$$arity = -3);\n      Opal.defs(self, '$is_delimited_block?', $Parser_is_delimited_block$ques$15 = function(line, return_match_data) {\n        var $a, $b, self = this, line_len = nil, tip = nil, tip_len = nil, context = nil, masq = nil;\n\n        \n        \n        if (return_match_data == null) {\n          return_match_data = nil;\n        };\n        if ($truthy(($truthy($a = $rb_gt((line_len = line.$length()), 1)) ? $$($nesting, 'DELIMITED_BLOCK_HEADS')['$[]'](line.$slice(0, 2)) : $a))) {\n        } else {\n          return nil\n        };\n        if (line_len['$=='](2)) {\n          \n          tip = line;\n          tip_len = 2;\n        } else {\n          \n          if ($truthy($rb_lt(line_len, 5))) {\n            \n            tip = line;\n            tip_len = line_len;\n          } else {\n            tip = line.$slice(0, (tip_len = 4))\n          };\n          if ($truthy(($truthy($a = $$($nesting, 'Compliance').$markdown_syntax()) ? tip['$start_with?'](\"`\") : $a))) {\n            if (tip_len['$=='](4)) {\n              if (tip['$=='](\"````\")) {\n                return nil\n              } else if ((tip = tip.$chop())['$=='](\"```\")) {\n                \n                line = tip;\n                line_len = (tip_len = 3);\n              } else {\n                return nil\n              }\n            } else if (tip['$=='](\"```\")) {\n            } else {\n              return nil\n            }\n          } else if (tip_len['$=='](3)) {\n            return nil};\n        };\n        $b = $$($nesting, 'DELIMITED_BLOCKS')['$[]'](tip), $a = Opal.to_ary($b), (context = ($a[0] == null ? nil : $a[0])), (masq = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy(($truthy($a = context) ? ($truthy($b = line_len['$=='](tip_len)) ? $b : self['$uniform?'](line.$slice(1, line_len), $$($nesting, 'DELIMITED_BLOCK_TAILS')['$[]'](tip), $rb_minus(line_len, 1))) : $a))) {\n          if ($truthy(return_match_data)) {\n            \n            return $$($nesting, 'BlockMatchData').$new(context, masq, tip, line);\n          } else {\n            return true\n          }\n        } else {\n          return nil\n        };\n      }, $Parser_is_delimited_block$ques$15.$$arity = -2);\n      Opal.defs(self, '$build_block', $Parser_build_block$16 = function $$build_block(block_context, content_model, terminator, parent, reader, attributes, options) {\n        var $a, self = this, skip_processing = nil, parse_as_content_model = nil, lines = nil, block_reader = nil, block_cursor = nil, tab_size = nil, indent = nil, extension = nil, block = nil;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        if (content_model['$=='](\"skip\")) {\n          $a = [true, \"simple\"], (skip_processing = $a[0]), (parse_as_content_model = $a[1]), $a\n        } else if (content_model['$=='](\"raw\")) {\n          $a = [false, \"simple\"], (skip_processing = $a[0]), (parse_as_content_model = $a[1]), $a\n        } else {\n          $a = [false, content_model], (skip_processing = $a[0]), (parse_as_content_model = $a[1]), $a\n        };\n        if ($truthy(terminator['$nil?']())) {\n          \n          if (parse_as_content_model['$=='](\"verbatim\")) {\n            lines = reader.$read_lines_until($hash2([\"break_on_blank_lines\", \"break_on_list_continuation\"], {\"break_on_blank_lines\": true, \"break_on_list_continuation\": true}))\n          } else {\n            \n            if (content_model['$=='](\"compound\")) {\n              content_model = \"simple\"};\n            lines = self.$read_paragraph_lines(reader, false, $hash2([\"skip_line_comments\", \"skip_processing\"], {\"skip_line_comments\": true, \"skip_processing\": skip_processing}));\n          };\n          block_reader = nil;\n        } else if ($truthy(parse_as_content_model['$!='](\"compound\"))) {\n          \n          lines = reader.$read_lines_until($hash2([\"terminator\", \"skip_processing\", \"context\", \"cursor\"], {\"terminator\": terminator, \"skip_processing\": skip_processing, \"context\": block_context, \"cursor\": \"at_mark\"}));\n          block_reader = nil;\n        } else if (terminator['$=='](false)) {\n          \n          lines = nil;\n          block_reader = reader;\n        } else {\n          \n          lines = nil;\n          block_cursor = reader.$cursor();\n          block_reader = $$($nesting, 'Reader').$new(reader.$read_lines_until($hash2([\"terminator\", \"skip_processing\", \"context\", \"cursor\"], {\"terminator\": terminator, \"skip_processing\": skip_processing, \"context\": block_context, \"cursor\": \"at_mark\"})), block_cursor);\n        };\n        if (content_model['$=='](\"verbatim\")) {\n          \n          tab_size = ($truthy($a = attributes['$[]'](\"tabsize\")) ? $a : parent.$document().$attributes()['$[]'](\"tabsize\")).$to_i();\n          if ($truthy((indent = attributes['$[]'](\"indent\")))) {\n            self['$adjust_indentation!'](lines, indent.$to_i(), tab_size)\n          } else if ($truthy($rb_gt(tab_size, 0))) {\n            self['$adjust_indentation!'](lines, -1, tab_size)};\n        } else if (content_model['$=='](\"skip\")) {\n          return nil};\n        if ($truthy((extension = options['$[]'](\"extension\")))) {\n          \n          attributes.$delete(\"style\");\n          if ($truthy((block = extension.$process_method()['$[]'](parent, ($truthy($a = block_reader) ? $a : $$($nesting, 'Reader').$new(lines)), attributes.$merge())))) {\n            \n            attributes.$replace(block.$attributes());\n            if ($truthy((($a = block.$content_model()['$=='](\"compound\")) ? (lines = block.$lines())['$empty?']()['$!']() : block.$content_model()['$=='](\"compound\")))) {\n              \n              content_model = \"compound\";\n              block_reader = $$($nesting, 'Reader').$new(lines);};\n          } else {\n            return nil\n          };\n        } else {\n          block = $$($nesting, 'Block').$new(parent, block_context, $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": content_model, \"source\": lines, \"attributes\": attributes}))\n        };\n        if (content_model['$=='](\"compound\")) {\n          self.$parse_blocks(block_reader, block)};\n        return block;\n      }, $Parser_build_block$16.$$arity = -7);\n      Opal.defs(self, '$parse_blocks', $Parser_parse_blocks$17 = function $$parse_blocks(reader, parent, attributes) {\n        var $a, $b, $c, self = this, block = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = nil;\n        };\n        if ($truthy(attributes)) {\n          while ($truthy(($truthy($b = ($truthy($c = (block = self.$next_block(reader, parent, attributes.$merge()))) ? parent.$blocks()['$<<'](block) : $c)) ? $b : reader['$has_more_lines?']()))) {\n            \n          }\n        } else {\n          while ($truthy(($truthy($b = ($truthy($c = (block = self.$next_block(reader, parent))) ? parent.$blocks()['$<<'](block) : $c)) ? $b : reader['$has_more_lines?']()))) {\n            \n          }\n        };\n        return nil;\n      }, $Parser_parse_blocks$17.$$arity = -3);\n      Opal.defs(self, '$parse_list', $Parser_parse_list$18 = function $$parse_list(reader, list_type, parent, style) {\n        var $a, $b, self = this, list_block = nil, list_rx = nil, list_item = nil;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        list_block = $$($nesting, 'List').$new(parent, list_type);\n        list_rx = $$($nesting, 'ListRxMap')['$[]'](list_type);\n        while ($truthy(($truthy($b = reader['$has_more_lines?']()) ? list_rx['$=~'](reader.$peek_line()) : $b))) {\n          \n          if ($truthy((list_item = self.$parse_list_item(reader, list_block, $gvars[\"~\"], (($b = $gvars['~']) === nil ? nil : $b['$[]'](1)), style)))) {\n            list_block.$items()['$<<'](list_item)};\n          if ($truthy($b = reader.$skip_blank_lines())) {\n            $b\n          } else {\n            break;\n          };\n        };\n        return list_block;\n      }, $Parser_parse_list$18.$$arity = 4);\n      Opal.defs(self, '$catalog_callouts', $Parser_catalog_callouts$19 = function $$catalog_callouts(text, document) {\n        var $$20, self = this, found = nil, autonum = nil;\n\n        \n        found = false;\n        autonum = 0;\n        if ($truthy(text['$include?'](\"<\"))) {\n          $send(text, 'scan', [$$($nesting, 'CalloutScanRx')], ($$20 = function(){var self = $$20.$$s || this, $a;\n\n          \n            if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](0))['$start_with?'](\"\\\\\"))) {\n            } else {\n              document.$callouts().$register((function() {if ((($a = $gvars['~']) === nil ? nil : $a['$[]'](2))['$=='](\".\")) {\n                return (autonum = $rb_plus(autonum, 1)).$to_s()\n              } else {\n                return (($a = $gvars['~']) === nil ? nil : $a['$[]'](2))\n              }; return nil; })())\n            };\n            return (found = true);}, $$20.$$s = self, $$20.$$arity = 0, $$20))};\n        return found;\n      }, $Parser_catalog_callouts$19.$$arity = 2);\n      Opal.defs(self, '$catalog_inline_anchor', $Parser_catalog_inline_anchor$21 = function $$catalog_inline_anchor(id, reftext, node, location, doc) {\n        var $a, self = this;\n\n        \n        \n        if (doc == null) {\n          doc = node.$document();\n        };\n        if ($truthy(($truthy($a = reftext) ? reftext['$include?']($$($nesting, 'ATTR_REF_HEAD')) : $a))) {\n          reftext = doc.$sub_attributes(reftext)};\n        if ($truthy(doc.$register(\"refs\", [id, $$($nesting, 'Inline').$new(node, \"anchor\", reftext, $hash2([\"type\", \"id\"], {\"type\": \"ref\", \"id\": id}))]))) {\n        } else {\n          \n          if ($truthy($$($nesting, 'Reader')['$==='](location))) {\n            location = location.$cursor()};\n          self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to anchor already in use: \" + (id), $hash2([\"source_location\"], {\"source_location\": location})));\n        };\n        return nil;\n      }, $Parser_catalog_inline_anchor$21.$$arity = -5);\n      Opal.defs(self, '$catalog_inline_anchors', $Parser_catalog_inline_anchors$22 = function $$catalog_inline_anchors(text, block, document, reader) {\n        var $a, $$23, self = this;\n\n        \n        if ($truthy(($truthy($a = text['$include?'](\"[[\")) ? $a : text['$include?'](\"or:\")))) {\n          $send(text, 'scan', [$$($nesting, 'InlineAnchorScanRx')], ($$23 = function(){var self = $$23.$$s || this, $b, id = nil, reftext = nil, location = nil, offset = nil;\n\n          \n            if ($truthy((id = (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))))) {\n              if ($truthy((reftext = (($b = $gvars['~']) === nil ? nil : $b['$[]'](2))))) {\n                if ($truthy(($truthy($b = reftext['$include?']($$($nesting, 'ATTR_REF_HEAD'))) ? (reftext = document.$sub_attributes(reftext))['$empty?']() : $b))) {\n                  return nil;}}\n            } else {\n              \n              id = (($b = $gvars['~']) === nil ? nil : $b['$[]'](3));\n              if ($truthy((reftext = (($b = $gvars['~']) === nil ? nil : $b['$[]'](4))))) {\n                \n                if ($truthy(reftext['$include?'](\"]\"))) {\n                  reftext = reftext.$gsub(\"\\\\]\", \"]\")};\n                if ($truthy(($truthy($b = reftext['$include?']($$($nesting, 'ATTR_REF_HEAD'))) ? (reftext = document.$sub_attributes(reftext))['$empty?']() : $b))) {\n                  return nil;};};\n            };\n            if ($truthy(document.$register(\"refs\", [id, $$($nesting, 'Inline').$new(block, \"anchor\", reftext, $hash2([\"type\", \"id\"], {\"type\": \"ref\", \"id\": id}))]))) {\n              return nil\n            } else {\n              \n              location = reader.$cursor_at_mark();\n              if ($truthy($rb_gt((offset = $rb_plus((($b = $gvars['~']) === nil ? nil : $b.$pre_match()).$count($$($nesting, 'LF')), (function() {if ($truthy((($b = $gvars['~']) === nil ? nil : $b['$[]'](0))['$start_with?']($$($nesting, 'LF')))) {\n                return 1\n              } else {\n                return 0\n              }; return nil; })())), 0))) {\n                (location = location.$dup()).$advance(offset)};\n              return self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to anchor already in use: \" + (id), $hash2([\"source_location\"], {\"source_location\": location})));\n            };}, $$23.$$s = self, $$23.$$arity = 0, $$23))};\n        return nil;\n      }, $Parser_catalog_inline_anchors$22.$$arity = 4);\n      Opal.defs(self, '$catalog_inline_biblio_anchor', $Parser_catalog_inline_biblio_anchor$24 = function $$catalog_inline_biblio_anchor(id, reftext, node, reader) {\n        var $a, self = this;\n\n        \n        if ($truthy(node.$document().$register(\"refs\", [id, $$($nesting, 'Inline').$new(node, \"anchor\", ($truthy($a = reftext) ? \"\" + \"[\" + (reftext) + \"]\" : $a), $hash2([\"type\", \"id\"], {\"type\": \"bibref\", \"id\": id}))]))) {\n        } else {\n          self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to bibliography anchor already in use: \" + (id), $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))\n        };\n        return nil;\n      }, $Parser_catalog_inline_biblio_anchor$24.$$arity = 4);\n      Opal.defs(self, '$parse_description_list', $Parser_parse_description_list$25 = function $$parse_description_list(reader, match, parent) {\n        var $a, $b, self = this, list_block = nil, sibling_pattern = nil, current_pair = nil, next_pair = nil, $writer = nil;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        list_block = $$($nesting, 'List').$new(parent, \"dlist\");\n        sibling_pattern = $$($nesting, 'DescriptionListSiblingRx')['$[]'](match['$[]'](2));\n        list_block.$items()['$<<']((current_pair = self.$parse_list_item(reader, list_block, match, sibling_pattern)));\n        while ($truthy(($truthy($b = reader['$has_more_lines?']()) ? sibling_pattern['$=~'](reader.$peek_line()) : $b))) {\n          \n          next_pair = self.$parse_list_item(reader, list_block, $gvars[\"~\"], sibling_pattern);\n          if ($truthy(current_pair['$[]'](1))) {\n            list_block.$items()['$<<']((current_pair = next_pair))\n          } else {\n            \n            current_pair['$[]'](0)['$<<'](next_pair['$[]'](0)['$[]'](0));\n            \n            $writer = [1, next_pair['$[]'](1)];\n            $send(current_pair, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          };\n        };\n        return list_block;\n      }, $Parser_parse_description_list$25.$$arity = 3);\n      Opal.defs(self, '$parse_callout_list', $Parser_parse_callout_list$26 = function $$parse_callout_list(reader, match, parent, callouts) {\n        var $a, $b, $c, self = this, list_block = nil, next_index = nil, autonum = nil, num = nil, list_item = nil, coids = nil, $writer = nil;\n\n        \n        list_block = $$($nesting, 'List').$new(parent, \"colist\");\n        next_index = 1;\n        autonum = 0;\n        while ($truthy(($truthy($b = match) ? $b : ($truthy($c = (match = $$($nesting, 'CalloutListRx').$match(reader.$peek_line()))) ? reader.$mark() : $c)))) {\n          \n          if ((num = match['$[]'](1))['$=='](\".\")) {\n            num = (autonum = $rb_plus(autonum, 1)).$to_s()};\n          if (num['$=='](next_index.$to_s())) {\n          } else {\n            self.$logger().$warn(self.$message_with_context(\"\" + \"callout list item index: expected \" + (next_index) + \", got \" + (num), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))\n          };\n          if ($truthy((list_item = self.$parse_list_item(reader, list_block, match, \"<1>\")))) {\n            \n            list_block.$items()['$<<'](list_item);\n            if ($truthy((coids = callouts.$callout_ids(list_block.$items().$size()))['$empty?']())) {\n              self.$logger().$warn(self.$message_with_context(\"\" + \"no callout found for <\" + (list_block.$items().$size()) + \">\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))\n            } else {\n              \n              $writer = [\"coids\", coids];\n              $send(list_item.$attributes(), '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };};\n          next_index = $rb_plus(next_index, 1);\n          match = nil;\n        };\n        callouts.$next_list();\n        return list_block;\n      }, $Parser_parse_callout_list$26.$$arity = 4);\n      Opal.defs(self, '$parse_list_item', $Parser_parse_list_item$27 = function $$parse_list_item(reader, list_block, match, sibling_trait, style) {\n        var $a, $b, self = this, list_type = nil, dlist = nil, list_term = nil, term_text = nil, item_text = nil, has_text = nil, list_item = nil, $writer = nil, sourcemap_assignment_deferred = nil, ordinal = nil, implicit_style = nil, block_cursor = nil, list_item_reader = nil, comment_lines = nil, subsequent_line = nil, content_adjacent = nil, block = nil, first_block = nil;\n\n        \n        \n        if (style == null) {\n          style = nil;\n        };\n        if ((list_type = list_block.$context())['$=='](\"dlist\")) {\n          \n          dlist = true;\n          list_term = $$($nesting, 'ListItem').$new(list_block, (term_text = match['$[]'](1)));\n          if ($truthy(($truthy($a = term_text['$start_with?'](\"[[\")) ? $$($nesting, 'LeadingInlineAnchorRx')['$=~'](term_text) : $a))) {\n            self.$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), ($truthy($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](2))) ? $a : (($b = $gvars['~']) === nil ? nil : $b.$post_match()).$lstrip()), list_term, reader)};\n          if ($truthy((item_text = match['$[]'](3)))) {\n            has_text = true};\n          list_item = $$($nesting, 'ListItem').$new(list_block, item_text);\n          if ($truthy(list_block.$document().$sourcemap())) {\n            \n            \n            $writer = [reader.$cursor()];\n            $send(list_term, 'source_location=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy(has_text)) {\n              \n              $writer = [list_term.$source_location()];\n              $send(list_item, 'source_location=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              sourcemap_assignment_deferred = true\n            };};\n        } else {\n          \n          has_text = true;\n          list_item = $$($nesting, 'ListItem').$new(list_block, (item_text = match['$[]'](2)));\n          if ($truthy(list_block.$document().$sourcemap())) {\n            \n            $writer = [reader.$cursor()];\n            $send(list_item, 'source_location=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if (list_type['$=='](\"ulist\")) {\n            \n            \n            $writer = [sibling_trait];\n            $send(list_item, 'marker=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy(item_text['$start_with?'](\"[\"))) {\n              if ($truthy(($truthy($a = style) ? style['$=='](\"bibliography\") : $a))) {\n                if ($truthy($$($nesting, 'InlineBiblioAnchorRx')['$=~'](item_text))) {\n                  self.$catalog_inline_biblio_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), list_item, reader)}\n              } else if ($truthy(item_text['$start_with?'](\"[[\"))) {\n                if ($truthy($$($nesting, 'LeadingInlineAnchorRx')['$=~'](item_text))) {\n                  self.$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), list_item, reader)}\n              } else if ($truthy(item_text['$start_with?'](\"[ ] \", \"[x] \", \"[*] \"))) {\n                \n                list_block.$set_option(\"checklist\");\n                \n                $writer = [\"checkbox\", \"\"];\n                $send(list_item.$attributes(), '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                if ($truthy(item_text['$start_with?'](\"[ \"))) {\n                } else {\n                  \n                  $writer = [\"checked\", \"\"];\n                  $send(list_item.$attributes(), '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];\n                };\n                \n                $writer = [item_text.$slice(4, item_text.$length())];\n                $send(list_item, 'text=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;}};\n          } else if (list_type['$=='](\"olist\")) {\n            \n            $b = self.$resolve_ordered_list_marker(sibling_trait, (ordinal = list_block.$items().$size()), true, reader), $a = Opal.to_ary($b), (sibling_trait = ($a[0] == null ? nil : $a[0])), (implicit_style = ($a[1] == null ? nil : $a[1])), $b;\n            \n            $writer = [sibling_trait];\n            $send(list_item, 'marker=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy((($a = ordinal['$=='](0)) ? style['$!']() : ordinal['$=='](0)))) {\n              \n              $writer = [($truthy($a = implicit_style) ? $a : ($truthy($b = $$($nesting, 'ORDERED_LIST_STYLES')['$[]']($rb_minus(sibling_trait.$length(), 1))) ? $b : \"arabic\").$to_s())];\n              $send(list_block, 'style=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(($truthy($a = item_text['$start_with?'](\"[[\")) ? $$($nesting, 'LeadingInlineAnchorRx')['$=~'](item_text) : $a))) {\n              self.$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), list_item, reader)};\n          } else {\n            \n            \n            $writer = [sibling_trait];\n            $send(list_item, 'marker=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy(($truthy($a = item_text['$start_with?'](\"[[\")) ? $$($nesting, 'LeadingInlineAnchorRx')['$=~'](item_text) : $a))) {\n              self.$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), list_item, reader)};\n          };\n        };\n        reader.$shift();\n        block_cursor = reader.$cursor();\n        list_item_reader = $$($nesting, 'Reader').$new(self.$read_lines_for_list_item(reader, list_type, sibling_trait, has_text), block_cursor);\n        if ($truthy(list_item_reader['$has_more_lines?']())) {\n          \n          if ($truthy(sourcemap_assignment_deferred)) {\n            \n            $writer = [block_cursor];\n            $send(list_item, 'source_location=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          comment_lines = list_item_reader.$skip_line_comments();\n          if ($truthy((subsequent_line = list_item_reader.$peek_line()))) {\n            \n            if ($truthy(comment_lines['$empty?']())) {\n            } else {\n              list_item_reader.$unshift_lines(comment_lines)\n            };\n            if ($truthy(subsequent_line['$empty?']())) {\n            } else {\n              \n              content_adjacent = true;\n              if ($truthy(dlist)) {\n              } else {\n                has_text = nil\n              };\n            };};\n          if ($truthy((block = self.$next_block(list_item_reader, list_item, $hash2([], {}), $hash2([\"text_only\", \"list_type\"], {\"text_only\": (function() {if ($truthy(has_text)) {\n            return nil\n          } else {\n            return true\n          }; return nil; })(), \"list_type\": list_type}))))) {\n            list_item.$blocks()['$<<'](block)};\n          while ($truthy(list_item_reader['$has_more_lines?']())) {\n            if ($truthy((block = self.$next_block(list_item_reader, list_item, $hash2([], {}), $hash2([\"list_type\"], {\"list_type\": list_type}))))) {\n              list_item.$blocks()['$<<'](block)}\n          };\n          if ($truthy(($truthy($a = ($truthy($b = content_adjacent) ? (first_block = list_item.$blocks()['$[]'](0)) : $b)) ? first_block.$context()['$=='](\"paragraph\") : $a))) {\n            list_item.$fold_first()};};\n        if ($truthy(dlist)) {\n          return [[list_term], (function() {if ($truthy(($truthy($a = list_item['$text?']()) ? $a : list_item['$blocks?']()))) {\n            return list_item\n          } else {\n            return nil\n          }; return nil; })()]\n        } else {\n          return list_item\n        };\n      }, $Parser_parse_list_item$27.$$arity = -5);\n      Opal.defs(self, '$read_lines_for_list_item', $Parser_read_lines_for_list_item$28 = function $$read_lines_for_list_item(reader, list_type, sibling_trait, has_text) {\n        var $a, $b, $c, $$29, $$30, $$31, $$32, $$33, self = this, buffer = nil, continuation = nil, within_nested_list = nil, detached_continuation = nil, dlist = nil, this_line = nil, prev_line = nil, $writer = nil, match = nil, nested_list_type = nil, last_line = nil;\n\n        \n        \n        if (sibling_trait == null) {\n          sibling_trait = nil;\n        };\n        \n        if (has_text == null) {\n          has_text = true;\n        };\n        buffer = [];\n        continuation = \"inactive\";\n        within_nested_list = false;\n        detached_continuation = nil;\n        dlist = list_type['$=='](\"dlist\");\n        while ($truthy(reader['$has_more_lines?']())) {\n          \n          this_line = reader.$read_line();\n          if ($truthy(self['$is_sibling_list_item?'](this_line, list_type, sibling_trait))) {\n            break;};\n          prev_line = (function() {if ($truthy(buffer['$empty?']())) {\n            return nil\n          } else {\n            return buffer['$[]'](-1)\n          }; return nil; })();\n          if (prev_line['$==']($$($nesting, 'LIST_CONTINUATION'))) {\n            \n            if (continuation['$=='](\"inactive\")) {\n              \n              continuation = \"active\";\n              has_text = true;\n              if ($truthy(within_nested_list)) {\n              } else {\n                \n                $writer = [-1, \"\"];\n                $send(buffer, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };};\n            if (this_line['$==']($$($nesting, 'LIST_CONTINUATION'))) {\n              \n              if ($truthy(continuation['$!='](\"frozen\"))) {\n                \n                continuation = \"frozen\";\n                buffer['$<<'](this_line);};\n              this_line = nil;\n              continue;;};};\n          if ($truthy((match = self['$is_delimited_block?'](this_line, true)))) {\n            if (continuation['$=='](\"active\")) {\n              \n              buffer['$<<'](this_line);\n              buffer.$concat(reader.$read_lines_until($hash2([\"terminator\", \"read_last_line\", \"context\"], {\"terminator\": match.$terminator(), \"read_last_line\": true, \"context\": nil})));\n              continuation = \"inactive\";\n            } else {\n              break;\n            }\n          } else if ($truthy(($truthy($b = ($truthy($c = dlist) ? continuation['$!='](\"active\") : $c)) ? $$($nesting, 'BlockAttributeLineRx')['$match?'](this_line) : $b))) {\n            break;\n          } else if ($truthy((($b = continuation['$=='](\"active\")) ? this_line['$empty?']()['$!']() : continuation['$=='](\"active\")))) {\n            if ($truthy($$($nesting, 'LiteralParagraphRx')['$match?'](this_line))) {\n              \n              reader.$unshift_line(this_line);\n              if ($truthy(dlist)) {\n                buffer.$concat($send(reader, 'read_lines_until', [$hash2([\"preserve_last_line\", \"break_on_blank_lines\", \"break_on_list_continuation\"], {\"preserve_last_line\": true, \"break_on_blank_lines\": true, \"break_on_list_continuation\": true})], ($$29 = function(line){var self = $$29.$$s || this;\n\n                \n                  \n                  if (line == null) {\n                    line = nil;\n                  };\n                  return self['$is_sibling_list_item?'](line, list_type, sibling_trait);}, $$29.$$s = self, $$29.$$arity = 1, $$29)))\n              } else {\n                buffer.$concat(reader.$read_lines_until($hash2([\"preserve_last_line\", \"break_on_blank_lines\", \"break_on_list_continuation\"], {\"preserve_last_line\": true, \"break_on_blank_lines\": true, \"break_on_list_continuation\": true})))\n              };\n              continuation = \"inactive\";\n            } else if ($truthy(($truthy($b = ($truthy($c = $$($nesting, 'BlockTitleRx')['$match?'](this_line)) ? $c : $$($nesting, 'BlockAttributeLineRx')['$match?'](this_line))) ? $b : $$($nesting, 'AttributeEntryRx')['$match?'](this_line)))) {\n              buffer['$<<'](this_line)\n            } else {\n              \n              if ($truthy((nested_list_type = $send((function() {if ($truthy(within_nested_list)) {\n                return [\"dlist\"]\n              } else {\n                return $$($nesting, 'NESTABLE_LIST_CONTEXTS')\n              }; return nil; })(), 'find', [], ($$30 = function(ctx){var self = $$30.$$s || this;\n\n              \n                \n                if (ctx == null) {\n                  ctx = nil;\n                };\n                return $$($nesting, 'ListRxMap')['$[]'](ctx)['$match?'](this_line);}, $$30.$$s = self, $$30.$$arity = 1, $$30))))) {\n                \n                within_nested_list = true;\n                if ($truthy((($b = nested_list_type['$=='](\"dlist\")) ? (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))['$nil_or_empty?']() : nested_list_type['$=='](\"dlist\")))) {\n                  has_text = false};};\n              buffer['$<<'](this_line);\n              continuation = \"inactive\";\n            }\n          } else if ($truthy(($truthy($b = prev_line) ? prev_line['$empty?']() : $b))) {\n            \n            if ($truthy(this_line['$empty?']())) {\n              \n              if ($truthy((this_line = ($truthy($b = reader.$skip_blank_lines()) ? reader.$read_line() : $b)))) {\n              } else {\n                break;\n              };\n              if ($truthy(self['$is_sibling_list_item?'](this_line, list_type, sibling_trait))) {\n                break;};};\n            if (this_line['$==']($$($nesting, 'LIST_CONTINUATION'))) {\n              \n              detached_continuation = buffer.$size();\n              buffer['$<<'](this_line);\n            } else if ($truthy(has_text)) {\n              if ($truthy(self['$is_sibling_list_item?'](this_line, list_type, sibling_trait))) {\n                break;\n              } else if ($truthy((nested_list_type = $send($$($nesting, 'NESTABLE_LIST_CONTEXTS'), 'find', [], ($$31 = function(ctx){var self = $$31.$$s || this;\n\n              \n                \n                if (ctx == null) {\n                  ctx = nil;\n                };\n                return $$($nesting, 'ListRxMap')['$[]'](ctx)['$=~'](this_line);}, $$31.$$s = self, $$31.$$arity = 1, $$31))))) {\n                \n                buffer['$<<'](this_line);\n                within_nested_list = true;\n                if ($truthy((($b = nested_list_type['$=='](\"dlist\")) ? (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))['$nil_or_empty?']() : nested_list_type['$=='](\"dlist\")))) {\n                  has_text = false};\n              } else if ($truthy($$($nesting, 'LiteralParagraphRx')['$match?'](this_line))) {\n                \n                reader.$unshift_line(this_line);\n                if ($truthy(dlist)) {\n                  buffer.$concat($send(reader, 'read_lines_until', [$hash2([\"preserve_last_line\", \"break_on_blank_lines\", \"break_on_list_continuation\"], {\"preserve_last_line\": true, \"break_on_blank_lines\": true, \"break_on_list_continuation\": true})], ($$32 = function(line){var self = $$32.$$s || this;\n\n                  \n                    \n                    if (line == null) {\n                      line = nil;\n                    };\n                    return self['$is_sibling_list_item?'](line, list_type, sibling_trait);}, $$32.$$s = self, $$32.$$arity = 1, $$32)))\n                } else {\n                  buffer.$concat(reader.$read_lines_until($hash2([\"preserve_last_line\", \"break_on_blank_lines\", \"break_on_list_continuation\"], {\"preserve_last_line\": true, \"break_on_blank_lines\": true, \"break_on_list_continuation\": true})))\n                };\n              } else {\n                break;\n              }\n            } else {\n              \n              if ($truthy(within_nested_list)) {\n              } else {\n                buffer.$pop()\n              };\n              buffer['$<<'](this_line);\n              has_text = true;\n            };\n          } else {\n            \n            if ($truthy(this_line['$empty?']())) {\n            } else {\n              has_text = true\n            };\n            if ($truthy((nested_list_type = $send((function() {if ($truthy(within_nested_list)) {\n              return [\"dlist\"]\n            } else {\n              return $$($nesting, 'NESTABLE_LIST_CONTEXTS')\n            }; return nil; })(), 'find', [], ($$33 = function(ctx){var self = $$33.$$s || this;\n\n            \n              \n              if (ctx == null) {\n                ctx = nil;\n              };\n              return $$($nesting, 'ListRxMap')['$[]'](ctx)['$=~'](this_line);}, $$33.$$s = self, $$33.$$arity = 1, $$33))))) {\n              \n              within_nested_list = true;\n              if ($truthy((($b = nested_list_type['$=='](\"dlist\")) ? (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))['$nil_or_empty?']() : nested_list_type['$=='](\"dlist\")))) {\n                has_text = false};};\n            buffer['$<<'](this_line);\n          };\n          this_line = nil;\n        };\n        if ($truthy(this_line)) {\n          reader.$unshift_line(this_line)};\n        if ($truthy(detached_continuation)) {\n          \n          $writer = [detached_continuation, \"\"];\n          $send(buffer, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        while (!($truthy(buffer['$empty?']()))) {\n          if ($truthy((last_line = buffer['$[]'](-1))['$empty?']())) {\n            buffer.$pop()\n          } else {\n            \n            if (last_line['$==']($$($nesting, 'LIST_CONTINUATION'))) {\n              buffer.$pop()};\n            break;;\n          }\n        };\n        return buffer;\n      }, $Parser_read_lines_for_list_item$28.$$arity = -3);\n      Opal.defs(self, '$initialize_section', $Parser_initialize_section$34 = function $$initialize_section(reader, parent, attributes) {\n        var $a, $b, self = this, document = nil, book = nil, doctype = nil, source_location = nil, sect_style = nil, sect_id = nil, sect_reftext = nil, sect_title = nil, sect_level = nil, sect_atx = nil, $writer = nil, sect_name = nil, sect_special = nil, sect_numbered = nil, section = nil, id = nil, generated_id = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        document = parent.$document();\n        book = (doctype = document.$doctype())['$=='](\"book\");\n        if ($truthy(document.$sourcemap())) {\n          source_location = reader.$cursor()};\n        sect_style = attributes['$[]'](1);\n        $b = self.$parse_section_title(reader, document, attributes['$[]'](\"id\")), $a = Opal.to_ary($b), (sect_id = ($a[0] == null ? nil : $a[0])), (sect_reftext = ($a[1] == null ? nil : $a[1])), (sect_title = ($a[2] == null ? nil : $a[2])), (sect_level = ($a[3] == null ? nil : $a[3])), (sect_atx = ($a[4] == null ? nil : $a[4])), $b;\n        if ($truthy(sect_reftext)) {\n          \n          $writer = [\"reftext\", sect_reftext];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        } else {\n          sect_reftext = attributes['$[]'](\"reftext\")\n        };\n        if ($truthy(sect_style)) {\n          if ($truthy(($truthy($a = book) ? sect_style['$=='](\"abstract\") : $a))) {\n            $a = [\"chapter\", 1], (sect_name = $a[0]), (sect_level = $a[1]), $a\n          } else if ($truthy(($truthy($a = sect_style['$start_with?'](\"sect\")) ? $$($nesting, 'SectionLevelStyleRx')['$match?'](sect_style) : $a))) {\n            sect_name = \"section\"\n          } else {\n            \n            $a = [sect_style, true], (sect_name = $a[0]), (sect_special = $a[1]), $a;\n            if (sect_level['$=='](0)) {\n              sect_level = 1};\n            sect_numbered = sect_name['$=='](\"appendix\");\n          }\n        } else if ($truthy(book)) {\n          sect_name = (function() {if (sect_level['$=='](0)) {\n            return \"part\"\n          } else {\n            \n            if ($truthy($rb_gt(sect_level, 1))) {\n              return \"section\"\n            } else {\n              return \"chapter\"\n            };\n          }; return nil; })()\n        } else if ($truthy((($a = doctype['$=='](\"manpage\")) ? sect_title.$casecmp(\"synopsis\")['$=='](0) : doctype['$=='](\"manpage\")))) {\n          $a = [\"synopsis\", true], (sect_name = $a[0]), (sect_special = $a[1]), $a\n        } else {\n          sect_name = \"section\"\n        };\n        section = $$($nesting, 'Section').$new(parent, sect_level);\n        $a = [sect_id, sect_title, sect_name, source_location], section['$id=']($a[0]), section['$title=']($a[1]), section['$sectname=']($a[2]), section['$source_location=']($a[3]), $a;\n        if ($truthy(sect_special)) {\n          \n          \n          $writer = [true];\n          $send(section, 'special=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(sect_numbered)) {\n            \n            $writer = [true];\n            $send(section, 'numbered=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else if (document.$attributes()['$[]'](\"sectnums\")['$=='](\"all\")) {\n            \n            $writer = [(function() {if ($truthy(($truthy($a = book) ? sect_level['$=='](1) : $a))) {\n              return \"chapter\"\n            } else {\n              return true\n            }; return nil; })()];\n            $send(section, 'numbered=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n        } else if ($truthy(($truthy($a = document.$attributes()['$[]'](\"sectnums\")) ? $rb_gt(sect_level, 0) : $a))) {\n          \n          $writer = [(function() {if ($truthy(section.$special())) {\n            return ($truthy($a = parent.$numbered()) ? true : $a)\n          } else {\n            return true\n          }; return nil; })()];\n          $send(section, 'numbered=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        } else if ($truthy(($truthy($a = ($truthy($b = book) ? sect_level['$=='](0) : $b)) ? document.$attributes()['$[]'](\"partnums\") : $a))) {\n          \n          $writer = [true];\n          $send(section, 'numbered=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy((id = ($truthy($a = section.$id()) ? $a : (($writer = [(function() {if ($truthy(document.$attributes()['$key?'](\"sectids\"))) {\n          \n          return (generated_id = $$($nesting, 'Section').$generate_id(section.$title(), document));\n        } else {\n          return nil\n        }; return nil; })()]), $send(section, 'id=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))))) {\n          \n          if ($truthy(generated_id)) {\n          } else if ($truthy(sect_title['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n            section.$title()};\n          if ($truthy(document.$register(\"refs\", [id, section]))) {\n          } else {\n            self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to section already in use: \" + (id), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_line($rb_minus(reader.$lineno(), (function() {if ($truthy(sect_atx)) {\n              return 1\n            } else {\n              return 2\n            }; return nil; })()))})))\n          };};\n        section.$update_attributes(attributes);\n        reader.$skip_blank_lines();\n        return section;\n      }, $Parser_initialize_section$34.$$arity = -3);\n      Opal.defs(self, '$is_next_line_section?', $Parser_is_next_line_section$ques$35 = function(reader, attributes) {\n        var $a, $b, self = this, style = nil, next_lines = nil;\n\n        if ($truthy(($truthy($a = (style = attributes['$[]'](1))) ? ($truthy($b = style['$=='](\"discrete\")) ? $b : style['$=='](\"float\")) : $a))) {\n          return nil\n        } else if ($truthy($$($nesting, 'Compliance').$underline_style_section_titles())) {\n          \n          next_lines = reader.$peek_lines(2, ($truthy($a = style) ? style['$=='](\"comment\") : $a));\n          return self['$is_section_title?'](($truthy($a = next_lines['$[]'](0)) ? $a : \"\"), next_lines['$[]'](1));\n        } else {\n          return self['$atx_section_title?'](($truthy($a = reader.$peek_line()) ? $a : \"\"))\n        }\n      }, $Parser_is_next_line_section$ques$35.$$arity = 2);\n      Opal.defs(self, '$is_next_line_doctitle?', $Parser_is_next_line_doctitle$ques$36 = function(reader, attributes, leveloffset) {\n        var $a, self = this, sect_level = nil;\n\n        if ($truthy(leveloffset)) {\n          return ($truthy($a = (sect_level = self['$is_next_line_section?'](reader, attributes))) ? $rb_plus(sect_level, leveloffset.$to_i())['$=='](0) : $a)\n        } else {\n          return self['$is_next_line_section?'](reader, attributes)['$=='](0)\n        }\n      }, $Parser_is_next_line_doctitle$ques$36.$$arity = 3);\n      Opal.defs(self, '$is_section_title?', $Parser_is_section_title$ques$37 = function(line1, line2) {\n        var $a, self = this;\n\n        \n        \n        if (line2 == null) {\n          line2 = nil;\n        };\n        return ($truthy($a = self['$atx_section_title?'](line1)) ? $a : (function() {if ($truthy(line2['$nil_or_empty?']())) {\n          return nil\n        } else {\n          return self['$setext_section_title?'](line1, line2)\n        }; return nil; })());\n      }, $Parser_is_section_title$ques$37.$$arity = -2);\n      Opal.defs(self, '$atx_section_title?', $Parser_atx_section_title$ques$38 = function(line) {\n        var $a, self = this;\n\n        if ($truthy((function() {if ($truthy($$($nesting, 'Compliance').$markdown_syntax())) {\n          \n          return ($truthy($a = line['$start_with?'](\"=\", \"#\")) ? $$($nesting, 'ExtAtxSectionTitleRx')['$=~'](line) : $a);\n        } else {\n          \n          return ($truthy($a = line['$start_with?'](\"=\")) ? $$($nesting, 'AtxSectionTitleRx')['$=~'](line) : $a);\n        }; return nil; })())) {\n          return $rb_minus((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)).$length(), 1)\n        } else {\n          return nil\n        }\n      }, $Parser_atx_section_title$ques$38.$$arity = 1);\n      Opal.defs(self, '$setext_section_title?', $Parser_setext_section_title$ques$39 = function(line1, line2) {\n        var $a, $b, $c, self = this, level = nil, line2_ch0 = nil, line2_len = nil;\n\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = (level = $$($nesting, 'SETEXT_SECTION_LEVELS')['$[]']((line2_ch0 = line2.$chr())))) ? self['$uniform?'](line2, line2_ch0, (line2_len = line2.$length())) : $c)) ? $$($nesting, 'SetextSectionTitleRx')['$match?'](line1) : $b)) ? $rb_lt($rb_minus(line1.$length(), line2_len).$abs(), 2) : $a))) {\n          return level\n        } else {\n          return nil\n        }\n      }, $Parser_setext_section_title$ques$39.$$arity = 2);\n      Opal.defs(self, '$parse_section_title', $Parser_parse_section_title$40 = function $$parse_section_title(reader, document, sect_id) {\n        var $a, $b, $c, $d, $e, self = this, sect_reftext = nil, line1 = nil, sect_level = nil, sect_title = nil, atx = nil, line2 = nil, line2_ch0 = nil, line2_len = nil;\n\n        \n        \n        if (sect_id == null) {\n          sect_id = nil;\n        };\n        sect_reftext = nil;\n        line1 = reader.$read_line();\n        if ($truthy((function() {if ($truthy($$($nesting, 'Compliance').$markdown_syntax())) {\n          \n          return ($truthy($a = line1['$start_with?'](\"=\", \"#\")) ? $$($nesting, 'ExtAtxSectionTitleRx')['$=~'](line1) : $a);\n        } else {\n          \n          return ($truthy($a = line1['$start_with?'](\"=\")) ? $$($nesting, 'AtxSectionTitleRx')['$=~'](line1) : $a);\n        }; return nil; })())) {\n          \n          $a = [$rb_minus((($b = $gvars['~']) === nil ? nil : $b['$[]'](1)).$length(), 1), (($b = $gvars['~']) === nil ? nil : $b['$[]'](2)), true], (sect_level = $a[0]), (sect_title = $a[1]), (atx = $a[2]), $a;\n          if ($truthy(sect_id)) {\n          } else if ($truthy(($truthy($a = ($truthy($b = sect_title['$end_with?'](\"]]\")) ? $$($nesting, 'InlineSectionAnchorRx')['$=~'](sect_title) : $b)) ? (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))['$!']() : $a))) {\n            $a = [sect_title.$slice(0, $rb_minus(sect_title.$length(), (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)).$length())), (($b = $gvars['~']) === nil ? nil : $b['$[]'](2)), (($b = $gvars['~']) === nil ? nil : $b['$[]'](3))], (sect_title = $a[0]), (sect_id = $a[1]), (sect_reftext = $a[2]), $a};\n        } else if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = ($truthy($d = ($truthy($e = $$($nesting, 'Compliance').$underline_style_section_titles()) ? (line2 = reader.$peek_line(true)) : $e)) ? (sect_level = $$($nesting, 'SETEXT_SECTION_LEVELS')['$[]']((line2_ch0 = line2.$chr()))) : $d)) ? self['$uniform?'](line2, line2_ch0, (line2_len = line2.$length())) : $c)) ? (sect_title = ($truthy($c = $$($nesting, 'SetextSectionTitleRx')['$=~'](line1)) ? (($d = $gvars['~']) === nil ? nil : $d['$[]'](1)) : $c)) : $b)) ? $rb_lt($rb_minus(line1.$length(), line2_len).$abs(), 2) : $a))) {\n          \n          atx = false;\n          if ($truthy(sect_id)) {\n          } else if ($truthy(($truthy($a = ($truthy($b = sect_title['$end_with?'](\"]]\")) ? $$($nesting, 'InlineSectionAnchorRx')['$=~'](sect_title) : $b)) ? (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))['$!']() : $a))) {\n            $a = [sect_title.$slice(0, $rb_minus(sect_title.$length(), (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)).$length())), (($b = $gvars['~']) === nil ? nil : $b['$[]'](2)), (($b = $gvars['~']) === nil ? nil : $b['$[]'](3))], (sect_title = $a[0]), (sect_id = $a[1]), (sect_reftext = $a[2]), $a};\n          reader.$shift();\n        } else {\n          self.$raise(\"\" + \"Unrecognized section at \" + (reader.$cursor_at_prev_line()))\n        };\n        if ($truthy(document['$attr?'](\"leveloffset\"))) {\n          \n          sect_level = $rb_plus(sect_level, document.$attr(\"leveloffset\").$to_i());\n          if ($truthy($rb_lt(sect_level, 0))) {\n            sect_level = 0};};\n        return [sect_id, sect_reftext, sect_title, sect_level, atx];\n      }, $Parser_parse_section_title$40.$$arity = -3);\n      Opal.defs(self, '$parse_header_metadata', $Parser_parse_header_metadata$41 = function $$parse_header_metadata(reader, document) {\n        var $a, $$42, $$43, $$44, self = this, doc_attrs = nil, implicit_authors = nil, metadata = nil, implicit_author = nil, implicit_authorinitials = nil, author_metadata = nil, rev_metadata = nil, rev_line = nil, match = nil, $writer = nil, component = nil, author_line = nil, authors = nil, author_idx = nil, author_key = nil, explicit = nil, sparse = nil, author_override = nil;\n\n        \n        \n        if (document == null) {\n          document = nil;\n        };\n        doc_attrs = ($truthy($a = document) ? document.$attributes() : $a);\n        self.$process_attribute_entries(reader, document);\n        $a = [(implicit_authors = $hash2([], {})), nil, nil], (metadata = $a[0]), (implicit_author = $a[1]), (implicit_authorinitials = $a[2]), $a;\n        if ($truthy(($truthy($a = reader['$has_more_lines?']()) ? reader['$next_line_empty?']()['$!']() : $a))) {\n          \n          if ($truthy((author_metadata = self.$process_authors(reader.$read_line()))['$empty?']())) {\n          } else {\n            \n            if ($truthy(document)) {\n              \n              $send(author_metadata, 'each', [], ($$42 = function(key, val){var self = $$42.$$s || this, $writer = nil;\n\n              \n                \n                if (key == null) {\n                  key = nil;\n                };\n                \n                if (val == null) {\n                  val = nil;\n                };\n                if ($truthy(doc_attrs['$key?'](key))) {\n                  return nil\n                } else {\n                  \n                  $writer = [key, (function() {if ($truthy($$$('::', 'String')['$==='](val))) {\n                    \n                    return document.$apply_header_subs(val);\n                  } else {\n                    return val\n                  }; return nil; })()];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                };}, $$42.$$s = self, $$42.$$arity = 2, $$42));\n              implicit_author = doc_attrs['$[]'](\"author\");\n              implicit_authorinitials = doc_attrs['$[]'](\"authorinitials\");\n              implicit_authors = doc_attrs['$[]'](\"authors\");};\n            metadata = author_metadata;\n          };\n          self.$process_attribute_entries(reader, document);\n          rev_metadata = $hash2([], {});\n          if ($truthy(($truthy($a = reader['$has_more_lines?']()) ? reader['$next_line_empty?']()['$!']() : $a))) {\n            \n            rev_line = reader.$read_line();\n            if ($truthy((match = $$($nesting, 'RevisionInfoLineRx').$match(rev_line)))) {\n              \n              if ($truthy(match['$[]'](1))) {\n                \n                $writer = [\"revnumber\", match['$[]'](1).$rstrip()];\n                $send(rev_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              if ($truthy((component = match['$[]'](2).$strip())['$empty?']())) {\n              } else if ($truthy(($truthy($a = match['$[]'](1)['$!']()) ? component['$start_with?'](\"v\") : $a))) {\n                \n                $writer = [\"revnumber\", component.$slice(1, component.$length())];\n                $send(rev_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              } else {\n                \n                $writer = [\"revdate\", component];\n                $send(rev_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n              if ($truthy(match['$[]'](3))) {\n                \n                $writer = [\"revremark\", match['$[]'](3).$rstrip()];\n                $send(rev_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n            } else {\n              reader.$unshift_line(rev_line)\n            };};\n          if ($truthy(rev_metadata['$empty?']())) {\n          } else {\n            \n            if ($truthy(document)) {\n              $send(rev_metadata, 'each', [], ($$43 = function(key, val){var self = $$43.$$s || this;\n\n              \n                \n                if (key == null) {\n                  key = nil;\n                };\n                \n                if (val == null) {\n                  val = nil;\n                };\n                if ($truthy(doc_attrs['$key?'](key))) {\n                  return nil\n                } else {\n                  \n                  $writer = [key, document.$apply_header_subs(val)];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                };}, $$43.$$s = self, $$43.$$arity = 2, $$43))};\n            metadata.$update(rev_metadata);\n          };\n          self.$process_attribute_entries(reader, document);\n          reader.$skip_blank_lines();\n        } else {\n          author_metadata = $hash2([], {})\n        };\n        if ($truthy(document)) {\n          \n          if ($truthy(($truthy($a = doc_attrs['$key?'](\"author\")) ? (author_line = doc_attrs['$[]'](\"author\"))['$!='](implicit_author) : $a))) {\n            \n            author_metadata = self.$process_authors(author_line, true, false);\n            if ($truthy(doc_attrs['$[]'](\"authorinitials\")['$!='](implicit_authorinitials))) {\n              author_metadata.$delete(\"authorinitials\")};\n          } else if ($truthy(($truthy($a = doc_attrs['$key?'](\"authors\")) ? (author_line = doc_attrs['$[]'](\"authors\"))['$!='](implicit_authors) : $a))) {\n            author_metadata = self.$process_authors(author_line, true)\n          } else {\n            \n            $a = [[], 1, \"author_1\", false, false], (authors = $a[0]), (author_idx = $a[1]), (author_key = $a[2]), (explicit = $a[3]), (sparse = $a[4]), $a;\n            while ($truthy(doc_attrs['$key?'](author_key))) {\n              \n              if ((author_override = doc_attrs['$[]'](author_key))['$=='](author_metadata['$[]'](author_key))) {\n                \n                authors['$<<'](nil);\n                sparse = true;\n              } else {\n                \n                authors['$<<'](author_override);\n                explicit = true;\n              };\n              author_key = \"\" + \"author_\" + ((author_idx = $rb_plus(author_idx, 1)));\n            };\n            if ($truthy(explicit)) {\n              \n              if ($truthy(sparse)) {\n                $send(authors, 'each_with_index', [], ($$44 = function(author, idx){var self = $$44.$$s || this, $$45, name_idx = nil;\n\n                \n                  \n                  if (author == null) {\n                    author = nil;\n                  };\n                  \n                  if (idx == null) {\n                    idx = nil;\n                  };\n                  if ($truthy(author)) {\n                    return nil\n                  } else {\n                    \n                    $writer = [idx, $send([author_metadata['$[]'](\"\" + \"firstname_\" + ((name_idx = $rb_plus(idx, 1)))), author_metadata['$[]'](\"\" + \"middlename_\" + (name_idx)), author_metadata['$[]'](\"\" + \"lastname_\" + (name_idx))].$compact(), 'map', [], ($$45 = function(it){var self = $$45.$$s || this;\n\n                    \n                      \n                      if (it == null) {\n                        it = nil;\n                      };\n                      return it.$tr(\" \", \"_\");}, $$45.$$s = self, $$45.$$arity = 1, $$45)).$join(\" \")];\n                    $send(authors, '[]=', Opal.to_a($writer));\n                    return $writer[$rb_minus($writer[\"length\"], 1)];\n                  };}, $$44.$$s = self, $$44.$$arity = 2, $$44))};\n              author_metadata = self.$process_authors(authors, true, false);\n            } else {\n              author_metadata = $hash2([], {})\n            };\n          };\n          if ($truthy(author_metadata['$empty?']())) {\n            ($truthy($a = metadata['$[]'](\"authorcount\")) ? $a : (($writer = [\"authorcount\", (($writer = [\"authorcount\", 0]), $send(doc_attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])]), $send(metadata, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n          } else {\n            \n            doc_attrs.$update(author_metadata);\n            if ($truthy(($truthy($a = doc_attrs['$key?'](\"email\")['$!']()) ? doc_attrs['$key?'](\"email_1\") : $a))) {\n              \n              $writer = [\"email\", doc_attrs['$[]'](\"email_1\")];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n          };};\n        return metadata;\n      }, $Parser_parse_header_metadata$41.$$arity = -2);\n      Opal.defs(self, '$process_authors', $Parser_process_authors$46 = function $$process_authors(author_line, names_only, multiple) {\n        var $a, $$47, self = this, author_metadata = nil, author_idx = nil, $writer = nil;\n\n        \n        \n        if (names_only == null) {\n          names_only = false;\n        };\n        \n        if (multiple == null) {\n          multiple = true;\n        };\n        author_metadata = $hash2([], {});\n        author_idx = 0;\n        $send((function() {if ($truthy(($truthy($a = multiple) ? author_line['$include?'](\";\") : $a))) {\n          \n          return author_line.$split($$($nesting, 'AuthorDelimiterRx'));\n        } else {\n          return [].concat(Opal.to_a(author_line))\n        }; return nil; })(), 'each', [], ($$47 = function(author_entry){var self = $$47.$$s || this, $$48, $$49, $b, $$50, key_map = nil, $writer = nil, segments = nil, match = nil, author = nil, fname = nil, mname = nil, lname = nil;\n\n        \n          \n          if (author_entry == null) {\n            author_entry = nil;\n          };\n          if ($truthy(author_entry['$empty?']())) {\n            return nil;};\n          key_map = $hash2([], {});\n          if ((author_idx = $rb_plus(author_idx, 1))['$=='](1)) {\n            $send($$($nesting, 'AuthorKeys'), 'each', [], ($$48 = function(key){var self = $$48.$$s || this, $writer = nil;\n\n            \n              \n              if (key == null) {\n                key = nil;\n              };\n              $writer = [key.$to_sym(), key];\n              $send(key_map, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];}, $$48.$$s = self, $$48.$$arity = 1, $$48))\n          } else {\n            $send($$($nesting, 'AuthorKeys'), 'each', [], ($$49 = function(key){var self = $$49.$$s || this, $writer = nil;\n\n            \n              \n              if (key == null) {\n                key = nil;\n              };\n              $writer = [key.$to_sym(), \"\" + (key) + \"_\" + (author_idx)];\n              $send(key_map, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];}, $$49.$$s = self, $$49.$$arity = 1, $$49))\n          };\n          if ($truthy(names_only)) {\n            \n            if ($truthy(author_entry['$include?'](\"<\"))) {\n              \n              \n              $writer = [key_map['$[]'](\"author\"), author_entry.$tr(\"_\", \" \")];\n              $send(author_metadata, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              author_entry = author_entry.$gsub($$($nesting, 'XmlSanitizeRx'), \"\");};\n            if ((segments = author_entry.$split(nil, 3)).$size()['$=='](3)) {\n              segments['$<<'](segments.$pop().$squeeze(\" \"))};\n          } else if ($truthy((match = $$($nesting, 'AuthorInfoLineRx').$match(author_entry)))) {\n            (segments = match.$to_a()).$shift()};\n          if ($truthy(segments)) {\n            \n            author = (($writer = [key_map['$[]'](\"firstname\"), (fname = segments['$[]'](0).$tr(\"_\", \" \"))]), $send(author_metadata, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]);\n            \n            $writer = [key_map['$[]'](\"authorinitials\"), fname.$chr()];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy(segments['$[]'](1))) {\n              if ($truthy(segments['$[]'](2))) {\n                \n                \n                $writer = [key_map['$[]'](\"middlename\"), (mname = segments['$[]'](1).$tr(\"_\", \" \"))];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                \n                $writer = [key_map['$[]'](\"lastname\"), (lname = segments['$[]'](2).$tr(\"_\", \" \"))];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                author = $rb_plus($rb_plus($rb_plus($rb_plus(fname, \" \"), mname), \" \"), lname);\n                \n                $writer = [key_map['$[]'](\"authorinitials\"), \"\" + (fname.$chr()) + (mname.$chr()) + (lname.$chr())];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n              } else {\n                \n                \n                $writer = [key_map['$[]'](\"lastname\"), (lname = segments['$[]'](1).$tr(\"_\", \" \"))];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                author = $rb_plus($rb_plus(fname, \" \"), lname);\n                \n                $writer = [key_map['$[]'](\"authorinitials\"), \"\" + (fname.$chr()) + (lname.$chr())];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n              }};\n            ($truthy($b = author_metadata['$[]'](key_map['$[]'](\"author\"))) ? $b : (($writer = [key_map['$[]'](\"author\"), author]), $send(author_metadata, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n            if ($truthy(($truthy($b = names_only) ? $b : segments['$[]'](3)['$!']()))) {\n            } else {\n              \n              $writer = [key_map['$[]'](\"email\"), segments['$[]'](3)];\n              $send(author_metadata, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n          } else {\n            \n            \n            $writer = [key_map['$[]'](\"author\"), (($writer = [key_map['$[]'](\"firstname\"), (fname = author_entry.$squeeze(\" \").$strip())]), $send(author_metadata, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [key_map['$[]'](\"authorinitials\"), fname.$chr()];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          };\n          if (author_idx['$=='](1)) {\n            \n            $writer = [\"authors\", author_metadata['$[]'](key_map['$[]'](\"author\"))];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            \n            if (author_idx['$=='](2)) {\n              $send($$($nesting, 'AuthorKeys'), 'each', [], ($$50 = function(key){var self = $$50.$$s || this;\n\n              \n                \n                if (key == null) {\n                  key = nil;\n                };\n                if ($truthy(author_metadata['$key?'](key))) {\n                  \n                  $writer = [\"\" + (key) + \"_1\", author_metadata['$[]'](key)];\n                  $send(author_metadata, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                } else {\n                  return nil\n                };}, $$50.$$s = self, $$50.$$arity = 1, $$50))};\n            \n            $writer = [\"authors\", \"\" + (author_metadata['$[]'](\"authors\")) + \", \" + (author_metadata['$[]'](key_map['$[]'](\"author\")))];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          };}, $$47.$$s = self, $$47.$$arity = 1, $$47));\n        \n        $writer = [\"authorcount\", author_idx];\n        $send(author_metadata, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        return author_metadata;\n      }, $Parser_process_authors$46.$$arity = -2);\n      Opal.defs(self, '$parse_block_metadata_lines', $Parser_parse_block_metadata_lines$51 = function $$parse_block_metadata_lines(reader, document, attributes, options) {\n        var $a, $b, self = this;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        while ($truthy(self.$parse_block_metadata_line(reader, document, attributes, options))) {\n          \n          reader.$shift();\n          if ($truthy($b = reader.$skip_blank_lines())) {\n            $b\n          } else {\n            break;\n          };\n        };\n        return attributes;\n      }, $Parser_parse_block_metadata_lines$51.$$arity = -3);\n      Opal.defs(self, '$parse_block_metadata_line', $Parser_parse_block_metadata_line$52 = function $$parse_block_metadata_line(reader, document, attributes, options) {\n        var $a, $b, self = this, next_line = nil, normal = nil, $writer = nil, reftext = nil, current_style = nil, ll = nil;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        if ($truthy(($truthy($a = (next_line = reader.$peek_line())) ? (function() {if ($truthy(options['$[]'](\"text_only\"))) {\n          \n          return next_line['$start_with?'](\"[\", \"/\");\n        } else {\n          \n          return (normal = next_line['$start_with?'](\"[\", \".\", \"/\", \":\"));\n        }; return nil; })() : $a))) {\n          if ($truthy(next_line['$start_with?'](\"[\"))) {\n            if ($truthy(next_line['$start_with?'](\"[[\"))) {\n              if ($truthy(($truthy($a = next_line['$end_with?'](\"]]\")) ? $$($nesting, 'BlockAnchorRx')['$=~'](next_line) : $a))) {\n                \n                \n                $writer = [\"id\", (($a = $gvars['~']) === nil ? nil : $a['$[]'](1))];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                if ($truthy((reftext = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2))))) {\n                  \n                  $writer = [\"reftext\", (function() {if ($truthy(reftext['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                    \n                    return document.$sub_attributes(reftext);\n                  } else {\n                    return reftext\n                  }; return nil; })()];\n                  $send(attributes, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n                return true;\n              } else {\n                return nil\n              }\n            } else if ($truthy(($truthy($a = next_line['$end_with?'](\"]\")) ? $$($nesting, 'BlockAttributeListRx')['$=~'](next_line) : $a))) {\n              \n              current_style = attributes['$[]'](1);\n              if ($truthy(document.$parse_attributes((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), [], $hash2([\"sub_input\", \"sub_result\", \"into\"], {\"sub_input\": true, \"sub_result\": true, \"into\": attributes}))['$[]'](1))) {\n                \n                $writer = [1, ($truthy($a = self.$parse_style_attribute(attributes, reader)) ? $a : current_style)];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              return true;\n            } else {\n              return nil\n            }\n          } else if ($truthy(($truthy($a = normal) ? next_line['$start_with?'](\".\") : $a))) {\n            if ($truthy($$($nesting, 'BlockTitleRx')['$=~'](next_line))) {\n              \n              \n              $writer = [\"title\", (($a = $gvars['~']) === nil ? nil : $a['$[]'](1))];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              return true;\n            } else {\n              return nil\n            }\n          } else if ($truthy(($truthy($a = normal['$!']()) ? $a : next_line['$start_with?'](\"/\")))) {\n            if ($truthy(next_line['$start_with?'](\"//\"))) {\n              if (next_line['$=='](\"//\")) {\n                return true\n              } else if ($truthy(($truthy($a = normal) ? self['$uniform?'](next_line, \"/\", (ll = next_line.$length())) : $a))) {\n                if (ll['$=='](3)) {\n                  return nil\n                } else {\n                  \n                  reader.$read_lines_until($hash2([\"terminator\", \"skip_first_line\", \"preserve_last_line\", \"skip_processing\", \"context\"], {\"terminator\": next_line, \"skip_first_line\": true, \"preserve_last_line\": true, \"skip_processing\": true, \"context\": \"comment\"}));\n                  return true;\n                }\n              } else if ($truthy(next_line['$start_with?'](\"///\"))) {\n                return nil\n              } else {\n                return true\n              }\n            } else {\n              return nil\n            }\n          } else if ($truthy(($truthy($a = ($truthy($b = normal) ? next_line['$start_with?'](\":\") : $b)) ? $$($nesting, 'AttributeEntryRx')['$=~'](next_line) : $a))) {\n            \n            self.$process_attribute_entry(reader, document, attributes, $gvars[\"~\"]);\n            return true;\n          } else {\n            return nil\n          }\n        } else {\n          return nil\n        };\n      }, $Parser_parse_block_metadata_line$52.$$arity = -4);\n      Opal.defs(self, '$process_attribute_entries', $Parser_process_attribute_entries$53 = function $$process_attribute_entries(reader, document, attributes) {\n        var $a, self = this;\n\n        \n        \n        if (attributes == null) {\n          attributes = nil;\n        };\n        reader.$skip_comment_lines();\n        while ($truthy(self.$process_attribute_entry(reader, document, attributes))) {\n          \n          reader.$shift();\n          reader.$skip_comment_lines();\n        };\n      }, $Parser_process_attribute_entries$53.$$arity = -3);\n      Opal.defs(self, '$process_attribute_entry', $Parser_process_attribute_entry$54 = function $$process_attribute_entry(reader, document, attributes, match) {\n        var $a, $b, $c, self = this, value = nil, con = nil, next_line = nil, keep_open = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = nil;\n        };\n        \n        if (match == null) {\n          match = nil;\n        };\n        if ($truthy(($truthy($a = match) ? $a : (match = (function() {if ($truthy(reader['$has_more_lines?']())) {\n          \n          return $$($nesting, 'AttributeEntryRx').$match(reader.$peek_line());\n        } else {\n          return nil\n        }; return nil; })())))) {\n          \n          if ($truthy((value = match['$[]'](2))['$nil_or_empty?']())) {\n            value = \"\"\n          } else if ($truthy(value['$end_with?']($$($nesting, 'LINE_CONTINUATION'), $$($nesting, 'LINE_CONTINUATION_LEGACY')))) {\n            \n            $a = [value.$slice($rb_minus(value.$length(), 2), 2), value.$slice(0, $rb_minus(value.$length(), 2)).$rstrip()], (con = $a[0]), (value = $a[1]), $a;\n            while ($truthy(($truthy($b = reader.$advance()) ? (next_line = ($truthy($c = reader.$peek_line()) ? $c : \"\"))['$empty?']()['$!']() : $b))) {\n              \n              next_line = next_line.$lstrip();\n              if ($truthy((keep_open = next_line['$end_with?'](con)))) {\n                next_line = next_line.$slice(0, $rb_minus(next_line.$length(), 2)).$rstrip()};\n              value = \"\" + (value) + ((function() {if ($truthy(value['$end_with?']($$($nesting, 'HARD_LINE_BREAK')))) {\n                return $$($nesting, 'LF')\n              } else {\n                return \" \"\n              }; return nil; })()) + (next_line);\n              if ($truthy(keep_open)) {\n              } else {\n                break;\n              };\n            };};\n          self.$store_attribute(match['$[]'](1), value, document, attributes);\n          return true;\n        } else {\n          return nil\n        };\n      }, $Parser_process_attribute_entry$54.$$arity = -3);\n      Opal.defs(self, '$store_attribute', $Parser_store_attribute$55 = function $$store_attribute(name, value, doc, attrs) {\n        var $a, self = this, resolved_value = nil;\n\n        \n        \n        if (doc == null) {\n          doc = nil;\n        };\n        \n        if (attrs == null) {\n          attrs = nil;\n        };\n        if ($truthy(name['$end_with?'](\"!\"))) {\n          \n          name = name.$chop();\n          value = nil;\n        } else if ($truthy(name['$start_with?'](\"!\"))) {\n          \n          name = name.$slice(1, name.$length());\n          value = nil;};\n        if ((name = self.$sanitize_attribute_name(name))['$=='](\"numbered\")) {\n          name = \"sectnums\"\n        } else if (name['$=='](\"hardbreaks\")) {\n          name = \"hardbreaks-option\"};\n        if ($truthy(doc)) {\n          if ($truthy(value)) {\n            \n            if (name['$=='](\"leveloffset\")) {\n              if ($truthy(value['$start_with?'](\"+\"))) {\n                value = $rb_plus(doc.$attr(\"leveloffset\", 0).$to_i(), value.$slice(1, value.$length()).$to_i()).$to_s()\n              } else if ($truthy(value['$start_with?'](\"-\"))) {\n                value = $rb_minus(doc.$attr(\"leveloffset\", 0).$to_i(), value.$slice(1, value.$length()).$to_i()).$to_s()}};\n            if ($truthy((resolved_value = doc.$set_attribute(name, value)))) {\n              \n              value = resolved_value;\n              if ($truthy(attrs)) {\n                $$$($$($nesting, 'Document'), 'AttributeEntry').$new(name, value).$save_to(attrs)};};\n          } else if ($truthy(($truthy($a = doc.$delete_attribute(name)) ? attrs : $a))) {\n            $$$($$($nesting, 'Document'), 'AttributeEntry').$new(name, value).$save_to(attrs)}\n        } else if ($truthy(attrs)) {\n          $$$($$($nesting, 'Document'), 'AttributeEntry').$new(name, value).$save_to(attrs)};\n        return [name, value];\n      }, $Parser_store_attribute$55.$$arity = -3);\n      Opal.defs(self, '$resolve_list_marker', $Parser_resolve_list_marker$56 = function $$resolve_list_marker(list_type, marker, ordinal, validate, reader) {\n        var self = this;\n\n        \n        \n        if (ordinal == null) {\n          ordinal = 0;\n        };\n        \n        if (validate == null) {\n          validate = false;\n        };\n        \n        if (reader == null) {\n          reader = nil;\n        };\n        if (list_type['$=='](\"ulist\")) {\n          return marker\n        } else if (list_type['$=='](\"olist\")) {\n          return self.$resolve_ordered_list_marker(marker, ordinal, validate, reader)['$[]'](0)\n        } else {\n          return \"<1>\"\n        };\n      }, $Parser_resolve_list_marker$56.$$arity = -3);\n      Opal.defs(self, '$resolve_ordered_list_marker', $Parser_resolve_ordered_list_marker$57 = function $$resolve_ordered_list_marker(marker, ordinal, validate, reader) {\n        var $$58, $a, self = this, $case = nil, style = nil, expected = nil, actual = nil;\n\n        \n        \n        if (ordinal == null) {\n          ordinal = 0;\n        };\n        \n        if (validate == null) {\n          validate = false;\n        };\n        \n        if (reader == null) {\n          reader = nil;\n        };\n        if ($truthy(marker['$start_with?'](\".\"))) {\n          return [marker]};\n        $case = (style = $send($$($nesting, 'ORDERED_LIST_STYLES'), 'find', [], ($$58 = function(s){var self = $$58.$$s || this;\n\n        \n          \n          if (s == null) {\n            s = nil;\n          };\n          return $$($nesting, 'OrderedListMarkerRxMap')['$[]'](s)['$match?'](marker);}, $$58.$$s = self, $$58.$$arity = 1, $$58)));\n        if (\"arabic\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $rb_plus(ordinal, 1);\n          actual = marker.$to_i();};\n        marker = \"1.\";}\n        else if (\"loweralpha\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $rb_plus(\"a\"['$[]'](0).$ord(), ordinal).$chr();\n          actual = marker.$chop();};\n        marker = \"a.\";}\n        else if (\"upperalpha\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $rb_plus(\"A\"['$[]'](0).$ord(), ordinal).$chr();\n          actual = marker.$chop();};\n        marker = \"A.\";}\n        else if (\"lowerroman\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $$($nesting, 'Helpers').$int_to_roman($rb_plus(ordinal, 1)).$downcase();\n          actual = marker.$chop();};\n        marker = \"i)\";}\n        else if (\"upperroman\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $$($nesting, 'Helpers').$int_to_roman($rb_plus(ordinal, 1));\n          actual = marker.$chop();};\n        marker = \"I)\";};\n        if ($truthy(($truthy($a = validate) ? expected['$!='](actual) : $a))) {\n          self.$logger().$warn(self.$message_with_context(\"\" + \"list item index: expected \" + (expected) + \", got \" + (actual), $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))};\n        return [marker, style];\n      }, $Parser_resolve_ordered_list_marker$57.$$arity = -2);\n      Opal.defs(self, '$is_sibling_list_item?', $Parser_is_sibling_list_item$ques$59 = function(line, list_type, sibling_trait) {\n        var $a, $b, self = this;\n\n        if ($truthy($$$('::', 'Regexp')['$==='](sibling_trait))) {\n          return sibling_trait['$match?'](line)\n        } else {\n          return ($truthy($a = $$($nesting, 'ListRxMap')['$[]'](list_type)['$=~'](line)) ? sibling_trait['$=='](self.$resolve_list_marker(list_type, (($b = $gvars['~']) === nil ? nil : $b['$[]'](1)))) : $a)\n        }\n      }, $Parser_is_sibling_list_item$ques$59.$$arity = 3);\n      Opal.defs(self, '$parse_table', $Parser_parse_table$60 = function $$parse_table(table_reader, parent, attributes) {\n        var $a, $b, $c, $d, self = this, table = nil, colspecs = nil, explicit_colspecs = nil, skipped = nil, parser_ctx = nil, format = nil, loop_idx = nil, implicit_header_boundary = nil, implicit_header = nil, line = nil, beyond_first = nil, next_cellspec = nil, m = nil, pre_match = nil, post_match = nil, $case = nil, $writer = nil, cell_text = nil, $logical_op_recvr_tmp_2 = nil;\n\n        \n        table = $$($nesting, 'Table').$new(parent, attributes);\n        if ($truthy(($truthy($a = attributes['$key?'](\"cols\")) ? (colspecs = self.$parse_colspecs(attributes['$[]'](\"cols\")))['$empty?']()['$!']() : $a))) {\n          \n          table.$create_columns(colspecs);\n          explicit_colspecs = true;};\n        skipped = ($truthy($a = table_reader.$skip_blank_lines()) ? $a : 0);\n        parser_ctx = $$$($$($nesting, 'Table'), 'ParserContext').$new(table_reader, table, attributes);\n        $a = [parser_ctx.$format(), -1, nil], (format = $a[0]), (loop_idx = $a[1]), (implicit_header_boundary = $a[2]), $a;\n        if ($truthy(($truthy($a = ($truthy($b = $rb_gt(skipped, 0)) ? $b : attributes['$[]'](\"header-option\"))) ? $a : attributes['$[]'](\"noheader-option\")))) {\n        } else {\n          implicit_header = true\n        };\n        $a = false; while ($a || $truthy((line = table_reader.$read_line()))) {$a = false;\n          \n          if ($truthy(($truthy($b = (beyond_first = $rb_gt((loop_idx = $rb_plus(loop_idx, 1)), 0))) ? line['$empty?']() : $b))) {\n            \n            line = nil;\n            if ($truthy(implicit_header_boundary)) {\n              implicit_header_boundary = $rb_plus(implicit_header_boundary, 1)};\n          } else if (format['$=='](\"psv\")) {\n            if ($truthy(parser_ctx['$starts_with_delimiter?'](line))) {\n              \n              line = line.$slice(1, line.$length());\n              parser_ctx.$close_open_cell();\n              if ($truthy(implicit_header_boundary)) {\n                implicit_header_boundary = nil};\n            } else {\n              \n              $c = self.$parse_cellspec(line, \"start\", parser_ctx.$delimiter()), $b = Opal.to_ary($c), (next_cellspec = ($b[0] == null ? nil : $b[0])), (line = ($b[1] == null ? nil : $b[1])), $c;\n              if ($truthy(next_cellspec)) {\n                \n                parser_ctx.$close_open_cell(next_cellspec);\n                if ($truthy(implicit_header_boundary)) {\n                  implicit_header_boundary = nil};\n              } else if ($truthy(($truthy($b = implicit_header_boundary) ? implicit_header_boundary['$=='](loop_idx) : $b))) {\n                $b = [false, nil], (implicit_header = $b[0]), (implicit_header_boundary = $b[1]), $b};\n            }};\n          if ($truthy(beyond_first)) {\n          } else {\n            \n            table_reader.$mark();\n            if ($truthy(implicit_header)) {\n              if ($truthy(($truthy($b = table_reader['$has_more_lines?']()) ? table_reader.$peek_line()['$empty?']() : $b))) {\n                implicit_header_boundary = 1\n              } else {\n                implicit_header = false\n              }};\n          };\n          $b = false; while ($b || $truthy(true)) {$b = false;\n            if ($truthy(($truthy($c = line) ? (m = parser_ctx.$match_delimiter(line)) : $c))) {\n              \n              $c = [m.$pre_match(), m.$post_match()], (pre_match = $c[0]), (post_match = $c[1]), $c;\n              $case = format;\n              if (\"csv\"['$===']($case)) {\n              if ($truthy(parser_ctx['$buffer_has_unclosed_quotes?'](pre_match))) {\n                \n                parser_ctx.$skip_past_delimiter(pre_match);\n                if ($truthy((line = post_match)['$empty?']())) {\n                  break;};\n                $b = true; continue;;};\n              \n              $writer = [\"\" + (parser_ctx.$buffer()) + (pre_match)];\n              $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;}\n              else if (\"dsv\"['$===']($case)) {\n              if ($truthy(pre_match['$end_with?'](\"\\\\\"))) {\n                \n                parser_ctx.$skip_past_escaped_delimiter(pre_match);\n                if ($truthy((line = post_match)['$empty?']())) {\n                  \n                  \n                  $writer = [\"\" + (parser_ctx.$buffer()) + ($$($nesting, 'LF'))];\n                  $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                  parser_ctx.$keep_cell_open();\n                  break;;};\n                $b = true; continue;;};\n              \n              $writer = [\"\" + (parser_ctx.$buffer()) + (pre_match)];\n              $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;}\n              else {\n              if ($truthy(pre_match['$end_with?'](\"\\\\\"))) {\n                \n                parser_ctx.$skip_past_escaped_delimiter(pre_match);\n                if ($truthy((line = post_match)['$empty?']())) {\n                  \n                  \n                  $writer = [\"\" + (parser_ctx.$buffer()) + ($$($nesting, 'LF'))];\n                  $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                  parser_ctx.$keep_cell_open();\n                  break;;};\n                $b = true; continue;;};\n              $d = self.$parse_cellspec(pre_match), $c = Opal.to_ary($d), (next_cellspec = ($c[0] == null ? nil : $c[0])), (cell_text = ($c[1] == null ? nil : $c[1])), $d;\n              parser_ctx.$push_cellspec(next_cellspec);\n              \n              $writer = [\"\" + (parser_ctx.$buffer()) + (cell_text)];\n              $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n              if ($truthy((line = post_match)['$empty?']())) {\n                line = nil};\n              parser_ctx.$close_cell();\n            } else {\n              \n              \n              $writer = [\"\" + (parser_ctx.$buffer()) + (line) + ($$($nesting, 'LF'))];\n              $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              $case = format;\n              if (\"csv\"['$===']($case)) {if ($truthy(parser_ctx['$buffer_has_unclosed_quotes?']())) {\n                \n                if ($truthy(($truthy($c = implicit_header_boundary) ? loop_idx['$=='](0) : $c))) {\n                  $c = [false, nil], (implicit_header = $c[0]), (implicit_header_boundary = $c[1]), $c};\n                parser_ctx.$keep_cell_open();\n              } else {\n                parser_ctx.$close_cell(true)\n              }}\n              else if (\"dsv\"['$===']($case)) {parser_ctx.$close_cell(true)}\n              else {parser_ctx.$keep_cell_open()};\n              break;;\n            }\n          };\n          if ($truthy(parser_ctx['$cell_open?']())) {\n            if ($truthy(table_reader['$has_more_lines?']())) {\n            } else {\n              parser_ctx.$close_cell(true)\n            }\n          } else {\n            if ($truthy($b = table_reader.$skip_blank_lines())) {\n              $b\n            } else {\n              break;\n            }\n          };\n        };\n        if ($truthy(($truthy($a = (($logical_op_recvr_tmp_2 = table.$attributes()), ($truthy($b = $logical_op_recvr_tmp_2['$[]'](\"colcount\")) ? $b : (($writer = [\"colcount\", table.$columns().$size()]), $send($logical_op_recvr_tmp_2, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])))['$=='](0)) ? $a : explicit_colspecs))) {\n        } else {\n          table.$assign_column_widths()\n        };\n        if ($truthy(implicit_header)) {\n          \n          \n          $writer = [true];\n          $send(table, 'has_header_option=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"header-option\", \"\"];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;};\n        table.$partition_header_footer(attributes);\n        return table;\n      }, $Parser_parse_table$60.$$arity = 3);\n      Opal.defs(self, '$parse_colspecs', $Parser_parse_colspecs$61 = function $$parse_colspecs(records) {\n        var $$62, $$63, self = this, specs = nil;\n\n        \n        if ($truthy(records['$include?'](\" \"))) {\n          records = records.$delete(\" \")};\n        if (records['$=='](records.$to_i().$to_s())) {\n          return $send($$$('::', 'Array'), 'new', [records.$to_i()], ($$62 = function(){var self = $$62.$$s || this;\n\n          return $hash2([\"width\"], {\"width\": 1})}, $$62.$$s = self, $$62.$$arity = 0, $$62))};\n        specs = [];\n        $send((function() {if ($truthy(records['$include?'](\",\"))) {\n          \n          return records.$split(\",\", -1);\n        } else {\n          \n          return records.$split(\";\", -1);\n        }; return nil; })(), 'each', [], ($$63 = function(record){var self = $$63.$$s || this, $a, $b, $$64, m = nil, spec = nil, colspec = nil, rowspec = nil, $writer = nil, width = nil;\n\n        \n          \n          if (record == null) {\n            record = nil;\n          };\n          if ($truthy(record['$empty?']())) {\n            return specs['$<<']($hash2([\"width\"], {\"width\": 1}))\n          } else if ($truthy((m = $$($nesting, 'ColumnSpecRx').$match(record)))) {\n            \n            spec = $hash2([], {});\n            if ($truthy(m['$[]'](2))) {\n              \n              $b = m['$[]'](2).$split(\".\"), $a = Opal.to_ary($b), (colspec = ($a[0] == null ? nil : $a[0])), (rowspec = ($a[1] == null ? nil : $a[1])), $b;\n              if ($truthy(($truthy($a = colspec['$nil_or_empty?']()['$!']()) ? $$($nesting, 'TableCellHorzAlignments')['$key?'](colspec) : $a))) {\n                \n                $writer = [\"halign\", $$($nesting, 'TableCellHorzAlignments')['$[]'](colspec)];\n                $send(spec, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              if ($truthy(($truthy($a = rowspec['$nil_or_empty?']()['$!']()) ? $$($nesting, 'TableCellVertAlignments')['$key?'](rowspec) : $a))) {\n                \n                $writer = [\"valign\", $$($nesting, 'TableCellVertAlignments')['$[]'](rowspec)];\n                $send(spec, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};};\n            if ($truthy((width = m['$[]'](3)))) {\n              \n              $writer = [\"width\", (function() {if (width['$=='](\"~\")) {\n                return -1\n              } else {\n                return width.$to_i()\n              }; return nil; })()];\n              $send(spec, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              \n              $writer = [\"width\", 1];\n              $send(spec, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            if ($truthy(($truthy($a = m['$[]'](4)) ? $$($nesting, 'TableCellStyles')['$key?'](m['$[]'](4)) : $a))) {\n              \n              $writer = [\"style\", $$($nesting, 'TableCellStyles')['$[]'](m['$[]'](4))];\n              $send(spec, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(m['$[]'](1))) {\n              return $send((1), 'upto', [m['$[]'](1).$to_i()], ($$64 = function(){var self = $$64.$$s || this;\n\n              return specs['$<<'](spec.$merge())}, $$64.$$s = self, $$64.$$arity = 0, $$64))\n            } else {\n              return specs['$<<'](spec)\n            };\n          } else {\n            return nil\n          };}, $$63.$$s = self, $$63.$$arity = 1, $$63));\n        return specs;\n      }, $Parser_parse_colspecs$61.$$arity = 1);\n      Opal.defs(self, '$parse_cellspec', $Parser_parse_cellspec$65 = function $$parse_cellspec(line, pos, delimiter) {\n        var $a, $b, self = this, m = nil, rest = nil, spec_part = nil, spec = nil, colspec = nil, rowspec = nil, $writer = nil;\n\n        \n        \n        if (pos == null) {\n          pos = \"end\";\n        };\n        \n        if (delimiter == null) {\n          delimiter = nil;\n        };\n        $a = [nil, \"\"], (m = $a[0]), (rest = $a[1]), $a;\n        if (pos['$=='](\"start\")) {\n          if ($truthy(line['$include?'](delimiter))) {\n            \n            $b = line.$partition(delimiter), $a = Opal.to_ary($b), (spec_part = ($a[0] == null ? nil : $a[0])), (delimiter = ($a[1] == null ? nil : $a[1])), (rest = ($a[2] == null ? nil : $a[2])), $b;\n            if ($truthy((m = $$($nesting, 'CellSpecStartRx').$match(spec_part)))) {\n              if ($truthy(m['$[]'](0)['$empty?']())) {\n                return [$hash2([], {}), rest]}\n            } else {\n              return [nil, line]\n            };\n          } else {\n            return [nil, line]\n          }\n        } else if ($truthy((m = $$($nesting, 'CellSpecEndRx').$match(line)))) {\n          \n          if ($truthy(m['$[]'](0).$lstrip()['$empty?']())) {\n            return [$hash2([], {}), line.$rstrip()]};\n          rest = m.$pre_match();\n        } else {\n          return [$hash2([], {}), line]\n        };\n        spec = $hash2([], {});\n        if ($truthy(m['$[]'](1))) {\n          \n          $b = m['$[]'](1).$split(\".\"), $a = Opal.to_ary($b), (colspec = ($a[0] == null ? nil : $a[0])), (rowspec = ($a[1] == null ? nil : $a[1])), $b;\n          colspec = (function() {if ($truthy(colspec['$nil_or_empty?']())) {\n            return 1\n          } else {\n            return colspec.$to_i()\n          }; return nil; })();\n          rowspec = (function() {if ($truthy(rowspec['$nil_or_empty?']())) {\n            return 1\n          } else {\n            return rowspec.$to_i()\n          }; return nil; })();\n          if (m['$[]'](2)['$=='](\"+\")) {\n            \n            if (colspec['$=='](1)) {\n            } else {\n              \n              $writer = [\"colspan\", colspec];\n              $send(spec, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            if (rowspec['$=='](1)) {\n            } else {\n              \n              $writer = [\"rowspan\", rowspec];\n              $send(spec, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n          } else if (m['$[]'](2)['$=='](\"*\")) {\n            if (colspec['$=='](1)) {\n            } else {\n              \n              $writer = [\"repeatcol\", colspec];\n              $send(spec, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            }};};\n        if ($truthy(m['$[]'](3))) {\n          \n          $b = m['$[]'](3).$split(\".\"), $a = Opal.to_ary($b), (colspec = ($a[0] == null ? nil : $a[0])), (rowspec = ($a[1] == null ? nil : $a[1])), $b;\n          if ($truthy(($truthy($a = colspec['$nil_or_empty?']()['$!']()) ? $$($nesting, 'TableCellHorzAlignments')['$key?'](colspec) : $a))) {\n            \n            $writer = [\"halign\", $$($nesting, 'TableCellHorzAlignments')['$[]'](colspec)];\n            $send(spec, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy(($truthy($a = rowspec['$nil_or_empty?']()['$!']()) ? $$($nesting, 'TableCellVertAlignments')['$key?'](rowspec) : $a))) {\n            \n            $writer = [\"valign\", $$($nesting, 'TableCellVertAlignments')['$[]'](rowspec)];\n            $send(spec, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};};\n        if ($truthy(($truthy($a = m['$[]'](4)) ? $$($nesting, 'TableCellStyles')['$key?'](m['$[]'](4)) : $a))) {\n          \n          $writer = [\"style\", $$($nesting, 'TableCellStyles')['$[]'](m['$[]'](4))];\n          $send(spec, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        return [spec, rest];\n      }, $Parser_parse_cellspec$65.$$arity = -2);\n      Opal.defs(self, '$parse_style_attribute', $Parser_parse_style_attribute$66 = function $$parse_style_attribute(attributes, reader) {\n        var $a, $b, $$67, $$68, self = this, raw_style = nil, name = nil, accum = nil, parsed_attrs = nil, parsed_style = nil, $writer = nil, existing_role = nil, opts = nil;\n\n        \n        \n        if (reader == null) {\n          reader = nil;\n        };\n        if ($truthy(($truthy($a = ($truthy($b = (raw_style = attributes['$[]'](1))) ? raw_style['$include?'](\" \")['$!']() : $b)) ? $$($nesting, 'Compliance').$shorthand_property_syntax() : $a))) {\n          \n          name = nil;\n          accum = \"\";\n          parsed_attrs = $hash2([], {});\n          $send(raw_style, 'each_char', [], ($$67 = function(c){var self = $$67.$$s || this, $case = nil;\n\n          \n            \n            if (c == null) {\n              c = nil;\n            };\n            return (function() {$case = c;\n            if (\".\"['$===']($case)) {\n            self.$yield_buffered_attribute(parsed_attrs, name, accum, reader);\n            accum = \"\";\n            return (name = \"role\");}\n            else if (\"#\"['$===']($case)) {\n            self.$yield_buffered_attribute(parsed_attrs, name, accum, reader);\n            accum = \"\";\n            return (name = \"id\");}\n            else if (\"%\"['$===']($case)) {\n            self.$yield_buffered_attribute(parsed_attrs, name, accum, reader);\n            accum = \"\";\n            return (name = \"option\");}\n            else {return (accum = $rb_plus(accum, c))}})();}, $$67.$$s = self, $$67.$$arity = 1, $$67));\n          if ($truthy(name)) {\n            \n            self.$yield_buffered_attribute(parsed_attrs, name, accum, reader);\n            if ($truthy((parsed_style = parsed_attrs['$[]'](\"style\")))) {\n              \n              $writer = [\"style\", parsed_style];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(parsed_attrs['$key?'](\"id\"))) {\n              \n              $writer = [\"id\", parsed_attrs['$[]'](\"id\")];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(parsed_attrs['$key?'](\"role\"))) {\n              \n              $writer = [\"role\", (function() {if ($truthy((existing_role = attributes['$[]'](\"role\"))['$nil_or_empty?']())) {\n                \n                return parsed_attrs['$[]'](\"role\").$join(\" \");\n              } else {\n                return \"\" + (existing_role) + \" \" + (parsed_attrs['$[]'](\"role\").$join(\" \"))\n              }; return nil; })()];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(parsed_attrs['$key?'](\"option\"))) {\n              $send((opts = parsed_attrs['$[]'](\"option\")), 'each', [], ($$68 = function(opt){var self = $$68.$$s || this;\n\n              \n                \n                if (opt == null) {\n                  opt = nil;\n                };\n                $writer = [\"\" + (opt) + \"-option\", \"\"];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];}, $$68.$$s = self, $$68.$$arity = 1, $$68))};\n            return parsed_style;\n          } else {\n            \n            $writer = [\"style\", raw_style];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n        } else {\n          \n          $writer = [\"style\", raw_style];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n      }, $Parser_parse_style_attribute$66.$$arity = -2);\n      Opal.defs(self, '$yield_buffered_attribute', $Parser_yield_buffered_attribute$69 = function $$yield_buffered_attribute(attrs, name, value, reader) {\n        var $a, self = this, $writer = nil;\n\n        \n        if ($truthy(name)) {\n          if ($truthy(value['$empty?']())) {\n            if ($truthy(reader)) {\n              self.$logger().$warn(self.$message_with_context(\"\" + \"invalid empty \" + (name) + \" detected in style attribute\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_prev_line()})))\n            } else {\n              self.$logger().$warn(\"\" + \"invalid empty \" + (name) + \" detected in style attribute\")\n            }\n          } else if (name['$=='](\"id\")) {\n            \n            if ($truthy(attrs['$key?'](\"id\"))) {\n              if ($truthy(reader)) {\n                self.$logger().$warn(self.$message_with_context(\"multiple ids detected in style attribute\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_prev_line()})))\n              } else {\n                self.$logger().$warn(\"multiple ids detected in style attribute\")\n              }};\n            \n            $writer = [name, value];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            ($truthy($a = attrs['$[]'](name)) ? $a : (($writer = [name, []]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$<<'](value)\n          }\n        } else if ($truthy(value['$empty?']())) {\n        } else {\n          \n          $writer = [\"style\", value];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        return nil;\n      }, $Parser_yield_buffered_attribute$69.$$arity = 4);\n      Opal.defs(self, '$adjust_indentation!', $Parser_adjust_indentation$excl$70 = function(lines, indent_size, tab_size) {\n        var $a, $$71, $$72, $$75, $$76, $$77, $$78, self = this, full_tab_space = nil, block_indent = nil, new_block_indent = nil;\n\n        \n        \n        if (indent_size == null) {\n          indent_size = 0;\n        };\n        \n        if (tab_size == null) {\n          tab_size = 0;\n        };\n        if ($truthy(lines['$empty?']())) {\n          return nil};\n        if ($truthy(($truthy($a = $rb_gt(tab_size, 0)) ? $send(lines, 'any?', [], ($$71 = function(line){var self = $$71.$$s || this;\n\n        \n          \n          if (line == null) {\n            line = nil;\n          };\n          return line['$include?']($$($nesting, 'TAB'));}, $$71.$$s = self, $$71.$$arity = 1, $$71)) : $a))) {\n          \n          full_tab_space = $rb_times(\" \", tab_size);\n          (function(){var $brk = Opal.new_brk(); try {return $send(lines, 'map!', [], ($$72 = function(line){var self = $$72.$$s || this, $$73, $$74, tab_idx = nil, leading_tabs = nil, spaces_added = nil, idx = nil, result = nil;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            if ($truthy(line['$empty?']())) {\n              return line\n            } else if ($truthy((tab_idx = line.$index($$($nesting, 'TAB'))))) {\n              \n              if (tab_idx['$=='](0)) {\n                \n                leading_tabs = 0;\n                (function(){var $brk = Opal.new_brk(); try {return $send(line, 'each_byte', [], ($$73 = function(b){var self = $$73.$$s || this;\n\n                \n                  \n                  if (b == null) {\n                    b = nil;\n                  };\n                  if (b['$=='](9)) {\n                  } else {\n                    \n                    Opal.brk(nil, $brk)\n                  };\n                  return (leading_tabs = $rb_plus(leading_tabs, 1));}, $$73.$$s = self, $$73.$$brk = $brk, $$73.$$arity = 1, $$73))\n                } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n                line = \"\" + ($rb_times(full_tab_space, leading_tabs)) + (line.$slice(leading_tabs, line.$length()));\n                if ($truthy(line['$include?']($$($nesting, 'TAB')))) {\n                } else {\n                  return line;\n                };};\n              spaces_added = 0;\n              idx = 0;\n              result = \"\";\n              $send(line, 'each_char', [], ($$74 = function(c){var self = $$74.$$s || this, offset = nil, spaces = nil;\n\n              \n                \n                if (c == null) {\n                  c = nil;\n                };\n                if (c['$==']($$($nesting, 'TAB'))) {\n                  if ((offset = $rb_plus(idx, spaces_added))['$%'](tab_size)['$=='](0)) {\n                    \n                    spaces_added = $rb_plus(spaces_added, $rb_minus(tab_size, 1));\n                    result = $rb_plus(result, full_tab_space);\n                  } else {\n                    \n                    if ((spaces = $rb_minus(tab_size, offset['$%'](tab_size)))['$=='](1)) {\n                    } else {\n                      spaces_added = $rb_plus(spaces_added, $rb_minus(spaces, 1))\n                    };\n                    result = $rb_plus(result, $rb_times(\" \", spaces));\n                  }\n                } else {\n                  result = $rb_plus(result, c)\n                };\n                return (idx = $rb_plus(idx, 1));}, $$74.$$s = self, $$74.$$arity = 1, $$74));\n              return result;\n            } else {\n              return line\n            };}, $$72.$$s = self, $$72.$$brk = $brk, $$72.$$arity = 1, $$72))\n          } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();};\n        if ($truthy($rb_lt(indent_size, 0))) {\n          return nil};\n        block_indent = nil;\n        (function(){var $brk = Opal.new_brk(); try {return $send(lines, 'each', [], ($$75 = function(line){var self = $$75.$$s || this, $b, line_indent = nil;\n\n        \n          \n          if (line == null) {\n            line = nil;\n          };\n          if ($truthy(line['$empty?']())) {\n            return nil;};\n          if ((line_indent = $rb_minus(line.$length(), line.$lstrip().$length()))['$=='](0)) {\n            \n            block_indent = nil;\n            \n            Opal.brk(nil, $brk);};\n          if ($truthy(($truthy($b = block_indent) ? $rb_lt(block_indent, line_indent) : $b))) {\n            return nil\n          } else {\n            return (block_indent = line_indent)\n          };}, $$75.$$s = self, $$75.$$brk = $brk, $$75.$$arity = 1, $$75))\n        } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n        if (indent_size['$=='](0)) {\n          if ($truthy(block_indent)) {\n            $send(lines, 'map!', [], ($$76 = function(line){var self = $$76.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              if ($truthy(line['$empty?']())) {\n                return line\n              } else {\n                \n                return line.$slice(block_indent, line.$length());\n              };}, $$76.$$s = self, $$76.$$arity = 1, $$76))}\n        } else {\n          \n          new_block_indent = $rb_times(\" \", indent_size);\n          if ($truthy(block_indent)) {\n            $send(lines, 'map!', [], ($$77 = function(line){var self = $$77.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              if ($truthy(line['$empty?']())) {\n                return line\n              } else {\n                return $rb_plus(new_block_indent, line.$slice(block_indent, line.$length()))\n              };}, $$77.$$s = self, $$77.$$arity = 1, $$77))\n          } else {\n            $send(lines, 'map!', [], ($$78 = function(line){var self = $$78.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              if ($truthy(line['$empty?']())) {\n                return line\n              } else {\n                return $rb_plus(new_block_indent, line)\n              };}, $$78.$$s = self, $$78.$$arity = 1, $$78))\n          };\n        };\n        return nil;\n      }, $Parser_adjust_indentation$excl$70.$$arity = -2);\n      Opal.defs(self, '$uniform?', $Parser_uniform$ques$79 = function(str, chr, len) {\n        var self = this;\n\n        return str.$count(chr)['$=='](len)\n      }, $Parser_uniform$ques$79.$$arity = 3);\n      return (Opal.defs(self, '$sanitize_attribute_name', $Parser_sanitize_attribute_name$80 = function $$sanitize_attribute_name(name) {\n        var self = this;\n\n        return name.$gsub($$($nesting, 'InvalidAttributeNameCharsRx'), \"\").$downcase()\n      }, $Parser_sanitize_attribute_name$80.$$arity = 1), nil) && 'sanitize_attribute_name';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/path_resolver\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $send = Opal.send, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$include', '$attr_accessor', '$root?', '$posixify', '$expand_path', '$pwd', '$start_with?', '$==', '$match?', '$absolute_path?', '$+', '$length', '$descends_from?', '$slice', '$to_s', '$relative_path_from', '$new', '$include?', '$tr', '$partition_path', '$each', '$pop', '$<<', '$join_path', '$[]', '$web_root?', '$unc?', '$index', '$split', '$delete', '$[]=', '$-', '$join', '$raise', '$!', '$fetch', '$warn', '$logger', '$empty?', '$nil_or_empty?', '$chomp', '$!=', '$>', '$size', '$extract_uri_prefix', '$end_with?', '$gsub', '$private', '$=~']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'PathResolver');\n\n      var $nesting = [self].concat($parent_nesting), $PathResolver_initialize$1, $PathResolver_absolute_path$ques$2, $a, $PathResolver_root$ques$3, $PathResolver_unc$ques$4, $PathResolver_web_root$ques$5, $PathResolver_descends_from$ques$6, $PathResolver_relative_path$7, $PathResolver_posixify$8, $PathResolver_expand_path$9, $PathResolver_partition_path$11, $PathResolver_join_path$12, $PathResolver_system_path$13, $PathResolver_web_path$16, $PathResolver_extract_uri_prefix$18;\n\n      self.$$prototype.file_separator = self.$$prototype._partition_path_web = self.$$prototype._partition_path_sys = self.$$prototype.working_dir = nil;\n      \n      self.$include($$($nesting, 'Logging'));\n      Opal.const_set($nesting[0], 'DOT', \".\");\n      Opal.const_set($nesting[0], 'DOT_DOT', \"..\");\n      Opal.const_set($nesting[0], 'DOT_SLASH', \"./\");\n      Opal.const_set($nesting[0], 'SLASH', \"/\");\n      Opal.const_set($nesting[0], 'BACKSLASH', \"\\\\\");\n      Opal.const_set($nesting[0], 'DOUBLE_SLASH', \"//\");\n      Opal.const_set($nesting[0], 'WindowsRootRx', /^(?:[a-zA-Z]:)?[\\\\\\/]/);\n      self.$attr_accessor(\"file_separator\");\n      self.$attr_accessor(\"working_dir\");\n      \n      Opal.def(self, '$initialize', $PathResolver_initialize$1 = function $$initialize(file_separator, working_dir) {\n        var $a, $b, self = this;\n\n        \n        \n        if (file_separator == null) {\n          file_separator = nil;\n        };\n        \n        if (working_dir == null) {\n          working_dir = nil;\n        };\n        self.file_separator = ($truthy($a = ($truthy($b = file_separator) ? $b : $$$($$$('::', 'File'), 'ALT_SEPARATOR'))) ? $a : $$$($$$('::', 'File'), 'SEPARATOR'));\n        self.working_dir = (function() {if ($truthy(working_dir)) {\n          \n          if ($truthy(self['$root?'](working_dir))) {\n            \n            return self.$posixify(working_dir);\n          } else {\n            \n            return $$$('::', 'File').$expand_path(working_dir);\n          };\n        } else {\n          return $$$('::', 'Dir').$pwd()\n        }; return nil; })();\n        self._partition_path_sys = $hash2([], {});\n        return (self._partition_path_web = $hash2([], {}));\n      }, $PathResolver_initialize$1.$$arity = -1);\n      \n      Opal.def(self, '$absolute_path?', $PathResolver_absolute_path$ques$2 = function(path) {\n        var $a, $b, self = this;\n\n        return ($truthy($a = path['$start_with?']($$($nesting, 'SLASH'))) ? $a : (($b = self.file_separator['$==']($$($nesting, 'BACKSLASH'))) ? $$($nesting, 'WindowsRootRx')['$match?'](path) : self.file_separator['$==']($$($nesting, 'BACKSLASH'))))\n      }, $PathResolver_absolute_path$ques$2.$$arity = 1);\n      if ($truthy((($a = $$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) ? $$$('::', 'JAVASCRIPT_IO_MODULE')['$=='](\"xmlhttprequest\") : $$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")))) {\n        \n        Opal.def(self, '$root?', $PathResolver_root$ques$3 = function(path) {\n          var $a, self = this;\n\n          return ($truthy($a = self['$absolute_path?'](path)) ? $a : path['$start_with?'](\"file://\", \"http://\", \"https://\"))\n        }, $PathResolver_root$ques$3.$$arity = 1)\n      } else {\n        Opal.alias(self, \"root?\", \"absolute_path?\")\n      };\n      \n      Opal.def(self, '$unc?', $PathResolver_unc$ques$4 = function(path) {\n        var self = this;\n\n        return path['$start_with?']($$($nesting, 'DOUBLE_SLASH'))\n      }, $PathResolver_unc$ques$4.$$arity = 1);\n      \n      Opal.def(self, '$web_root?', $PathResolver_web_root$ques$5 = function(path) {\n        var self = this;\n\n        return path['$start_with?']($$($nesting, 'SLASH'))\n      }, $PathResolver_web_root$ques$5.$$arity = 1);\n      \n      Opal.def(self, '$descends_from?', $PathResolver_descends_from$ques$6 = function(path, base) {\n        var $a, self = this;\n\n        if (base['$=='](path)) {\n          return 0\n        } else if (base['$==']($$($nesting, 'SLASH'))) {\n          return ($truthy($a = path['$start_with?']($$($nesting, 'SLASH'))) ? 1 : $a)\n        } else {\n          return ($truthy($a = path['$start_with?']($rb_plus(base, $$($nesting, 'SLASH')))) ? $rb_plus(base.$length(), 1) : $a)\n        }\n      }, $PathResolver_descends_from$ques$6.$$arity = 2);\n      \n      Opal.def(self, '$relative_path', $PathResolver_relative_path$7 = function $$relative_path(path, base) {\n        var self = this, offset = nil;\n\n        if ($truthy(self['$root?'](path))) {\n          if ($truthy((offset = self['$descends_from?'](path, base)))) {\n            return path.$slice(offset, path.$length())\n          } else {\n            \n            try {\n              return $$($nesting, 'Pathname').$new(path).$relative_path_from($$($nesting, 'Pathname').$new(base)).$to_s()\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  return path\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };\n          }\n        } else {\n          return path\n        }\n      }, $PathResolver_relative_path$7.$$arity = 2);\n      \n      Opal.def(self, '$posixify', $PathResolver_posixify$8 = function $$posixify(path) {\n        var $a, self = this;\n\n        if ($truthy(path)) {\n          if ($truthy((($a = self.file_separator['$==']($$($nesting, 'BACKSLASH'))) ? path['$include?']($$($nesting, 'BACKSLASH')) : self.file_separator['$==']($$($nesting, 'BACKSLASH'))))) {\n            \n            return path.$tr($$($nesting, 'BACKSLASH'), $$($nesting, 'SLASH'));\n          } else {\n            return path\n          }\n        } else {\n          return \"\"\n        }\n      }, $PathResolver_posixify$8.$$arity = 1);\n      Opal.alias(self, \"posixfy\", \"posixify\");\n      \n      Opal.def(self, '$expand_path', $PathResolver_expand_path$9 = function $$expand_path(path) {\n        var $a, $b, $$10, self = this, path_segments = nil, path_root = nil, resolved_segments = nil;\n\n        \n        $b = self.$partition_path(path), $a = Opal.to_ary($b), (path_segments = ($a[0] == null ? nil : $a[0])), (path_root = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy(path['$include?']($$($nesting, 'DOT_DOT')))) {\n          \n          resolved_segments = [];\n          $send(path_segments, 'each', [], ($$10 = function(segment){var self = $$10.$$s || this;\n\n          \n            \n            if (segment == null) {\n              segment = nil;\n            };\n            if (segment['$==']($$($nesting, 'DOT_DOT'))) {\n              return resolved_segments.$pop()\n            } else {\n              return resolved_segments['$<<'](segment)\n            };}, $$10.$$s = self, $$10.$$arity = 1, $$10));\n          return self.$join_path(resolved_segments, path_root);\n        } else {\n          return self.$join_path(path_segments, path_root)\n        };\n      }, $PathResolver_expand_path$9.$$arity = 1);\n      \n      Opal.def(self, '$partition_path', $PathResolver_partition_path$11 = function $$partition_path(path, web) {\n        var self = this, result = nil, cache = nil, posix_path = nil, root = nil, path_segments = nil, $writer = nil;\n\n        \n        \n        if (web == null) {\n          web = nil;\n        };\n        if ($truthy((result = (cache = (function() {if ($truthy(web)) {\n          return self._partition_path_web\n        } else {\n          return self._partition_path_sys\n        }; return nil; })())['$[]'](path)))) {\n          return result};\n        posix_path = self.$posixify(path);\n        if ($truthy(web)) {\n          if ($truthy(self['$web_root?'](posix_path))) {\n            root = $$($nesting, 'SLASH')\n          } else if ($truthy(posix_path['$start_with?']($$($nesting, 'DOT_SLASH')))) {\n            root = $$($nesting, 'DOT_SLASH')}\n        } else if ($truthy(self['$root?'](posix_path))) {\n          if ($truthy(self['$unc?'](posix_path))) {\n            root = $$($nesting, 'DOUBLE_SLASH')\n          } else if ($truthy(posix_path['$start_with?']($$($nesting, 'SLASH')))) {\n            root = $$($nesting, 'SLASH')\n          } else {\n            root = posix_path.$slice(0, $rb_plus(posix_path.$index($$($nesting, 'SLASH')), 1))\n          }\n        } else if ($truthy(posix_path['$start_with?']($$($nesting, 'DOT_SLASH')))) {\n          root = $$($nesting, 'DOT_SLASH')};\n        path_segments = (function() {if ($truthy(root)) {\n          \n          return posix_path.$slice(root.$length(), posix_path.$length());\n        } else {\n          return posix_path\n        }; return nil; })().$split($$($nesting, 'SLASH'));\n        path_segments.$delete($$($nesting, 'DOT'));\n        \n        $writer = [path, [path_segments, root]];\n        $send(cache, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];;\n      }, $PathResolver_partition_path$11.$$arity = -2);\n      \n      Opal.def(self, '$join_path', $PathResolver_join_path$12 = function $$join_path(segments, root) {\n        var self = this;\n\n        \n        \n        if (root == null) {\n          root = nil;\n        };\n        if ($truthy(root)) {\n          return \"\" + (root) + (segments.$join($$($nesting, 'SLASH')))\n        } else {\n          \n          return segments.$join($$($nesting, 'SLASH'));\n        };\n      }, $PathResolver_join_path$12.$$arity = -2);\n      \n      Opal.def(self, '$system_path', $PathResolver_system_path$13 = function $$system_path(target, start, jail, opts) {\n        var $a, $b, $$14, $$15, self = this, target_path = nil, target_segments = nil, _ = nil, jail_segments = nil, jail_root = nil, recheck = nil, start_segments = nil, start_root = nil, resolved_segments = nil, unresolved_segments = nil, warned = nil;\n\n        \n        \n        if (start == null) {\n          start = nil;\n        };\n        \n        if (jail == null) {\n          jail = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy(jail)) {\n          \n          if ($truthy(self['$root?'](jail))) {\n          } else {\n            self.$raise($$$('::', 'SecurityError'), \"\" + \"Jail is not an absolute path: \" + (jail))\n          };\n          jail = self.$posixify(jail);};\n        if ($truthy(target)) {\n          if ($truthy(self['$root?'](target))) {\n            \n            target_path = self.$expand_path(target);\n            if ($truthy(($truthy($a = jail) ? self['$descends_from?'](target_path, jail)['$!']() : $a))) {\n              if ($truthy(opts.$fetch(\"recover\", true))) {\n                \n                self.$logger().$warn(\"\" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" is outside of jail; recovering automatically\");\n                $b = self.$partition_path(target_path), $a = Opal.to_ary($b), (target_segments = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), $b;\n                $b = self.$partition_path(jail), $a = Opal.to_ary($b), (jail_segments = ($a[0] == null ? nil : $a[0])), (jail_root = ($a[1] == null ? nil : $a[1])), $b;\n                return self.$join_path($rb_plus(jail_segments, target_segments), jail_root);\n              } else {\n                self.$raise($$$('::', 'SecurityError'), \"\" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" \" + (target) + \" is outside of jail: \" + (jail) + \" (disallowed in safe mode)\")\n              }};\n            return target_path;\n          } else {\n            $b = self.$partition_path(target), $a = Opal.to_ary($b), (target_segments = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), $b\n          }\n        } else {\n          target_segments = []\n        };\n        if ($truthy(target_segments['$empty?']())) {\n          if ($truthy(start['$nil_or_empty?']())) {\n            return ($truthy($a = jail) ? $a : self.working_dir)\n          } else if ($truthy(self['$root?'](start))) {\n            if ($truthy(jail)) {\n              start = self.$posixify(start)\n            } else {\n              return self.$expand_path(start)\n            }\n          } else {\n            \n            $b = self.$partition_path(start), $a = Opal.to_ary($b), (target_segments = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), $b;\n            start = ($truthy($a = jail) ? $a : self.working_dir);\n          }\n        } else if ($truthy(start['$nil_or_empty?']())) {\n          start = ($truthy($a = jail) ? $a : self.working_dir)\n        } else if ($truthy(self['$root?'](start))) {\n          if ($truthy(jail)) {\n            start = self.$posixify(start)}\n        } else {\n          start = \"\" + (($truthy($a = jail) ? $a : self.working_dir).$chomp(\"/\")) + \"/\" + (start)\n        };\n        if ($truthy(($truthy($a = ($truthy($b = jail) ? (recheck = self['$descends_from?'](start, jail)['$!']()) : $b)) ? self.file_separator['$==']($$($nesting, 'BACKSLASH')) : $a))) {\n          \n          $b = self.$partition_path(start), $a = Opal.to_ary($b), (start_segments = ($a[0] == null ? nil : $a[0])), (start_root = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$partition_path(jail), $a = Opal.to_ary($b), (jail_segments = ($a[0] == null ? nil : $a[0])), (jail_root = ($a[1] == null ? nil : $a[1])), $b;\n          if ($truthy(start_root['$!='](jail_root))) {\n            if ($truthy(opts.$fetch(\"recover\", true))) {\n              \n              self.$logger().$warn(\"\" + \"start path for \" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" is outside of jail root; recovering automatically\");\n              start_segments = jail_segments;\n              recheck = false;\n            } else {\n              self.$raise($$$('::', 'SecurityError'), \"\" + \"start path for \" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" \" + (start) + \" refers to location outside jail root: \" + (jail) + \" (disallowed in safe mode)\")\n            }};\n        } else {\n          $b = self.$partition_path(start), $a = Opal.to_ary($b), (start_segments = ($a[0] == null ? nil : $a[0])), (jail_root = ($a[1] == null ? nil : $a[1])), $b\n        };\n        if ($truthy((resolved_segments = $rb_plus(start_segments, target_segments))['$include?']($$($nesting, 'DOT_DOT')))) {\n          \n          $a = [resolved_segments, []], (unresolved_segments = $a[0]), (resolved_segments = $a[1]), $a;\n          if ($truthy(jail)) {\n            \n            if ($truthy(jail_segments)) {\n            } else {\n              $b = self.$partition_path(jail), $a = Opal.to_ary($b), (jail_segments = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), $b\n            };\n            warned = false;\n            $send(unresolved_segments, 'each', [], ($$14 = function(segment){var self = $$14.$$s || this, $c;\n\n            \n              \n              if (segment == null) {\n                segment = nil;\n              };\n              if (segment['$==']($$($nesting, 'DOT_DOT'))) {\n                if ($truthy($rb_gt(resolved_segments.$size(), jail_segments.$size()))) {\n                  return resolved_segments.$pop()\n                } else if ($truthy(opts.$fetch(\"recover\", true))) {\n                  if ($truthy(warned)) {\n                    return nil\n                  } else {\n                    \n                    self.$logger().$warn(\"\" + (($truthy($c = opts['$[]'](\"target_name\")) ? $c : \"path\")) + \" has illegal reference to ancestor of jail; recovering automatically\");\n                    return (warned = true);\n                  }\n                } else {\n                  return self.$raise($$$('::', 'SecurityError'), \"\" + (($truthy($c = opts['$[]'](\"target_name\")) ? $c : \"path\")) + \" \" + (target) + \" refers to location outside jail: \" + (jail) + \" (disallowed in safe mode)\")\n                }\n              } else {\n                return resolved_segments['$<<'](segment)\n              };}, $$14.$$s = self, $$14.$$arity = 1, $$14));\n          } else {\n            $send(unresolved_segments, 'each', [], ($$15 = function(segment){var self = $$15.$$s || this;\n\n            \n              \n              if (segment == null) {\n                segment = nil;\n              };\n              if (segment['$==']($$($nesting, 'DOT_DOT'))) {\n                return resolved_segments.$pop()\n              } else {\n                return resolved_segments['$<<'](segment)\n              };}, $$15.$$s = self, $$15.$$arity = 1, $$15))\n          };};\n        if ($truthy(recheck)) {\n          \n          target_path = self.$join_path(resolved_segments, jail_root);\n          if ($truthy(self['$descends_from?'](target_path, jail))) {\n            return target_path\n          } else if ($truthy(opts.$fetch(\"recover\", true))) {\n            \n            self.$logger().$warn(\"\" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" is outside of jail; recovering automatically\");\n            if ($truthy(jail_segments)) {\n            } else {\n              $b = self.$partition_path(jail), $a = Opal.to_ary($b), (jail_segments = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), $b\n            };\n            return self.$join_path($rb_plus(jail_segments, target_segments), jail_root);\n          } else {\n            return self.$raise($$$('::', 'SecurityError'), \"\" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" \" + (target) + \" is outside of jail: \" + (jail) + \" (disallowed in safe mode)\")\n          };\n        } else {\n          return self.$join_path(resolved_segments, jail_root)\n        };\n      }, $PathResolver_system_path$13.$$arity = -2);\n      \n      Opal.def(self, '$web_path', $PathResolver_web_path$16 = function $$web_path(target, start) {\n        var $a, $b, $$17, self = this, uri_prefix = nil, target_segments = nil, target_root = nil, resolved_segments = nil, resolved_path = nil;\n\n        \n        \n        if (start == null) {\n          start = nil;\n        };\n        target = self.$posixify(target);\n        start = self.$posixify(start);\n        if ($truthy(($truthy($a = start['$nil_or_empty?']()) ? $a : self['$web_root?'](target)))) {\n        } else {\n          $b = self.$extract_uri_prefix(\"\" + (start) + ((function() {if ($truthy(start['$end_with?']($$($nesting, 'SLASH')))) {\n            return \"\"\n          } else {\n            return $$($nesting, 'SLASH')\n          }; return nil; })()) + (target)), $a = Opal.to_ary($b), (target = ($a[0] == null ? nil : $a[0])), (uri_prefix = ($a[1] == null ? nil : $a[1])), $b\n        };\n        $b = self.$partition_path(target, true), $a = Opal.to_ary($b), (target_segments = ($a[0] == null ? nil : $a[0])), (target_root = ($a[1] == null ? nil : $a[1])), $b;\n        resolved_segments = [];\n        $send(target_segments, 'each', [], ($$17 = function(segment){var self = $$17.$$s || this, $c;\n\n        \n          \n          if (segment == null) {\n            segment = nil;\n          };\n          if (segment['$==']($$($nesting, 'DOT_DOT'))) {\n            if ($truthy(resolved_segments['$empty?']())) {\n              if ($truthy(($truthy($c = target_root) ? target_root['$!=']($$($nesting, 'DOT_SLASH')) : $c))) {\n                return nil\n              } else {\n                return resolved_segments['$<<'](segment)\n              }\n            } else if (resolved_segments['$[]'](-1)['$==']($$($nesting, 'DOT_DOT'))) {\n              return resolved_segments['$<<'](segment)\n            } else {\n              return resolved_segments.$pop()\n            }\n          } else {\n            return resolved_segments['$<<'](segment)\n          };}, $$17.$$s = self, $$17.$$arity = 1, $$17));\n        if ($truthy((resolved_path = self.$join_path(resolved_segments, target_root))['$include?'](\" \"))) {\n          resolved_path = resolved_path.$gsub(\" \", \"%20\")};\n        if ($truthy(uri_prefix)) {\n          return \"\" + (uri_prefix) + (resolved_path)\n        } else {\n          return resolved_path\n        };\n      }, $PathResolver_web_path$16.$$arity = -2);\n      self.$private();\n      return (Opal.def(self, '$extract_uri_prefix', $PathResolver_extract_uri_prefix$18 = function $$extract_uri_prefix(str) {\n        var $a, self = this;\n\n        if ($truthy(($truthy($a = str['$include?'](\":\")) ? $$($nesting, 'UriSniffRx')['$=~'](str) : $a))) {\n          return [str.$slice((($a = $gvars['~']) === nil ? nil : $a['$[]'](0)).$length(), str.$length()), (($a = $gvars['~']) === nil ? nil : $a['$[]'](0))]\n        } else {\n          return str\n        }\n      }, $PathResolver_extract_uri_prefix$18.$$arity = 1), nil) && 'extract_uri_prefix';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/reader\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send, $gvars = Opal.gvars, $hash = Opal.hash;\n\n  Opal.add_stubs(['$include', '$attr_reader', '$+', '$attr_accessor', '$!', '$===', '$split', '$file', '$dir', '$dirname', '$path', '$basename', '$lineno', '$prepare_lines', '$drop', '$empty?', '$nil_or_empty?', '$peek_line', '$>', '$slice', '$[]', '$length', '$process_line', '$times', '$shift', '$read_line', '$<<', '$-', '$unshift_all', '$has_more_lines?', '$join', '$read_lines', '$unshift', '$start_with?', '$==', '$*', '$read_lines_until', '$size', '$clear', '$cursor', '$[]=', '$!=', '$fetch', '$cursor_at_mark', '$warn', '$logger', '$message_with_context', '$new', '$tap', '$each', '$instance_variables', '$instance_variable_get', '$instance_variable_set', '$class', '$object_id', '$inspect', '$private', '$prepare_source_array', '$prepare_source_string', '$valid_encoding?', '$to_s', '$raise', '$to_i', '$attributes', '$catalog', '$pop_include', '$parse', '$path=', '$dup', '$end_with?', '$keys', '$rindex', '$rootname', '$key?', '$attr', '$>=', '$nil?', '$extensions?', '$include_processors?', '$extensions', '$include_processors', '$map', '$skip_front_matter!', '$pop', '$adjust_indentation!', '$include?', '$=~', '$preprocess_conditional_directive', '$preprocess_include_directive', '$downcase', '$error', '$none?', '$any?', '$all?', '$strip', '$send', '$resolve_expr_val', '$replace_next_line', '$rstrip', '$sub_attributes', '$attribute_missing', '$info', '$parse_attributes', '$find', '$handles?', '$instance', '$process_method', '$safe', '$resolve_include_path', '$method', '$split_delimited_value', '$partition', '$<', '$/', '$to_a', '$uniq', '$sort', '$call', '$each_line', '$infinite?', '$push_include', '$delete', '$value?', '$create_include_cursor', '$delete_at', '$read', '$uriish?', '$attr?', '$require_library', '$normalize_system_path', '$file?', '$relative_path', '$path_resolver', '$base_dir', '$to_f']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Reader');\n\n      var $nesting = [self].concat($parent_nesting), $Reader_initialize$4, $Reader_has_more_lines$ques$5, $Reader_empty$ques$6, $Reader_next_line_empty$ques$7, $Reader_peek_line$8, $Reader_peek_lines$9, $Reader_read_line$11, $Reader_read_lines$12, $Reader_read$13, $Reader_advance$14, $Reader_unshift_line$15, $Reader_unshift_lines$16, $Reader_replace_next_line$17, $Reader_skip_blank_lines$18, $Reader_skip_comment_lines$19, $Reader_skip_line_comments$20, $Reader_terminate$21, $Reader_read_lines_until$22, $Reader_shift$23, $Reader_unshift$24, $Reader_unshift_all$25, $Reader_cursor$26, $Reader_cursor_at_line$27, $Reader_cursor_at_mark$28, $Reader_cursor_before_mark$29, $Reader_cursor_at_prev_line$30, $Reader_mark$31, $Reader_line_info$32, $Reader_lines$33, $Reader_string$34, $Reader_source$35, $Reader_save$36, $Reader_restore_save$39, $Reader_discard_save$41, $Reader_to_s$42, $Reader_prepare_lines$43, $Reader_process_line$44;\n\n      self.$$prototype.file = self.$$prototype.lines = self.$$prototype.look_ahead = self.$$prototype.unescape_next_line = self.$$prototype.lineno = self.$$prototype.process_lines = self.$$prototype.dir = self.$$prototype.path = self.$$prototype.mark = self.$$prototype.source_lines = self.$$prototype.saved = nil;\n      \n      self.$include($$($nesting, 'Logging'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Cursor');\n\n        var $nesting = [self].concat($parent_nesting), $Cursor_initialize$1, $Cursor_advance$2, $Cursor_line_info$3;\n\n        self.$$prototype.lineno = self.$$prototype.path = nil;\n        \n        self.$attr_reader(\"file\", \"dir\", \"path\", \"lineno\");\n        \n        Opal.def(self, '$initialize', $Cursor_initialize$1 = function $$initialize(file, dir, path, lineno) {\n          var $a, self = this;\n\n          \n          \n          if (dir == null) {\n            dir = nil;\n          };\n          \n          if (path == null) {\n            path = nil;\n          };\n          \n          if (lineno == null) {\n            lineno = 1;\n          };\n          return $a = [file, dir, path, lineno], (self.file = $a[0]), (self.dir = $a[1]), (self.path = $a[2]), (self.lineno = $a[3]), $a;\n        }, $Cursor_initialize$1.$$arity = -2);\n        \n        Opal.def(self, '$advance', $Cursor_advance$2 = function $$advance(num) {\n          var self = this;\n\n          return (self.lineno = $rb_plus(self.lineno, num))\n        }, $Cursor_advance$2.$$arity = 1);\n        \n        Opal.def(self, '$line_info', $Cursor_line_info$3 = function $$line_info() {\n          var self = this;\n\n          return \"\" + (self.path) + \": line \" + (self.lineno)\n        }, $Cursor_line_info$3.$$arity = 0);\n        return Opal.alias(self, \"to_s\", \"line_info\");\n      })($nesting[0], null, $nesting);\n      self.$attr_reader(\"file\");\n      self.$attr_reader(\"dir\");\n      self.$attr_reader(\"path\");\n      self.$attr_reader(\"lineno\");\n      self.$attr_reader(\"source_lines\");\n      self.$attr_accessor(\"process_lines\");\n      self.$attr_accessor(\"unterminated\");\n      \n      Opal.def(self, '$initialize', $Reader_initialize$4 = function $$initialize(data, cursor, opts) {\n        var $a, $b, self = this;\n\n        \n        \n        if (data == null) {\n          data = nil;\n        };\n        \n        if (cursor == null) {\n          cursor = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy(cursor['$!']())) {\n          \n          self.file = nil;\n          self.dir = \".\";\n          self.path = \"<stdin>\";\n          self.lineno = 1;\n        } else if ($truthy($$$('::', 'String')['$==='](cursor))) {\n          \n          self.file = cursor;\n          $b = $$$('::', 'File').$split(self.file), $a = Opal.to_ary($b), (self.dir = ($a[0] == null ? nil : $a[0])), (self.path = ($a[1] == null ? nil : $a[1])), $b;\n          self.lineno = 1;\n        } else {\n          \n          if ($truthy((self.file = cursor.$file()))) {\n            \n            self.dir = ($truthy($a = cursor.$dir()) ? $a : $$$('::', 'File').$dirname(self.file));\n            self.path = ($truthy($a = cursor.$path()) ? $a : $$$('::', 'File').$basename(self.file));\n          } else {\n            \n            self.dir = ($truthy($a = cursor.$dir()) ? $a : \".\");\n            self.path = ($truthy($a = cursor.$path()) ? $a : \"<stdin>\");\n          };\n          self.lineno = ($truthy($a = cursor.$lineno()) ? $a : 1);\n        };\n        self.lines = self.$prepare_lines(data, opts);\n        self.source_lines = self.lines.$drop(0);\n        self.mark = nil;\n        self.look_ahead = 0;\n        self.process_lines = true;\n        self.unescape_next_line = false;\n        self.unterminated = nil;\n        return (self.saved = nil);\n      }, $Reader_initialize$4.$$arity = -1);\n      \n      Opal.def(self, '$has_more_lines?', $Reader_has_more_lines$ques$5 = function() {\n        var self = this;\n\n        if ($truthy(self.lines['$empty?']())) {\n          \n          self.look_ahead = 0;\n          return false;\n        } else {\n          return true\n        }\n      }, $Reader_has_more_lines$ques$5.$$arity = 0);\n      \n      Opal.def(self, '$empty?', $Reader_empty$ques$6 = function() {\n        var self = this;\n\n        if ($truthy(self.lines['$empty?']())) {\n          \n          self.look_ahead = 0;\n          return true;\n        } else {\n          return false\n        }\n      }, $Reader_empty$ques$6.$$arity = 0);\n      Opal.alias(self, \"eof?\", \"empty?\");\n      \n      Opal.def(self, '$next_line_empty?', $Reader_next_line_empty$ques$7 = function() {\n        var self = this;\n\n        return self.$peek_line()['$nil_or_empty?']()\n      }, $Reader_next_line_empty$ques$7.$$arity = 0);\n      \n      Opal.def(self, '$peek_line', $Reader_peek_line$8 = function $$peek_line(direct) {\n        var $a, self = this, line = nil;\n\n        \n        \n        if (direct == null) {\n          direct = false;\n        };\n        if ($truthy(($truthy($a = direct) ? $a : $rb_gt(self.look_ahead, 0)))) {\n          if ($truthy(self.unescape_next_line)) {\n            \n            return (line = self.lines['$[]'](0)).$slice(1, line.$length());\n          } else {\n            return self.lines['$[]'](0)\n          }\n        } else if ($truthy(self.lines['$empty?']())) {\n          \n          self.look_ahead = 0;\n          return nil;\n        } else if ($truthy((line = self.$process_line(self.lines['$[]'](0))))) {\n          return line\n        } else {\n          return self.$peek_line()\n        };\n      }, $Reader_peek_line$8.$$arity = -1);\n      \n      Opal.def(self, '$peek_lines', $Reader_peek_lines$9 = function $$peek_lines(num, direct) {\n        var $a, $$10, self = this, old_look_ahead = nil, result = nil;\n\n        \n        \n        if (num == null) {\n          num = nil;\n        };\n        \n        if (direct == null) {\n          direct = false;\n        };\n        old_look_ahead = self.look_ahead;\n        result = [];\n        (function(){var $brk = Opal.new_brk(); try {return $send(($truthy($a = num) ? $a : $$($nesting, 'MAX_INT')), 'times', [], ($$10 = function(){var self = $$10.$$s || this, line = nil;\n          if (self.lineno == null) self.lineno = nil;\n\n        if ($truthy((line = (function() {if ($truthy(direct)) {\n            return self.$shift()\n          } else {\n            return self.$read_line()\n          }; return nil; })()))) {\n            return result['$<<'](line)\n          } else {\n            \n            if ($truthy(direct)) {\n              self.lineno = $rb_minus(self.lineno, 1)};\n            \n            Opal.brk(nil, $brk);\n          }}, $$10.$$s = self, $$10.$$brk = $brk, $$10.$$arity = 0, $$10))\n        } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n        if ($truthy(result['$empty?']())) {\n        } else {\n          \n          self.$unshift_all(result);\n          if ($truthy(direct)) {\n            self.look_ahead = old_look_ahead};\n        };\n        return result;\n      }, $Reader_peek_lines$9.$$arity = -1);\n      \n      Opal.def(self, '$read_line', $Reader_read_line$11 = function $$read_line() {\n        var $a, self = this;\n\n        if ($truthy(($truthy($a = $rb_gt(self.look_ahead, 0)) ? $a : self['$has_more_lines?']()))) {\n          return self.$shift()\n        } else {\n          return nil\n        }\n      }, $Reader_read_line$11.$$arity = 0);\n      \n      Opal.def(self, '$read_lines', $Reader_read_lines$12 = function $$read_lines() {\n        var $a, self = this, lines = nil;\n\n        \n        lines = [];\n        while ($truthy(self['$has_more_lines?']())) {\n          lines['$<<'](self.$shift())\n        };\n        return lines;\n      }, $Reader_read_lines$12.$$arity = 0);\n      Opal.alias(self, \"readlines\", \"read_lines\");\n      \n      Opal.def(self, '$read', $Reader_read$13 = function $$read() {\n        var self = this;\n\n        return self.$read_lines().$join($$($nesting, 'LF'))\n      }, $Reader_read$13.$$arity = 0);\n      \n      Opal.def(self, '$advance', $Reader_advance$14 = function $$advance() {\n        var self = this;\n\n        if ($truthy(self.$shift())) {\n          return true\n        } else {\n          return false\n        }\n      }, $Reader_advance$14.$$arity = 0);\n      \n      Opal.def(self, '$unshift_line', $Reader_unshift_line$15 = function $$unshift_line(line_to_restore) {\n        var self = this;\n\n        \n        self.$unshift(line_to_restore);\n        return nil;\n      }, $Reader_unshift_line$15.$$arity = 1);\n      Opal.alias(self, \"restore_line\", \"unshift_line\");\n      \n      Opal.def(self, '$unshift_lines', $Reader_unshift_lines$16 = function $$unshift_lines(lines_to_restore) {\n        var self = this;\n\n        \n        self.$unshift_all(lines_to_restore);\n        return nil;\n      }, $Reader_unshift_lines$16.$$arity = 1);\n      Opal.alias(self, \"restore_lines\", \"unshift_lines\");\n      \n      Opal.def(self, '$replace_next_line', $Reader_replace_next_line$17 = function $$replace_next_line(replacement) {\n        var self = this;\n\n        \n        self.$shift();\n        self.$unshift(replacement);\n        return true;\n      }, $Reader_replace_next_line$17.$$arity = 1);\n      Opal.alias(self, \"replace_line\", \"replace_next_line\");\n      \n      Opal.def(self, '$skip_blank_lines', $Reader_skip_blank_lines$18 = function $$skip_blank_lines() {\n        var $a, self = this, num_skipped = nil, next_line = nil;\n\n        \n        if ($truthy(self['$empty?']())) {\n          return nil};\n        num_skipped = 0;\n        while ($truthy((next_line = self.$peek_line()))) {\n          if ($truthy(next_line['$empty?']())) {\n            \n            self.$shift();\n            num_skipped = $rb_plus(num_skipped, 1);\n          } else {\n            return num_skipped\n          }\n        };\n      }, $Reader_skip_blank_lines$18.$$arity = 0);\n      \n      Opal.def(self, '$skip_comment_lines', $Reader_skip_comment_lines$19 = function $$skip_comment_lines() {\n        var $a, $b, self = this, next_line = nil, ll = nil;\n\n        \n        if ($truthy(self['$empty?']())) {\n          return nil};\n        while ($truthy(($truthy($b = (next_line = self.$peek_line())) ? next_line['$empty?']()['$!']() : $b))) {\n          if ($truthy(next_line['$start_with?'](\"//\"))) {\n            if ($truthy(next_line['$start_with?'](\"///\"))) {\n              if ($truthy(($truthy($b = $rb_gt((ll = next_line.$length()), 3)) ? next_line['$==']($rb_times(\"/\", ll)) : $b))) {\n                self.$read_lines_until($hash2([\"terminator\", \"skip_first_line\", \"read_last_line\", \"skip_processing\", \"context\"], {\"terminator\": next_line, \"skip_first_line\": true, \"read_last_line\": true, \"skip_processing\": true, \"context\": \"comment\"}))\n              } else {\n                break;\n              }\n            } else {\n              self.$shift()\n            }\n          } else {\n            break;\n          }\n        };\n        return nil;\n      }, $Reader_skip_comment_lines$19.$$arity = 0);\n      \n      Opal.def(self, '$skip_line_comments', $Reader_skip_line_comments$20 = function $$skip_line_comments() {\n        var $a, $b, self = this, comment_lines = nil, next_line = nil;\n\n        \n        if ($truthy(self['$empty?']())) {\n          return []};\n        comment_lines = [];\n        while ($truthy(($truthy($b = (next_line = self.$peek_line())) ? next_line['$empty?']()['$!']() : $b))) {\n          if ($truthy(next_line['$start_with?'](\"//\"))) {\n            comment_lines['$<<'](self.$shift())\n          } else {\n            break;\n          }\n        };\n        return comment_lines;\n      }, $Reader_skip_line_comments$20.$$arity = 0);\n      \n      Opal.def(self, '$terminate', $Reader_terminate$21 = function $$terminate() {\n        var self = this;\n\n        \n        self.lineno = $rb_plus(self.lineno, self.lines.$size());\n        self.lines.$clear();\n        self.look_ahead = 0;\n        return nil;\n      }, $Reader_terminate$21.$$arity = 0);\n      \n      Opal.def(self, '$read_lines_until', $Reader_read_lines_until$22 = function $$read_lines_until(options) {\n        var $a, $b, $c, $d, $iter = $Reader_read_lines_until$22.$$p, $yield = $iter || nil, self = this, result = nil, restore_process_lines = nil, terminator = nil, start_cursor = nil, break_on_blank_lines = nil, break_on_list_continuation = nil, skip_comments = nil, complete = nil, line_read = nil, line_restored = nil, line = nil, $writer = nil, context = nil;\n\n        if ($iter) $Reader_read_lines_until$22.$$p = null;\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        result = [];\n        if ($truthy(($truthy($a = self.process_lines) ? options['$[]'](\"skip_processing\") : $a))) {\n          \n          self.process_lines = false;\n          restore_process_lines = true;};\n        if ($truthy((terminator = options['$[]'](\"terminator\")))) {\n          \n          start_cursor = ($truthy($a = options['$[]'](\"cursor\")) ? $a : self.$cursor());\n          break_on_blank_lines = false;\n          break_on_list_continuation = false;\n        } else {\n          \n          break_on_blank_lines = options['$[]'](\"break_on_blank_lines\");\n          break_on_list_continuation = options['$[]'](\"break_on_list_continuation\");\n        };\n        skip_comments = options['$[]'](\"skip_line_comments\");\n        complete = (line_read = (line_restored = nil));\n        if ($truthy(options['$[]'](\"skip_first_line\"))) {\n          self.$shift()};\n        while ($truthy(($truthy($b = complete['$!']()) ? (line = self.$read_line()) : $b))) {\n          \n          complete = (function() {while ($truthy(true)) {\n            \n            if ($truthy(($truthy($c = terminator) ? line['$=='](terminator) : $c))) {\n              return true};\n            if ($truthy(($truthy($c = break_on_blank_lines) ? line['$empty?']() : $c))) {\n              return true};\n            if ($truthy(($truthy($c = ($truthy($d = break_on_list_continuation) ? line_read : $d)) ? line['$==']($$($nesting, 'LIST_CONTINUATION')) : $c))) {\n              \n              \n              $writer = [\"preserve_last_line\", true];\n              $send(options, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              return true;};\n            if ($truthy((($c = ($yield !== nil)) ? Opal.yield1($yield, line) : ($yield !== nil)))) {\n              return true};\n            return false;\n          }; return nil; })();\n          if ($truthy(complete)) {\n            \n            if ($truthy(options['$[]'](\"read_last_line\"))) {\n              \n              result['$<<'](line);\n              line_read = true;};\n            if ($truthy(options['$[]'](\"preserve_last_line\"))) {\n              \n              self.$unshift(line);\n              line_restored = true;};\n          } else if ($truthy(($truthy($b = ($truthy($c = skip_comments) ? line['$start_with?'](\"//\") : $c)) ? line['$start_with?'](\"///\")['$!']() : $b))) {\n          } else {\n            \n            result['$<<'](line);\n            line_read = true;\n          };\n        };\n        if ($truthy(restore_process_lines)) {\n          \n          self.process_lines = true;\n          if ($truthy(($truthy($a = line_restored) ? terminator['$!']() : $a))) {\n            self.look_ahead = $rb_minus(self.look_ahead, 1)};};\n        if ($truthy(($truthy($a = ($truthy($b = terminator) ? terminator['$!='](line) : $b)) ? (context = options.$fetch(\"context\", terminator)) : $a))) {\n          \n          if (start_cursor['$=='](\"at_mark\")) {\n            start_cursor = self.$cursor_at_mark()};\n          self.$logger().$warn(self.$message_with_context(\"\" + \"unterminated \" + (context) + \" block\", $hash2([\"source_location\"], {\"source_location\": start_cursor})));\n          self.unterminated = true;};\n        return result;\n      }, $Reader_read_lines_until$22.$$arity = -1);\n      \n      Opal.def(self, '$shift', $Reader_shift$23 = function $$shift() {\n        var self = this;\n\n        \n        self.lineno = $rb_plus(self.lineno, 1);\n        if (self.look_ahead['$=='](0)) {\n        } else {\n          self.look_ahead = $rb_minus(self.look_ahead, 1)\n        };\n        return self.lines.$shift();\n      }, $Reader_shift$23.$$arity = 0);\n      \n      Opal.def(self, '$unshift', $Reader_unshift$24 = function $$unshift(line) {\n        var self = this;\n\n        \n        self.lineno = $rb_minus(self.lineno, 1);\n        self.look_ahead = $rb_plus(self.look_ahead, 1);\n        return self.lines.$unshift(line);\n      }, $Reader_unshift$24.$$arity = 1);\n      \n      Opal.def(self, '$unshift_all', $Reader_unshift_all$25 = function $$unshift_all(lines) {\n        var self = this;\n\n        \n        self.lineno = $rb_minus(self.lineno, lines.$size());\n        self.look_ahead = $rb_plus(self.look_ahead, lines.$size());\n        return $send(self.lines, 'unshift', Opal.to_a(lines));\n      }, $Reader_unshift_all$25.$$arity = 1);\n      \n      Opal.def(self, '$cursor', $Reader_cursor$26 = function $$cursor() {\n        var self = this;\n\n        return $$($nesting, 'Cursor').$new(self.file, self.dir, self.path, self.lineno)\n      }, $Reader_cursor$26.$$arity = 0);\n      \n      Opal.def(self, '$cursor_at_line', $Reader_cursor_at_line$27 = function $$cursor_at_line(lineno) {\n        var self = this;\n\n        return $$($nesting, 'Cursor').$new(self.file, self.dir, self.path, lineno)\n      }, $Reader_cursor_at_line$27.$$arity = 1);\n      \n      Opal.def(self, '$cursor_at_mark', $Reader_cursor_at_mark$28 = function $$cursor_at_mark() {\n        var self = this;\n\n        if ($truthy(self.mark)) {\n          return $send($$($nesting, 'Cursor'), 'new', Opal.to_a(self.mark))\n        } else {\n          return self.$cursor()\n        }\n      }, $Reader_cursor_at_mark$28.$$arity = 0);\n      \n      Opal.def(self, '$cursor_before_mark', $Reader_cursor_before_mark$29 = function $$cursor_before_mark() {\n        var $a, $b, self = this, m_file = nil, m_dir = nil, m_path = nil, m_lineno = nil;\n\n        if ($truthy(self.mark)) {\n          \n          $b = self.mark, $a = Opal.to_ary($b), (m_file = ($a[0] == null ? nil : $a[0])), (m_dir = ($a[1] == null ? nil : $a[1])), (m_path = ($a[2] == null ? nil : $a[2])), (m_lineno = ($a[3] == null ? nil : $a[3])), $b;\n          return $$($nesting, 'Cursor').$new(m_file, m_dir, m_path, $rb_minus(m_lineno, 1));\n        } else {\n          return $$($nesting, 'Cursor').$new(self.file, self.dir, self.path, $rb_minus(self.lineno, 1))\n        }\n      }, $Reader_cursor_before_mark$29.$$arity = 0);\n      \n      Opal.def(self, '$cursor_at_prev_line', $Reader_cursor_at_prev_line$30 = function $$cursor_at_prev_line() {\n        var self = this;\n\n        return $$($nesting, 'Cursor').$new(self.file, self.dir, self.path, $rb_minus(self.lineno, 1))\n      }, $Reader_cursor_at_prev_line$30.$$arity = 0);\n      \n      Opal.def(self, '$mark', $Reader_mark$31 = function $$mark() {\n        var self = this;\n\n        return (self.mark = [self.file, self.dir, self.path, self.lineno])\n      }, $Reader_mark$31.$$arity = 0);\n      \n      Opal.def(self, '$line_info', $Reader_line_info$32 = function $$line_info() {\n        var self = this;\n\n        return \"\" + (self.path) + \": line \" + (self.lineno)\n      }, $Reader_line_info$32.$$arity = 0);\n      \n      Opal.def(self, '$lines', $Reader_lines$33 = function $$lines() {\n        var self = this;\n\n        return self.lines.$drop(0)\n      }, $Reader_lines$33.$$arity = 0);\n      \n      Opal.def(self, '$string', $Reader_string$34 = function $$string() {\n        var self = this;\n\n        return self.lines.$join($$($nesting, 'LF'))\n      }, $Reader_string$34.$$arity = 0);\n      \n      Opal.def(self, '$source', $Reader_source$35 = function $$source() {\n        var self = this;\n\n        return self.source_lines.$join($$($nesting, 'LF'))\n      }, $Reader_source$35.$$arity = 0);\n      \n      Opal.def(self, '$save', $Reader_save$36 = function $$save() {\n        var $$37, self = this;\n\n        \n        self.saved = $send($hash2([], {}), 'tap', [], ($$37 = function(accum){var self = $$37.$$s || this, $$38;\n\n        \n          \n          if (accum == null) {\n            accum = nil;\n          };\n          return $send(self.$instance_variables(), 'each', [], ($$38 = function(name){var self = $$38.$$s || this, $a, $writer = nil, val = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            if ($truthy(($truthy($a = name['$=='](\"@saved\")) ? $a : name['$=='](\"@source_lines\")))) {\n              return nil\n            } else {\n              \n              $writer = [name, (function() {if ($truthy($$$('::', 'Array')['$===']((val = self.$instance_variable_get(name))))) {\n                \n                return val.$drop(0);\n              } else {\n                return val\n              }; return nil; })()];\n              $send(accum, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];\n            };}, $$38.$$s = self, $$38.$$arity = 1, $$38));}, $$37.$$s = self, $$37.$$arity = 1, $$37));\n        return nil;\n      }, $Reader_save$36.$$arity = 0);\n      \n      Opal.def(self, '$restore_save', $Reader_restore_save$39 = function $$restore_save() {\n        var $$40, self = this;\n\n        if ($truthy(self.saved)) {\n          \n          $send(self.saved, 'each', [], ($$40 = function(name, val){var self = $$40.$$s || this;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            \n            if (val == null) {\n              val = nil;\n            };\n            return self.$instance_variable_set(name, val);}, $$40.$$s = self, $$40.$$arity = 2, $$40));\n          return (self.saved = nil);\n        } else {\n          return nil\n        }\n      }, $Reader_restore_save$39.$$arity = 0);\n      \n      Opal.def(self, '$discard_save', $Reader_discard_save$41 = function $$discard_save() {\n        var self = this;\n\n        return (self.saved = nil)\n      }, $Reader_discard_save$41.$$arity = 0);\n      \n      Opal.def(self, '$to_s', $Reader_to_s$42 = function $$to_s() {\n        var self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {path: \" + (self.path.$inspect()) + \", line: \" + (self.lineno) + \"}>\"\n      }, $Reader_to_s$42.$$arity = 0);\n      self.$private();\n      \n      Opal.def(self, '$prepare_lines', $Reader_prepare_lines$43 = function $$prepare_lines(data, opts) {\n        var self = this;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        try {\n          if ($truthy(opts['$[]'](\"normalize\"))) {\n            if ($truthy($$$('::', 'Array')['$==='](data))) {\n              \n              return $$($nesting, 'Helpers').$prepare_source_array(data);\n            } else {\n              \n              return $$($nesting, 'Helpers').$prepare_source_string(data);\n            }\n          } else if ($truthy($$$('::', 'Array')['$==='](data))) {\n            return data.$drop(0)\n          } else if ($truthy(data)) {\n            return data.$split($$($nesting, 'LF'), -1)\n          } else {\n            return []\n          }\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n            try {\n              if ($truthy((function() {if ($truthy($$$('::', 'Array')['$==='](data))) {\n                return data.$join()\n              } else {\n                return data.$to_s()\n              }; return nil; })()['$valid_encoding?']())) {\n                return self.$raise()\n              } else {\n                return self.$raise($$$('::', 'ArgumentError'), \"source is either binary or contains invalid Unicode data\")\n              }\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };\n      }, $Reader_prepare_lines$43.$$arity = -2);\n      return (Opal.def(self, '$process_line', $Reader_process_line$44 = function $$process_line(line) {\n        var self = this;\n\n        \n        if ($truthy(self.process_lines)) {\n          self.look_ahead = $rb_plus(self.look_ahead, 1)};\n        return line;\n      }, $Reader_process_line$44.$$arity = 1), nil) && 'process_line';\n    })($nesting[0], null, $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'PreprocessorReader');\n\n      var $nesting = [self].concat($parent_nesting), $PreprocessorReader_initialize$45, $PreprocessorReader_has_more_lines$ques$46, $PreprocessorReader_empty$ques$47, $PreprocessorReader_peek_line$48, $PreprocessorReader_push_include$49, $PreprocessorReader_include_depth$50, $PreprocessorReader_exceeds_max_depth$ques$51, $PreprocessorReader_shift$52, $PreprocessorReader_include_processors$ques$53, $PreprocessorReader_create_include_cursor$54, $PreprocessorReader_to_s$55, $PreprocessorReader_prepare_lines$57, $PreprocessorReader_process_line$58, $PreprocessorReader_preprocess_conditional_directive$59, $PreprocessorReader_preprocess_include_directive$64, $PreprocessorReader_resolve_include_path$77, $PreprocessorReader_pop_include$79, $PreprocessorReader_split_delimited_value$80, $PreprocessorReader_skip_front_matter$excl$81, $PreprocessorReader_resolve_expr_val$82;\n\n      self.$$prototype.include_stack = self.$$prototype.lines = self.$$prototype.file = self.$$prototype.dir = self.$$prototype.path = self.$$prototype.lineno = self.$$prototype.maxdepth = self.$$prototype.process_lines = self.$$prototype.includes = self.$$prototype.document = self.$$prototype.unescape_next_line = self.$$prototype.include_processor_extensions = self.$$prototype.look_ahead = self.$$prototype.skipping = self.$$prototype.conditional_stack = nil;\n      \n      self.$attr_reader(\"include_stack\");\n      \n      Opal.def(self, '$initialize', $PreprocessorReader_initialize$45 = function $$initialize(document, data, cursor, opts) {\n        var $a, $iter = $PreprocessorReader_initialize$45.$$p, $yield = $iter || nil, self = this, default_include_depth = nil;\n\n        if ($iter) $PreprocessorReader_initialize$45.$$p = null;\n        \n        \n        if (data == null) {\n          data = nil;\n        };\n        \n        if (cursor == null) {\n          cursor = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        self.document = document;\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $PreprocessorReader_initialize$45, false), [data, cursor, opts], null);\n        if ($truthy($rb_gt((default_include_depth = ($truthy($a = document.$attributes()['$[]'](\"max-include-depth\")) ? $a : 64).$to_i()), 0))) {\n          self.maxdepth = $hash2([\"abs\", \"curr\", \"rel\"], {\"abs\": default_include_depth, \"curr\": default_include_depth, \"rel\": default_include_depth})\n        } else {\n          self.maxdepth = nil\n        };\n        self.include_stack = [];\n        self.includes = document.$catalog()['$[]'](\"includes\");\n        self.skipping = false;\n        self.conditional_stack = [];\n        return (self.include_processor_extensions = nil);\n      }, $PreprocessorReader_initialize$45.$$arity = -2);\n      \n      Opal.def(self, '$has_more_lines?', $PreprocessorReader_has_more_lines$ques$46 = function() {\n        var self = this;\n\n        if ($truthy(self.$peek_line())) {\n          return true\n        } else {\n          return false\n        }\n      }, $PreprocessorReader_has_more_lines$ques$46.$$arity = 0);\n      \n      Opal.def(self, '$empty?', $PreprocessorReader_empty$ques$47 = function() {\n        var self = this;\n\n        if ($truthy(self.$peek_line())) {\n          return false\n        } else {\n          return true\n        }\n      }, $PreprocessorReader_empty$ques$47.$$arity = 0);\n      Opal.alias(self, \"eof?\", \"empty?\");\n      \n      Opal.def(self, '$peek_line', $PreprocessorReader_peek_line$48 = function $$peek_line(direct) {\n        var $iter = $PreprocessorReader_peek_line$48.$$p, $yield = $iter || nil, self = this, line = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $PreprocessorReader_peek_line$48.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (direct == null) {\n          direct = false;\n        };\n        if ($truthy((line = $send(self, Opal.find_super_dispatcher(self, 'peek_line', $PreprocessorReader_peek_line$48, false), $zuper, $iter)))) {\n          return line\n        } else if ($truthy(self.include_stack['$empty?']())) {\n          return nil\n        } else {\n          \n          self.$pop_include();\n          return self.$peek_line(direct);\n        };\n      }, $PreprocessorReader_peek_line$48.$$arity = -1);\n      \n      Opal.def(self, '$push_include', $PreprocessorReader_push_include$49 = function $$push_include(data, file, path, lineno, attributes) {\n        var $a, self = this, $writer = nil, dir = nil, rel_maxdepth = nil, curr_maxdepth = nil, abs_maxdepth = nil, old_leveloffset = nil;\n\n        \n        \n        if (file == null) {\n          file = nil;\n        };\n        \n        if (path == null) {\n          path = nil;\n        };\n        \n        if (lineno == null) {\n          lineno = 1;\n        };\n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        self.include_stack['$<<']([self.lines, self.file, self.dir, self.path, self.lineno, self.maxdepth, self.process_lines]);\n        if ($truthy((self.file = file))) {\n          \n          if ($truthy($$$('::', 'String')['$==='](file))) {\n            self.dir = $$$('::', 'File').$dirname(file)\n          } else if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL'))) {\n            self.dir = $$$('::', 'URI').$parse($$$('::', 'File').$dirname((file = file.$to_s())))\n          } else {\n            \n            \n            $writer = [(function() {if ((dir = $$$('::', 'File').$dirname(file.$path()))['$=='](\"/\")) {\n              return \"\"\n            } else {\n              return dir\n            }; return nil; })()];\n            $send((self.dir = file.$dup()), 'path=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            file = file.$to_s();\n          };\n          self.path = (path = ($truthy($a = path) ? $a : $$$('::', 'File').$basename(file)));\n          if ($truthy((self.process_lines = $send(file, 'end_with?', Opal.to_a($$($nesting, 'ASCIIDOC_EXTENSIONS').$keys()))))) {\n            \n            $writer = [path.$slice(0, path.$rindex(\".\")), (function() {if ($truthy(attributes['$[]'](\"partial-option\"))) {\n              return nil\n            } else {\n              return true\n            }; return nil; })()];\n            $send(self.includes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n        } else {\n          \n          self.dir = \".\";\n          self.process_lines = true;\n          if ($truthy((self.path = path))) {\n            \n            $writer = [$$($nesting, 'Helpers').$rootname(path), (function() {if ($truthy(attributes['$[]'](\"partial-option\"))) {\n              return nil\n            } else {\n              return true\n            }; return nil; })()];\n            $send(self.includes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            self.path = \"<stdin>\"\n          };\n        };\n        self.lineno = lineno;\n        if ($truthy(($truthy($a = self.maxdepth) ? attributes['$key?'](\"depth\") : $a))) {\n          if ($truthy($rb_gt((rel_maxdepth = attributes['$[]'](\"depth\").$to_i()), 0))) {\n            \n            if ($truthy($rb_gt((curr_maxdepth = $rb_plus(self.include_stack.$size(), rel_maxdepth)), (abs_maxdepth = self.maxdepth['$[]'](\"abs\"))))) {\n              curr_maxdepth = (rel_maxdepth = abs_maxdepth)};\n            self.maxdepth = $hash2([\"abs\", \"curr\", \"rel\"], {\"abs\": abs_maxdepth, \"curr\": curr_maxdepth, \"rel\": rel_maxdepth});\n          } else {\n            self.maxdepth = $hash2([\"abs\", \"curr\", \"rel\"], {\"abs\": self.maxdepth['$[]'](\"abs\"), \"curr\": self.include_stack.$size(), \"rel\": 0})\n          }};\n        if ($truthy((self.lines = self.$prepare_lines(data, $hash2([\"normalize\", \"condense\", \"indent\"], {\"normalize\": true, \"condense\": false, \"indent\": attributes['$[]'](\"indent\")})))['$empty?']())) {\n          self.$pop_include()\n        } else {\n          \n          if ($truthy(attributes['$key?'](\"leveloffset\"))) {\n            \n            self.lines.$unshift(\"\");\n            self.lines.$unshift(\"\" + \":leveloffset: \" + (attributes['$[]'](\"leveloffset\")));\n            self.lines['$<<'](\"\");\n            if ($truthy((old_leveloffset = self.document.$attr(\"leveloffset\")))) {\n              self.lines['$<<'](\"\" + \":leveloffset: \" + (old_leveloffset))\n            } else {\n              self.lines['$<<'](\":leveloffset!:\")\n            };\n            self.lineno = $rb_minus(self.lineno, 2);};\n          self.look_ahead = 0;\n        };\n        return self;\n      }, $PreprocessorReader_push_include$49.$$arity = -2);\n      \n      Opal.def(self, '$include_depth', $PreprocessorReader_include_depth$50 = function $$include_depth() {\n        var self = this;\n\n        return self.include_stack.$size()\n      }, $PreprocessorReader_include_depth$50.$$arity = 0);\n      \n      Opal.def(self, '$exceeds_max_depth?', $PreprocessorReader_exceeds_max_depth$ques$51 = function() {\n        var $a, $b, self = this;\n\n        return ($truthy($a = ($truthy($b = self.maxdepth) ? $rb_ge(self.include_stack.$size(), self.maxdepth['$[]'](\"curr\")) : $b)) ? self.maxdepth['$[]'](\"rel\") : $a)\n      }, $PreprocessorReader_exceeds_max_depth$ques$51.$$arity = 0);\n      Opal.alias(self, \"exceeded_max_depth?\", \"exceeds_max_depth?\");\n      \n      Opal.def(self, '$shift', $PreprocessorReader_shift$52 = function $$shift() {\n        var $iter = $PreprocessorReader_shift$52.$$p, $yield = $iter || nil, self = this, line = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $PreprocessorReader_shift$52.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        if ($truthy(self.unescape_next_line)) {\n          \n          self.unescape_next_line = false;\n          return (line = $send(self, Opal.find_super_dispatcher(self, 'shift', $PreprocessorReader_shift$52, false), $zuper, $iter)).$slice(1, line.$length());\n        } else {\n          return $send(self, Opal.find_super_dispatcher(self, 'shift', $PreprocessorReader_shift$52, false), $zuper, $iter)\n        }\n      }, $PreprocessorReader_shift$52.$$arity = 0);\n      \n      Opal.def(self, '$include_processors?', $PreprocessorReader_include_processors$ques$53 = function() {\n        var $a, self = this;\n\n        if ($truthy(self.include_processor_extensions['$nil?']())) {\n          if ($truthy(($truthy($a = self.document['$extensions?']()) ? self.document.$extensions()['$include_processors?']() : $a))) {\n            return (self.include_processor_extensions = self.document.$extensions().$include_processors())['$!']()['$!']()\n          } else {\n            return (self.include_processor_extensions = false)\n          }\n        } else {\n          return self.include_processor_extensions['$!='](false)\n        }\n      }, $PreprocessorReader_include_processors$ques$53.$$arity = 0);\n      \n      Opal.def(self, '$create_include_cursor', $PreprocessorReader_create_include_cursor$54 = function $$create_include_cursor(file, path, lineno) {\n        var self = this, dir = nil;\n\n        \n        if ($truthy($$$('::', 'String')['$==='](file))) {\n          dir = $$$('::', 'File').$dirname(file)\n        } else if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL'))) {\n          dir = $$$('::', 'File').$dirname((file = file.$to_s()))\n        } else {\n          \n          dir = (function() {if ((dir = $$$('::', 'File').$dirname(file.$path()))['$=='](\"\")) {\n            return \"/\"\n          } else {\n            return dir\n          }; return nil; })();\n          file = file.$to_s();\n        };\n        return $$($nesting, 'Cursor').$new(file, dir, path, lineno);\n      }, $PreprocessorReader_create_include_cursor$54.$$arity = 3);\n      \n      Opal.def(self, '$to_s', $PreprocessorReader_to_s$55 = function $$to_s() {\n        var $$56, self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {path: \" + (self.path.$inspect()) + \", line: \" + (self.lineno) + \", include depth: \" + (self.include_stack.$size()) + \", include stack: [\" + ($send(self.include_stack, 'map', [], ($$56 = function(inc){var self = $$56.$$s || this;\n\n        \n          \n          if (inc == null) {\n            inc = nil;\n          };\n          return inc.$to_s();}, $$56.$$s = self, $$56.$$arity = 1, $$56)).$join(\", \")) + \"]}>\"\n      }, $PreprocessorReader_to_s$55.$$arity = 0);\n      self.$private();\n      \n      Opal.def(self, '$prepare_lines', $PreprocessorReader_prepare_lines$57 = function $$prepare_lines(data, opts) {\n        var $a, $b, $iter = $PreprocessorReader_prepare_lines$57.$$p, $yield = $iter || nil, self = this, result = nil, front_matter = nil, $writer = nil, first = nil, last = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $PreprocessorReader_prepare_lines$57.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        result = $send(self, Opal.find_super_dispatcher(self, 'prepare_lines', $PreprocessorReader_prepare_lines$57, false), $zuper, $iter);\n        if ($truthy(($truthy($a = self.document) ? self.document.$attributes()['$[]'](\"skip-front-matter\") : $a))) {\n          if ($truthy((front_matter = self['$skip_front_matter!'](result)))) {\n            \n            $writer = [\"front-matter\", front_matter.$join($$($nesting, 'LF'))];\n            $send(self.document.$attributes(), '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}};\n        if ($truthy(opts.$fetch(\"condense\", true))) {\n          \n          while ($truthy(($truthy($b = (first = result['$[]'](0))) ? first['$empty?']() : $b))) {\n            ($truthy($b = result.$shift()) ? (self.lineno = $rb_plus(self.lineno, 1)) : $b)\n          };\n          while ($truthy(($truthy($b = (last = result['$[]'](-1))) ? last['$empty?']() : $b))) {\n            result.$pop()\n          };};\n        if ($truthy(opts['$[]'](\"indent\"))) {\n          $$($nesting, 'Parser')['$adjust_indentation!'](result, opts['$[]'](\"indent\").$to_i(), self.document.$attr(\"tabsize\").$to_i())};\n        return result;\n      }, $PreprocessorReader_prepare_lines$57.$$arity = -2);\n      \n      Opal.def(self, '$process_line', $PreprocessorReader_process_line$58 = function $$process_line(line) {\n        var $a, $b, self = this;\n\n        \n        if ($truthy(self.process_lines)) {\n        } else {\n          return line\n        };\n        if ($truthy(line['$empty?']())) {\n          \n          self.look_ahead = $rb_plus(self.look_ahead, 1);\n          return line;};\n        if ($truthy(($truthy($a = ($truthy($b = line['$end_with?'](\"]\")) ? line['$start_with?'](\"[\")['$!']() : $b)) ? line['$include?'](\"::\") : $a))) {\n          if ($truthy(($truthy($a = line['$include?'](\"if\")) ? $$($nesting, 'ConditionalDirectiveRx')['$=~'](line) : $a))) {\n            if ((($a = $gvars['~']) === nil ? nil : $a['$[]'](1))['$=='](\"\\\\\")) {\n              \n              self.unescape_next_line = true;\n              self.look_ahead = $rb_plus(self.look_ahead, 1);\n              return line.$slice(1, line.$length());\n            } else if ($truthy(self.$preprocess_conditional_directive((($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](3)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](4)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](5))))) {\n              \n              self.$shift();\n              return nil;\n            } else {\n              \n              self.look_ahead = $rb_plus(self.look_ahead, 1);\n              return line;\n            }\n          } else if ($truthy(self.skipping)) {\n            \n            self.$shift();\n            return nil;\n          } else if ($truthy(($truthy($a = line['$start_with?'](\"inc\", \"\\\\inc\")) ? $$($nesting, 'IncludeDirectiveRx')['$=~'](line) : $a))) {\n            if ((($a = $gvars['~']) === nil ? nil : $a['$[]'](1))['$=='](\"\\\\\")) {\n              \n              self.unescape_next_line = true;\n              self.look_ahead = $rb_plus(self.look_ahead, 1);\n              return line.$slice(1, line.$length());\n            } else if ($truthy(self.$preprocess_include_directive((($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](3))))) {\n              return nil\n            } else {\n              \n              self.look_ahead = $rb_plus(self.look_ahead, 1);\n              return line;\n            }\n          } else {\n            \n            self.look_ahead = $rb_plus(self.look_ahead, 1);\n            return line;\n          }\n        } else if ($truthy(self.skipping)) {\n          \n          self.$shift();\n          return nil;\n        } else {\n          \n          self.look_ahead = $rb_plus(self.look_ahead, 1);\n          return line;\n        };\n      }, $PreprocessorReader_process_line$58.$$arity = 1);\n      \n      Opal.def(self, '$preprocess_conditional_directive', $PreprocessorReader_preprocess_conditional_directive$59 = function $$preprocess_conditional_directive(keyword, target, delimiter, text) {\n        var $a, $$60, $$61, $$62, $$63, self = this, no_target = nil, pair = nil, skip = nil, $case = nil, lhs = nil, op = nil, rhs = nil;\n\n        \n        if ($truthy((no_target = target['$empty?']()))) {\n        } else {\n          target = target.$downcase()\n        };\n        if (keyword['$=='](\"endif\")) {\n          \n          if ($truthy(text)) {\n            self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - text not permitted: endif::\" + (target) + \"[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})))\n          } else if ($truthy(self.conditional_stack['$empty?']())) {\n            self.$logger().$error(self.$message_with_context(\"\" + \"unmatched preprocessor directive: endif::\" + (target) + \"[]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})))\n          } else if ($truthy(($truthy($a = no_target) ? $a : target['$==']((pair = self.conditional_stack['$[]'](-1))['$[]'](\"target\"))))) {\n            \n            self.conditional_stack.$pop();\n            self.skipping = (function() {if ($truthy(self.conditional_stack['$empty?']())) {\n              return false\n            } else {\n              return self.conditional_stack['$[]'](-1)['$[]'](\"skipping\")\n            }; return nil; })();\n          } else {\n            self.$logger().$error(self.$message_with_context(\"\" + \"mismatched preprocessor directive: endif::\" + (target) + \"[], expected endif::\" + (pair['$[]'](\"target\")) + \"[]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})))\n          };\n          return true;\n        } else if ($truthy(self.skipping)) {\n          skip = false\n        } else {\n          $case = keyword;\n          if (\"ifdef\"['$===']($case)) {\n          if ($truthy(no_target)) {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - missing target: ifdef::[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return true;};\n          $case = delimiter;\n          if (\",\"['$===']($case)) {skip = $send(target.$split(\",\", -1), 'none?', [], ($$60 = function(name){var self = $$60.$$s || this;\n            if (self.document == null) self.document = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return self.document.$attributes()['$key?'](name);}, $$60.$$s = self, $$60.$$arity = 1, $$60))}\n          else if (\"+\"['$===']($case)) {skip = $send(target.$split(\"+\", -1), 'any?', [], ($$61 = function(name){var self = $$61.$$s || this;\n            if (self.document == null) self.document = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return self.document.$attributes()['$key?'](name)['$!']();}, $$61.$$s = self, $$61.$$arity = 1, $$61))}\n          else {skip = self.document.$attributes()['$key?'](target)['$!']()};}\n          else if (\"ifndef\"['$===']($case)) {\n          if ($truthy(no_target)) {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - missing target: ifndef::[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return true;};\n          $case = delimiter;\n          if (\",\"['$===']($case)) {skip = $send(target.$split(\",\", -1), 'any?', [], ($$62 = function(name){var self = $$62.$$s || this;\n            if (self.document == null) self.document = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return self.document.$attributes()['$key?'](name);}, $$62.$$s = self, $$62.$$arity = 1, $$62))}\n          else if (\"+\"['$===']($case)) {skip = $send(target.$split(\"+\", -1), 'all?', [], ($$63 = function(name){var self = $$63.$$s || this;\n            if (self.document == null) self.document = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return self.document.$attributes()['$key?'](name);}, $$63.$$s = self, $$63.$$arity = 1, $$63))}\n          else {skip = self.document.$attributes()['$key?'](target)};}\n          else if (\"ifeval\"['$===']($case)) {if ($truthy(no_target)) {\n            if ($truthy(($truthy($a = text) ? $$($nesting, 'EvalExpressionRx')['$=~'](text.$strip()) : $a))) {\n              \n              lhs = (($a = $gvars['~']) === nil ? nil : $a['$[]'](1));\n              op = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2));\n              rhs = (($a = $gvars['~']) === nil ? nil : $a['$[]'](3));\n              skip = (function() {if ($truthy(self.$resolve_expr_val(lhs).$send(op, self.$resolve_expr_val(rhs)))) {\n                return false\n              } else {\n                return true\n              }; return nil; })();\n            } else {\n              \n              self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - \" + ((function() {if ($truthy(text)) {\n                return \"invalid expression\"\n              } else {\n                return \"missing expression\"\n              }; return nil; })()) + \": ifeval::[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n              return true;\n            }\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - target not permitted: ifeval::\" + (target) + \"[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return true;\n          }}\n        };\n        if ($truthy(($truthy($a = keyword['$=='](\"ifeval\")) ? $a : text['$!']()))) {\n          \n          if ($truthy(skip)) {\n            self.skipping = true};\n          self.conditional_stack['$<<']($hash2([\"target\", \"skip\", \"skipping\"], {\"target\": target, \"skip\": skip, \"skipping\": self.skipping}));\n        } else if ($truthy(($truthy($a = self.skipping) ? $a : skip))) {\n        } else {\n          \n          self.$replace_next_line(text.$rstrip());\n          self.$unshift(\"\");\n          if ($truthy(text['$start_with?'](\"include::\"))) {\n            self.look_ahead = $rb_minus(self.look_ahead, 1)};\n        };\n        return true;\n      }, $PreprocessorReader_preprocess_conditional_directive$59.$$arity = 4);\n      \n      Opal.def(self, '$preprocess_include_directive', $PreprocessorReader_preprocess_include_directive$64 = function $$preprocess_include_directive(target, attrlist) {\n        var $a, $b, $$65, $$66, $$67, $$68, $$69, $$70, $$72, $$75, $$76, self = this, doc = nil, expanded_target = nil, attr_missing = nil, ext = nil, parsed_attrs = nil, inc_path = nil, target_type = nil, relpath = nil, reader = nil, read_mode = nil, inc_linenos = nil, inc_tags = nil, tag = nil, inc_lines = nil, inc_offset = nil, inc_lineno = nil, $writer = nil, tag_stack = nil, tags_used = nil, active_tag = nil, select = nil, base_select = nil, wildcard = nil, missing_tags = nil, inc_content = nil;\n\n        \n        doc = self.document;\n        if ($truthy(($truthy($a = (expanded_target = target)['$include?']($$($nesting, 'ATTR_REF_HEAD'))) ? (expanded_target = doc.$sub_attributes(target, $hash2([\"attribute_missing\"], {\"attribute_missing\": (function() {if ((attr_missing = ($truthy($b = doc.$attributes()['$[]'](\"attribute-missing\")) ? $b : $$($nesting, 'Compliance').$attribute_missing()))['$=='](\"warn\")) {\n          return \"drop-line\"\n        } else {\n          return attr_missing\n        }; return nil; })()})))['$empty?']() : $a))) {\n          if ($truthy((($a = attr_missing['$=='](\"drop-line\")) ? doc.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : attr_missing['$=='](\"drop-line\")))) {\n            \n            $send(self.$logger(), 'info', [], ($$65 = function(){var self = $$65.$$s || this;\n\n            return self.$message_with_context(\"\" + \"include dropped due to missing attribute: include::\" + (target) + \"[\" + (attrlist) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()}))}, $$65.$$s = self, $$65.$$arity = 0, $$65));\n            self.$shift();\n            return true;\n          } else if ($truthy(doc.$parse_attributes(attrlist, [], $hash2([\"sub_input\"], {\"sub_input\": true}))['$[]'](\"optional-option\"))) {\n            \n            $send(self.$logger(), 'info', [], ($$66 = function(){var self = $$66.$$s || this, $c;\n\n            return self.$message_with_context(\"\" + \"optional include dropped \" + ((function() {if ($truthy((($c = attr_missing['$=='](\"warn\")) ? doc.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : attr_missing['$=='](\"warn\")))) {\n                return \"due to missing attribute\"\n              } else {\n                return \"because resolved target is blank\"\n              }; return nil; })()) + \": include::\" + (target) + \"[\" + (attrlist) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()}))}, $$66.$$s = self, $$66.$$arity = 0, $$66));\n            self.$shift();\n            return true;\n          } else {\n            \n            self.$logger().$warn(self.$message_with_context(\"\" + \"include dropped \" + ((function() {if ($truthy((($a = attr_missing['$=='](\"warn\")) ? doc.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : attr_missing['$=='](\"warn\")))) {\n              return \"due to missing attribute\"\n            } else {\n              return \"because resolved target is blank\"\n            }; return nil; })()) + \": include::\" + (target) + \"[\" + (attrlist) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (target) + \"[\" + (attrlist) + \"]\");\n          }\n        } else if ($truthy(($truthy($a = self['$include_processors?']()) ? (ext = $send(self.include_processor_extensions, 'find', [], ($$67 = function(candidate){var self = $$67.$$s || this;\n\n        \n          \n          if (candidate == null) {\n            candidate = nil;\n          };\n          return candidate.$instance()['$handles?'](expanded_target);}, $$67.$$s = self, $$67.$$arity = 1, $$67))) : $a))) {\n          \n          self.$shift();\n          ext.$process_method()['$[]'](doc, self, expanded_target, doc.$parse_attributes(attrlist, [], $hash2([\"sub_input\"], {\"sub_input\": true})));\n          return true;\n        } else if ($truthy($rb_ge(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')))) {\n          return self.$replace_next_line(\"\" + \"link:\" + (expanded_target) + \"[]\")\n        } else if ($truthy(self.maxdepth)) {\n          \n          if ($truthy($rb_ge(self.include_stack.$size(), self.maxdepth['$[]'](\"curr\")))) {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"maximum include depth of \" + (self.maxdepth['$[]'](\"rel\")) + \" exceeded\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return nil;};\n          parsed_attrs = doc.$parse_attributes(attrlist, [], $hash2([\"sub_input\"], {\"sub_input\": true}));\n          $b = self.$resolve_include_path(expanded_target, attrlist, parsed_attrs), $a = Opal.to_ary($b), (inc_path = ($a[0] == null ? nil : $a[0])), (target_type = ($a[1] == null ? nil : $a[1])), (relpath = ($a[2] == null ? nil : $a[2])), $b;\n          if (target_type['$=='](\"file\")) {\n            \n            reader = $$$('::', 'File').$method(\"open\");\n            read_mode = $$($nesting, 'FILE_READ_MODE');\n          } else if (target_type['$=='](\"uri\")) {\n            \n            reader = $$$('::', 'OpenURI').$method(\"open_uri\");\n            read_mode = $$($nesting, 'URI_READ_MODE');\n          } else {\n            return inc_path\n          };\n          inc_linenos = (inc_tags = nil);\n          if ($truthy(attrlist)) {\n            if ($truthy(parsed_attrs['$key?'](\"lines\"))) {\n              \n              inc_linenos = [];\n              $send(self.$split_delimited_value(parsed_attrs['$[]'](\"lines\")), 'each', [], ($$68 = function(linedef){var self = $$68.$$s || this, $c, $d, from = nil, _ = nil, to = nil;\n\n              \n                \n                if (linedef == null) {\n                  linedef = nil;\n                };\n                if ($truthy(linedef['$include?'](\"..\"))) {\n                  \n                  $d = linedef.$partition(\"..\"), $c = Opal.to_ary($d), (from = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (to = ($c[2] == null ? nil : $c[2])), $d;\n                  return (inc_linenos = $rb_plus(inc_linenos, (function() {if ($truthy(($truthy($c = to['$empty?']()) ? $c : $rb_lt((to = to.$to_i()), 0)))) {\n                    return [from.$to_i(), $rb_divide(1, 0)]\n                  } else {\n                    return Opal.Range.$new(from.$to_i(), to, false).$to_a()\n                  }; return nil; })()));\n                } else {\n                  return inc_linenos['$<<'](linedef.$to_i())\n                };}, $$68.$$s = self, $$68.$$arity = 1, $$68));\n              inc_linenos = (function() {if ($truthy(inc_linenos['$empty?']())) {\n                return nil\n              } else {\n                return inc_linenos.$sort().$uniq()\n              }; return nil; })();\n            } else if ($truthy(parsed_attrs['$key?'](\"tag\"))) {\n              if ($truthy(($truthy($a = (tag = parsed_attrs['$[]'](\"tag\"))['$empty?']()) ? $a : tag['$=='](\"!\")))) {\n              } else {\n                inc_tags = (function() {if ($truthy(tag['$start_with?'](\"!\"))) {\n                  return $hash(tag.$slice(1, tag.$length()), false)\n                } else {\n                  return $hash(tag, true)\n                }; return nil; })()\n              }\n            } else if ($truthy(parsed_attrs['$key?'](\"tags\"))) {\n              \n              inc_tags = $hash2([], {});\n              $send(self.$split_delimited_value(parsed_attrs['$[]'](\"tags\")), 'each', [], ($$69 = function(tagdef){var self = $$69.$$s || this, $c, $writer = nil;\n\n              \n                \n                if (tagdef == null) {\n                  tagdef = nil;\n                };\n                if ($truthy(($truthy($c = tagdef['$empty?']()) ? $c : tagdef['$=='](\"!\")))) {\n                  return nil\n                } else if ($truthy(tagdef['$start_with?'](\"!\"))) {\n                  \n                  $writer = [tagdef.$slice(1, tagdef.$length()), false];\n                  $send(inc_tags, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                } else {\n                  \n                  $writer = [tagdef, true];\n                  $send(inc_tags, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                };}, $$69.$$s = self, $$69.$$arity = 1, $$69));\n              if ($truthy(inc_tags['$empty?']())) {\n                inc_tags = nil};}};\n          if ($truthy(inc_linenos)) {\n            \n            $a = [[], nil, 0], (inc_lines = $a[0]), (inc_offset = $a[1]), (inc_lineno = $a[2]), $a;\n            \n            try {\n              (function(){var $brk = Opal.new_brk(); try {return $send(reader, 'call', [inc_path, read_mode], ($$70 = function(f){var self = $$70.$$s || this, $$71, select_remaining = nil;\n\n              \n                \n                if (f == null) {\n                  f = nil;\n                };\n                select_remaining = nil;\n                return (function(){var $brk = Opal.new_brk(); try {return $send(f, 'each_line', [], ($$71 = function(l){var self = $$71.$$s || this, $c, $d, select = nil;\n\n                \n                  \n                  if (l == null) {\n                    l = nil;\n                  };\n                  inc_lineno = $rb_plus(inc_lineno, 1);\n                  if ($truthy(($truthy($c = select_remaining) ? $c : ($truthy($d = $$$('::', 'Float')['$===']((select = inc_linenos['$[]'](0)))) ? (select_remaining = select['$infinite?']()) : $d)))) {\n                    \n                    inc_offset = ($truthy($c = inc_offset) ? $c : inc_lineno);\n                    return inc_lines['$<<'](l);\n                  } else {\n                    \n                    if (select['$=='](inc_lineno)) {\n                      \n                      inc_offset = ($truthy($c = inc_offset) ? $c : inc_lineno);\n                      inc_lines['$<<'](l);\n                      inc_linenos.$shift();};\n                    if ($truthy(inc_linenos['$empty?']())) {\n                      \n                      Opal.brk(nil, $brk)\n                    } else {\n                      return nil\n                    };\n                  };}, $$71.$$s = self, $$71.$$brk = $brk, $$71.$$arity = 1, $$71))\n                } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();}, $$70.$$s = self, $$70.$$brk = $brk, $$70.$$arity = 1, $$70))\n              } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})()\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  \n                  self.$logger().$error(self.$message_with_context(\"\" + \"include \" + (target_type) + \" not readable: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n                  return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (expanded_target) + \"[\" + (attrlist) + \"]\");\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };;\n            self.$shift();\n            if ($truthy(inc_offset)) {\n              \n              \n              $writer = [\"partial-option\", \"\"];\n              $send(parsed_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              self.$push_include(inc_lines, inc_path, relpath, inc_offset, parsed_attrs);};\n          } else if ($truthy(inc_tags)) {\n            \n            $a = [[], nil, 0, [], $$$('::', 'Set').$new(), nil], (inc_lines = $a[0]), (inc_offset = $a[1]), (inc_lineno = $a[2]), (tag_stack = $a[3]), (tags_used = $a[4]), (active_tag = $a[5]), $a;\n            if ($truthy(inc_tags['$key?'](\"**\"))) {\n              if ($truthy(inc_tags['$key?'](\"*\"))) {\n                \n                select = (base_select = inc_tags.$delete(\"**\"));\n                wildcard = inc_tags.$delete(\"*\");\n              } else {\n                select = (base_select = (wildcard = inc_tags.$delete(\"**\")))\n              }\n            } else {\n              \n              select = (base_select = inc_tags['$value?'](true)['$!']());\n              wildcard = inc_tags.$delete(\"*\");\n            };\n            \n            try {\n              $send(reader, 'call', [inc_path, read_mode], ($$72 = function(f){var self = $$72.$$s || this, $c, $$73, dbl_co = nil, dbl_sb = nil;\n\n              \n                \n                if (f == null) {\n                  f = nil;\n                };\n                $c = [\"::\", \"[]\"], (dbl_co = $c[0]), (dbl_sb = $c[1]), $c;\n                return $send(f, 'each_line', [], ($$73 = function(l){var self = $$73.$$s || this, $d, $e, $$74, this_tag = nil, include_cursor = nil, idx = nil;\n\n                \n                  \n                  if (l == null) {\n                    l = nil;\n                  };\n                  inc_lineno = $rb_plus(inc_lineno, 1);\n                  if ($truthy(($truthy($d = ($truthy($e = l['$include?'](dbl_co)) ? l['$include?'](dbl_sb) : $e)) ? $$($nesting, 'TagDirectiveRx')['$=~'](l) : $d))) {\n                    \n                    this_tag = (($d = $gvars['~']) === nil ? nil : $d['$[]'](2));\n                    if ($truthy((($d = $gvars['~']) === nil ? nil : $d['$[]'](1)))) {\n                      if (this_tag['$=='](active_tag)) {\n                        \n                        tag_stack.$pop();\n                        return $e = (function() {if ($truthy(tag_stack['$empty?']())) {\n                          return [nil, base_select]\n                        } else {\n                          return tag_stack['$[]'](-1)\n                        }; return nil; })(), $d = Opal.to_ary($e), (active_tag = ($d[0] == null ? nil : $d[0])), (select = ($d[1] == null ? nil : $d[1])), $e;\n                      } else if ($truthy(inc_tags['$key?'](this_tag))) {\n                        \n                        include_cursor = self.$create_include_cursor(inc_path, expanded_target, inc_lineno);\n                        if ($truthy((idx = $send(tag_stack, 'rindex', [], ($$74 = function(key, _){var self = $$74.$$s || this;\n\n                        \n                          \n                          if (key == null) {\n                            key = nil;\n                          };\n                          \n                          if (_ == null) {\n                            _ = nil;\n                          };\n                          return key['$=='](this_tag);}, $$74.$$s = self, $$74.$$arity = 2, $$74))))) {\n                          \n                          if (idx['$=='](0)) {\n                            tag_stack.$shift()\n                          } else {\n                            \n                            tag_stack.$delete_at(idx);\n                          };\n                          return self.$logger().$warn(self.$message_with_context(\"\" + \"mismatched end tag (expected '\" + (active_tag) + \"' but found '\" + (this_tag) + \"') at line \" + (inc_lineno) + \" of include \" + (target_type) + \": \" + (inc_path), $hash2([\"source_location\", \"include_location\"], {\"source_location\": self.$cursor(), \"include_location\": include_cursor})));\n                        } else {\n                          return self.$logger().$warn(self.$message_with_context(\"\" + \"unexpected end tag '\" + (this_tag) + \"' at line \" + (inc_lineno) + \" of include \" + (target_type) + \": \" + (inc_path), $hash2([\"source_location\", \"include_location\"], {\"source_location\": self.$cursor(), \"include_location\": include_cursor})))\n                        };\n                      } else {\n                        return nil\n                      }\n                    } else if ($truthy(inc_tags['$key?'](this_tag))) {\n                      \n                      tags_used['$<<'](this_tag);\n                      return tag_stack['$<<']([(active_tag = this_tag), (select = inc_tags['$[]'](this_tag)), inc_lineno]);\n                    } else if ($truthy(wildcard['$nil?']()['$!']())) {\n                      \n                      select = (function() {if ($truthy(($truthy($d = active_tag) ? select['$!']() : $d))) {\n                        return false\n                      } else {\n                        return wildcard\n                      }; return nil; })();\n                      return tag_stack['$<<']([(active_tag = this_tag), select, inc_lineno]);\n                    } else {\n                      return nil\n                    };\n                  } else if ($truthy(select)) {\n                    \n                    inc_offset = ($truthy($d = inc_offset) ? $d : inc_lineno);\n                    return inc_lines['$<<'](l);\n                  } else {\n                    return nil\n                  };}, $$73.$$s = self, $$73.$$arity = 1, $$73));}, $$72.$$s = self, $$72.$$arity = 1, $$72))\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  \n                  self.$logger().$error(self.$message_with_context(\"\" + \"include \" + (target_type) + \" not readable: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n                  return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (expanded_target) + \"[\" + (attrlist) + \"]\");\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };;\n            if ($truthy(tag_stack['$empty?']())) {\n            } else {\n              $send(tag_stack, 'each', [], ($$75 = function(tag_name, _, tag_lineno){var self = $$75.$$s || this;\n\n              \n                \n                if (tag_name == null) {\n                  tag_name = nil;\n                };\n                \n                if (_ == null) {\n                  _ = nil;\n                };\n                \n                if (tag_lineno == null) {\n                  tag_lineno = nil;\n                };\n                return self.$logger().$warn(self.$message_with_context(\"\" + \"detected unclosed tag '\" + (tag_name) + \"' starting at line \" + (tag_lineno) + \" of include \" + (target_type) + \": \" + (inc_path), $hash2([\"source_location\", \"include_location\"], {\"source_location\": self.$cursor(), \"include_location\": self.$create_include_cursor(inc_path, expanded_target, tag_lineno)})));}, $$75.$$s = self, $$75.$$arity = 3, $$75))\n            };\n            if ($truthy((missing_tags = $rb_minus(inc_tags.$keys(), tags_used.$to_a()))['$empty?']())) {\n            } else {\n              self.$logger().$warn(self.$message_with_context(\"\" + \"tag\" + ((function() {if ($truthy($rb_gt(missing_tags.$size(), 1))) {\n                return \"s\"\n              } else {\n                return \"\"\n              }; return nil; })()) + \" '\" + (missing_tags.$join(\", \")) + \"' not found in include \" + (target_type) + \": \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})))\n            };\n            self.$shift();\n            if ($truthy(inc_offset)) {\n              \n              if ($truthy(($truthy($a = ($truthy($b = base_select) ? wildcard : $b)) ? inc_tags['$empty?']() : $a))) {\n              } else {\n                \n                $writer = [\"partial-option\", \"\"];\n                $send(parsed_attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n              self.$push_include(inc_lines, inc_path, relpath, inc_offset, parsed_attrs);};\n          } else {\n            \n            try {\n              \n              inc_content = $send(reader, 'call', [inc_path, read_mode], ($$76 = function(f){var self = $$76.$$s || this;\n\n              \n                \n                if (f == null) {\n                  f = nil;\n                };\n                return f.$read();}, $$76.$$s = self, $$76.$$arity = 1, $$76));\n              self.$shift();\n              self.$push_include(inc_content, inc_path, relpath, 1, parsed_attrs);\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  \n                  self.$logger().$error(self.$message_with_context(\"\" + \"include \" + (target_type) + \" not readable: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n                  return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (expanded_target) + \"[\" + (attrlist) + \"]\");\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };\n          };\n          return true;\n        } else {\n          return nil\n        };\n      }, $PreprocessorReader_preprocess_include_directive$64.$$arity = 2);\n      \n      Opal.def(self, '$resolve_include_path', $PreprocessorReader_resolve_include_path$77 = function $$resolve_include_path(target, attrlist, attributes) {\n        var $a, $b, $$78, self = this, doc = nil, inc_path = nil, relpath = nil;\n\n        \n        doc = self.document;\n        if ($truthy(($truthy($a = $$($nesting, 'Helpers')['$uriish?'](target)) ? $a : (function() {if ($truthy($$$('::', 'String')['$==='](self.dir))) {\n          return nil\n        } else {\n          \n          return (target = \"\" + (self.dir) + \"/\" + (target));\n        }; return nil; })()))) {\n          \n          if ($truthy(doc['$attr?'](\"allow-uri-read\"))) {\n          } else {\n            return self.$replace_next_line(\"\" + \"link:\" + (target) + \"[\" + (attrlist) + \"]\")\n          };\n          if ($truthy(doc['$attr?'](\"cache-uri\"))) {\n            if ($truthy((($b = $$$('::', 'OpenURI', 'skip_raise')) && ($a = $$$($b, 'Cache', 'skip_raise')) ? 'constant' : nil))) {\n            } else {\n              $$($nesting, 'Helpers').$require_library(\"open-uri/cached\", \"open-uri-cached\")\n            }\n          } else if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL')['$!']())) {\n            $$$('::', 'OpenURI')};\n          return [$$$('::', 'URI').$parse(target), \"uri\", target];\n        } else {\n          \n          inc_path = doc.$normalize_system_path(target, self.dir, nil, $hash2([\"target_name\"], {\"target_name\": \"include file\"}));\n          if ($truthy($$$('::', 'File')['$file?'](inc_path))) {\n          } else if ($truthy(attributes['$[]'](\"optional-option\"))) {\n            \n            $send(self.$logger(), 'info', [], ($$78 = function(){var self = $$78.$$s || this;\n\n            return self.$message_with_context(\"\" + \"optional include dropped because include file not found: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()}))}, $$78.$$s = self, $$78.$$arity = 0, $$78));\n            self.$shift();\n            return true;\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"include file not found: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (target) + \"[\" + (attrlist) + \"]\");\n          };\n          relpath = doc.$path_resolver().$relative_path(inc_path, doc.$base_dir());\n          return [inc_path, \"file\", relpath];\n        };\n      }, $PreprocessorReader_resolve_include_path$77.$$arity = 3);\n      \n      Opal.def(self, '$pop_include', $PreprocessorReader_pop_include$79 = function $$pop_include() {\n        var $a, $b, self = this;\n\n        if ($truthy($rb_gt(self.include_stack.$size(), 0))) {\n          \n          $b = self.include_stack.$pop(), $a = Opal.to_ary($b), (self.lines = ($a[0] == null ? nil : $a[0])), (self.file = ($a[1] == null ? nil : $a[1])), (self.dir = ($a[2] == null ? nil : $a[2])), (self.path = ($a[3] == null ? nil : $a[3])), (self.lineno = ($a[4] == null ? nil : $a[4])), (self.maxdepth = ($a[5] == null ? nil : $a[5])), (self.process_lines = ($a[6] == null ? nil : $a[6])), $b;\n          self.look_ahead = 0;\n          return nil;\n        } else {\n          return nil\n        }\n      }, $PreprocessorReader_pop_include$79.$$arity = 0);\n      \n      Opal.def(self, '$split_delimited_value', $PreprocessorReader_split_delimited_value$80 = function $$split_delimited_value(val) {\n        var self = this;\n\n        if ($truthy(val['$include?'](\",\"))) {\n          \n          return val.$split(\",\");\n        } else {\n          \n          return val.$split(\";\");\n        }\n      }, $PreprocessorReader_split_delimited_value$80.$$arity = 1);\n      \n      Opal.def(self, '$skip_front_matter!', $PreprocessorReader_skip_front_matter$excl$81 = function(data, increment_linenos) {\n        var $a, $b, self = this, front_matter = nil, original_data = nil;\n\n        \n        \n        if (increment_linenos == null) {\n          increment_linenos = true;\n        };\n        front_matter = nil;\n        if (data['$[]'](0)['$=='](\"---\")) {\n          \n          original_data = data.$drop(0);\n          data.$shift();\n          front_matter = [];\n          if ($truthy(increment_linenos)) {\n            self.lineno = $rb_plus(self.lineno, 1)};\n          while ($truthy(($truthy($b = data['$empty?']()['$!']()) ? data['$[]'](0)['$!='](\"---\") : $b))) {\n            \n            front_matter['$<<'](data.$shift());\n            if ($truthy(increment_linenos)) {\n              self.lineno = $rb_plus(self.lineno, 1)};\n          };\n          if ($truthy(data['$empty?']())) {\n            \n            $send(data, 'unshift', Opal.to_a(original_data));\n            if ($truthy(increment_linenos)) {\n              self.lineno = 0};\n            front_matter = nil;\n          } else {\n            \n            data.$shift();\n            if ($truthy(increment_linenos)) {\n              self.lineno = $rb_plus(self.lineno, 1)};\n          };};\n        return front_matter;\n      }, $PreprocessorReader_skip_front_matter$excl$81.$$arity = -2);\n      return (Opal.def(self, '$resolve_expr_val', $PreprocessorReader_resolve_expr_val$82 = function $$resolve_expr_val(val) {\n        var $a, $b, self = this, quoted = nil;\n\n        \n        if ($truthy(($truthy($a = ($truthy($b = val['$start_with?'](\"\\\"\")) ? val['$end_with?'](\"\\\"\") : $b)) ? $a : ($truthy($b = val['$start_with?'](\"'\")) ? val['$end_with?'](\"'\") : $b)))) {\n          \n          quoted = true;\n          val = val.$slice(1, $rb_minus(val.$length(), 1));\n        } else {\n          quoted = false\n        };\n        if ($truthy(val['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n          val = self.document.$sub_attributes(val, $hash2([\"attribute_missing\"], {\"attribute_missing\": \"drop\"}))};\n        if ($truthy(quoted)) {\n          return val\n        } else if ($truthy(val['$empty?']())) {\n          return nil\n        } else if (val['$=='](\"true\")) {\n          return true\n        } else if (val['$=='](\"false\")) {\n          return false\n        } else if ($truthy(val.$rstrip()['$empty?']())) {\n          return \" \"\n        } else if ($truthy(val['$include?'](\".\"))) {\n          return val.$to_f()\n        } else {\n          return val.$to_i()\n        };\n      }, $PreprocessorReader_resolve_expr_val$82.$$arity = 1), nil) && 'resolve_expr_val';\n    })($nesting[0], $$($nesting, 'Reader'), $nesting);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/section\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_accessor', '$attr_reader', '$===', '$+', '$level', '$special', '$generate_id', '$title', '$==', '$>', '$sectnum', '$reftext', '$!', '$empty?', '$sub_placeholder', '$sub_quotes', '$compat_mode', '$[]', '$attributes', '$context', '$assign_numeral', '$class', '$object_id', '$inspect', '$size', '$length', '$chr', '$[]=', '$-', '$gsub', '$downcase', '$delete', '$tr_s', '$end_with?', '$chop', '$start_with?', '$slice', '$key?', '$catalog', '$unique_id_start_index']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Section');\n\n      var $nesting = [self].concat($parent_nesting), $Section_initialize$1, $Section_generate_id$2, $Section_sectnum$3, $Section_xreftext$4, $Section_$lt$lt$5, $Section_to_s$6, $Section_generate_id$7;\n\n      self.$$prototype.document = self.$$prototype.level = self.$$prototype.parent = self.$$prototype.numeral = self.$$prototype.numbered = self.$$prototype.sectname = self.$$prototype.title = self.$$prototype.blocks = nil;\n      \n      self.$attr_accessor(\"index\");\n      self.$attr_accessor(\"sectname\");\n      self.$attr_accessor(\"special\");\n      self.$attr_accessor(\"numbered\");\n      self.$attr_reader(\"caption\");\n      \n      Opal.def(self, '$initialize', $Section_initialize$1 = function $$initialize(parent, level, numbered, opts) {\n        var $a, $b, $iter = $Section_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $Section_initialize$1.$$p = null;\n        \n        \n        if (parent == null) {\n          parent = nil;\n        };\n        \n        if (level == null) {\n          level = nil;\n        };\n        \n        if (numbered == null) {\n          numbered = false;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Section_initialize$1, false), [parent, \"section\", opts], null);\n        if ($truthy($$($nesting, 'Section')['$==='](parent))) {\n          $a = [($truthy($b = level) ? $b : $rb_plus(parent.$level(), 1)), parent.$special()], (self.level = $a[0]), (self.special = $a[1]), $a\n        } else {\n          $a = [($truthy($b = level) ? $b : 1), false], (self.level = $a[0]), (self.special = $a[1]), $a\n        };\n        self.numbered = numbered;\n        return (self.index = 0);\n      }, $Section_initialize$1.$$arity = -1);\n      Opal.alias(self, \"name\", \"title\");\n      \n      Opal.def(self, '$generate_id', $Section_generate_id$2 = function $$generate_id() {\n        var self = this;\n\n        return $$($nesting, 'Section').$generate_id(self.$title(), self.document)\n      }, $Section_generate_id$2.$$arity = 0);\n      \n      Opal.def(self, '$sectnum', $Section_sectnum$3 = function $$sectnum(delimiter, append) {\n        var $a, self = this;\n\n        \n        \n        if (delimiter == null) {\n          delimiter = \".\";\n        };\n        \n        if (append == null) {\n          append = nil;\n        };\n        append = ($truthy($a = append) ? $a : (function() {if (append['$=='](false)) {\n          return \"\"\n        } else {\n          return delimiter\n        }; return nil; })());\n        if ($truthy(($truthy($a = $rb_gt(self.level, 1)) ? $$($nesting, 'Section')['$==='](self.parent) : $a))) {\n          return \"\" + (self.parent.$sectnum(delimiter, delimiter)) + (self.numeral) + (append)\n        } else {\n          return \"\" + (self.numeral) + (append)\n        };\n      }, $Section_sectnum$3.$$arity = -1);\n      \n      Opal.def(self, '$xreftext', $Section_xreftext$4 = function $$xreftext(xrefstyle) {\n        var $a, self = this, val = nil, $case = nil, type = nil, quoted_title = nil, signifier = nil;\n\n        \n        \n        if (xrefstyle == null) {\n          xrefstyle = nil;\n        };\n        if ($truthy(($truthy($a = (val = self.$reftext())) ? val['$empty?']()['$!']() : $a))) {\n          return val\n        } else if ($truthy(xrefstyle)) {\n          if ($truthy(self.numbered)) {\n            return (function() {$case = xrefstyle;\n            if (\"full\"['$===']($case)) {\n            if ($truthy(($truthy($a = (type = self.sectname)['$=='](\"chapter\")) ? $a : type['$=='](\"appendix\")))) {\n              quoted_title = self.$sub_placeholder(self.$sub_quotes(\"_%s_\"), self.$title())\n            } else {\n              quoted_title = self.$sub_placeholder(self.$sub_quotes((function() {if ($truthy(self.document.$compat_mode())) {\n                return \"``%s''\"\n              } else {\n                return \"\\\"`%s`\\\"\"\n              }; return nil; })()), self.$title())\n            };\n            if ($truthy((signifier = self.document.$attributes()['$[]'](\"\" + (type) + \"-refsig\")))) {\n              return \"\" + (signifier) + \" \" + (self.$sectnum(\".\", \",\")) + \" \" + (quoted_title)\n            } else {\n              return \"\" + (self.$sectnum(\".\", \",\")) + \" \" + (quoted_title)\n            };}\n            else if (\"short\"['$===']($case)) {if ($truthy((signifier = self.document.$attributes()['$[]'](\"\" + (self.sectname) + \"-refsig\")))) {\n              return \"\" + (signifier) + \" \" + (self.$sectnum(\".\", \"\"))\n            } else {\n              return self.$sectnum(\".\", \"\")\n            }}\n            else {if ($truthy(($truthy($a = (type = self.sectname)['$=='](\"chapter\")) ? $a : type['$=='](\"appendix\")))) {\n              \n              return self.$sub_placeholder(self.$sub_quotes(\"_%s_\"), self.$title());\n            } else {\n              return self.$title()\n            }}})()\n          } else if ($truthy(($truthy($a = (type = self.sectname)['$=='](\"chapter\")) ? $a : type['$=='](\"appendix\")))) {\n            \n            return self.$sub_placeholder(self.$sub_quotes(\"_%s_\"), self.$title());\n          } else {\n            return self.$title()\n          }\n        } else {\n          return self.$title()\n        };\n      }, $Section_xreftext$4.$$arity = -1);\n      \n      Opal.def(self, '$<<', $Section_$lt$lt$5 = function(block) {\n        var $iter = $Section_$lt$lt$5.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Section_$lt$lt$5.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        if (block.$context()['$=='](\"section\")) {\n          self.$assign_numeral(block)};\n        return $send(self, Opal.find_super_dispatcher(self, '<<', $Section_$lt$lt$5, false), $zuper, $iter);\n      }, $Section_$lt$lt$5.$$arity = 1);\n      \n      Opal.def(self, '$to_s', $Section_to_s$6 = function $$to_s() {\n        var $iter = $Section_to_s$6.$$p, $yield = $iter || nil, self = this, formal_title = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Section_to_s$6.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        if ($truthy(self.title)) {\n          \n          formal_title = (function() {if ($truthy(self.numbered)) {\n            return \"\" + (self.$sectnum()) + \" \" + (self.title)\n          } else {\n            return self.title\n          }; return nil; })();\n          return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {level: \" + (self.level) + \", title: \" + (formal_title.$inspect()) + \", blocks: \" + (self.blocks.$size()) + \"}>\";\n        } else {\n          return $send(self, Opal.find_super_dispatcher(self, 'to_s', $Section_to_s$6, false), $zuper, $iter)\n        }\n      }, $Section_to_s$6.$$arity = 0);\n      return (Opal.defs(self, '$generate_id', $Section_generate_id$7 = function $$generate_id(title, document) {\n        var $a, $b, self = this, attrs = nil, pre = nil, sep = nil, no_sep = nil, $writer = nil, sep_sub = nil, gen_id = nil, ids = nil, cnt = nil, candidate_id = nil;\n\n        \n        attrs = document.$attributes();\n        pre = ($truthy($a = attrs['$[]'](\"idprefix\")) ? $a : \"_\");\n        if ($truthy((sep = attrs['$[]'](\"idseparator\")))) {\n          if ($truthy(($truthy($a = sep.$length()['$=='](1)) ? $a : ($truthy($b = (no_sep = sep['$empty?']())['$!']()) ? (sep = (($writer = [\"idseparator\", sep.$chr()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])) : $b)))) {\n            sep_sub = (function() {if ($truthy(($truthy($a = sep['$=='](\"-\")) ? $a : sep['$=='](\".\")))) {\n              return \" .-\"\n            } else {\n              return \"\" + \" \" + (sep) + \".-\"\n            }; return nil; })()}\n        } else {\n          $a = [\"_\", \" _.-\"], (sep = $a[0]), (sep_sub = $a[1]), $a\n        };\n        gen_id = \"\" + (pre) + (title.$downcase().$gsub($$($nesting, 'InvalidSectionIdCharsRx'), \"\"));\n        if ($truthy(no_sep)) {\n          gen_id = gen_id.$delete(\" \")\n        } else {\n          \n          gen_id = gen_id.$tr_s(sep_sub, sep);\n          if ($truthy(gen_id['$end_with?'](sep))) {\n            gen_id = gen_id.$chop()};\n          if ($truthy(($truthy($a = pre['$empty?']()) ? gen_id['$start_with?'](sep) : $a))) {\n            gen_id = gen_id.$slice(1, gen_id.$length())};\n        };\n        if ($truthy(document.$catalog()['$[]'](\"refs\")['$key?'](gen_id))) {\n          \n          ids = document.$catalog()['$[]'](\"refs\");\n          cnt = $$($nesting, 'Compliance').$unique_id_start_index();\n          while ($truthy(ids['$[]']((candidate_id = \"\" + (gen_id) + (sep) + (cnt))))) {\n            cnt = $rb_plus(cnt, 1)\n          };\n          return candidate_id;\n        } else {\n          return gen_id\n        };\n      }, $Section_generate_id$7.$$arity = 2), nil) && 'generate_id';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/stylesheets\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$join', '$new', '$rstrip', '$read', '$primary_stylesheet_data', '$write', '$primary_stylesheet_name', '$stylesheet_basename', '$for', '$read_stylesheet', '$coderay_stylesheet_data', '$coderay_stylesheet_name', '$pygments_stylesheet_data', '$pygments_stylesheet_name']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Stylesheets');\n\n      var $nesting = [self].concat($parent_nesting), $Stylesheets_instance$1, $Stylesheets_primary_stylesheet_name$2, $Stylesheets_primary_stylesheet_data$3, $Stylesheets_embed_primary_stylesheet$4, $Stylesheets_write_primary_stylesheet$5, $Stylesheets_coderay_stylesheet_name$6, $Stylesheets_coderay_stylesheet_data$7, $Stylesheets_embed_coderay_stylesheet$8, $Stylesheets_write_coderay_stylesheet$9, $Stylesheets_pygments_stylesheet_name$10, $Stylesheets_pygments_stylesheet_data$11, $Stylesheets_embed_pygments_stylesheet$12, $Stylesheets_write_pygments_stylesheet$13;\n\n      self.$$prototype.primary_stylesheet_data = nil;\n      \n      Opal.const_set($nesting[0], 'DEFAULT_STYLESHEET_NAME', \"asciidoctor.css\");\n      Opal.const_set($nesting[0], 'STYLESHEETS_DIR', $$$('::', 'File').$join($$($nesting, 'DATA_DIR'), \"stylesheets\"));\n      self.__instance__ = self.$new();\n      Opal.defs(self, '$instance', $Stylesheets_instance$1 = function $$instance() {\n        var self = this;\n        if (self.__instance__ == null) self.__instance__ = nil;\n\n        return self.__instance__\n      }, $Stylesheets_instance$1.$$arity = 0);\n      \n      Opal.def(self, '$primary_stylesheet_name', $Stylesheets_primary_stylesheet_name$2 = function $$primary_stylesheet_name() {\n        var self = this;\n\n        return $$($nesting, 'DEFAULT_STYLESHEET_NAME')\n      }, $Stylesheets_primary_stylesheet_name$2.$$arity = 0);\n      \n      Opal.def(self, '$primary_stylesheet_data', $Stylesheets_primary_stylesheet_data$3 = function $$primary_stylesheet_data() {\n        var $a, self = this;\n\n        return (self.primary_stylesheet_data = ($truthy($a = self.primary_stylesheet_data) ? $a : $$$('::', 'File').$read($$$('::', 'File').$join($$($nesting, 'STYLESHEETS_DIR'), \"asciidoctor-default.css\"), $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_READ_MODE')})).$rstrip()))\n      }, $Stylesheets_primary_stylesheet_data$3.$$arity = 0);\n      \n      Opal.def(self, '$embed_primary_stylesheet', $Stylesheets_embed_primary_stylesheet$4 = function $$embed_primary_stylesheet() {\n        var self = this;\n\n        return \"\" + \"<style>\\n\" + (self.$primary_stylesheet_data()) + \"\\n\" + \"</style>\"\n      }, $Stylesheets_embed_primary_stylesheet$4.$$arity = 0);\n      \n      Opal.def(self, '$write_primary_stylesheet', $Stylesheets_write_primary_stylesheet$5 = function $$write_primary_stylesheet(target_dir) {\n        var self = this;\n\n        \n        \n        if (target_dir == null) {\n          target_dir = \".\";\n        };\n        return $$$('::', 'File').$write($$$('::', 'File').$join(target_dir, self.$primary_stylesheet_name()), self.$primary_stylesheet_data(), $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}));\n      }, $Stylesheets_write_primary_stylesheet$5.$$arity = -1);\n      \n      Opal.def(self, '$coderay_stylesheet_name', $Stylesheets_coderay_stylesheet_name$6 = function $$coderay_stylesheet_name() {\n        var self = this;\n\n        return $$($nesting, 'SyntaxHighlighter').$for(\"coderay\").$stylesheet_basename()\n      }, $Stylesheets_coderay_stylesheet_name$6.$$arity = 0);\n      \n      Opal.def(self, '$coderay_stylesheet_data', $Stylesheets_coderay_stylesheet_data$7 = function $$coderay_stylesheet_data() {\n        var self = this;\n\n        return $$($nesting, 'SyntaxHighlighter').$for(\"coderay\").$read_stylesheet()\n      }, $Stylesheets_coderay_stylesheet_data$7.$$arity = 0);\n      \n      Opal.def(self, '$embed_coderay_stylesheet', $Stylesheets_embed_coderay_stylesheet$8 = function $$embed_coderay_stylesheet() {\n        var self = this;\n\n        return \"\" + \"<style>\\n\" + (self.$coderay_stylesheet_data()) + \"\\n\" + \"</style>\"\n      }, $Stylesheets_embed_coderay_stylesheet$8.$$arity = 0);\n      \n      Opal.def(self, '$write_coderay_stylesheet', $Stylesheets_write_coderay_stylesheet$9 = function $$write_coderay_stylesheet(target_dir) {\n        var self = this;\n\n        \n        \n        if (target_dir == null) {\n          target_dir = \".\";\n        };\n        return $$$('::', 'File').$write($$$('::', 'File').$join(target_dir, self.$coderay_stylesheet_name()), self.$coderay_stylesheet_data(), $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}));\n      }, $Stylesheets_write_coderay_stylesheet$9.$$arity = -1);\n      \n      Opal.def(self, '$pygments_stylesheet_name', $Stylesheets_pygments_stylesheet_name$10 = function $$pygments_stylesheet_name(style) {\n        var self = this;\n\n        \n        \n        if (style == null) {\n          style = nil;\n        };\n        return $$($nesting, 'SyntaxHighlighter').$for(\"pygments\").$stylesheet_basename(style);\n      }, $Stylesheets_pygments_stylesheet_name$10.$$arity = -1);\n      \n      Opal.def(self, '$pygments_stylesheet_data', $Stylesheets_pygments_stylesheet_data$11 = function $$pygments_stylesheet_data(style) {\n        var self = this;\n\n        \n        \n        if (style == null) {\n          style = nil;\n        };\n        return $$($nesting, 'SyntaxHighlighter').$for(\"pygments\").$read_stylesheet(style);\n      }, $Stylesheets_pygments_stylesheet_data$11.$$arity = -1);\n      \n      Opal.def(self, '$embed_pygments_stylesheet', $Stylesheets_embed_pygments_stylesheet$12 = function $$embed_pygments_stylesheet(style) {\n        var self = this;\n\n        \n        \n        if (style == null) {\n          style = nil;\n        };\n        return \"\" + \"<style>\\n\" + (self.$pygments_stylesheet_data(style)) + \"\\n\" + \"</style>\";\n      }, $Stylesheets_embed_pygments_stylesheet$12.$$arity = -1);\n      return (Opal.def(self, '$write_pygments_stylesheet', $Stylesheets_write_pygments_stylesheet$13 = function $$write_pygments_stylesheet(target_dir, style) {\n        var self = this;\n\n        \n        \n        if (target_dir == null) {\n          target_dir = \".\";\n        };\n        \n        if (style == null) {\n          style = nil;\n        };\n        return $$$('::', 'File').$write($$$('::', 'File').$join(target_dir, self.$pygments_stylesheet_name(style)), self.$pygments_stylesheet_data(style), $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}));\n      }, $Stylesheets_write_pygments_stylesheet$13.$$arity = -1), nil) && 'write_pygments_stylesheet';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/table\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$attr_accessor', '$attr_reader', '$new', '$[]', '$>', '$to_i', '$<', '$==', '$[]=', '$-', '$attributes', '$truncate', '$*', '$/', '$to_f', '$empty?', '$body', '$each', '$<<', '$size', '$+', '$assign_column_widths', '$warn', '$logger', '$update_attributes', '$assign_width', '$round', '$shift', '$style=', '$head=', '$pop', '$foot=', '$parent', '$sourcemap', '$dup', '$header_row?', '$table', '$delete', '$start_with?', '$rstrip', '$slice', '$length', '$advance', '$lstrip', '$strip', '$split', '$include?', '$readlines', '$unshift', '$nil?', '$=~', '$catalog_inline_anchor', '$apply_subs', '$convert', '$map', '$text', '$!=', '$file', '$lineno', '$to_s', '$include', '$to_set', '$mark', '$key?', '$nested?', '$document', '$error', '$message_with_context', '$cursor_at_prev_line', '$nil_or_empty?', '$escape', '$columns', '$match', '$chop', '$end_with?', '$gsub', '$!', '$push_cellspec', '$cell_open?', '$close_cell', '$take_cellspec', '$squeeze', '$upto', '$times', '$cursor_before_mark', '$rowspan', '$activate_rowspan', '$colspan', '$end_of_row?', '$close_row', '$private', '$rows', '$effective_column_visits']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Table');\n\n      var $nesting = [self].concat($parent_nesting), $Table_initialize$4, $Table_header_row$ques$5, $Table_create_columns$6, $Table_assign_column_widths$8, $Table_partition_header_footer$12;\n\n      self.$$prototype.attributes = self.$$prototype.document = self.$$prototype.has_header_option = self.$$prototype.rows = self.$$prototype.columns = nil;\n      \n      Opal.const_set($nesting[0], 'DEFAULT_PRECISION', 4);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Rows');\n\n        var $nesting = [self].concat($parent_nesting), $Rows_initialize$1, $Rows_by_section$2, $Rows_to_h$3;\n\n        self.$$prototype.head = self.$$prototype.body = self.$$prototype.foot = nil;\n        \n        self.$attr_accessor(\"head\", \"foot\", \"body\");\n        \n        Opal.def(self, '$initialize', $Rows_initialize$1 = function $$initialize(head, foot, body) {\n          var self = this;\n\n          \n          \n          if (head == null) {\n            head = [];\n          };\n          \n          if (foot == null) {\n            foot = [];\n          };\n          \n          if (body == null) {\n            body = [];\n          };\n          self.head = head;\n          self.foot = foot;\n          return (self.body = body);\n        }, $Rows_initialize$1.$$arity = -1);\n        Opal.alias(self, \"[]\", \"send\");\n        \n        Opal.def(self, '$by_section', $Rows_by_section$2 = function $$by_section() {\n          var self = this;\n\n          return [[\"head\", self.head], [\"body\", self.body], [\"foot\", self.foot]]\n        }, $Rows_by_section$2.$$arity = 0);\n        return (Opal.def(self, '$to_h', $Rows_to_h$3 = function $$to_h() {\n          var self = this;\n\n          return $hash2([\"head\", \"body\", \"foot\"], {\"head\": self.head, \"body\": self.body, \"foot\": self.foot})\n        }, $Rows_to_h$3.$$arity = 0), nil) && 'to_h';\n      })($nesting[0], null, $nesting);\n      self.$attr_accessor(\"columns\");\n      self.$attr_accessor(\"rows\");\n      self.$attr_accessor(\"has_header_option\");\n      self.$attr_reader(\"caption\");\n      \n      Opal.def(self, '$initialize', $Table_initialize$4 = function $$initialize(parent, attributes) {\n        var $a, $b, $iter = $Table_initialize$4.$$p, $yield = $iter || nil, self = this, pcwidth = nil, pcwidth_intval = nil, $writer = nil, abswidth_val = nil;\n\n        if ($iter) $Table_initialize$4.$$p = null;\n        \n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Table_initialize$4, false), [parent, \"table\"], null);\n        self.rows = $$($nesting, 'Rows').$new();\n        self.columns = [];\n        self.has_header_option = (function() {if ($truthy(attributes['$[]'](\"header-option\"))) {\n          return true\n        } else {\n          return false\n        }; return nil; })();\n        if ($truthy((pcwidth = attributes['$[]'](\"width\")))) {\n          if ($truthy(($truthy($a = $rb_gt((pcwidth_intval = pcwidth.$to_i()), 100)) ? $a : $rb_lt(pcwidth_intval, 1)))) {\n            if ($truthy((($a = pcwidth_intval['$=='](0)) ? ($truthy($b = pcwidth['$=='](\"0\")) ? $b : pcwidth['$=='](\"0%\")) : pcwidth_intval['$=='](0)))) {\n            } else {\n              pcwidth_intval = 100\n            }}\n        } else {\n          pcwidth_intval = 100\n        };\n        \n        $writer = [\"tablepcwidth\", pcwidth_intval];\n        $send(self.attributes, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        if ($truthy(self.document.$attributes()['$[]'](\"pagewidth\"))) {\n          \n          $writer = [\"tableabswidth\", (function() {if ((abswidth_val = $rb_times($rb_divide(pcwidth_intval, 100), self.document.$attributes()['$[]'](\"pagewidth\").$to_f()).$truncate($$($nesting, 'DEFAULT_PRECISION')))['$=='](abswidth_val.$to_i())) {\n            return abswidth_val.$to_i()\n          } else {\n            return abswidth_val\n          }; return nil; })()];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy(attributes['$[]'](\"rotate-option\"))) {\n          \n          $writer = [\"orientation\", \"landscape\"];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        } else {\n          return nil\n        };\n      }, $Table_initialize$4.$$arity = 2);\n      \n      Opal.def(self, '$header_row?', $Table_header_row$ques$5 = function() {\n        var $a, self = this;\n\n        return ($truthy($a = self.has_header_option) ? self.rows.$body()['$empty?']() : $a)\n      }, $Table_header_row$ques$5.$$arity = 0);\n      \n      Opal.def(self, '$create_columns', $Table_create_columns$6 = function $$create_columns(colspecs) {\n        var $$7, $a, self = this, cols = nil, autowidth_cols = nil, width_base = nil, num_cols = nil, $writer = nil;\n\n        \n        cols = [];\n        autowidth_cols = nil;\n        width_base = 0;\n        $send(colspecs, 'each', [], ($$7 = function(colspec){var self = $$7.$$s || this, $a, colwidth = nil;\n\n        \n          \n          if (colspec == null) {\n            colspec = nil;\n          };\n          colwidth = colspec['$[]'](\"width\");\n          cols['$<<']($$($nesting, 'Column').$new(self, cols.$size(), colspec));\n          if ($truthy($rb_lt(colwidth, 0))) {\n            return (autowidth_cols = ($truthy($a = autowidth_cols) ? $a : []))['$<<'](cols['$[]'](-1))\n          } else {\n            return (width_base = $rb_plus(width_base, colwidth))\n          };}, $$7.$$s = self, $$7.$$arity = 1, $$7));\n        if ($truthy($rb_gt((num_cols = (self.columns = cols).$size()), 0))) {\n          \n          \n          $writer = [\"colcount\", num_cols];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(($truthy($a = $rb_gt(width_base, 0)) ? $a : autowidth_cols))) {\n          } else {\n            width_base = nil\n          };\n          self.$assign_column_widths(width_base, autowidth_cols);};\n        return nil;\n      }, $Table_create_columns$6.$$arity = 1);\n      \n      Opal.def(self, '$assign_column_widths', $Table_assign_column_widths$8 = function $$assign_column_widths(width_base, autowidth_cols) {\n        var $$9, $$10, $$11, self = this, precision = nil, total_width = nil, col_pcwidth = nil, autowidth = nil, autowidth_attrs = nil;\n\n        \n        \n        if (width_base == null) {\n          width_base = nil;\n        };\n        \n        if (autowidth_cols == null) {\n          autowidth_cols = nil;\n        };\n        precision = $$($nesting, 'DEFAULT_PRECISION');\n        total_width = (col_pcwidth = 0);\n        if ($truthy(width_base)) {\n          \n          if ($truthy(autowidth_cols)) {\n            \n            if ($truthy($rb_gt(width_base, 100))) {\n              \n              autowidth = 0;\n              self.$logger().$warn(\"\" + \"total column width must not exceed 100% when using autowidth columns; got \" + (width_base) + \"%\");\n            } else {\n              \n              autowidth = $rb_divide($rb_minus(100, width_base), autowidth_cols.$size()).$truncate(precision);\n              if (autowidth.$to_i()['$=='](autowidth)) {\n                autowidth = autowidth.$to_i()};\n              width_base = 100;\n            };\n            autowidth_attrs = $hash2([\"width\", \"autowidth-option\"], {\"width\": autowidth, \"autowidth-option\": \"\"});\n            $send(autowidth_cols, 'each', [], ($$9 = function(col){var self = $$9.$$s || this;\n\n            \n              \n              if (col == null) {\n                col = nil;\n              };\n              return col.$update_attributes(autowidth_attrs);}, $$9.$$s = self, $$9.$$arity = 1, $$9));};\n          $send(self.columns, 'each', [], ($$10 = function(col){var self = $$10.$$s || this;\n\n          \n            \n            if (col == null) {\n              col = nil;\n            };\n            return (total_width = $rb_plus(total_width, (col_pcwidth = col.$assign_width(nil, width_base, precision))));}, $$10.$$s = self, $$10.$$arity = 1, $$10));\n        } else {\n          \n          col_pcwidth = $rb_divide(100, self.columns.$size()).$truncate(precision);\n          if (col_pcwidth.$to_i()['$=='](col_pcwidth)) {\n            col_pcwidth = col_pcwidth.$to_i()};\n          $send(self.columns, 'each', [], ($$11 = function(col){var self = $$11.$$s || this;\n\n          \n            \n            if (col == null) {\n              col = nil;\n            };\n            return (total_width = $rb_plus(total_width, col.$assign_width(col_pcwidth, nil, precision)));}, $$11.$$s = self, $$11.$$arity = 1, $$11));\n        };\n        if (total_width['$=='](100)) {\n        } else {\n          self.columns['$[]'](-1).$assign_width($rb_plus($rb_minus(100, total_width), col_pcwidth).$round(precision), nil, precision)\n        };\n        return nil;\n      }, $Table_assign_column_widths$8.$$arity = -1);\n      return (Opal.def(self, '$partition_header_footer', $Table_partition_header_footer$12 = function $$partition_header_footer(attrs) {\n        var $a, $$13, self = this, $writer = nil, num_body_rows = nil, head = nil;\n\n        \n        \n        $writer = [\"rowcount\", self.rows.$body().$size()];\n        $send(self.attributes, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        num_body_rows = self.rows.$body().$size();\n        if ($truthy(($truthy($a = $rb_gt(num_body_rows, 0)) ? self.has_header_option : $a))) {\n          \n          head = self.rows.$body().$shift();\n          num_body_rows = $rb_minus(num_body_rows, 1);\n          $send(head, 'each', [], ($$13 = function(c){var self = $$13.$$s || this;\n\n          \n            \n            if (c == null) {\n              c = nil;\n            };\n            $writer = [nil];\n            $send(c, 'style=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];}, $$13.$$s = self, $$13.$$arity = 1, $$13));\n          \n          $writer = [[head]];\n          $send(self.rows, 'head=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;};\n        if ($truthy(($truthy($a = $rb_gt(num_body_rows, 0)) ? attrs['$[]'](\"footer-option\") : $a))) {\n          \n          $writer = [[self.rows.$body().$pop()]];\n          $send(self.rows, 'foot=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        return nil;\n      }, $Table_partition_header_footer$12.$$arity = 1), nil) && 'partition_header_footer';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Column');\n\n      var $nesting = [self].concat($parent_nesting), $Column_initialize$14, $Column_assign_width$15, $Column_block$ques$16, $Column_inline$ques$17;\n\n      self.$$prototype.attributes = nil;\n      \n      self.$attr_accessor(\"style\");\n      \n      Opal.def(self, '$initialize', $Column_initialize$14 = function $$initialize(table, index, attributes) {\n        var $a, $iter = $Column_initialize$14.$$p, $yield = $iter || nil, self = this, $writer = nil;\n\n        if ($iter) $Column_initialize$14.$$p = null;\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Column_initialize$14, false), [table, \"table_column\"], null);\n        self.style = attributes['$[]'](\"style\");\n        \n        $writer = [\"colnumber\", $rb_plus(index, 1)];\n        $send(attributes, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        ($truthy($a = attributes['$[]'](\"width\")) ? $a : (($writer = [\"width\", 1]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($a = attributes['$[]'](\"halign\")) ? $a : (($writer = [\"halign\", \"left\"]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($a = attributes['$[]'](\"valign\")) ? $a : (($writer = [\"valign\", \"top\"]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        return self.$update_attributes(attributes);\n      }, $Column_initialize$14.$$arity = -3);\n      Opal.alias(self, \"table\", \"parent\");\n      \n      Opal.def(self, '$assign_width', $Column_assign_width$15 = function $$assign_width(col_pcwidth, width_base, precision) {\n        var self = this, $writer = nil, col_abswidth = nil;\n\n        \n        if ($truthy(width_base)) {\n          \n          col_pcwidth = $rb_divide($rb_times(self.attributes['$[]'](\"width\").$to_f(), 100), width_base).$truncate(precision);\n          if (col_pcwidth.$to_i()['$=='](col_pcwidth)) {\n            col_pcwidth = col_pcwidth.$to_i()};};\n        if ($truthy(self.$parent().$attributes()['$[]'](\"tableabswidth\"))) {\n          \n          $writer = [\"colabswidth\", (function() {if ((col_abswidth = $rb_times($rb_divide(col_pcwidth, 100), self.$parent().$attributes()['$[]'](\"tableabswidth\")).$truncate(precision))['$=='](col_abswidth.$to_i())) {\n            return col_abswidth.$to_i()\n          } else {\n            return col_abswidth\n          }; return nil; })()];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        \n        $writer = [\"colpcwidth\", col_pcwidth];\n        $send(self.attributes, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];;\n      }, $Column_assign_width$15.$$arity = 3);\n      \n      Opal.def(self, '$block?', $Column_block$ques$16 = function() {\n        var self = this;\n\n        return false\n      }, $Column_block$ques$16.$$arity = 0);\n      return (Opal.def(self, '$inline?', $Column_inline$ques$17 = function() {\n        var self = this;\n\n        return false\n      }, $Column_inline$ques$17.$$arity = 0), nil) && 'inline?';\n    })($$($nesting, 'Table'), $$($nesting, 'AbstractNode'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Cell');\n\n      var $nesting = [self].concat($parent_nesting), $Cell_initialize$18, $Cell_text$19, $Cell_text$eq$20, $Cell_content$21, $Cell_lines$23, $Cell_source$24, $Cell_file$25, $Cell_lineno$26, $Cell_to_s$27;\n\n      self.$$prototype.document = self.$$prototype.text = self.$$prototype.subs = self.$$prototype.style = self.$$prototype.inner_document = self.$$prototype.source_location = self.$$prototype.colspan = self.$$prototype.rowspan = self.$$prototype.attributes = nil;\n      \n      Opal.const_set($nesting[0], 'DOUBLE_LF', $rb_times($$($nesting, 'LF'), 2));\n      self.$attr_accessor(\"colspan\");\n      self.$attr_accessor(\"rowspan\");\n      Opal.alias(self, \"column\", \"parent\");\n      self.$attr_reader(\"inner_document\");\n      \n      Opal.def(self, '$initialize', $Cell_initialize$18 = function $$initialize(column, cell_text, attributes, opts) {\n        var $a, $b, $iter = $Cell_initialize$18.$$p, $yield = $iter || nil, self = this, in_header_row = nil, cell_style = nil, asciidoc = nil, inner_document_cursor = nil, lines_advanced = nil, literal = nil, normal_psv = nil, parent_doctitle = nil, inner_document_lines = nil, unprocessed_line1 = nil, preprocessed_lines = nil, $writer = nil;\n\n        if ($iter) $Cell_initialize$18.$$p = null;\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Cell_initialize$18, false), [column, \"table_cell\"], null);\n        if ($truthy(self.document.$sourcemap())) {\n          self.source_location = opts['$[]'](\"cursor\").$dup()};\n        if ($truthy(column)) {\n          \n          if ($truthy((in_header_row = column.$table()['$header_row?']()))) {\n          } else {\n            cell_style = column.$attributes()['$[]'](\"style\")\n          };\n          self.$update_attributes(column.$attributes());};\n        if ($truthy(attributes)) {\n          \n          if ($truthy(attributes['$empty?']())) {\n            self.colspan = (self.rowspan = nil)\n          } else {\n            \n            $a = [attributes.$delete(\"colspan\"), attributes.$delete(\"rowspan\")], (self.colspan = $a[0]), (self.rowspan = $a[1]), $a;\n            if ($truthy(in_header_row)) {\n            } else {\n              cell_style = ($truthy($a = attributes['$[]'](\"style\")) ? $a : cell_style)\n            };\n            self.$update_attributes(attributes);\n          };\n          if (cell_style['$=='](\"asciidoc\")) {\n            \n            asciidoc = true;\n            inner_document_cursor = opts['$[]'](\"cursor\");\n            if ($truthy((cell_text = cell_text.$rstrip())['$start_with?']($$($nesting, 'LF')))) {\n              \n              lines_advanced = 1;\n              while ($truthy((cell_text = cell_text.$slice(1, cell_text.$length()))['$start_with?']($$($nesting, 'LF')))) {\n                lines_advanced = $rb_plus(lines_advanced, 1)\n              };\n              inner_document_cursor.$advance(lines_advanced);\n            } else {\n              cell_text = cell_text.$lstrip()\n            };\n          } else if (cell_style['$=='](\"literal\")) {\n            \n            literal = true;\n            cell_text = cell_text.$rstrip();\n            while ($truthy(cell_text['$start_with?']($$($nesting, 'LF')))) {\n              cell_text = cell_text.$slice(1, cell_text.$length())\n            };\n          } else {\n            \n            normal_psv = true;\n            cell_text = (function() {if ($truthy(cell_text)) {\n              return cell_text.$strip()\n            } else {\n              return \"\"\n            }; return nil; })();\n          };\n        } else {\n          \n          self.colspan = (self.rowspan = nil);\n          if (cell_style['$=='](\"asciidoc\")) {\n            \n            asciidoc = true;\n            inner_document_cursor = opts['$[]'](\"cursor\");};\n        };\n        if ($truthy(asciidoc)) {\n          \n          parent_doctitle = self.document.$attributes().$delete(\"doctitle\");\n          inner_document_lines = cell_text.$split($$($nesting, 'LF'), -1);\n          if ($truthy(inner_document_lines['$empty?']())) {\n          } else if ($truthy((unprocessed_line1 = inner_document_lines['$[]'](0))['$include?'](\"::\"))) {\n            \n            preprocessed_lines = $$($nesting, 'PreprocessorReader').$new(self.document, [unprocessed_line1]).$readlines();\n            if ($truthy((($a = unprocessed_line1['$=='](preprocessed_lines['$[]'](0))) ? $rb_lt(preprocessed_lines.$size(), 2) : unprocessed_line1['$=='](preprocessed_lines['$[]'](0))))) {\n            } else {\n              \n              inner_document_lines.$shift();\n              if ($truthy(preprocessed_lines['$empty?']())) {\n              } else {\n                $send(inner_document_lines, 'unshift', Opal.to_a(preprocessed_lines))\n              };\n            };};\n          self.inner_document = $$($nesting, 'Document').$new(inner_document_lines, $hash2([\"standalone\", \"parent\", \"cursor\"], {\"standalone\": false, \"parent\": self.document, \"cursor\": inner_document_cursor}));\n          if ($truthy(parent_doctitle['$nil?']())) {\n          } else {\n            \n            $writer = [\"doctitle\", parent_doctitle];\n            $send(self.document.$attributes(), '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          self.subs = nil;\n        } else if ($truthy(literal)) {\n          \n          self.content_model = \"verbatim\";\n          self.subs = $$($nesting, 'BASIC_SUBS');\n        } else {\n          \n          if ($truthy(($truthy($a = ($truthy($b = normal_psv) ? cell_text['$start_with?'](\"[[\") : $b)) ? $$($nesting, 'LeadingInlineAnchorRx')['$=~'](cell_text) : $a))) {\n            $$($nesting, 'Parser').$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), self, opts['$[]'](\"cursor\"), self.document)};\n          self.content_model = \"simple\";\n          self.subs = $$($nesting, 'NORMAL_SUBS');\n        };\n        self.text = cell_text;\n        return (self.style = cell_style);\n      }, $Cell_initialize$18.$$arity = -3);\n      \n      Opal.def(self, '$text', $Cell_text$19 = function $$text() {\n        var self = this;\n\n        return self.$apply_subs(self.text, self.subs)\n      }, $Cell_text$19.$$arity = 0);\n      \n      Opal.def(self, '$text=', $Cell_text$eq$20 = function(val) {\n        var self = this;\n\n        return (self.text = val)\n      }, $Cell_text$eq$20.$$arity = 1);\n      \n      Opal.def(self, '$content', $Cell_content$21 = function $$content() {\n        var $$22, $a, self = this, cell_style = nil, subbed_text = nil;\n\n        if ((cell_style = self.style)['$=='](\"asciidoc\")) {\n          return self.inner_document.$convert()\n        } else if ($truthy(self.text['$include?']($$($nesting, 'DOUBLE_LF')))) {\n          return $send(self.$text().$split($$($nesting, 'BlankLineRx')), 'map', [], ($$22 = function(para){var self = $$22.$$s || this, $a;\n\n          \n            \n            if (para == null) {\n              para = nil;\n            };\n            if ($truthy(($truthy($a = cell_style) ? cell_style['$!='](\"header\") : $a))) {\n              return $$($nesting, 'Inline').$new(self.$parent(), \"quoted\", para, $hash2([\"type\"], {\"type\": cell_style})).$convert()\n            } else {\n              return para\n            };}, $$22.$$s = self, $$22.$$arity = 1, $$22))\n        } else if ($truthy((subbed_text = self.$text())['$empty?']())) {\n          return []\n        } else if ($truthy(($truthy($a = cell_style) ? cell_style['$!='](\"header\") : $a))) {\n          return [$$($nesting, 'Inline').$new(self.$parent(), \"quoted\", subbed_text, $hash2([\"type\"], {\"type\": cell_style})).$convert()]\n        } else {\n          return [subbed_text]\n        }\n      }, $Cell_content$21.$$arity = 0);\n      \n      Opal.def(self, '$lines', $Cell_lines$23 = function $$lines() {\n        var self = this;\n\n        return self.text.$split($$($nesting, 'LF'))\n      }, $Cell_lines$23.$$arity = 0);\n      \n      Opal.def(self, '$source', $Cell_source$24 = function $$source() {\n        var self = this;\n\n        return self.text\n      }, $Cell_source$24.$$arity = 0);\n      \n      Opal.def(self, '$file', $Cell_file$25 = function $$file() {\n        var $a, self = this;\n\n        return ($truthy($a = self.source_location) ? self.source_location.$file() : $a)\n      }, $Cell_file$25.$$arity = 0);\n      \n      Opal.def(self, '$lineno', $Cell_lineno$26 = function $$lineno() {\n        var $a, self = this;\n\n        return ($truthy($a = self.source_location) ? self.source_location.$lineno() : $a)\n      }, $Cell_lineno$26.$$arity = 0);\n      return (Opal.def(self, '$to_s', $Cell_to_s$27 = function $$to_s() {\n        var $a, $iter = $Cell_to_s$27.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Cell_to_s$27.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        return \"\" + ($send(self, Opal.find_super_dispatcher(self, 'to_s', $Cell_to_s$27, false), $zuper, $iter).$to_s()) + \" - [text: \" + (self.text) + \", colspan: \" + (($truthy($a = self.colspan) ? $a : 1)) + \", rowspan: \" + (($truthy($a = self.rowspan) ? $a : 1)) + \", attributes: \" + (self.attributes) + \"]\"\n      }, $Cell_to_s$27.$$arity = 0), nil) && 'to_s';\n    })($$($nesting, 'Table'), $$($nesting, 'AbstractBlock'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'ParserContext');\n\n      var $nesting = [self].concat($parent_nesting), $ParserContext_initialize$28, $ParserContext_starts_with_delimiter$ques$29, $ParserContext_match_delimiter$30, $ParserContext_skip_past_delimiter$31, $ParserContext_skip_past_escaped_delimiter$32, $ParserContext_buffer_has_unclosed_quotes$ques$33, $ParserContext_take_cellspec$34, $ParserContext_push_cellspec$35, $ParserContext_keep_cell_open$36, $ParserContext_mark_cell_closed$37, $ParserContext_cell_open$ques$38, $ParserContext_cell_closed$ques$39, $ParserContext_close_open_cell$40, $ParserContext_close_cell$41, $ParserContext_close_row$44, $ParserContext_activate_rowspan$45, $ParserContext_end_of_row$ques$47, $ParserContext_effective_column_visits$48, $ParserContext_advance$49;\n\n      self.$$prototype.delimiter = self.$$prototype.delimiter_rx = self.$$prototype.buffer = self.$$prototype.cellspecs = self.$$prototype.cell_open = self.$$prototype.format = self.$$prototype.start_cursor_data = self.$$prototype.reader = self.$$prototype.table = self.$$prototype.current_row = self.$$prototype.colcount = self.$$prototype.column_visits = self.$$prototype.active_rowspans = self.$$prototype.linenum = nil;\n      \n      self.$include($$($nesting, 'Logging'));\n      Opal.const_set($nesting[0], 'FORMATS', [\"psv\", \"csv\", \"dsv\", \"tsv\"].$to_set());\n      Opal.const_set($nesting[0], 'DELIMITERS', $hash2([\"psv\", \"csv\", \"dsv\", \"tsv\", \"!sv\"], {\"psv\": [\"|\", /\\|/], \"csv\": [\",\", /,/], \"dsv\": [\":\", /:/], \"tsv\": [\"\\t\", /\\t/], \"!sv\": [\"!\", /!/]}));\n      self.$attr_accessor(\"table\");\n      self.$attr_accessor(\"format\");\n      self.$attr_reader(\"colcount\");\n      self.$attr_accessor(\"buffer\");\n      self.$attr_reader(\"delimiter\");\n      self.$attr_reader(\"delimiter_re\");\n      \n      Opal.def(self, '$initialize', $ParserContext_initialize$28 = function $$initialize(reader, table, attributes) {\n        var $a, $b, self = this, xsv = nil, sep = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        self.start_cursor_data = (self.reader = reader).$mark();\n        self.table = table;\n        if ($truthy(attributes['$key?'](\"format\"))) {\n          if ($truthy($$($nesting, 'FORMATS')['$include?']((xsv = attributes['$[]'](\"format\"))))) {\n            if (xsv['$=='](\"tsv\")) {\n              self.format = \"csv\"\n            } else if ($truthy((($a = (self.format = xsv)['$=='](\"psv\")) ? table.$document()['$nested?']() : (self.format = xsv)['$=='](\"psv\")))) {\n              xsv = \"!sv\"}\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"illegal table format: \" + (xsv), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_prev_line()})));\n            $a = [\"psv\", (function() {if ($truthy(table.$document()['$nested?']())) {\n              return \"!sv\"\n            } else {\n              return \"psv\"\n            }; return nil; })()], (self.format = $a[0]), (xsv = $a[1]), $a;\n          }\n        } else {\n          $a = [\"psv\", (function() {if ($truthy(table.$document()['$nested?']())) {\n            return \"!sv\"\n          } else {\n            return \"psv\"\n          }; return nil; })()], (self.format = $a[0]), (xsv = $a[1]), $a\n        };\n        if ($truthy(attributes['$key?'](\"separator\"))) {\n          if ($truthy((sep = attributes['$[]'](\"separator\"))['$nil_or_empty?']())) {\n            $b = $$($nesting, 'DELIMITERS')['$[]'](xsv), $a = Opal.to_ary($b), (self.delimiter = ($a[0] == null ? nil : $a[0])), (self.delimiter_rx = ($a[1] == null ? nil : $a[1])), $b\n          } else if (sep['$=='](\"\\\\t\")) {\n            $b = $$($nesting, 'DELIMITERS')['$[]'](\"tsv\"), $a = Opal.to_ary($b), (self.delimiter = ($a[0] == null ? nil : $a[0])), (self.delimiter_rx = ($a[1] == null ? nil : $a[1])), $b\n          } else {\n            $a = [sep, new RegExp($$$('::', 'Regexp').$escape(sep))], (self.delimiter = $a[0]), (self.delimiter_rx = $a[1]), $a\n          }\n        } else {\n          $b = $$($nesting, 'DELIMITERS')['$[]'](xsv), $a = Opal.to_ary($b), (self.delimiter = ($a[0] == null ? nil : $a[0])), (self.delimiter_rx = ($a[1] == null ? nil : $a[1])), $b\n        };\n        self.colcount = (function() {if ($truthy(table.$columns()['$empty?']())) {\n          return -1\n        } else {\n          return table.$columns().$size()\n        }; return nil; })();\n        self.buffer = \"\";\n        self.cellspecs = [];\n        self.cell_open = false;\n        self.active_rowspans = [0];\n        self.column_visits = 0;\n        self.current_row = [];\n        return (self.linenum = -1);\n      }, $ParserContext_initialize$28.$$arity = -3);\n      \n      Opal.def(self, '$starts_with_delimiter?', $ParserContext_starts_with_delimiter$ques$29 = function(line) {\n        var self = this;\n\n        return line['$start_with?'](self.delimiter)\n      }, $ParserContext_starts_with_delimiter$ques$29.$$arity = 1);\n      \n      Opal.def(self, '$match_delimiter', $ParserContext_match_delimiter$30 = function $$match_delimiter(line) {\n        var self = this;\n\n        return self.delimiter_rx.$match(line)\n      }, $ParserContext_match_delimiter$30.$$arity = 1);\n      \n      Opal.def(self, '$skip_past_delimiter', $ParserContext_skip_past_delimiter$31 = function $$skip_past_delimiter(pre) {\n        var self = this;\n\n        \n        self.buffer = \"\" + (self.buffer) + (pre) + (self.delimiter);\n        return nil;\n      }, $ParserContext_skip_past_delimiter$31.$$arity = 1);\n      \n      Opal.def(self, '$skip_past_escaped_delimiter', $ParserContext_skip_past_escaped_delimiter$32 = function $$skip_past_escaped_delimiter(pre) {\n        var self = this;\n\n        \n        self.buffer = \"\" + (self.buffer) + (pre.$chop()) + (self.delimiter);\n        return nil;\n      }, $ParserContext_skip_past_escaped_delimiter$32.$$arity = 1);\n      \n      Opal.def(self, '$buffer_has_unclosed_quotes?', $ParserContext_buffer_has_unclosed_quotes$ques$33 = function(append) {\n        var $a, $b, self = this, record = nil, trailing_quote = nil;\n\n        \n        \n        if (append == null) {\n          append = nil;\n        };\n        if ((record = (function() {if ($truthy(append)) {\n          return $rb_plus(self.buffer, append).$strip()\n        } else {\n          return self.buffer.$strip()\n        }; return nil; })())['$=='](\"\\\"\")) {\n          return true\n        } else if ($truthy(record['$start_with?'](\"\\\"\"))) {\n          if ($truthy(($truthy($a = ($truthy($b = (trailing_quote = record['$end_with?'](\"\\\"\"))) ? record['$end_with?'](\"\\\"\\\"\") : $b)) ? $a : record['$start_with?'](\"\\\"\\\"\")))) {\n            return ($truthy($a = (record = record.$gsub(\"\\\"\\\"\", \"\"))['$start_with?'](\"\\\"\")) ? record['$end_with?'](\"\\\"\")['$!']() : $a)\n          } else {\n            return trailing_quote['$!']()\n          }\n        } else {\n          return false\n        };\n      }, $ParserContext_buffer_has_unclosed_quotes$ques$33.$$arity = -1);\n      \n      Opal.def(self, '$take_cellspec', $ParserContext_take_cellspec$34 = function $$take_cellspec() {\n        var self = this;\n\n        return self.cellspecs.$shift()\n      }, $ParserContext_take_cellspec$34.$$arity = 0);\n      \n      Opal.def(self, '$push_cellspec', $ParserContext_push_cellspec$35 = function $$push_cellspec(cellspec) {\n        var $a, self = this;\n\n        \n        \n        if (cellspec == null) {\n          cellspec = $hash2([], {});\n        };\n        self.cellspecs['$<<'](($truthy($a = cellspec) ? $a : $hash2([], {})));\n        return nil;\n      }, $ParserContext_push_cellspec$35.$$arity = -1);\n      \n      Opal.def(self, '$keep_cell_open', $ParserContext_keep_cell_open$36 = function $$keep_cell_open() {\n        var self = this;\n\n        \n        self.cell_open = true;\n        return nil;\n      }, $ParserContext_keep_cell_open$36.$$arity = 0);\n      \n      Opal.def(self, '$mark_cell_closed', $ParserContext_mark_cell_closed$37 = function $$mark_cell_closed() {\n        var self = this;\n\n        \n        self.cell_open = false;\n        return nil;\n      }, $ParserContext_mark_cell_closed$37.$$arity = 0);\n      \n      Opal.def(self, '$cell_open?', $ParserContext_cell_open$ques$38 = function() {\n        var self = this;\n\n        return self.cell_open\n      }, $ParserContext_cell_open$ques$38.$$arity = 0);\n      \n      Opal.def(self, '$cell_closed?', $ParserContext_cell_closed$ques$39 = function() {\n        var self = this;\n\n        return self.cell_open['$!']()\n      }, $ParserContext_cell_closed$ques$39.$$arity = 0);\n      \n      Opal.def(self, '$close_open_cell', $ParserContext_close_open_cell$40 = function $$close_open_cell(next_cellspec) {\n        var self = this;\n\n        \n        \n        if (next_cellspec == null) {\n          next_cellspec = $hash2([], {});\n        };\n        self.$push_cellspec(next_cellspec);\n        if ($truthy(self['$cell_open?']())) {\n          self.$close_cell(true)};\n        self.$advance();\n        return nil;\n      }, $ParserContext_close_open_cell$40.$$arity = -1);\n      \n      Opal.def(self, '$close_cell', $ParserContext_close_cell$41 = function $$close_cell(eol) {try {\n\n        var $a, $b, $$42, self = this, cell_text = nil, cellspec = nil, repeat = nil;\n\n        \n        \n        if (eol == null) {\n          eol = false;\n        };\n        if (self.format['$=='](\"psv\")) {\n          \n          cell_text = self.buffer;\n          self.buffer = \"\";\n          if ($truthy((cellspec = self.$take_cellspec()))) {\n            repeat = ($truthy($a = cellspec.$delete(\"repeatcol\")) ? $a : 1)\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"table missing leading separator; recovering automatically\", $hash2([\"source_location\"], {\"source_location\": $send($$$($$($nesting, 'Reader'), 'Cursor'), 'new', Opal.to_a(self.start_cursor_data))})));\n            cellspec = $hash2([], {});\n            repeat = 1;\n          };\n        } else {\n          \n          cell_text = self.buffer.$strip();\n          self.buffer = \"\";\n          cellspec = nil;\n          repeat = 1;\n          if ($truthy(($truthy($a = (($b = self.format['$=='](\"csv\")) ? cell_text['$empty?']()['$!']() : self.format['$=='](\"csv\"))) ? cell_text['$include?'](\"\\\"\") : $a))) {\n            if ($truthy(($truthy($a = cell_text['$start_with?'](\"\\\"\")) ? cell_text['$end_with?'](\"\\\"\") : $a))) {\n              if ($truthy((cell_text = cell_text.$slice(1, $rb_minus(cell_text.$length(), 2))))) {\n                cell_text = cell_text.$strip().$squeeze(\"\\\"\")\n              } else {\n                \n                self.$logger().$error(self.$message_with_context(\"unclosed quote in CSV data; setting cell to empty\", $hash2([\"source_location\"], {\"source_location\": self.reader.$cursor_at_prev_line()})));\n                cell_text = \"\";\n              }\n            } else {\n              cell_text = cell_text.$squeeze(\"\\\"\")\n            }};\n        };\n        $send((1), 'upto', [repeat], ($$42 = function(i){var self = $$42.$$s || this, $c, $d, $$43, $e, column = nil, extra_cols = nil, offset = nil, cell = nil;\n          if (self.colcount == null) self.colcount = nil;\n          if (self.table == null) self.table = nil;\n          if (self.current_row == null) self.current_row = nil;\n          if (self.reader == null) self.reader = nil;\n          if (self.column_visits == null) self.column_visits = nil;\n          if (self.linenum == null) self.linenum = nil;\n\n        \n          \n          if (i == null) {\n            i = nil;\n          };\n          if (self.colcount['$=='](-1)) {\n            \n            self.table.$columns()['$<<']((column = $$$($$($nesting, 'Table'), 'Column').$new(self.table, $rb_minus($rb_plus(self.table.$columns().$size(), i), 1))));\n            if ($truthy(($truthy($c = ($truthy($d = cellspec) ? cellspec['$key?'](\"colspan\") : $d)) ? $rb_gt((extra_cols = $rb_minus(cellspec['$[]'](\"colspan\").$to_i(), 1)), 0) : $c))) {\n              \n              offset = self.table.$columns().$size();\n              $send(extra_cols, 'times', [], ($$43 = function(j){var self = $$43.$$s || this;\n                if (self.table == null) self.table = nil;\n\n              \n                \n                if (j == null) {\n                  j = nil;\n                };\n                return self.table.$columns()['$<<']($$$($$($nesting, 'Table'), 'Column').$new(self.table, $rb_plus(offset, j)));}, $$43.$$s = self, $$43.$$arity = 1, $$43));};\n          } else if ($truthy((column = self.table.$columns()['$[]'](self.current_row.$size())))) {\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"dropping cell because it exceeds specified number of columns\", $hash2([\"source_location\"], {\"source_location\": self.reader.$cursor_before_mark()})));\n            Opal.ret(nil);\n          };\n          cell = $$$($$($nesting, 'Table'), 'Cell').$new(column, cell_text, cellspec, $hash2([\"cursor\"], {\"cursor\": self.reader.$cursor_before_mark()}));\n          self.reader.$mark();\n          if ($truthy(($truthy($c = cell.$rowspan()['$!']()) ? $c : cell.$rowspan()['$=='](1)))) {\n          } else {\n            self.$activate_rowspan(cell.$rowspan(), ($truthy($c = cell.$colspan()) ? $c : 1))\n          };\n          self.column_visits = $rb_plus(self.column_visits, ($truthy($c = cell.$colspan()) ? $c : 1));\n          self.current_row['$<<'](cell);\n          if ($truthy(($truthy($c = self['$end_of_row?']()) ? ($truthy($d = ($truthy($e = self.colcount['$!='](-1)) ? $e : $rb_gt(self.linenum, 0))) ? $d : ($truthy($e = eol) ? i['$=='](repeat) : $e)) : $c))) {\n            return self.$close_row()\n          } else {\n            return nil\n          };}, $$42.$$s = self, $$42.$$arity = 1, $$42));\n        self.cell_open = false;\n        return nil;\n        } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n      }, $ParserContext_close_cell$41.$$arity = -1);\n      self.$private();\n      \n      Opal.def(self, '$close_row', $ParserContext_close_row$44 = function $$close_row() {\n        var $a, self = this, $writer = nil;\n\n        \n        self.table.$rows().$body()['$<<'](self.current_row);\n        if (self.colcount['$=='](-1)) {\n          self.colcount = self.column_visits};\n        self.column_visits = 0;\n        self.current_row = [];\n        self.active_rowspans.$shift();\n        ($truthy($a = self.active_rowspans['$[]'](0)) ? $a : (($writer = [0, 0]), $send(self.active_rowspans, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        return nil;\n      }, $ParserContext_close_row$44.$$arity = 0);\n      \n      Opal.def(self, '$activate_rowspan', $ParserContext_activate_rowspan$45 = function $$activate_rowspan(rowspan, colspan) {\n        var $$46, self = this;\n\n        \n        $send((1), 'upto', [$rb_minus(rowspan, 1)], ($$46 = function(i){var self = $$46.$$s || this, $a, $writer = nil;\n          if (self.active_rowspans == null) self.active_rowspans = nil;\n\n        \n          \n          if (i == null) {\n            i = nil;\n          };\n          $writer = [i, $rb_plus(($truthy($a = self.active_rowspans['$[]'](i)) ? $a : 0), colspan)];\n          $send(self.active_rowspans, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$46.$$s = self, $$46.$$arity = 1, $$46));\n        return nil;\n      }, $ParserContext_activate_rowspan$45.$$arity = 2);\n      \n      Opal.def(self, '$end_of_row?', $ParserContext_end_of_row$ques$47 = function() {\n        var $a, self = this;\n\n        return ($truthy($a = self.colcount['$=='](-1)) ? $a : self.$effective_column_visits()['$=='](self.colcount))\n      }, $ParserContext_end_of_row$ques$47.$$arity = 0);\n      \n      Opal.def(self, '$effective_column_visits', $ParserContext_effective_column_visits$48 = function $$effective_column_visits() {\n        var self = this;\n\n        return $rb_plus(self.column_visits, self.active_rowspans['$[]'](0))\n      }, $ParserContext_effective_column_visits$48.$$arity = 0);\n      return (Opal.def(self, '$advance', $ParserContext_advance$49 = function $$advance() {\n        var self = this;\n\n        return (self.linenum = $rb_plus(self.linenum, 1))\n      }, $ParserContext_advance$49.$$arity = 0), nil) && 'advance';\n    })($$($nesting, 'Table'), null, $nesting);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/writer\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$respond_to?', '$write', '$+', '$chomp', '$include']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Writer');\n\n      var $nesting = [self].concat($parent_nesting), $Writer_write$1;\n\n      \n      Opal.def(self, '$write', $Writer_write$1 = function $$write(output, target) {\n        var self = this;\n\n        \n        if ($truthy(target['$respond_to?'](\"write\"))) {\n          target.$write($rb_plus(output.$chomp(), $$($nesting, 'LF')))\n        } else {\n          $$$('::', 'File').$write(target, output, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}))\n        };\n        return nil;\n      }, $Writer_write$1.$$arity = 2)\n    })($nesting[0], $nesting);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'VoidWriter');\n\n      var $nesting = [self].concat($parent_nesting), $VoidWriter_write$2;\n\n      \n      self.$include($$($nesting, 'Writer'));\n      \n      Opal.def(self, '$write', $VoidWriter_write$2 = function $$write(output, target) {\n        var self = this;\n\n        return nil\n      }, $VoidWriter_write$2.$$arity = 2);\n    })($nesting[0], $nesting);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/load\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$module_function', '$merge', '$[]', '$start', '$!=', '$logger', '$logger=', '$-', '$!', '$===', '$dup', '$tap', '$each', '$partition', '$[]=', '$split', '$gsub', '$+', '$respond_to?', '$keys', '$raise', '$join', '$ancestors', '$class', '$mtime', '$absolute_path', '$path', '$dirname', '$basename', '$extname', '$read', '$rewind', '$drop', '$record', '$==', '$new', '$parse', '$exception', '$message', '$set_backtrace', '$backtrace', '$stack_trace', '$stack_trace=', '$open', '$load']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting), $Asciidoctor_load$1, $Asciidoctor_load_file$8;\n\n    \n    self.$module_function();\n    \n    Opal.def(self, '$load', $Asciidoctor_load$1 = function $$load(input, options) {\n      var $a, $b, $c, $d, $$2, $$4, $$6, self = this, timings = nil, logger = nil, $writer = nil, attrs = nil, input_path = nil, source = nil, doc = nil, ex = nil, context = nil, wrapped_ex = nil;\n\n      \n      \n      if (options == null) {\n        options = $hash2([], {});\n      };\n      try {\n        \n        options = options.$merge();\n        if ($truthy((timings = options['$[]'](\"timings\")))) {\n          timings.$start(\"read\")};\n        if ($truthy(($truthy($a = (logger = options['$[]'](\"logger\"))) ? logger['$!=']($$($nesting, 'LoggerManager').$logger()) : $a))) {\n          \n          $writer = [logger];\n          $send($$($nesting, 'LoggerManager'), 'logger=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy((attrs = options['$[]'](\"attributes\"))['$!']())) {\n          attrs = $hash2([], {})\n        } else if ($truthy($$$('::', 'Hash')['$==='](attrs))) {\n          attrs = attrs.$merge()\n        } else if ($truthy(($truthy($a = (($d = $$$('::', 'Java', 'skip_raise')) && ($c = $$$($d, 'JavaUtil', 'skip_raise')) && ($b = $$$($c, 'Map', 'skip_raise')) ? 'constant' : nil)) ? $$$($$$($$$('::', 'Java'), 'JavaUtil'), 'Map')['$==='](attrs) : $a))) {\n          attrs = attrs.$dup()\n        } else if ($truthy($$$('::', 'Array')['$==='](attrs))) {\n          attrs = $send($hash2([], {}), 'tap', [], ($$2 = function(accum){var self = $$2.$$s || this, $$3;\n\n          \n            \n            if (accum == null) {\n              accum = nil;\n            };\n            return $send(attrs, 'each', [], ($$3 = function(entry){var self = $$3.$$s || this, $e, $f, k = nil, _ = nil, v = nil;\n\n            \n              \n              if (entry == null) {\n                entry = nil;\n              };\n              $f = entry.$partition(\"=\"), $e = Opal.to_ary($f), (k = ($e[0] == null ? nil : $e[0])), (_ = ($e[1] == null ? nil : $e[1])), (v = ($e[2] == null ? nil : $e[2])), $f;\n              \n              $writer = [k, v];\n              $send(accum, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$3.$$s = self, $$3.$$arity = 1, $$3));}, $$2.$$s = self, $$2.$$arity = 1, $$2))\n        } else if ($truthy($$$('::', 'String')['$==='](attrs))) {\n          attrs = $send($hash2([], {}), 'tap', [], ($$4 = function(accum){var self = $$4.$$s || this, $$5;\n\n          \n            \n            if (accum == null) {\n              accum = nil;\n            };\n            return $send(attrs.$gsub($$($nesting, 'SpaceDelimiterRx'), $rb_plus(\"\\\\1\", $$($nesting, 'NULL'))).$gsub($$($nesting, 'EscapedSpaceRx'), \"\\\\1\").$split($$($nesting, 'NULL')), 'each', [], ($$5 = function(entry){var self = $$5.$$s || this, $e, $f, k = nil, _ = nil, v = nil;\n\n            \n              \n              if (entry == null) {\n                entry = nil;\n              };\n              $f = entry.$partition(\"=\"), $e = Opal.to_ary($f), (k = ($e[0] == null ? nil : $e[0])), (_ = ($e[1] == null ? nil : $e[1])), (v = ($e[2] == null ? nil : $e[2])), $f;\n              \n              $writer = [k, v];\n              $send(accum, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$5.$$s = self, $$5.$$arity = 1, $$5));}, $$4.$$s = self, $$4.$$arity = 1, $$4))\n        } else if ($truthy(($truthy($a = attrs['$respond_to?'](\"keys\")) ? attrs['$respond_to?'](\"[]\") : $a))) {\n          attrs = $send($hash2([], {}), 'tap', [], ($$6 = function(accum){var self = $$6.$$s || this, $$7;\n\n          \n            \n            if (accum == null) {\n              accum = nil;\n            };\n            return $send(attrs.$keys(), 'each', [], ($$7 = function(k){var self = $$7.$$s || this;\n\n            \n              \n              if (k == null) {\n                k = nil;\n              };\n              $writer = [k, attrs['$[]'](k)];\n              $send(accum, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];}, $$7.$$s = self, $$7.$$arity = 1, $$7));}, $$6.$$s = self, $$6.$$arity = 1, $$6))\n        } else {\n          self.$raise($$$('::', 'ArgumentError'), \"\" + \"illegal type for attributes option: \" + (attrs.$class().$ancestors().$join(\" < \")))\n        };\n        if ($truthy($$$('::', 'File')['$==='](input))) {\n          \n          \n          $writer = [\"input_mtime\", input.$mtime()];\n          $send(options, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"docfile\", (input_path = $$$('::', 'File').$absolute_path(input.$path()))];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"docdir\", $$$('::', 'File').$dirname(input_path)];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"docname\", $$($nesting, 'Helpers').$basename(input_path, (($writer = [\"docfilesuffix\", $$($nesting, 'Helpers').$extname(input_path)]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          source = input.$read();\n        } else if ($truthy(input['$respond_to?'](\"read\"))) {\n          \n          try {\n            input.$rewind()\n          } catch ($err) {\n            if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n              try {\n                nil\n              } finally { Opal.pop_exception() }\n            } else { throw $err; }\n          };\n          source = input.$read();\n        } else if ($truthy($$$('::', 'String')['$==='](input))) {\n          source = input\n        } else if ($truthy($$$('::', 'Array')['$==='](input))) {\n          source = input.$drop(0)\n        } else if ($truthy(input)) {\n          self.$raise($$$('::', 'ArgumentError'), \"\" + \"unsupported input type: \" + (input.$class()))};\n        if ($truthy(timings)) {\n          \n          timings.$record(\"read\");\n          timings.$start(\"parse\");};\n        \n        $writer = [\"attributes\", attrs];\n        $send(options, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        doc = (function() {if (options['$[]'](\"parse\")['$=='](false)) {\n          \n          return $$($nesting, 'Document').$new(source, options);\n        } else {\n          return $$($nesting, 'Document').$new(source, options).$parse()\n        }; return nil; })();\n        if ($truthy(timings)) {\n          timings.$record(\"parse\")};\n        return doc;\n      } catch ($err) {\n        if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {ex = $err;\n          try {\n            \n            \n            try {\n              \n              context = \"\" + \"asciidoctor: FAILED: \" + (($truthy($a = attrs['$[]'](\"docfile\")) ? $a : \"<stdin>\")) + \": Failed to load AsciiDoc document\";\n              if ($truthy(ex['$respond_to?'](\"exception\"))) {\n                \n                wrapped_ex = ex.$exception(\"\" + (context) + \" - \" + (ex.$message()));\n                wrapped_ex.$set_backtrace(ex.$backtrace());\n                wrapped_ex.stack = ex.stack;\n              } else {\n                \n                wrapped_ex = ex.$class().$new(context, ex);\n                \n                $writer = [ex.$stack_trace()];\n                $send(wrapped_ex, 'stack_trace=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n              };\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  wrapped_ex = ex\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };;\n            return self.$raise(wrapped_ex);\n          } finally { Opal.pop_exception() }\n        } else { throw $err; }\n      };\n    }, $Asciidoctor_load$1.$$arity = -2);\n    \n    Opal.def(self, '$load_file', $Asciidoctor_load_file$8 = function $$load_file(filename, options) {\n      var $$9, self = this;\n\n      \n      \n      if (options == null) {\n        options = $hash2([], {});\n      };\n      return $send($$$('::', 'File'), 'open', [filename, $$($nesting, 'FILE_READ_MODE')], ($$9 = function(file){var self = $$9.$$s || this;\n\n      \n        \n        if (file == null) {\n          file = nil;\n        };\n        return self.$load(file, options);}, $$9.$$s = self, $$9.$$arity = 1, $$9));\n    }, $Asciidoctor_load_file$8.$$arity = -2);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/convert\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$module_function', '$delete', '$merge', '$===', '$absolute_path', '$path', '$load', '$respond_to?', '$[]=', '$-', '$key?', '$fetch', '$[]', '$dirname', '$expand_path', '$join', '$attributes', '$outfilesuffix', '$==', '$raise', '$pwd', '$>=', '$safe', '$normalize_system_path', '$mkdir_p', '$directory?', '$!', '$convert', '$write', '$<', '$attr?', '$basebackend?', '$attr', '$uriish?', '$include?', '$syntax_highlighter', '$write_stylesheet?', '$write_primary_stylesheet', '$instance', '$empty?', '$!=', '$read_asset', '$file?', '$write_stylesheet', '$open']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting), $Asciidoctor_convert$1, $Asciidoctor_convert_file$2;\n\n    \n    self.$module_function();\n    \n    Opal.def(self, '$convert', $Asciidoctor_convert$1 = function $$convert(input, options) {\n      var $a, $b, $c, $d, $e, self = this, to_dir = nil, mkdirs = nil, $case = nil, to_file = nil, write_to_target = nil, sibling_path = nil, stream_output = nil, $writer = nil, outdir = nil, doc = nil, outfile = nil, working_dir = nil, jail = nil, output = nil, stylesdir = nil, stylesheet = nil, copy_asciidoctor_stylesheet = nil, copy_user_stylesheet = nil, copy_syntax_hl_stylesheet = nil, syntax_hl = nil, stylesoutdir = nil, stylesheet_src = nil, stylesheet_dest = nil, stylesheet_data = nil;\n\n      \n      \n      if (options == null) {\n        options = $hash2([], {});\n      };\n      (options = options.$merge()).$delete(\"parse\");\n      to_dir = options.$delete(\"to_dir\");\n      mkdirs = options.$delete(\"mkdirs\");\n      $case = (to_file = options.$delete(\"to_file\"));\n      if (true['$===']($case) || nil['$===']($case)) {\n      if ($truthy((write_to_target = to_dir))) {\n      } else if ($truthy($$$('::', 'File')['$==='](input))) {\n        sibling_path = $$$('::', 'File').$absolute_path(input.$path())};\n      to_file = nil;}\n      else if (false['$===']($case)) {to_file = nil}\n      else if (\"/dev/null\"['$===']($case)) {return self.$load(input, options)}\n      else {if ($truthy((stream_output = to_file['$respond_to?'](\"write\")))) {\n      } else {\n        \n        $writer = [\"to_file\", (write_to_target = to_file)];\n        $send(options, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];\n      }};\n      if ($truthy(options['$key?'](\"standalone\"))) {\n      } else if ($truthy(($truthy($a = sibling_path) ? $a : write_to_target))) {\n        \n        $writer = [\"standalone\", options.$fetch(\"header_footer\", true)];\n        $send(options, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];\n      } else if ($truthy(options['$key?'](\"header_footer\"))) {\n        \n        $writer = [\"standalone\", options['$[]'](\"header_footer\")];\n        $send(options, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];};\n      if ($truthy(sibling_path)) {\n        \n        $writer = [\"to_dir\", (outdir = $$$('::', 'File').$dirname(sibling_path))];\n        $send(options, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];\n      } else if ($truthy(write_to_target)) {\n        if ($truthy(to_dir)) {\n          if ($truthy(to_file)) {\n            \n            $writer = [\"to_dir\", $$$('::', 'File').$dirname($$$('::', 'File').$expand_path($$$('::', 'File').$join(to_dir, to_file)))];\n            $send(options, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            \n            $writer = [\"to_dir\", $$$('::', 'File').$expand_path(to_dir)];\n            $send(options, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          }\n        } else if ($truthy(to_file)) {\n          \n          $writer = [\"to_dir\", $$$('::', 'File').$dirname($$$('::', 'File').$expand_path(to_file))];\n          $send(options, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];}};\n      doc = self.$load(input, options);\n      if ($truthy(sibling_path)) {\n        \n        outfile = $$$('::', 'File').$join(outdir, \"\" + (doc.$attributes()['$[]'](\"docname\")) + (doc.$outfilesuffix()));\n        if (outfile['$=='](sibling_path)) {\n          self.$raise($$$('::', 'IOError'), \"\" + \"input file and output file cannot be the same: \" + (outfile))};\n      } else if ($truthy(write_to_target)) {\n        \n        working_dir = (function() {if ($truthy(options['$key?'](\"base_dir\"))) {\n          \n          return $$$('::', 'File').$expand_path(options['$[]'](\"base_dir\"));\n        } else {\n          return $$$('::', 'Dir').$pwd()\n        }; return nil; })();\n        jail = (function() {if ($truthy($rb_ge(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SAFE')))) {\n          return working_dir\n        } else {\n          return nil\n        }; return nil; })();\n        if ($truthy(to_dir)) {\n          \n          outdir = doc.$normalize_system_path(to_dir, working_dir, jail, $hash2([\"target_name\", \"recover\"], {\"target_name\": \"to_dir\", \"recover\": false}));\n          if ($truthy(to_file)) {\n            \n            outfile = doc.$normalize_system_path(to_file, outdir, nil, $hash2([\"target_name\", \"recover\"], {\"target_name\": \"to_dir\", \"recover\": false}));\n            outdir = $$$('::', 'File').$dirname(outfile);\n          } else {\n            outfile = $$$('::', 'File').$join(outdir, \"\" + (doc.$attributes()['$[]'](\"docname\")) + (doc.$outfilesuffix()))\n          };\n        } else if ($truthy(to_file)) {\n          \n          outfile = doc.$normalize_system_path(to_file, working_dir, jail, $hash2([\"target_name\", \"recover\"], {\"target_name\": \"to_dir\", \"recover\": false}));\n          outdir = $$$('::', 'File').$dirname(outfile);};\n        if ($truthy(($truthy($a = $$$('::', 'File')['$==='](input)) ? outfile['$==']($$$('::', 'File').$absolute_path(input.$path())) : $a))) {\n          self.$raise($$$('::', 'IOError'), \"\" + \"input file and output file cannot be the same: \" + (outfile))};\n        if ($truthy(mkdirs)) {\n          $$($nesting, 'Helpers').$mkdir_p(outdir)\n        } else if ($truthy($$$('::', 'File')['$directory?'](outdir))) {\n        } else {\n          self.$raise($$$('::', 'IOError'), \"\" + \"target directory does not exist: \" + (to_dir) + \" (hint: set :mkdirs option)\")\n        };\n      } else {\n        \n        outfile = to_file;\n        outdir = nil;\n      };\n      if ($truthy(($truthy($a = outfile) ? stream_output['$!']() : $a))) {\n        output = doc.$convert($hash2([\"outfile\", \"outdir\"], {\"outfile\": outfile, \"outdir\": outdir}))\n      } else {\n        output = doc.$convert()\n      };\n      if ($truthy(outfile)) {\n        \n        doc.$write(output, outfile);\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = ($truthy($d = ($truthy($e = stream_output['$!']()) ? $rb_lt(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')) : $e)) ? doc['$attr?'](\"linkcss\") : $d)) ? doc['$attr?'](\"copycss\") : $c)) ? doc['$basebackend?'](\"html\") : $b)) ? ($truthy($b = (stylesdir = doc.$attr(\"stylesdir\"))) ? $$($nesting, 'Helpers')['$uriish?'](stylesdir) : $b)['$!']() : $a))) {\n          \n          if ($truthy((stylesheet = doc.$attr(\"stylesheet\")))) {\n            if ($truthy($$($nesting, 'DEFAULT_STYLESHEET_KEYS')['$include?'](stylesheet))) {\n              copy_asciidoctor_stylesheet = true\n            } else if ($truthy($$($nesting, 'Helpers')['$uriish?'](stylesheet)['$!']())) {\n              copy_user_stylesheet = true}};\n          copy_syntax_hl_stylesheet = ($truthy($a = (syntax_hl = doc.$syntax_highlighter())) ? syntax_hl['$write_stylesheet?'](doc) : $a);\n          if ($truthy(($truthy($a = ($truthy($b = copy_asciidoctor_stylesheet) ? $b : copy_user_stylesheet)) ? $a : copy_syntax_hl_stylesheet))) {\n            \n            stylesoutdir = doc.$normalize_system_path(stylesdir, outdir, (function() {if ($truthy($rb_ge(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SAFE')))) {\n              return outdir\n            } else {\n              return nil\n            }; return nil; })());\n            if ($truthy(mkdirs)) {\n              $$($nesting, 'Helpers').$mkdir_p(stylesoutdir)\n            } else if ($truthy($$$('::', 'File')['$directory?'](stylesoutdir))) {\n            } else {\n              self.$raise($$$('::', 'IOError'), \"\" + \"target stylesheet directory does not exist: \" + (stylesoutdir) + \" (hint: set :mkdirs option)\")\n            };\n            if ($truthy(copy_asciidoctor_stylesheet)) {\n              $$($nesting, 'Stylesheets').$instance().$write_primary_stylesheet(stylesoutdir)\n            } else if ($truthy(copy_user_stylesheet)) {\n              \n              if ($truthy((stylesheet_src = doc.$attr(\"copycss\"))['$empty?']())) {\n                stylesheet_src = doc.$normalize_system_path(stylesheet)\n              } else {\n                stylesheet_src = doc.$normalize_system_path(stylesheet_src)\n              };\n              stylesheet_dest = doc.$normalize_system_path(stylesheet, stylesoutdir, (function() {if ($truthy($rb_ge(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SAFE')))) {\n                return outdir\n              } else {\n                return nil\n              }; return nil; })());\n              if ($truthy(($truthy($a = stylesheet_src['$!='](stylesheet_dest)) ? (stylesheet_data = doc.$read_asset(stylesheet_src, $hash2([\"warn_on_failure\", \"label\"], {\"warn_on_failure\": $$$('::', 'File')['$file?'](stylesheet_dest)['$!'](), \"label\": \"stylesheet\"}))) : $a))) {\n                $$$('::', 'File').$write(stylesheet_dest, stylesheet_data, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}))};};\n            if ($truthy(copy_syntax_hl_stylesheet)) {\n              syntax_hl.$write_stylesheet(doc, stylesoutdir)};};};\n        return doc;\n      } else {\n        return output\n      };\n    }, $Asciidoctor_convert$1.$$arity = -2);\n    \n    Opal.def(self, '$convert_file', $Asciidoctor_convert_file$2 = function $$convert_file(filename, options) {\n      var $$3, self = this;\n\n      \n      \n      if (options == null) {\n        options = $hash2([], {});\n      };\n      return $send($$$('::', 'File'), 'open', [filename, $$($nesting, 'FILE_READ_MODE')], ($$3 = function(file){var self = $$3.$$s || this;\n\n      \n        \n        if (file == null) {\n          file = nil;\n        };\n        return self.$convert(file, options);}, $$3.$$s = self, $$3.$$arity = 1, $$3));\n    }, $Asciidoctor_convert_file$2.$$arity = -2);\n    Opal.alias(self, \"render\", \"convert\");\n    self.$module_function(\"render\");\n    Opal.alias(self, \"render_file\", \"convert_file\");\n    self.$module_function(\"render_file\");\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/syntax_highlighter/highlightjs\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$register_for', '$merge', '$proc', '$[]=', '$-', '$==', '$attr', '$[]', '$attr?', '$join', '$map', '$split', '$lstrip']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'HighlightJsAdapter');\n\n      var $nesting = [self].concat($parent_nesting), $HighlightJsAdapter_initialize$1, $HighlightJsAdapter_format$2, $HighlightJsAdapter_docinfo$ques$4, $HighlightJsAdapter_docinfo$5;\n\n      \n      self.$register_for(\"highlightjs\", \"highlight.js\");\n      \n      Opal.def(self, '$initialize', $HighlightJsAdapter_initialize$1 = function $$initialize($a) {\n        var $post_args, args, $iter = $HighlightJsAdapter_initialize$1.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $HighlightJsAdapter_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $HighlightJsAdapter_initialize$1, false), $zuper, $iter);\n        return (self.name = (self.pre_class = \"highlightjs\"));\n      }, $HighlightJsAdapter_initialize$1.$$arity = -1);\n      \n      Opal.def(self, '$format', $HighlightJsAdapter_format$2 = function $$format(node, lang, opts) {\n        var $$3, $iter = $HighlightJsAdapter_format$2.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $HighlightJsAdapter_format$2.$$p = null;\n        return $send(self, Opal.find_super_dispatcher(self, 'format', $HighlightJsAdapter_format$2, false), [node, lang, opts.$merge($hash2([\"transform\"], {\"transform\": $send(self, 'proc', [], ($$3 = function(_, code){var self = $$3.$$s || this, $a, $writer = nil;\n\n        \n          \n          if (_ == null) {\n            _ = nil;\n          };\n          \n          if (code == null) {\n            code = nil;\n          };\n          $writer = [\"class\", \"\" + \"language-\" + (($truthy($a = lang) ? $a : \"none\")) + \" hljs\"];\n          $send(code, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$3.$$s = self, $$3.$$arity = 2, $$3))}))], null)\n      }, $HighlightJsAdapter_format$2.$$arity = 3);\n      \n      Opal.def(self, '$docinfo?', $HighlightJsAdapter_docinfo$ques$4 = function(location) {\n        var self = this;\n\n        return location['$=='](\"footer\")\n      }, $HighlightJsAdapter_docinfo$ques$4.$$arity = 1);\n      return (Opal.def(self, '$docinfo', $HighlightJsAdapter_docinfo$5 = function $$docinfo(location, doc, opts) {\n        var $$6, self = this, base_url = nil;\n\n        \n        base_url = doc.$attr(\"highlightjsdir\", \"\" + (opts['$[]'](\"cdn_base_url\")) + \"/highlight.js/\" + ($$($nesting, 'HIGHLIGHT_JS_VERSION')));\n        return \"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (base_url) + \"/styles/\" + (doc.$attr(\"highlightjs-theme\", \"github\")) + \".min.css\\\"\" + (opts['$[]'](\"self_closing_tag_slash\")) + \">\\n\" + \"<script src=\\\"\" + (base_url) + \"/highlight.min.js\\\"></script>\\n\" + ((function() {if ($truthy(doc['$attr?'](\"highlightjs-languages\"))) {\n          return $send(doc.$attr(\"highlightjs-languages\").$split(\",\"), 'map', [], ($$6 = function(lang){var self = $$6.$$s || this;\n\n          \n            \n            if (lang == null) {\n              lang = nil;\n            };\n            return \"\" + \"<script src=\\\"\" + (base_url) + \"/languages/\" + (lang.$lstrip()) + \".min.js\\\"></script>\\n\";}, $$6.$$s = self, $$6.$$arity = 1, $$6)).$join()\n        } else {\n          return \"\"\n        }; return nil; })()) + \"<script>hljs.initHighlighting()</script>\";\n      }, $HighlightJsAdapter_docinfo$5.$$arity = 3), nil) && 'docinfo';\n    })($$($nesting, 'SyntaxHighlighter'), $$$($$($nesting, 'SyntaxHighlighter'), 'Base'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/syntax_highlighter\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send, $klass = Opal.klass;\n\n  Opal.add_stubs(['$attr_reader', '$raise', '$class', '$private_class_method', '$extend', '$register', '$map', '$to_s', '$each', '$[]=', '$registry', '$-', '$[]', '$for', '$===', '$new', '$name', '$private', '$include', '$==', '$join', '$content']);\n  \n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'SyntaxHighlighter');\n\n      var $nesting = [self].concat($parent_nesting), $SyntaxHighlighter_initialize$1, $SyntaxHighlighter_docinfo$ques$2, $SyntaxHighlighter_docinfo$3, $SyntaxHighlighter_highlight$ques$4, $SyntaxHighlighter_highlight$5, $SyntaxHighlighter_format$6, $SyntaxHighlighter_write_stylesheet$ques$7, $SyntaxHighlighter_write_stylesheet$8, $a, $SyntaxHighlighter_included$9;\n\n      \n      self.$attr_reader(\"name\");\n      \n      Opal.def(self, '$initialize', $SyntaxHighlighter_initialize$1 = function $$initialize(name, backend, opts) {\n        var self = this;\n\n        \n        \n        if (backend == null) {\n          backend = \"html5\";\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        return (self.name = (self.pre_class = name));\n      }, $SyntaxHighlighter_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$docinfo?', $SyntaxHighlighter_docinfo$ques$2 = function(location) {\n        var self = this;\n\n        return nil\n      }, $SyntaxHighlighter_docinfo$ques$2.$$arity = 1);\n      \n      Opal.def(self, '$docinfo', $SyntaxHighlighter_docinfo$3 = function $$docinfo(location, doc, opts) {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'SyntaxHighlighter')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"docinfo\") + \" method since #docinfo? returns true\")\n      }, $SyntaxHighlighter_docinfo$3.$$arity = 3);\n      \n      Opal.def(self, '$highlight?', $SyntaxHighlighter_highlight$ques$4 = function() {\n        var self = this;\n\n        return nil\n      }, $SyntaxHighlighter_highlight$ques$4.$$arity = 0);\n      \n      Opal.def(self, '$highlight', $SyntaxHighlighter_highlight$5 = function $$highlight(node, source, lang, opts) {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'SyntaxHighlighter')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"highlight\") + \" method since #highlight? returns true\")\n      }, $SyntaxHighlighter_highlight$5.$$arity = 4);\n      \n      Opal.def(self, '$format', $SyntaxHighlighter_format$6 = function $$format(node, lang, opts) {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'SyntaxHighlighter')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"format\") + \" method\")\n      }, $SyntaxHighlighter_format$6.$$arity = 3);\n      \n      Opal.def(self, '$write_stylesheet?', $SyntaxHighlighter_write_stylesheet$ques$7 = function(doc) {\n        var self = this;\n\n        return nil\n      }, $SyntaxHighlighter_write_stylesheet$ques$7.$$arity = 1);\n      \n      Opal.def(self, '$write_stylesheet', $SyntaxHighlighter_write_stylesheet$8 = function $$write_stylesheet(doc, to_dir) {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'SyntaxHighlighter')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"write_stylesheet\") + \" method since #write_stylesheet? returns true\")\n      }, $SyntaxHighlighter_write_stylesheet$8.$$arity = 2);\n      self.$private_class_method(($truthy($a = (Opal.defs(self, '$included', $SyntaxHighlighter_included$9 = function $$included(into) {\n        var self = this;\n\n        return into.$extend($$($nesting, 'Config'))\n      }, $SyntaxHighlighter_included$9.$$arity = 1), nil) && 'included') ? $a : \"included\"));\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Config');\n\n        var $nesting = [self].concat($parent_nesting), $Config_register_for$10;\n\n        \n        Opal.def(self, '$register_for', $Config_register_for$10 = function $$register_for($a) {\n          var $post_args, names, $$11, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          names = $post_args;;\n          return $send($$($nesting, 'SyntaxHighlighter'), 'register', [self].concat(Opal.to_a($send(names, 'map', [], ($$11 = function(name){var self = $$11.$$s || this;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return name.$to_s();}, $$11.$$s = self, $$11.$$arity = 1, $$11)))));\n        }, $Config_register_for$10.$$arity = -1)\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Factory');\n\n        var $nesting = [self].concat($parent_nesting), $Factory_register$12, $Factory_for$14, $Factory_create$15, $Factory_registry$16;\n\n        \n        \n        Opal.def(self, '$register', $Factory_register$12 = function $$register(syntax_highlighter, $a) {\n          var $post_args, names, $$13, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          names = $post_args;;\n          return $send(names, 'each', [], ($$13 = function(name){var self = $$13.$$s || this, $writer = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            $writer = [name, syntax_highlighter];\n            $send(self.$registry(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];}, $$13.$$s = self, $$13.$$arity = 1, $$13));\n        }, $Factory_register$12.$$arity = -2);\n        \n        Opal.def(self, '$for', $Factory_for$14 = function(name) {\n          var self = this;\n\n          return self.$registry()['$[]'](name)\n        }, $Factory_for$14.$$arity = 1);\n        \n        Opal.def(self, '$create', $Factory_create$15 = function $$create(name, backend, opts) {\n          var self = this, syntax_hl = nil;\n\n          \n          \n          if (backend == null) {\n            backend = \"html5\";\n          };\n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy((syntax_hl = self.$for(name)))) {\n            \n            if ($truthy($$$('::', 'Class')['$==='](syntax_hl))) {\n              syntax_hl = syntax_hl.$new(name, backend, opts)};\n            if ($truthy(syntax_hl.$name())) {\n            } else {\n              self.$raise($$$('::', 'NameError'), \"\" + (syntax_hl.$class()) + \" must specify a value for `name'\")\n            };\n            return syntax_hl;\n          } else {\n            return nil\n          };\n        }, $Factory_create$15.$$arity = -2);\n        self.$private();\n        \n        Opal.def(self, '$registry', $Factory_registry$16 = function $$registry() {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Factory')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"registry\") + \" method\")\n        }, $Factory_registry$16.$$arity = 0);\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'CustomFactory');\n\n        var $nesting = [self].concat($parent_nesting), $CustomFactory_initialize$17, $CustomFactory_registry$18;\n\n        self.$$prototype.registry = nil;\n        \n        self.$include($$($nesting, 'Factory'));\n        \n        Opal.def(self, '$initialize', $CustomFactory_initialize$17 = function $$initialize(seed_registry) {\n          var $a, self = this;\n\n          \n          \n          if (seed_registry == null) {\n            seed_registry = nil;\n          };\n          return (self.registry = ($truthy($a = seed_registry) ? $a : $hash2([], {})));\n        }, $CustomFactory_initialize$17.$$arity = -1);\n        self.$private();\n        return (Opal.def(self, '$registry', $CustomFactory_registry$18 = function $$registry() {\n          var self = this;\n\n          return self.registry\n        }, $CustomFactory_registry$18.$$arity = 0), nil) && 'registry';\n      })($nesting[0], null, $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'DefaultFactory');\n\n        var $nesting = [self].concat($parent_nesting), $DefaultFactory_registry$19;\n\n        \n        self.$include($$($nesting, 'Factory'));\n        self.$private();\n        (Opal.class_variable_set($nesting[0], '@@registry', $hash2([], {})));\n        \n        Opal.def(self, '$registry', $DefaultFactory_registry$19 = function $$registry() {\n          var $a, self = this;\n\n          return (($a = $nesting[0].$$cvars['@@registry']) == null ? nil : $a)\n        }, $DefaultFactory_registry$19.$$arity = 0);\n        if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        } else {\n          nil\n        };\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'DefaultFactoryProxy');\n\n        var $nesting = [self].concat($parent_nesting);\n\n        \n        self.$include($$($nesting, 'DefaultFactory'));\n        if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n          return nil\n        } else {\n          return nil\n        };\n      })($nesting[0], $$($nesting, 'CustomFactory'), $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Base');\n\n        var $nesting = [self].concat($parent_nesting), $Base_format$20;\n\n        self.$$prototype.pre_class = nil;\n        \n        self.$include($$($nesting, 'SyntaxHighlighter'));\n        return (Opal.def(self, '$format', $Base_format$20 = function $$format(node, lang, opts) {\n          var $$21, $$22, self = this, class_attr_val = nil, transform = nil, pre = nil, code = nil;\n\n          \n          class_attr_val = (function() {if ($truthy(opts['$[]'](\"nowrap\"))) {\n            return \"\" + (self.pre_class) + \" highlight nowrap\"\n          } else {\n            return \"\" + (self.pre_class) + \" highlight\"\n          }; return nil; })();\n          if ($truthy((transform = opts['$[]'](\"transform\")))) {\n            \n            pre = $hash2([\"class\"], {\"class\": class_attr_val});\n            code = (function() {if ($truthy(lang)) {\n              return $hash2([\"data-lang\"], {\"data-lang\": lang})\n            } else {\n              return $hash2([], {})\n            }; return nil; })();\n            transform['$[]'](pre, code);\n            return \"\" + \"<pre\" + ($send(pre, 'map', [], ($$21 = function(k, v){var self = $$21.$$s || this;\n\n            \n              \n              if (k == null) {\n                k = nil;\n              };\n              \n              if (v == null) {\n                v = nil;\n              };\n              return \"\" + \" \" + (k) + \"=\\\"\" + (v) + \"\\\"\";}, $$21.$$s = self, $$21.$$arity = 2, $$21)).$join()) + \"><code\" + ($send(code, 'map', [], ($$22 = function(k, v){var self = $$22.$$s || this;\n\n            \n              \n              if (k == null) {\n                k = nil;\n              };\n              \n              if (v == null) {\n                v = nil;\n              };\n              return \"\" + \" \" + (k) + \"=\\\"\" + (v) + \"\\\"\";}, $$22.$$s = self, $$22.$$arity = 2, $$22)).$join()) + \">\" + (node.$content()) + \"</code></pre>\";\n          } else {\n            return \"\" + \"<pre class=\\\"\" + (class_attr_val) + \"\\\"><code\" + ((function() {if ($truthy(lang)) {\n              return \"\" + \" data-lang=\\\"\" + (lang) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \">\" + (node.$content()) + \"</code></pre>\"\n          };\n        }, $Base_format$20.$$arity = 3), nil) && 'format';\n      })($nesting[0], null, $nesting);\n      self.$extend($$($nesting, 'DefaultFactory'));\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n  self.$require(\"asciidoctor/syntax_highlighter.rb\"+ '/../' + \"syntax_highlighter/highlightjs\");\n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    return nil\n  } else {\n    return nil\n  };\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/timings\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$now', '$[]=', '$-', '$delete', '$reduce', '$+', '$[]', '$>', '$time', '$puts', '$%', '$to_f', '$read_parse', '$convert', '$read_parse_convert', '$private', '$const_defined?', '$==', '$clock_gettime']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Timings');\n\n      var $nesting = [self].concat($parent_nesting), $Timings_initialize$1, $Timings_start$2, $Timings_record$3, $Timings_time$4, $Timings_read$6, $Timings_parse$7, $Timings_read_parse$8, $Timings_convert$9, $Timings_read_parse_convert$10, $Timings_write$11, $Timings_total$12, $Timings_print_report$13, $a, $b, $c, $d, $e, $Timings_now$14, $Timings_now$15;\n\n      self.$$prototype.timers = self.$$prototype.log = nil;\n      \n      \n      Opal.def(self, '$initialize', $Timings_initialize$1 = function $$initialize() {\n        var self = this;\n\n        \n        self.log = $hash2([], {});\n        return (self.timers = $hash2([], {}));\n      }, $Timings_initialize$1.$$arity = 0);\n      \n      Opal.def(self, '$start', $Timings_start$2 = function $$start(key) {\n        var self = this, $writer = nil;\n\n        \n        $writer = [key, self.$now()];\n        $send(self.timers, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];\n      }, $Timings_start$2.$$arity = 1);\n      \n      Opal.def(self, '$record', $Timings_record$3 = function $$record(key) {\n        var self = this, $writer = nil;\n\n        \n        $writer = [key, $rb_minus(self.$now(), self.timers.$delete(key))];\n        $send(self.log, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];\n      }, $Timings_record$3.$$arity = 1);\n      \n      Opal.def(self, '$time', $Timings_time$4 = function $$time($a) {\n        var $post_args, keys, $$5, self = this, time = nil;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        keys = $post_args;;\n        time = $send(keys, 'reduce', [0], ($$5 = function(sum, key){var self = $$5.$$s || this, $b;\n          if (self.log == null) self.log = nil;\n\n        \n          \n          if (sum == null) {\n            sum = nil;\n          };\n          \n          if (key == null) {\n            key = nil;\n          };\n          return $rb_plus(sum, ($truthy($b = self.log['$[]'](key)) ? $b : 0));}, $$5.$$s = self, $$5.$$arity = 2, $$5));\n        if ($truthy($rb_gt(time, 0))) {\n          return time\n        } else {\n          return nil\n        };\n      }, $Timings_time$4.$$arity = -1);\n      \n      Opal.def(self, '$read', $Timings_read$6 = function $$read() {\n        var self = this;\n\n        return self.$time(\"read\")\n      }, $Timings_read$6.$$arity = 0);\n      \n      Opal.def(self, '$parse', $Timings_parse$7 = function $$parse() {\n        var self = this;\n\n        return self.$time(\"parse\")\n      }, $Timings_parse$7.$$arity = 0);\n      \n      Opal.def(self, '$read_parse', $Timings_read_parse$8 = function $$read_parse() {\n        var self = this;\n\n        return self.$time(\"read\", \"parse\")\n      }, $Timings_read_parse$8.$$arity = 0);\n      \n      Opal.def(self, '$convert', $Timings_convert$9 = function $$convert() {\n        var self = this;\n\n        return self.$time(\"convert\")\n      }, $Timings_convert$9.$$arity = 0);\n      \n      Opal.def(self, '$read_parse_convert', $Timings_read_parse_convert$10 = function $$read_parse_convert() {\n        var self = this;\n\n        return self.$time(\"read\", \"parse\", \"convert\")\n      }, $Timings_read_parse_convert$10.$$arity = 0);\n      \n      Opal.def(self, '$write', $Timings_write$11 = function $$write() {\n        var self = this;\n\n        return self.$time(\"write\")\n      }, $Timings_write$11.$$arity = 0);\n      \n      Opal.def(self, '$total', $Timings_total$12 = function $$total() {\n        var self = this;\n\n        return self.$time(\"read\", \"parse\", \"convert\", \"write\")\n      }, $Timings_total$12.$$arity = 0);\n      \n      Opal.def(self, '$print_report', $Timings_print_report$13 = function $$print_report(to, subject) {\n        var self = this;\n        if ($gvars.stdout == null) $gvars.stdout = nil;\n\n        \n        \n        if (to == null) {\n          to = $gvars.stdout;\n        };\n        \n        if (subject == null) {\n          subject = nil;\n        };\n        if ($truthy(subject)) {\n          to.$puts(\"\" + \"Input file: \" + (subject))};\n        to.$puts(\"\" + \"  Time to read and parse source: \" + (\"%05.5f\"['$%'](self.$read_parse().$to_f())));\n        to.$puts(\"\" + \"  Time to convert document: \" + (\"%05.5f\"['$%'](self.$convert().$to_f())));\n        return to.$puts(\"\" + \"  Total time (read, parse and convert): \" + (\"%05.5f\"['$%'](self.$read_parse_convert().$to_f())));\n      }, $Timings_print_report$13.$$arity = -1);\n      self.$private();\n      if ($truthy(($truthy($a = $$$('::', 'Process')['$const_defined?'](\"CLOCK_MONOTONIC\", false)) ? ((($b = $$$('::', 'Process', 'skip_raise')) && ($c = $b, $c) && ($d = $c) && ((($e = $d.$clock_gettime) && !$e.$$stub) || $d['$respond_to_missing?']('clock_gettime'))) ? 'method' : nil)['$=='](\"method\") : $a))) {\n        \n        Opal.const_set($nesting[0], 'CLOCK_ID', $$$($$$('::', 'Process'), 'CLOCK_MONOTONIC'));\n        return (Opal.def(self, '$now', $Timings_now$14 = function $$now() {\n          var self = this;\n\n          return $$$('::', 'Process').$clock_gettime($$($nesting, 'CLOCK_ID'))\n        }, $Timings_now$14.$$arity = 0), nil) && 'now';\n      } else {\n        return (Opal.def(self, '$now', $Timings_now$15 = function $$now() {\n          var self = this;\n\n          return $$$('::', 'Time').$now()\n        }, $Timings_now$15.$$arity = 0), nil) && 'now'\n      };\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/converter/composite\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_reader', '$each', '$respond_to?', '$composed', '$init_backend_traits', '$backend_traits', '$new', '$find_converter', '$[]=', '$-', '$convert', '$converter_for', '$node_name', '$[]', '$handles?', '$raise']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'CompositeConverter');\n\n      var $nesting = [self].concat($parent_nesting), $CompositeConverter_initialize$1, $CompositeConverter_convert$4, $CompositeConverter_converter_for$5, $CompositeConverter_find_converter$6;\n\n      self.$$prototype.converter_cache = self.$$prototype.converters = nil;\n      \n      self.$attr_reader(\"converters\");\n      \n      Opal.def(self, '$initialize', $CompositeConverter_initialize$1 = function $$initialize(backend, $a, $b) {\n        var $post_args, $kwargs, converters, backend_traits_source, $$2, $$3, self = this;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 1, arguments.length);\n        \n        $kwargs = Opal.extract_kwargs($post_args);\n        \n        if ($kwargs == null) {\n          $kwargs = $hash2([], {});\n        } else if (!$kwargs.$$is_hash) {\n          throw Opal.ArgumentError.$new('expected kwargs');\n        };\n        \n        converters = $post_args;;\n        \n        backend_traits_source = $kwargs.$$smap[\"backend_traits_source\"];\n        if (backend_traits_source == null) {\n          backend_traits_source = nil\n        };\n        self.backend = backend;\n        $send((self.converters = converters), 'each', [], ($$2 = function(converter){var self = $$2.$$s || this;\n\n        \n          \n          if (converter == null) {\n            converter = nil;\n          };\n          if ($truthy(converter['$respond_to?'](\"composed\"))) {\n            return converter.$composed(self)\n          } else {\n            return nil\n          };}, $$2.$$s = self, $$2.$$arity = 1, $$2));\n        if ($truthy(backend_traits_source)) {\n          self.$init_backend_traits(backend_traits_source.$backend_traits())};\n        return (self.converter_cache = $send($$$('::', 'Hash'), 'new', [], ($$3 = function(hash, key){var self = $$3.$$s || this, $writer = nil;\n\n        \n          \n          if (hash == null) {\n            hash = nil;\n          };\n          \n          if (key == null) {\n            key = nil;\n          };\n          $writer = [key, self.$find_converter(key)];\n          $send(hash, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$3.$$s = self, $$3.$$arity = 2, $$3)));\n      }, $CompositeConverter_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$convert', $CompositeConverter_convert$4 = function $$convert(node, transform, opts) {\n        var $a, self = this;\n\n        \n        \n        if (transform == null) {\n          transform = nil;\n        };\n        \n        if (opts == null) {\n          opts = nil;\n        };\n        return self.$converter_for((transform = ($truthy($a = transform) ? $a : node.$node_name()))).$convert(node, transform, opts);\n      }, $CompositeConverter_convert$4.$$arity = -2);\n      \n      Opal.def(self, '$converter_for', $CompositeConverter_converter_for$5 = function $$converter_for(transform) {\n        var self = this;\n\n        return self.converter_cache['$[]'](transform)\n      }, $CompositeConverter_converter_for$5.$$arity = 1);\n      return (Opal.def(self, '$find_converter', $CompositeConverter_find_converter$6 = function $$find_converter(transform) {try {\n\n        var $$7, self = this;\n\n        \n        $send(self.converters, 'each', [], ($$7 = function(candidate){var self = $$7.$$s || this;\n\n        \n          \n          if (candidate == null) {\n            candidate = nil;\n          };\n          if ($truthy(candidate['$handles?'](transform))) {\n            Opal.ret(candidate)\n          } else {\n            return nil\n          };}, $$7.$$s = self, $$7.$$arity = 1, $$7));\n        return self.$raise(\"\" + \"Could not find a converter to handle transform: \" + (transform));\n        } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n      }, $CompositeConverter_find_converter$6.$$arity = 1), nil) && 'find_converter';\n    })($$($nesting, 'Converter'), $$$($$($nesting, 'Converter'), 'Base'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/converter/html5\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $hash2 = Opal.hash2, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$register_for', '$default=', '$-', '$==', '$[]', '$init_backend_traits', '$node_name', '$convert_inline_quoted', '$convert_paragraph', '$convert_inline_anchor', '$convert_section', '$convert_listing', '$convert_literal', '$convert_ulist', '$convert_olist', '$convert_dlist', '$convert_admonition', '$convert_colist', '$convert_embedded', '$convert_example', '$convert_floating_title', '$convert_image', '$convert_inline_break', '$convert_inline_button', '$convert_inline_callout', '$convert_inline_footnote', '$convert_inline_image', '$convert_inline_indexterm', '$convert_inline_kbd', '$convert_inline_menu', '$convert_open', '$convert_page_break', '$convert_preamble', '$convert_quote', '$convert_sidebar', '$convert_stem', '$convert_table', '$convert_thematic_break', '$convert_verse', '$convert_video', '$convert_document', '$convert_toc', '$convert_pass', '$convert_audio', '$empty?', '$attr', '$attr?', '$<<', '$include?', '$sub_replacements', '$gsub', '$extname', '$slice', '$length', '$doctitle', '$normalize_web_path', '$primary_stylesheet_data', '$instance', '$read_asset', '$normalize_system_path', '$syntax_highlighter', '$docinfo?', '$docinfo', '$id', '$sections?', '$doctype', '$role?', '$role', '$join', '$noheader', '$convert_outline', '$generate_manname_section', '$header?', '$notitle', '$title', '$header', '$each', '$authors', '$>', '$name', '$email', '$sub_macros', '$+', '$downcase', '$concat', '$content', '$footnotes?', '$!', '$footnotes', '$index', '$text', '$nofooter', '$inspect', '$!=', '$to_i', '$attributes', '$document', '$sections', '$level', '$caption', '$captioned_title', '$numbered', '$<=', '$<', '$sectname', '$sectnum', '$title?', '$icon_uri', '$compact', '$media_uri', '$option?', '$append_boolean_attribute', '$style', '$items', '$blocks?', '$===', '$text?', '$chomp', '$safe', '$read_svg_contents', '$alt', '$image_uri', '$encode_attribute_value', '$append_link_constraint_attrs', '$highlight?', '$to_sym', '$[]=', '$format', '$*', '$count', '$start_with?', '$end_with?', '$list_marker_keyword', '$parent', '$warn', '$logger', '$context', '$error', '$new', '$size', '$columns', '$to_h', '$rows', '$colspan', '$rowspan', '$unshift', '$shift', '$pop', '$split', '$nil_or_empty?', '$type', '$catalog', '$xreftext', '$target', '$reftext', '$map', '$chop', '$read_contents', '$sub', '$match', '$private', '$upcase', '$to_s', '$handles?', '$send']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Html5Converter');\n\n      var $nesting = [self].concat($parent_nesting), $Html5Converter_initialize$1, $Html5Converter_convert$2, $Html5Converter_convert_document$3, $Html5Converter_convert_embedded$6, $Html5Converter_convert_outline$8, $Html5Converter_convert_section$10, $Html5Converter_convert_admonition$11, $Html5Converter_convert_audio$12, $Html5Converter_convert_colist$13, $Html5Converter_convert_dlist$16, $Html5Converter_convert_example$23, $Html5Converter_convert_floating_title$24, $Html5Converter_convert_image$25, $Html5Converter_convert_listing$26, $Html5Converter_convert_literal$27, $Html5Converter_convert_stem$28, $Html5Converter_convert_olist$30, $Html5Converter_convert_open$32, $Html5Converter_convert_page_break$33, $Html5Converter_convert_paragraph$34, $Html5Converter_convert_preamble$35, $Html5Converter_convert_quote$36, $Html5Converter_convert_thematic_break$37, $Html5Converter_convert_sidebar$38, $Html5Converter_convert_table$39, $Html5Converter_convert_toc$44, $Html5Converter_convert_ulist$45, $Html5Converter_convert_verse$47, $Html5Converter_convert_video$48, $Html5Converter_convert_inline_anchor$49, $Html5Converter_convert_inline_break$50, $Html5Converter_convert_inline_button$51, $Html5Converter_convert_inline_callout$52, $Html5Converter_convert_inline_footnote$53, $Html5Converter_convert_inline_image$54, $Html5Converter_convert_inline_indexterm$57, $Html5Converter_convert_inline_kbd$58, $Html5Converter_convert_inline_menu$59, $Html5Converter_convert_inline_quoted$60, $Html5Converter_read_svg_contents$61, $Html5Converter_append_boolean_attribute$63, $Html5Converter_append_link_constraint_attrs$64, $Html5Converter_encode_attribute_value$65, $Html5Converter_generate_manname_section$66, $Html5Converter_method_missing$67, $writer = nil;\n\n      self.$$prototype.void_element_slash = self.$$prototype.xml_mode = self.$$prototype.refs = nil;\n      \n      self.$register_for(\"html5\");\n      \n      $writer = [[\"\", \"\"]];\n      $send(Opal.const_set($nesting[0], 'QUOTE_TAGS', $hash2([\"monospaced\", \"emphasis\", \"strong\", \"double\", \"single\", \"mark\", \"superscript\", \"subscript\", \"asciimath\", \"latexmath\"], {\"monospaced\": [\"<code>\", \"</code>\", true], \"emphasis\": [\"<em>\", \"</em>\", true], \"strong\": [\"<strong>\", \"</strong>\", true], \"double\": [\"&#8220;\", \"&#8221;\"], \"single\": [\"&#8216;\", \"&#8217;\"], \"mark\": [\"<mark>\", \"</mark>\", true], \"superscript\": [\"<sup>\", \"</sup>\", true], \"subscript\": [\"<sub>\", \"</sub>\", true], \"asciimath\": [\"\\\\$\", \"\\\\$\"], \"latexmath\": [\"\\\\(\", \"\\\\)\"]})), 'default=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      Opal.const_set($nesting[0], 'DropAnchorRx', /<(?:a[^>+]+|\\/a)>/);\n      Opal.const_set($nesting[0], 'StemBreakRx', / *\\\\\\n(?:\\\\?\\n)*|\\n\\n+/);\n      if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        \n        Opal.const_set($nesting[0], 'SvgPreambleRx', new RegExp(\"\" + \"^\" + ($$($nesting, 'CC_ALL')) + \"*?(?=<svg\\\\b)\"));\n        Opal.const_set($nesting[0], 'SvgStartTagRx', /^<svg[^>]*>/);\n      } else {\n        nil\n      };\n      Opal.const_set($nesting[0], 'DimensionAttributeRx', new RegExp(\"\" + \"\\\\s(?:width|height|style)=([\\\"'])\" + ($$($nesting, 'CC_ANY')) + \"*?\\\\1\"));\n      \n      Opal.def(self, '$initialize', $Html5Converter_initialize$1 = function $$initialize(backend, opts) {\n        var self = this, syntax = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        self.backend = backend;\n        if (opts['$[]'](\"htmlsyntax\")['$=='](\"xml\")) {\n          \n          syntax = \"xml\";\n          self.xml_mode = true;\n          self.void_element_slash = \"/\";\n        } else {\n          \n          syntax = \"html\";\n          self.xml_mode = nil;\n          self.void_element_slash = \"\";\n        };\n        return self.$init_backend_traits($hash2([\"basebackend\", \"filetype\", \"htmlsyntax\", \"outfilesuffix\", \"supports_templates\"], {\"basebackend\": \"html\", \"filetype\": \"html\", \"htmlsyntax\": syntax, \"outfilesuffix\": \".html\", \"supports_templates\": true}));\n      }, $Html5Converter_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$convert', $Html5Converter_convert$2 = function $$convert(node, transform, opts) {\n        var $iter = $Html5Converter_convert$2.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Html5Converter_convert$2.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (transform == null) {\n          transform = node.$node_name();\n        };\n        \n        if (opts == null) {\n          opts = nil;\n        };\n        if (transform['$=='](\"inline_quoted\")) {\n          return self.$convert_inline_quoted(node)\n        } else if (transform['$=='](\"paragraph\")) {\n          return self.$convert_paragraph(node)\n        } else if (transform['$=='](\"inline_anchor\")) {\n          return self.$convert_inline_anchor(node)\n        } else if (transform['$=='](\"section\")) {\n          return self.$convert_section(node)\n        } else if (transform['$=='](\"listing\")) {\n          return self.$convert_listing(node)\n        } else if (transform['$=='](\"literal\")) {\n          return self.$convert_literal(node)\n        } else if (transform['$=='](\"ulist\")) {\n          return self.$convert_ulist(node)\n        } else if (transform['$=='](\"olist\")) {\n          return self.$convert_olist(node)\n        } else if (transform['$=='](\"dlist\")) {\n          return self.$convert_dlist(node)\n        } else if (transform['$=='](\"admonition\")) {\n          return self.$convert_admonition(node)\n        } else if (transform['$=='](\"colist\")) {\n          return self.$convert_colist(node)\n        } else if (transform['$=='](\"embedded\")) {\n          return self.$convert_embedded(node)\n        } else if (transform['$=='](\"example\")) {\n          return self.$convert_example(node)\n        } else if (transform['$=='](\"floating_title\")) {\n          return self.$convert_floating_title(node)\n        } else if (transform['$=='](\"image\")) {\n          return self.$convert_image(node)\n        } else if (transform['$=='](\"inline_break\")) {\n          return self.$convert_inline_break(node)\n        } else if (transform['$=='](\"inline_button\")) {\n          return self.$convert_inline_button(node)\n        } else if (transform['$=='](\"inline_callout\")) {\n          return self.$convert_inline_callout(node)\n        } else if (transform['$=='](\"inline_footnote\")) {\n          return self.$convert_inline_footnote(node)\n        } else if (transform['$=='](\"inline_image\")) {\n          return self.$convert_inline_image(node)\n        } else if (transform['$=='](\"inline_indexterm\")) {\n          return self.$convert_inline_indexterm(node)\n        } else if (transform['$=='](\"inline_kbd\")) {\n          return self.$convert_inline_kbd(node)\n        } else if (transform['$=='](\"inline_menu\")) {\n          return self.$convert_inline_menu(node)\n        } else if (transform['$=='](\"open\")) {\n          return self.$convert_open(node)\n        } else if (transform['$=='](\"page_break\")) {\n          return self.$convert_page_break(node)\n        } else if (transform['$=='](\"preamble\")) {\n          return self.$convert_preamble(node)\n        } else if (transform['$=='](\"quote\")) {\n          return self.$convert_quote(node)\n        } else if (transform['$=='](\"sidebar\")) {\n          return self.$convert_sidebar(node)\n        } else if (transform['$=='](\"stem\")) {\n          return self.$convert_stem(node)\n        } else if (transform['$=='](\"table\")) {\n          return self.$convert_table(node)\n        } else if (transform['$=='](\"thematic_break\")) {\n          return self.$convert_thematic_break(node)\n        } else if (transform['$=='](\"verse\")) {\n          return self.$convert_verse(node)\n        } else if (transform['$=='](\"video\")) {\n          return self.$convert_video(node)\n        } else if (transform['$=='](\"document\")) {\n          return self.$convert_document(node)\n        } else if (transform['$=='](\"toc\")) {\n          return self.$convert_toc(node)\n        } else if (transform['$=='](\"pass\")) {\n          return self.$convert_pass(node)\n        } else if (transform['$=='](\"audio\")) {\n          return self.$convert_audio(node)\n        } else {\n          return $send(self, Opal.find_super_dispatcher(self, 'convert', $Html5Converter_convert$2, false), $zuper, $iter)\n        };\n      }, $Html5Converter_convert$2.$$arity = -2);\n      \n      Opal.def(self, '$convert_document', $Html5Converter_convert_document$3 = function $$convert_document(node) {\n        var $a, $b, $c, $$4, $$5, self = this, br = nil, slash = nil, asset_uri_scheme = nil, cdn_base_url = nil, linkcss = nil, result = nil, lang_attribute = nil, authors = nil, icon_href = nil, icon_type = nil, icon_ext = nil, webfonts = nil, iconfont_stylesheet = nil, syntax_hl = nil, docinfo_content = nil, body_attrs = nil, sectioned = nil, classes = nil, details = nil, idx = nil, eqnums_val = nil, eqnums_opt = nil;\n\n        \n        br = \"\" + \"<br\" + ((slash = self.void_element_slash)) + \">\";\n        if ($truthy((asset_uri_scheme = node.$attr(\"asset-uri-scheme\", \"https\"))['$empty?']())) {\n        } else {\n          asset_uri_scheme = \"\" + (asset_uri_scheme) + \":\"\n        };\n        cdn_base_url = \"\" + (asset_uri_scheme) + \"//cdnjs.cloudflare.com/ajax/libs\";\n        linkcss = node['$attr?'](\"linkcss\");\n        result = [\"<!DOCTYPE html>\"];\n        lang_attribute = (function() {if ($truthy(node['$attr?'](\"nolang\"))) {\n          return \"\"\n        } else {\n          return \"\" + \" lang=\\\"\" + (node.$attr(\"lang\", \"en\")) + \"\\\"\"\n        }; return nil; })();\n        result['$<<'](\"\" + \"<html\" + ((function() {if ($truthy(self.xml_mode)) {\n          return \" xmlns=\\\"http://www.w3.org/1999/xhtml\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })()) + (lang_attribute) + \">\");\n        result['$<<'](\"\" + \"<head>\\n\" + \"<meta charset=\\\"\" + (node.$attr(\"encoding\", \"UTF-8\")) + \"\\\"\" + (slash) + \">\\n\" + \"<meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"\" + (slash) + \">\\n\" + \"<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"\" + (slash) + \">\\n\" + \"<meta name=\\\"generator\\\" content=\\\"Asciidoctor \" + (node.$attr(\"asciidoctor-version\")) + \"\\\"\" + (slash) + \">\");\n        if ($truthy(node['$attr?'](\"app-name\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"application-name\\\" content=\\\"\" + (node.$attr(\"app-name\")) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"description\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"description\\\" content=\\\"\" + (node.$attr(\"description\")) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"keywords\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"keywords\\\" content=\\\"\" + (node.$attr(\"keywords\")) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"authors\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"author\\\" content=\\\"\" + ((function() {if ($truthy((authors = node.$sub_replacements(node.$attr(\"authors\")))['$include?'](\"<\"))) {\n            \n            return authors.$gsub($$($nesting, 'XmlSanitizeRx'), \"\");\n          } else {\n            return authors\n          }; return nil; })()) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"copyright\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"copyright\\\" content=\\\"\" + (node.$attr(\"copyright\")) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"favicon\"))) {\n          \n          if ($truthy((icon_href = node.$attr(\"favicon\"))['$empty?']())) {\n            \n            icon_href = \"favicon.ico\";\n            icon_type = \"image/x-icon\";\n          } else if ($truthy((icon_ext = $$($nesting, 'Helpers').$extname(icon_href, nil)))) {\n            icon_type = (function() {if (icon_ext['$=='](\".ico\")) {\n              return \"image/x-icon\"\n            } else {\n              return \"\" + \"image/\" + (icon_ext.$slice(1, icon_ext.$length()))\n            }; return nil; })()\n          } else {\n            icon_type = \"image/x-icon\"\n          };\n          result['$<<'](\"\" + \"<link rel=\\\"icon\\\" type=\\\"\" + (icon_type) + \"\\\" href=\\\"\" + (icon_href) + \"\\\"\" + (slash) + \">\");};\n        result['$<<'](\"\" + \"<title>\" + (node.$doctitle($hash2([\"sanitize\", \"use_fallback\"], {\"sanitize\": true, \"use_fallback\": true}))) + \"</title>\");\n        if ($truthy($$($nesting, 'DEFAULT_STYLESHEET_KEYS')['$include?'](node.$attr(\"stylesheet\")))) {\n          \n          if ($truthy((webfonts = node.$attr(\"webfonts\")))) {\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (asset_uri_scheme) + \"//fonts.googleapis.com/css?family=\" + ((function() {if ($truthy(webfonts['$empty?']())) {\n              return \"Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700\"\n            } else {\n              return webfonts\n            }; return nil; })()) + \"\\\"\" + (slash) + \">\")};\n          if ($truthy(linkcss)) {\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (node.$normalize_web_path($$($nesting, 'DEFAULT_STYLESHEET_NAME'), node.$attr(\"stylesdir\", \"\"), false)) + \"\\\"\" + (slash) + \">\")\n          } else {\n            result['$<<'](\"\" + \"<style>\\n\" + ($$($nesting, 'Stylesheets').$instance().$primary_stylesheet_data()) + \"\\n\" + \"</style>\")\n          };\n        } else if ($truthy(node['$attr?'](\"stylesheet\"))) {\n          if ($truthy(linkcss)) {\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (node.$normalize_web_path(node.$attr(\"stylesheet\"), node.$attr(\"stylesdir\", \"\"))) + \"\\\"\" + (slash) + \">\")\n          } else {\n            result['$<<'](\"\" + \"<style>\\n\" + (node.$read_asset(node.$normalize_system_path(node.$attr(\"stylesheet\"), node.$attr(\"stylesdir\", \"\")), $hash2([\"warn_on_failure\", \"label\"], {\"warn_on_failure\": true, \"label\": \"stylesheet\"}))) + \"\\n\" + \"</style>\")\n          }};\n        if ($truthy(node['$attr?'](\"icons\", \"font\"))) {\n          if ($truthy(node['$attr?'](\"iconfont-remote\"))) {\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (node.$attr(\"iconfont-cdn\", \"\" + (cdn_base_url) + \"/font-awesome/\" + ($$($nesting, 'FONT_AWESOME_VERSION')) + \"/css/font-awesome.min.css\")) + \"\\\"\" + (slash) + \">\")\n          } else {\n            \n            iconfont_stylesheet = \"\" + (node.$attr(\"iconfont-name\", \"font-awesome\")) + \".css\";\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (node.$normalize_web_path(iconfont_stylesheet, node.$attr(\"stylesdir\", \"\"), false)) + \"\\\"\" + (slash) + \">\");\n          }};\n        if ($truthy(($truthy($a = (syntax_hl = node.$syntax_highlighter())) ? syntax_hl['$docinfo?'](\"head\") : $a))) {\n          result['$<<'](syntax_hl.$docinfo(\"head\", node, $hash2([\"cdn_base_url\", \"linkcss\", \"self_closing_tag_slash\"], {\"cdn_base_url\": cdn_base_url, \"linkcss\": linkcss, \"self_closing_tag_slash\": slash})))};\n        if ($truthy((docinfo_content = node.$docinfo())['$empty?']())) {\n        } else {\n          result['$<<'](docinfo_content)\n        };\n        result['$<<'](\"</head>\");\n        body_attrs = (function() {if ($truthy(node.$id())) {\n          return [\"\" + \"id=\\\"\" + (node.$id()) + \"\\\"\"]\n        } else {\n          return []\n        }; return nil; })();\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = (sectioned = node['$sections?']())) ? node['$attr?'](\"toc-class\") : $c)) ? node['$attr?'](\"toc\") : $b)) ? node['$attr?'](\"toc-placement\", \"auto\") : $a))) {\n          classes = [node.$doctype(), node.$attr(\"toc-class\"), \"\" + \"toc-\" + (node.$attr(\"toc-position\", \"header\"))]\n        } else {\n          classes = [node.$doctype()]\n        };\n        if ($truthy(node['$role?']())) {\n          classes['$<<'](node.$role())};\n        body_attrs['$<<'](\"\" + \"class=\\\"\" + (classes.$join(\" \")) + \"\\\"\");\n        if ($truthy(node['$attr?'](\"max-width\"))) {\n          body_attrs['$<<'](\"\" + \"style=\\\"max-width: \" + (node.$attr(\"max-width\")) + \";\\\"\")};\n        result['$<<'](\"\" + \"<body \" + (body_attrs.$join(\" \")) + \">\");\n        if ($truthy((docinfo_content = node.$docinfo(\"header\"))['$empty?']())) {\n        } else {\n          result['$<<'](docinfo_content)\n        };\n        if ($truthy(node.$noheader())) {\n        } else {\n          \n          result['$<<'](\"<div id=\\\"header\\\">\");\n          if (node.$doctype()['$=='](\"manpage\")) {\n            \n            result['$<<'](\"\" + \"<h1>\" + (node.$doctitle()) + \" Manual Page</h1>\");\n            if ($truthy(($truthy($a = ($truthy($b = sectioned) ? node['$attr?'](\"toc\") : $b)) ? node['$attr?'](\"toc-placement\", \"auto\") : $a))) {\n              result['$<<'](\"\" + \"<div id=\\\"toc\\\" class=\\\"\" + (node.$attr(\"toc-class\", \"toc\")) + \"\\\">\\n\" + \"<div id=\\\"toctitle\\\">\" + (node.$attr(\"toc-title\")) + \"</div>\\n\" + (self.$convert_outline(node)) + \"\\n\" + \"</div>\")};\n            if ($truthy(node['$attr?'](\"manpurpose\"))) {\n              result['$<<'](self.$generate_manname_section(node))};\n          } else {\n            \n            if ($truthy(node['$header?']())) {\n              \n              if ($truthy(node.$notitle())) {\n              } else {\n                result['$<<'](\"\" + \"<h1>\" + (node.$header().$title()) + \"</h1>\")\n              };\n              details = [];\n              idx = 1;\n              $send(node.$authors(), 'each', [], ($$4 = function(author){var self = $$4.$$s || this;\n\n              \n                \n                if (author == null) {\n                  author = nil;\n                };\n                details['$<<'](\"\" + \"<span id=\\\"author\" + ((function() {if ($truthy($rb_gt(idx, 1))) {\n                  return idx\n                } else {\n                  return \"\"\n                }; return nil; })()) + \"\\\" class=\\\"author\\\">\" + (node.$sub_replacements(author.$name())) + \"</span>\" + (br));\n                if ($truthy(author.$email())) {\n                  details['$<<'](\"\" + \"<span id=\\\"email\" + ((function() {if ($truthy($rb_gt(idx, 1))) {\n                    return idx\n                  } else {\n                    return \"\"\n                  }; return nil; })()) + \"\\\" class=\\\"email\\\">\" + (node.$sub_macros(author.$email())) + \"</span>\" + (br))};\n                return (idx = $rb_plus(idx, 1));}, $$4.$$s = self, $$4.$$arity = 1, $$4));\n              if ($truthy(node['$attr?'](\"revnumber\"))) {\n                details['$<<'](\"\" + \"<span id=\\\"revnumber\\\">\" + (($truthy($a = node.$attr(\"version-label\")) ? $a : \"\").$downcase()) + \" \" + (node.$attr(\"revnumber\")) + ((function() {if ($truthy(node['$attr?'](\"revdate\"))) {\n                  return \",\"\n                } else {\n                  return \"\"\n                }; return nil; })()) + \"</span>\")};\n              if ($truthy(node['$attr?'](\"revdate\"))) {\n                details['$<<'](\"\" + \"<span id=\\\"revdate\\\">\" + (node.$attr(\"revdate\")) + \"</span>\")};\n              if ($truthy(node['$attr?'](\"revremark\"))) {\n                details['$<<'](\"\" + (br) + \"<span id=\\\"revremark\\\">\" + (node.$attr(\"revremark\")) + \"</span>\")};\n              if ($truthy(details['$empty?']())) {\n              } else {\n                \n                result['$<<'](\"<div class=\\\"details\\\">\");\n                result.$concat(details);\n                result['$<<'](\"</div>\");\n              };};\n            if ($truthy(($truthy($a = ($truthy($b = sectioned) ? node['$attr?'](\"toc\") : $b)) ? node['$attr?'](\"toc-placement\", \"auto\") : $a))) {\n              result['$<<'](\"\" + \"<div id=\\\"toc\\\" class=\\\"\" + (node.$attr(\"toc-class\", \"toc\")) + \"\\\">\\n\" + \"<div id=\\\"toctitle\\\">\" + (node.$attr(\"toc-title\")) + \"</div>\\n\" + (self.$convert_outline(node)) + \"\\n\" + \"</div>\")};\n          };\n          result['$<<'](\"</div>\");\n        };\n        result['$<<'](\"\" + \"<div id=\\\"content\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\");\n        if ($truthy(($truthy($a = node['$footnotes?']()) ? node['$attr?'](\"nofootnotes\")['$!']() : $a))) {\n          \n          result['$<<'](\"\" + \"<div id=\\\"footnotes\\\">\\n\" + \"<hr\" + (slash) + \">\");\n          $send(node.$footnotes(), 'each', [], ($$5 = function(footnote){var self = $$5.$$s || this;\n\n          \n            \n            if (footnote == null) {\n              footnote = nil;\n            };\n            return result['$<<'](\"\" + \"<div class=\\\"footnote\\\" id=\\\"_footnotedef_\" + (footnote.$index()) + \"\\\">\\n\" + \"<a href=\\\"#_footnoteref_\" + (footnote.$index()) + \"\\\">\" + (footnote.$index()) + \"</a>. \" + (footnote.$text()) + \"\\n\" + \"</div>\");}, $$5.$$s = self, $$5.$$arity = 1, $$5));\n          result['$<<'](\"</div>\");};\n        if ($truthy(node.$nofooter())) {\n        } else {\n          \n          result['$<<'](\"<div id=\\\"footer\\\">\");\n          result['$<<'](\"<div id=\\\"footer-text\\\">\");\n          if ($truthy(node['$attr?'](\"revnumber\"))) {\n            result['$<<'](\"\" + (node.$attr(\"version-label\")) + \" \" + (node.$attr(\"revnumber\")) + (br))};\n          if ($truthy(($truthy($a = node['$attr?'](\"last-update-label\")) ? node['$attr?'](\"reproducible\")['$!']() : $a))) {\n            result['$<<'](\"\" + (node.$attr(\"last-update-label\")) + \" \" + (node.$attr(\"docdatetime\")))};\n          result['$<<'](\"</div>\");\n          result['$<<'](\"</div>\");\n        };\n        if ($truthy(($truthy($a = syntax_hl) ? syntax_hl['$docinfo?'](\"footer\") : $a))) {\n          result['$<<'](syntax_hl.$docinfo(\"footer\", node, $hash2([\"cdn_base_url\", \"linkcss\", \"self_closing_tag_slash\"], {\"cdn_base_url\": cdn_base_url, \"linkcss\": linkcss, \"self_closing_tag_slash\": slash})))};\n        if ($truthy(node['$attr?'](\"stem\"))) {\n          \n          eqnums_val = node.$attr(\"eqnums\", \"none\");\n          if ($truthy(eqnums_val['$empty?']())) {\n            eqnums_val = \"AMS\"};\n          eqnums_opt = \"\" + \" equationNumbers: { autoNumber: \\\"\" + (eqnums_val) + \"\\\" } \";\n          result['$<<'](\"\" + \"<script type=\\\"text/x-mathjax-config\\\">\\n\" + \"MathJax.Hub.Config({\\n\" + \"  messageStyle: \\\"none\\\",\\n\" + \"  tex2jax: {\\n\" + \"    inlineMath: [\" + ($$($nesting, 'INLINE_MATH_DELIMITERS')['$[]'](\"latexmath\").$inspect()) + \"],\\n\" + \"    displayMath: [\" + ($$($nesting, 'BLOCK_MATH_DELIMITERS')['$[]'](\"latexmath\").$inspect()) + \"],\\n\" + \"    ignoreClass: \\\"nostem|nolatexmath\\\"\\n\" + \"  },\\n\" + \"  asciimath2jax: {\\n\" + \"    delimiters: [\" + ($$($nesting, 'BLOCK_MATH_DELIMITERS')['$[]'](\"asciimath\").$inspect()) + \"],\\n\" + \"    ignoreClass: \\\"nostem|noasciimath\\\"\\n\" + \"  },\\n\" + \"  TeX: {\" + (eqnums_opt) + \"}\\n\" + \"})\\n\" + \"MathJax.Hub.Register.StartupHook(\\\"AsciiMath Jax Ready\\\", function () {\\n\" + \"  MathJax.InputJax.AsciiMath.postfilterHooks.Add(function (data, node) {\\n\" + \"    if ((node = data.script.parentNode) && (node = node.parentNode) && node.classList.contains('stemblock')) {\\n\" + \"      data.math.root.display = \\\"block\\\"\\n\" + \"    }\\n\" + \"    return data\\n\" + \"  })\\n\" + \"})\\n\" + \"</script>\\n\" + \"<script src=\\\"\" + (cdn_base_url) + \"/mathjax/\" + ($$($nesting, 'MATHJAX_VERSION')) + \"/MathJax.js?config=TeX-MML-AM_HTMLorMML\\\"></script>\");};\n        if ($truthy((docinfo_content = node.$docinfo(\"footer\"))['$empty?']())) {\n        } else {\n          result['$<<'](docinfo_content)\n        };\n        result['$<<'](\"</body>\");\n        result['$<<'](\"</html>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_document$3.$$arity = 1);\n      \n      Opal.def(self, '$convert_embedded', $Html5Converter_convert_embedded$6 = function $$convert_embedded(node) {\n        var $a, $b, $c, $$7, self = this, result = nil, id_attr = nil, toc_p = nil;\n\n        \n        result = [];\n        if (node.$doctype()['$=='](\"manpage\")) {\n          \n          if ($truthy(node.$notitle())) {\n          } else {\n            \n            id_attr = (function() {if ($truthy(node.$id())) {\n              return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })();\n            result['$<<'](\"\" + \"<h1\" + (id_attr) + \">\" + (node.$doctitle()) + \" Manual Page</h1>\");\n          };\n          if ($truthy(node['$attr?'](\"manpurpose\"))) {\n            result['$<<'](self.$generate_manname_section(node))};\n        } else if ($truthy(($truthy($a = node['$header?']()) ? node.$notitle()['$!']() : $a))) {\n          \n          id_attr = (function() {if ($truthy(node.$id())) {\n            return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          result['$<<'](\"\" + \"<h1\" + (id_attr) + \">\" + (node.$header().$title()) + \"</h1>\");};\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = node['$sections?']()) ? node['$attr?'](\"toc\") : $c)) ? (toc_p = node.$attr(\"toc-placement\"))['$!='](\"macro\") : $b)) ? toc_p['$!='](\"preamble\") : $a))) {\n          result['$<<'](\"\" + \"<div id=\\\"toc\\\" class=\\\"toc\\\">\\n\" + \"<div id=\\\"toctitle\\\">\" + (node.$attr(\"toc-title\")) + \"</div>\\n\" + (self.$convert_outline(node)) + \"\\n\" + \"</div>\")};\n        result['$<<'](node.$content());\n        if ($truthy(($truthy($a = node['$footnotes?']()) ? node['$attr?'](\"nofootnotes\")['$!']() : $a))) {\n          \n          result['$<<'](\"\" + \"<div id=\\\"footnotes\\\">\\n\" + \"<hr\" + (self.void_element_slash) + \">\");\n          $send(node.$footnotes(), 'each', [], ($$7 = function(footnote){var self = $$7.$$s || this;\n\n          \n            \n            if (footnote == null) {\n              footnote = nil;\n            };\n            return result['$<<'](\"\" + \"<div class=\\\"footnote\\\" id=\\\"_footnotedef_\" + (footnote.$index()) + \"\\\">\\n\" + \"<a href=\\\"#_footnoteref_\" + (footnote.$index()) + \"\\\">\" + (footnote.$index()) + \"</a>. \" + (footnote.$text()) + \"\\n\" + \"</div>\");}, $$7.$$s = self, $$7.$$arity = 1, $$7));\n          result['$<<'](\"</div>\");};\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_embedded$6.$$arity = 1);\n      \n      Opal.def(self, '$convert_outline', $Html5Converter_convert_outline$8 = function $$convert_outline(node, opts) {\n        var $a, $b, $$9, self = this, sectnumlevels = nil, toclevels = nil, sections = nil, result = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy(node['$sections?']())) {\n        } else {\n          return nil\n        };\n        sectnumlevels = ($truthy($a = opts['$[]'](\"sectnumlevels\")) ? $a : ($truthy($b = node.$document().$attributes()['$[]'](\"sectnumlevels\")) ? $b : 3).$to_i());\n        toclevels = ($truthy($a = opts['$[]'](\"toclevels\")) ? $a : ($truthy($b = node.$document().$attributes()['$[]'](\"toclevels\")) ? $b : 2).$to_i());\n        sections = node.$sections();\n        result = [\"\" + \"<ul class=\\\"sectlevel\" + (sections['$[]'](0).$level()) + \"\\\">\"];\n        $send(sections, 'each', [], ($$9 = function(section){var self = $$9.$$s || this, $c, slevel = nil, stitle = nil, signifier = nil, child_toc_level = nil;\n\n        \n          \n          if (section == null) {\n            section = nil;\n          };\n          slevel = section.$level();\n          if ($truthy(section.$caption())) {\n            stitle = section.$captioned_title()\n          } else if ($truthy(($truthy($c = section.$numbered()) ? $rb_le(slevel, sectnumlevels) : $c))) {\n            if ($truthy(($truthy($c = $rb_lt(slevel, 2)) ? node.$document().$doctype()['$=='](\"book\") : $c))) {\n              if (section.$sectname()['$=='](\"chapter\")) {\n                stitle = \"\" + ((function() {if ($truthy((signifier = node.$document().$attributes()['$[]'](\"chapter-signifier\")))) {\n                  return \"\" + (signifier) + \" \"\n                } else {\n                  return \"\"\n                }; return nil; })()) + (section.$sectnum()) + \" \" + (section.$title())\n              } else if (section.$sectname()['$=='](\"part\")) {\n                stitle = \"\" + ((function() {if ($truthy((signifier = node.$document().$attributes()['$[]'](\"part-signifier\")))) {\n                  return \"\" + (signifier) + \" \"\n                } else {\n                  return \"\"\n                }; return nil; })()) + (section.$sectnum(nil, \":\")) + \" \" + (section.$title())\n              } else {\n                stitle = \"\" + (section.$sectnum()) + \" \" + (section.$title())\n              }\n            } else {\n              stitle = \"\" + (section.$sectnum()) + \" \" + (section.$title())\n            }\n          } else {\n            stitle = section.$title()\n          };\n          if ($truthy(stitle['$include?'](\"<a\"))) {\n            stitle = stitle.$gsub($$($nesting, 'DropAnchorRx'), \"\")};\n          if ($truthy(($truthy($c = $rb_lt(slevel, toclevels)) ? (child_toc_level = self.$convert_outline(section, $hash2([\"toclevels\", \"sectnumlevels\"], {\"toclevels\": toclevels, \"sectnumlevels\": sectnumlevels}))) : $c))) {\n            \n            result['$<<'](\"\" + \"<li><a href=\\\"#\" + (section.$id()) + \"\\\">\" + (stitle) + \"</a>\");\n            result['$<<'](child_toc_level);\n            return result['$<<'](\"</li>\");\n          } else {\n            return result['$<<'](\"\" + \"<li><a href=\\\"#\" + (section.$id()) + \"\\\">\" + (stitle) + \"</a></li>\")\n          };}, $$9.$$s = self, $$9.$$arity = 1, $$9));\n        result['$<<'](\"</ul>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_outline$8.$$arity = -2);\n      \n      Opal.def(self, '$convert_section', $Html5Converter_convert_section$10 = function $$convert_section(node) {\n        var $a, $b, self = this, doc_attrs = nil, level = nil, title = nil, signifier = nil, id_attr = nil, id = nil, role = nil;\n\n        \n        doc_attrs = node.$document().$attributes();\n        level = node.$level();\n        if ($truthy(node.$caption())) {\n          title = node.$captioned_title()\n        } else if ($truthy(($truthy($a = node.$numbered()) ? $rb_le(level, ($truthy($b = doc_attrs['$[]'](\"sectnumlevels\")) ? $b : 3).$to_i()) : $a))) {\n          if ($truthy(($truthy($a = $rb_lt(level, 2)) ? node.$document().$doctype()['$=='](\"book\") : $a))) {\n            if (node.$sectname()['$=='](\"chapter\")) {\n              title = \"\" + ((function() {if ($truthy((signifier = doc_attrs['$[]'](\"chapter-signifier\")))) {\n                return \"\" + (signifier) + \" \"\n              } else {\n                return \"\"\n              }; return nil; })()) + (node.$sectnum()) + \" \" + (node.$title())\n            } else if (node.$sectname()['$=='](\"part\")) {\n              title = \"\" + ((function() {if ($truthy((signifier = doc_attrs['$[]'](\"part-signifier\")))) {\n                return \"\" + (signifier) + \" \"\n              } else {\n                return \"\"\n              }; return nil; })()) + (node.$sectnum(nil, \":\")) + \" \" + (node.$title())\n            } else {\n              title = \"\" + (node.$sectnum()) + \" \" + (node.$title())\n            }\n          } else {\n            title = \"\" + (node.$sectnum()) + \" \" + (node.$title())\n          }\n        } else {\n          title = node.$title()\n        };\n        if ($truthy(node.$id())) {\n          \n          id_attr = \"\" + \" id=\\\"\" + ((id = node.$id())) + \"\\\"\";\n          if ($truthy(doc_attrs['$[]'](\"sectlinks\"))) {\n            title = \"\" + \"<a class=\\\"link\\\" href=\\\"#\" + (id) + \"\\\">\" + (title) + \"</a>\"};\n          if ($truthy(doc_attrs['$[]'](\"sectanchors\"))) {\n            if (doc_attrs['$[]'](\"sectanchors\")['$=='](\"after\")) {\n              title = \"\" + (title) + \"<a class=\\\"anchor\\\" href=\\\"#\" + (id) + \"\\\"></a>\"\n            } else {\n              title = \"\" + \"<a class=\\\"anchor\\\" href=\\\"#\" + (id) + \"\\\"></a>\" + (title)\n            }};\n        } else {\n          id_attr = \"\"\n        };\n        if (level['$=='](0)) {\n          return \"\" + \"<h1\" + (id_attr) + \" class=\\\"sect0\" + ((function() {if ($truthy((role = node.$role()))) {\n            return \"\" + \" \" + (role)\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\" + (title) + \"</h1>\\n\" + (node.$content())\n        } else {\n          return \"\" + \"<div class=\\\"sect\" + (level) + ((function() {if ($truthy((role = node.$role()))) {\n            return \"\" + \" \" + (role)\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\\n\" + \"<h\" + ($rb_plus(level, 1)) + (id_attr) + \">\" + (title) + \"</h\" + ($rb_plus(level, 1)) + \">\\n\" + ((function() {if (level['$=='](1)) {\n            return \"\" + \"<div class=\\\"sectionbody\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\"\n          } else {\n            return node.$content()\n          }; return nil; })()) + \"\\n\" + \"</div>\"\n        };\n      }, $Html5Converter_convert_section$10.$$arity = 1);\n      \n      Opal.def(self, '$convert_admonition', $Html5Converter_convert_admonition$11 = function $$convert_admonition(node) {\n        var $a, self = this, id_attr = nil, name = nil, title_element = nil, label = nil, role = nil;\n\n        \n        id_attr = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        name = node.$attr(\"name\");\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ($truthy(node.$document()['$attr?'](\"icons\"))) {\n          if ($truthy(($truthy($a = node.$document()['$attr?'](\"icons\", \"font\")) ? node['$attr?'](\"icon\")['$!']() : $a))) {\n            label = \"\" + \"<i class=\\\"fa icon-\" + (name) + \"\\\" title=\\\"\" + (node.$attr(\"textlabel\")) + \"\\\"></i>\"\n          } else {\n            label = \"\" + \"<img src=\\\"\" + (node.$icon_uri(name)) + \"\\\" alt=\\\"\" + (node.$attr(\"textlabel\")) + \"\\\"\" + (self.void_element_slash) + \">\"\n          }\n        } else {\n          label = \"\" + \"<div class=\\\"title\\\">\" + (node.$attr(\"textlabel\")) + \"</div>\"\n        };\n        return \"\" + \"<div\" + (id_attr) + \" class=\\\"admonitionblock \" + (name) + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + \"<table>\\n\" + \"<tr>\\n\" + \"<td class=\\\"icon\\\">\\n\" + (label) + \"\\n\" + \"</td>\\n\" + \"<td class=\\\"content\\\">\\n\" + (title_element) + (node.$content()) + \"\\n\" + \"</td>\\n\" + \"</tr>\\n\" + \"</table>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_admonition$11.$$arity = 1);\n      \n      Opal.def(self, '$convert_audio', $Html5Converter_convert_audio$12 = function $$convert_audio(node) {\n        var $a, self = this, xml = nil, id_attribute = nil, classes = nil, class_attribute = nil, title_element = nil, start_t = nil, end_t = nil, time_anchor = nil;\n\n        \n        xml = self.xml_mode;\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"audioblock\", node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        start_t = node.$attr(\"start\");\n        end_t = node.$attr(\"end\");\n        time_anchor = (function() {if ($truthy(($truthy($a = start_t) ? $a : end_t))) {\n          return \"\" + \"#t=\" + (($truthy($a = start_t) ? $a : \"\")) + ((function() {if ($truthy(end_t)) {\n            return \"\" + \",\" + (end_t)\n          } else {\n            return \"\"\n          }; return nil; })())\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + \"<audio src=\\\"\" + (node.$media_uri(node.$attr(\"target\"))) + (time_anchor) + \"\\\"\" + ((function() {if ($truthy(node['$option?'](\"autoplay\"))) {\n          \n          return self.$append_boolean_attribute(\"autoplay\", xml);\n        } else {\n          return \"\"\n        }; return nil; })()) + ((function() {if ($truthy(node['$option?'](\"nocontrols\"))) {\n          return \"\"\n        } else {\n          \n          return self.$append_boolean_attribute(\"controls\", xml);\n        }; return nil; })()) + ((function() {if ($truthy(node['$option?'](\"loop\"))) {\n          \n          return self.$append_boolean_attribute(\"loop\", xml);\n        } else {\n          return \"\"\n        }; return nil; })()) + \">\\n\" + \"Your browser does not support the audio tag.\\n\" + \"</audio>\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_audio$12.$$arity = 1);\n      \n      Opal.def(self, '$convert_colist', $Html5Converter_convert_colist$13 = function $$convert_colist(node) {\n        var $a, $$14, $$15, self = this, result = nil, id_attribute = nil, classes = nil, class_attribute = nil, font_icons = nil, num = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"colist\", node.$style(), node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        result['$<<'](\"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\")};\n        if ($truthy(node.$document()['$attr?'](\"icons\"))) {\n          \n          result['$<<'](\"<table>\");\n          $a = [node.$document()['$attr?'](\"icons\", \"font\"), 0], (font_icons = $a[0]), (num = $a[1]), $a;\n          $send(node.$items(), 'each', [], ($$14 = function(item){var self = $$14.$$s || this, num_label = nil;\n            if (self.void_element_slash == null) self.void_element_slash = nil;\n\n          \n            \n            if (item == null) {\n              item = nil;\n            };\n            num = $rb_plus(num, 1);\n            if ($truthy(font_icons)) {\n              num_label = \"\" + \"<i class=\\\"conum\\\" data-value=\\\"\" + (num) + \"\\\"></i><b>\" + (num) + \"</b>\"\n            } else {\n              num_label = \"\" + \"<img src=\\\"\" + (node.$icon_uri(\"\" + \"callouts/\" + (num))) + \"\\\" alt=\\\"\" + (num) + \"\\\"\" + (self.void_element_slash) + \">\"\n            };\n            return result['$<<'](\"\" + \"<tr>\\n\" + \"<td>\" + (num_label) + \"</td>\\n\" + \"<td>\" + (item.$text()) + ((function() {if ($truthy(item['$blocks?']())) {\n              return $rb_plus($$($nesting, 'LF'), item.$content())\n            } else {\n              return \"\"\n            }; return nil; })()) + \"</td>\\n\" + \"</tr>\");}, $$14.$$s = self, $$14.$$arity = 1, $$14));\n          result['$<<'](\"</table>\");\n        } else {\n          \n          result['$<<'](\"<ol>\");\n          $send(node.$items(), 'each', [], ($$15 = function(item){var self = $$15.$$s || this;\n\n          \n            \n            if (item == null) {\n              item = nil;\n            };\n            return result['$<<'](\"\" + \"<li>\\n\" + \"<p>\" + (item.$text()) + \"</p>\" + ((function() {if ($truthy(item['$blocks?']())) {\n              return $rb_plus($$($nesting, 'LF'), item.$content())\n            } else {\n              return \"\"\n            }; return nil; })()) + \"\\n\" + \"</li>\");}, $$15.$$s = self, $$15.$$arity = 1, $$15));\n          result['$<<'](\"</ol>\");\n        };\n        result['$<<'](\"</div>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_colist$13.$$arity = 1);\n      \n      Opal.def(self, '$convert_dlist', $Html5Converter_convert_dlist$16 = function $$convert_dlist(node) {\n        var $$17, $a, $$19, $$21, self = this, result = nil, id_attribute = nil, classes = nil, $case = nil, class_attribute = nil, slash = nil, col_style_attribute = nil, dt_style_attribute = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = (function() {$case = node.$style();\n        if (\"qanda\"['$===']($case)) {return [\"qlist\", \"qanda\", node.$role()]}\n        else if (\"horizontal\"['$===']($case)) {return [\"hdlist\", node.$role()]}\n        else {return [\"dlist\", node.$style(), node.$role()]}})().$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        result['$<<'](\"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\")};\n        $case = node.$style();\n        if (\"qanda\"['$===']($case)) {\n        result['$<<'](\"<ol>\");\n        $send(node.$items(), 'each', [], ($$17 = function(terms, dd){var self = $$17.$$s || this, $$18;\n\n        \n          \n          if (terms == null) {\n            terms = nil;\n          };\n          \n          if (dd == null) {\n            dd = nil;\n          };\n          result['$<<'](\"<li>\");\n          $send(terms, 'each', [], ($$18 = function(dt){var self = $$18.$$s || this;\n\n          \n            \n            if (dt == null) {\n              dt = nil;\n            };\n            return result['$<<'](\"\" + \"<p><em>\" + (dt.$text()) + \"</em></p>\");}, $$18.$$s = self, $$18.$$arity = 1, $$18));\n          if ($truthy(dd)) {\n            \n            if ($truthy(dd['$text?']())) {\n              result['$<<'](\"\" + \"<p>\" + (dd.$text()) + \"</p>\")};\n            if ($truthy(dd['$blocks?']())) {\n              result['$<<'](dd.$content())};};\n          return result['$<<'](\"</li>\");}, $$17.$$s = self, $$17.$$arity = 2, $$17));\n        result['$<<'](\"</ol>\");}\n        else if (\"horizontal\"['$===']($case)) {\n        slash = self.void_element_slash;\n        result['$<<'](\"<table>\");\n        if ($truthy(($truthy($a = node['$attr?'](\"labelwidth\")) ? $a : node['$attr?'](\"itemwidth\")))) {\n          \n          result['$<<'](\"<colgroup>\");\n          col_style_attribute = (function() {if ($truthy(node['$attr?'](\"labelwidth\"))) {\n            return \"\" + \" style=\\\"width: \" + (node.$attr(\"labelwidth\").$chomp(\"%\")) + \"%;\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          result['$<<'](\"\" + \"<col\" + (col_style_attribute) + (slash) + \">\");\n          col_style_attribute = (function() {if ($truthy(node['$attr?'](\"itemwidth\"))) {\n            return \"\" + \" style=\\\"width: \" + (node.$attr(\"itemwidth\").$chomp(\"%\")) + \"%;\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          result['$<<'](\"\" + \"<col\" + (col_style_attribute) + (slash) + \">\");\n          result['$<<'](\"</colgroup>\");};\n        $send(node.$items(), 'each', [], ($$19 = function(terms, dd){var self = $$19.$$s || this, $$20, first_term = nil;\n\n        \n          \n          if (terms == null) {\n            terms = nil;\n          };\n          \n          if (dd == null) {\n            dd = nil;\n          };\n          result['$<<'](\"<tr>\");\n          result['$<<'](\"\" + \"<td class=\\\"hdlist1\" + ((function() {if ($truthy(node['$option?'](\"strong\"))) {\n            return \" strong\"\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\");\n          first_term = true;\n          $send(terms, 'each', [], ($$20 = function(dt){var self = $$20.$$s || this;\n\n          \n            \n            if (dt == null) {\n              dt = nil;\n            };\n            if ($truthy(first_term)) {\n            } else {\n              result['$<<'](\"\" + \"<br\" + (slash) + \">\")\n            };\n            result['$<<'](dt.$text());\n            return (first_term = nil);}, $$20.$$s = self, $$20.$$arity = 1, $$20));\n          result['$<<'](\"</td>\");\n          result['$<<'](\"<td class=\\\"hdlist2\\\">\");\n          if ($truthy(dd)) {\n            \n            if ($truthy(dd['$text?']())) {\n              result['$<<'](\"\" + \"<p>\" + (dd.$text()) + \"</p>\")};\n            if ($truthy(dd['$blocks?']())) {\n              result['$<<'](dd.$content())};};\n          result['$<<'](\"</td>\");\n          return result['$<<'](\"</tr>\");}, $$19.$$s = self, $$19.$$arity = 2, $$19));\n        result['$<<'](\"</table>\");}\n        else {\n        result['$<<'](\"<dl>\");\n        dt_style_attribute = (function() {if ($truthy(node.$style())) {\n          return \"\"\n        } else {\n          return \" class=\\\"hdlist1\\\"\"\n        }; return nil; })();\n        $send(node.$items(), 'each', [], ($$21 = function(terms, dd){var self = $$21.$$s || this, $$22;\n\n        \n          \n          if (terms == null) {\n            terms = nil;\n          };\n          \n          if (dd == null) {\n            dd = nil;\n          };\n          $send(terms, 'each', [], ($$22 = function(dt){var self = $$22.$$s || this;\n\n          \n            \n            if (dt == null) {\n              dt = nil;\n            };\n            return result['$<<'](\"\" + \"<dt\" + (dt_style_attribute) + \">\" + (dt.$text()) + \"</dt>\");}, $$22.$$s = self, $$22.$$arity = 1, $$22));\n          if ($truthy(dd)) {\n            \n            result['$<<'](\"<dd>\");\n            if ($truthy(dd['$text?']())) {\n              result['$<<'](\"\" + \"<p>\" + (dd.$text()) + \"</p>\")};\n            if ($truthy(dd['$blocks?']())) {\n              result['$<<'](dd.$content())};\n            return result['$<<'](\"</dd>\");\n          } else {\n            return nil\n          };}, $$21.$$s = self, $$21.$$arity = 2, $$21));\n        result['$<<'](\"</dl>\");};\n        result['$<<'](\"</div>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_dlist$16.$$arity = 1);\n      \n      Opal.def(self, '$convert_example', $Html5Converter_convert_example$23 = function $$convert_example(node) {\n        var self = this, id_attribute = nil, class_attribute = nil, summary_element = nil, title_element = nil, role = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ($truthy(node['$option?'](\"collapsible\"))) {\n          \n          class_attribute = (function() {if ($truthy(node.$role())) {\n            return \"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          summary_element = (function() {if ($truthy(node['$title?']())) {\n            return \"\" + \"<summary class=\\\"title\\\">\" + (node.$title()) + \"</summary>\"\n          } else {\n            return \"<summary class=\\\"title\\\">Details</summary>\"\n          }; return nil; })();\n          return \"\" + \"<details\" + (id_attribute) + (class_attribute) + ((function() {if ($truthy(node['$option?'](\"open\"))) {\n            return \" open\"\n          } else {\n            return \"\"\n          }; return nil; })()) + \">\\n\" + (summary_element) + \"\\n\" + \"<div class=\\\"content\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\\n\" + \"</details>\";\n        } else {\n          \n          title_element = (function() {if ($truthy(node['$title?']())) {\n            return \"\" + \"<div class=\\\"title\\\">\" + (node.$captioned_title()) + \"</div>\\n\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          return \"\" + \"<div\" + (id_attribute) + \" class=\\\"exampleblock\" + ((function() {if ($truthy((role = node.$role()))) {\n            return \"\" + \" \" + (role)\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n        };\n      }, $Html5Converter_convert_example$23.$$arity = 1);\n      \n      Opal.def(self, '$convert_floating_title', $Html5Converter_convert_floating_title$24 = function $$convert_floating_title(node) {\n        var self = this, tag_name = nil, id_attribute = nil, classes = nil;\n\n        \n        tag_name = \"\" + \"h\" + ($rb_plus(node.$level(), 1));\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [node.$style(), node.$role()].$compact();\n        return \"\" + \"<\" + (tag_name) + (id_attribute) + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\">\" + (node.$title()) + \"</\" + (tag_name) + \">\";\n      }, $Html5Converter_convert_floating_title$24.$$arity = 1);\n      \n      Opal.def(self, '$convert_image', $Html5Converter_convert_image$25 = function $$convert_image(node) {\n        var $a, $b, $c, self = this, target = nil, width_attr = nil, height_attr = nil, svg = nil, obj = nil, img = nil, fallback = nil, id_attr = nil, classes = nil, class_attr = nil, title_el = nil;\n\n        \n        target = node.$attr(\"target\");\n        width_attr = (function() {if ($truthy(node['$attr?'](\"width\"))) {\n          return \"\" + \" width=\\\"\" + (node.$attr(\"width\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        height_attr = (function() {if ($truthy(node['$attr?'](\"height\"))) {\n          return \"\" + \" height=\\\"\" + (node.$attr(\"height\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = node['$attr?'](\"format\", \"svg\")) ? $c : target['$include?'](\".svg\"))) ? $rb_lt(node.$document().$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')) : $b)) ? ($truthy($b = (svg = node['$option?'](\"inline\"))) ? $b : (obj = node['$option?'](\"interactive\"))) : $a))) {\n          if ($truthy(svg)) {\n            img = ($truthy($a = self.$read_svg_contents(node, target)) ? $a : \"\" + \"<span class=\\\"alt\\\">\" + (node.$alt()) + \"</span>\")\n          } else if ($truthy(obj)) {\n            \n            fallback = (function() {if ($truthy(node['$attr?'](\"fallback\"))) {\n              return \"\" + \"<img src=\\\"\" + (node.$image_uri(node.$attr(\"fallback\"))) + \"\\\" alt=\\\"\" + (self.$encode_attribute_value(node.$alt())) + \"\\\"\" + (width_attr) + (height_attr) + (self.void_element_slash) + \">\"\n            } else {\n              return \"\" + \"<span class=\\\"alt\\\">\" + (node.$alt()) + \"</span>\"\n            }; return nil; })();\n            img = \"\" + \"<object type=\\\"image/svg+xml\\\" data=\\\"\" + (node.$image_uri(target)) + \"\\\"\" + (width_attr) + (height_attr) + \">\" + (fallback) + \"</object>\";}};\n        img = ($truthy($a = img) ? $a : \"\" + \"<img src=\\\"\" + (node.$image_uri(target)) + \"\\\" alt=\\\"\" + (self.$encode_attribute_value(node.$alt())) + \"\\\"\" + (width_attr) + (height_attr) + (self.void_element_slash) + \">\");\n        if ($truthy(node['$attr?'](\"link\"))) {\n          img = \"\" + \"<a class=\\\"image\\\" href=\\\"\" + (node.$attr(\"link\")) + \"\\\"\" + (self.$append_link_constraint_attrs(node).$join()) + \">\" + (img) + \"</a>\"};\n        id_attr = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"imageblock\"];\n        if ($truthy(node['$attr?'](\"float\"))) {\n          classes['$<<'](node.$attr(\"float\"))};\n        if ($truthy(node['$attr?'](\"align\"))) {\n          classes['$<<'](\"\" + \"text-\" + (node.$attr(\"align\")))};\n        if ($truthy(node.$role())) {\n          classes['$<<'](node.$role())};\n        class_attr = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_el = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"\\n<div class=\\\"title\\\">\" + (node.$captioned_title()) + \"</div>\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attr) + (class_attr) + \">\\n\" + \"<div class=\\\"content\\\">\\n\" + (img) + \"\\n\" + \"</div>\" + (title_el) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_image$25.$$arity = 1);\n      \n      Opal.def(self, '$convert_listing', $Html5Converter_convert_listing$26 = function $$convert_listing(node) {\n        var $a, self = this, nowrap = nil, lang = nil, syntax_hl = nil, opts = nil, doc_attrs = nil, $writer = nil, pre_open = nil, pre_close = nil, id_attribute = nil, title_element = nil, role = nil;\n\n        \n        nowrap = ($truthy($a = node['$option?'](\"nowrap\")) ? $a : node.$document()['$attr?'](\"prewrap\")['$!']());\n        if (node.$style()['$=='](\"source\")) {\n          \n          lang = node.$attr(\"language\");\n          if ($truthy((syntax_hl = node.$document().$syntax_highlighter()))) {\n            \n            opts = (function() {if ($truthy(syntax_hl['$highlight?']())) {\n              return $hash2([\"css_mode\", \"style\"], {\"css_mode\": ($truthy($a = (doc_attrs = node.$document().$attributes())['$[]'](\"\" + (syntax_hl.$name()) + \"-css\")) ? $a : \"class\").$to_sym(), \"style\": doc_attrs['$[]'](\"\" + (syntax_hl.$name()) + \"-style\")})\n            } else {\n              return $hash2([], {})\n            }; return nil; })();\n            \n            $writer = [\"nowrap\", nowrap];\n            $send(opts, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            \n            pre_open = \"\" + \"<pre class=\\\"highlight\" + ((function() {if ($truthy(nowrap)) {\n              return \" nowrap\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \"\\\"><code\" + ((function() {if ($truthy(lang)) {\n              return \"\" + \" class=\\\"language-\" + (lang) + \"\\\" data-lang=\\\"\" + (lang) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \">\";\n            pre_close = \"</code></pre>\";\n          };\n        } else {\n          \n          pre_open = \"\" + \"<pre\" + ((function() {if ($truthy(nowrap)) {\n            return \" class=\\\"nowrap\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })()) + \">\";\n          pre_close = \"</pre>\";\n        };\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$captioned_title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + \" class=\\\"listingblock\" + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + ((function() {if ($truthy(syntax_hl)) {\n          \n          return syntax_hl.$format(node, lang, opts);\n        } else {\n          return $rb_plus($rb_plus(pre_open, ($truthy($a = node.$content()) ? $a : \"\")), pre_close)\n        }; return nil; })()) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_listing$26.$$arity = 1);\n      \n      Opal.def(self, '$convert_literal', $Html5Converter_convert_literal$27 = function $$convert_literal(node) {\n        var $a, self = this, id_attribute = nil, title_element = nil, nowrap = nil, role = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        nowrap = ($truthy($a = node.$document()['$attr?'](\"prewrap\")['$!']()) ? $a : node['$option?'](\"nowrap\"));\n        return \"\" + \"<div\" + (id_attribute) + \" class=\\\"literalblock\" + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + \"<pre\" + ((function() {if ($truthy(nowrap)) {\n          return \" class=\\\"nowrap\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })()) + \">\" + (node.$content()) + \"</pre>\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_literal$27.$$arity = 1);\n      \n      Opal.def(self, '$convert_stem', $Html5Converter_convert_stem$28 = function $$convert_stem(node) {\n        var $a, $b, $$29, self = this, id_attribute = nil, title_element = nil, style = nil, open = nil, close = nil, equation = nil, br = nil, role = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        $b = $$($nesting, 'BLOCK_MATH_DELIMITERS')['$[]']((style = node.$style().$to_sym())), $a = Opal.to_ary($b), (open = ($a[0] == null ? nil : $a[0])), (close = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy((equation = node.$content()))) {\n          \n          if ($truthy((($a = style['$=='](\"asciimath\")) ? equation['$include?']($$($nesting, 'LF')) : style['$=='](\"asciimath\")))) {\n            \n            br = \"\" + \"<br\" + (self.void_element_slash) + \">\" + ($$($nesting, 'LF'));\n            equation = $send(equation, 'gsub', [$$($nesting, 'StemBreakRx')], ($$29 = function(){var self = $$29.$$s || this, $c;\n\n            return \"\" + (close) + ($rb_times(br, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$count($$($nesting, 'LF')))) + (open)}, $$29.$$s = self, $$29.$$arity = 0, $$29));};\n          if ($truthy(($truthy($a = equation['$start_with?'](open)) ? equation['$end_with?'](close) : $a))) {\n          } else {\n            equation = \"\" + (open) + (equation) + (close)\n          };\n        } else {\n          equation = \"\"\n        };\n        return \"\" + \"<div\" + (id_attribute) + \" class=\\\"stemblock\" + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + (equation) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_stem$28.$$arity = 1);\n      \n      Opal.def(self, '$convert_olist', $Html5Converter_convert_olist$30 = function $$convert_olist(node) {\n        var $$31, self = this, result = nil, id_attribute = nil, classes = nil, class_attribute = nil, type_attribute = nil, keyword = nil, start_attribute = nil, reversed_attribute = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"olist\", node.$style(), node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        result['$<<'](\"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\")};\n        type_attribute = (function() {if ($truthy((keyword = node.$list_marker_keyword()))) {\n          return \"\" + \" type=\\\"\" + (keyword) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        start_attribute = (function() {if ($truthy(node['$attr?'](\"start\"))) {\n          return \"\" + \" start=\\\"\" + (node.$attr(\"start\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        reversed_attribute = (function() {if ($truthy(node['$option?'](\"reversed\"))) {\n          \n          return self.$append_boolean_attribute(\"reversed\", self.xml_mode);\n        } else {\n          return \"\"\n        }; return nil; })();\n        result['$<<'](\"\" + \"<ol class=\\\"\" + (node.$style()) + \"\\\"\" + (type_attribute) + (start_attribute) + (reversed_attribute) + \">\");\n        $send(node.$items(), 'each', [], ($$31 = function(item){var self = $$31.$$s || this;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          if ($truthy(item.$id())) {\n            result['$<<'](\"\" + \"<li id=\\\"\" + (item.$id()) + \"\\\"\" + ((function() {if ($truthy(item.$role())) {\n              return \"\" + \" class=\\\"\" + (item.$role()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \">\")\n          } else if ($truthy(item.$role())) {\n            result['$<<'](\"\" + \"<li class=\\\"\" + (item.$role()) + \"\\\">\")\n          } else {\n            result['$<<'](\"<li>\")\n          };\n          result['$<<'](\"\" + \"<p>\" + (item.$text()) + \"</p>\");\n          if ($truthy(item['$blocks?']())) {\n            result['$<<'](item.$content())};\n          return result['$<<'](\"</li>\");}, $$31.$$s = self, $$31.$$arity = 1, $$31));\n        result['$<<'](\"</ol>\");\n        result['$<<'](\"</div>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_olist$30.$$arity = 1);\n      \n      Opal.def(self, '$convert_open', $Html5Converter_convert_open$32 = function $$convert_open(node) {\n        var $a, $b, $c, self = this, style = nil, id_attr = nil, title_el = nil, role = nil;\n\n        if ((style = node.$style())['$=='](\"abstract\")) {\n          if ($truthy((($a = node.$parent()['$=='](node.$document())) ? node.$document().$doctype()['$=='](\"book\") : node.$parent()['$=='](node.$document())))) {\n            \n            self.$logger().$warn(\"abstract block cannot be used in a document without a title when doctype is book. Excluding block content.\");\n            return \"\";\n          } else {\n            \n            id_attr = (function() {if ($truthy(node.$id())) {\n              return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })();\n            title_el = (function() {if ($truthy(node['$title?']())) {\n              return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n            } else {\n              return \"\"\n            }; return nil; })();\n            return \"\" + \"<div\" + (id_attr) + \" class=\\\"quoteblock abstract\" + ((function() {if ($truthy((role = node.$role()))) {\n              return \"\" + \" \" + (role)\n            } else {\n              return \"\"\n            }; return nil; })()) + \"\\\">\\n\" + (title_el) + \"<blockquote>\\n\" + (node.$content()) + \"\\n\" + \"</blockquote>\\n\" + \"</div>\";\n          }\n        } else if ($truthy((($a = style['$=='](\"partintro\")) ? ($truthy($b = ($truthy($c = $rb_gt(node.$level(), 0)) ? $c : node.$parent().$context()['$!='](\"section\"))) ? $b : node.$document().$doctype()['$!='](\"book\")) : style['$=='](\"partintro\")))) {\n          \n          self.$logger().$error(\"partintro block can only be used when doctype is book and must be a child of a book part. Excluding block content.\");\n          return \"\";\n        } else {\n          \n          id_attr = (function() {if ($truthy(node.$id())) {\n            return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          title_el = (function() {if ($truthy(node['$title?']())) {\n            return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          return \"\" + \"<div\" + (id_attr) + \" class=\\\"openblock\" + ((function() {if ($truthy(($truthy($a = style) ? style['$!='](\"open\") : $a))) {\n            return \"\" + \" \" + (style)\n          } else {\n            return \"\"\n          }; return nil; })()) + ((function() {if ($truthy((role = node.$role()))) {\n            return \"\" + \" \" + (role)\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\\n\" + (title_el) + \"<div class=\\\"content\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n        }\n      }, $Html5Converter_convert_open$32.$$arity = 1);\n      \n      Opal.def(self, '$convert_page_break', $Html5Converter_convert_page_break$33 = function $$convert_page_break(node) {\n        var self = this;\n\n        return \"<div style=\\\"page-break-after: always;\\\"></div>\"\n      }, $Html5Converter_convert_page_break$33.$$arity = 1);\n      \n      Opal.def(self, '$convert_paragraph', $Html5Converter_convert_paragraph$34 = function $$convert_paragraph(node) {\n        var self = this, attributes = nil;\n\n        \n        if ($truthy(node.$role())) {\n          attributes = \"\" + ((function() {if ($truthy(node.$id())) {\n            return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })()) + \" class=\\\"paragraph \" + (node.$role()) + \"\\\"\"\n        } else if ($truthy(node.$id())) {\n          attributes = \"\" + \" id=\\\"\" + (node.$id()) + \"\\\" class=\\\"paragraph\\\"\"\n        } else {\n          attributes = \" class=\\\"paragraph\\\"\"\n        };\n        if ($truthy(node['$title?']())) {\n          return \"\" + \"<div\" + (attributes) + \">\\n\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\" + \"<p>\" + (node.$content()) + \"</p>\\n\" + \"</div>\"\n        } else {\n          return \"\" + \"<div\" + (attributes) + \">\\n\" + \"<p>\" + (node.$content()) + \"</p>\\n\" + \"</div>\"\n        };\n      }, $Html5Converter_convert_paragraph$34.$$arity = 1);\n      Opal.alias(self, \"convert_pass\", \"content_only\");\n      \n      Opal.def(self, '$convert_preamble', $Html5Converter_convert_preamble$35 = function $$convert_preamble(node) {\n        var $a, $b, self = this, doc = nil, toc = nil;\n\n        \n        if ($truthy(($truthy($a = ($truthy($b = (doc = node.$document())['$attr?'](\"toc-placement\", \"preamble\")) ? doc['$sections?']() : $b)) ? doc['$attr?'](\"toc\") : $a))) {\n          toc = \"\" + \"\\n\" + \"<div id=\\\"toc\\\" class=\\\"\" + (doc.$attr(\"toc-class\", \"toc\")) + \"\\\">\\n\" + \"<div id=\\\"toctitle\\\">\" + (doc.$attr(\"toc-title\")) + \"</div>\\n\" + (self.$convert_outline(doc)) + \"\\n\" + \"</div>\"\n        } else {\n          toc = \"\"\n        };\n        return \"\" + \"<div id=\\\"preamble\\\">\\n\" + \"<div class=\\\"sectionbody\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\" + (toc) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_preamble$35.$$arity = 1);\n      \n      Opal.def(self, '$convert_quote', $Html5Converter_convert_quote$36 = function $$convert_quote(node) {\n        var $a, self = this, id_attribute = nil, classes = nil, class_attribute = nil, title_element = nil, attribution = nil, citetitle = nil, cite_element = nil, attribution_text = nil, attribution_element = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"quoteblock\", node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"\\n<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        attribution = (function() {if ($truthy(node['$attr?'](\"attribution\"))) {\n          \n          return node.$attr(\"attribution\");\n        } else {\n          return nil\n        }; return nil; })();\n        citetitle = (function() {if ($truthy(node['$attr?'](\"citetitle\"))) {\n          \n          return node.$attr(\"citetitle\");\n        } else {\n          return nil\n        }; return nil; })();\n        if ($truthy(($truthy($a = attribution) ? $a : citetitle))) {\n          \n          cite_element = (function() {if ($truthy(citetitle)) {\n            return \"\" + \"<cite>\" + (citetitle) + \"</cite>\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          attribution_text = (function() {if ($truthy(attribution)) {\n            return \"\" + \"&#8212; \" + (attribution) + ((function() {if ($truthy(citetitle)) {\n              return \"\" + \"<br\" + (self.void_element_slash) + \">\\n\"\n            } else {\n              return \"\"\n            }; return nil; })())\n          } else {\n            return \"\"\n          }; return nil; })();\n          attribution_element = \"\" + \"\\n<div class=\\\"attribution\\\">\\n\" + (attribution_text) + (cite_element) + \"\\n</div>\";\n        } else {\n          attribution_element = \"\"\n        };\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<blockquote>\\n\" + (node.$content()) + \"\\n\" + \"</blockquote>\" + (attribution_element) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_quote$36.$$arity = 1);\n      \n      Opal.def(self, '$convert_thematic_break', $Html5Converter_convert_thematic_break$37 = function $$convert_thematic_break(node) {\n        var self = this;\n\n        return \"\" + \"<hr\" + (self.void_element_slash) + \">\"\n      }, $Html5Converter_convert_thematic_break$37.$$arity = 1);\n      \n      Opal.def(self, '$convert_sidebar', $Html5Converter_convert_sidebar$38 = function $$convert_sidebar(node) {\n        var self = this, id_attribute = nil, title_element = nil, role = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + \" class=\\\"sidebarblock\" + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + \"<div class=\\\"content\\\">\\n\" + (title_element) + (node.$content()) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_sidebar$38.$$arity = 1);\n      \n      Opal.def(self, '$convert_table', $Html5Converter_convert_table$39 = function $$convert_table(node) {\n        var $a, $$40, $$41, self = this, result = nil, id_attribute = nil, classes = nil, stripes = nil, styles = nil, autowidth = nil, tablewidth = nil, role = nil, class_attribute = nil, style_attribute = nil, slash = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"tableblock\", \"\" + \"frame-\" + (node.$attr(\"frame\", \"all\", \"table-frame\")), \"\" + \"grid-\" + (node.$attr(\"grid\", \"all\", \"table-grid\"))];\n        if ($truthy((stripes = node.$attr(\"stripes\", nil, \"table-stripes\")))) {\n          classes['$<<'](\"\" + \"stripes-\" + (stripes))};\n        styles = [];\n        if ($truthy(($truthy($a = (autowidth = node['$option?'](\"autowidth\"))) ? node['$attr?'](\"width\")['$!']() : $a))) {\n          classes['$<<'](\"fit-content\")\n        } else if ((tablewidth = node.$attr(\"tablepcwidth\"))['$=='](100)) {\n          classes['$<<'](\"stretch\")\n        } else {\n          styles['$<<'](\"\" + \"width: \" + (tablewidth) + \"%;\")\n        };\n        if ($truthy(node['$attr?'](\"float\"))) {\n          classes['$<<'](node.$attr(\"float\"))};\n        if ($truthy((role = node.$role()))) {\n          classes['$<<'](role)};\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        style_attribute = (function() {if ($truthy(styles['$empty?']())) {\n          return \"\"\n        } else {\n          return \"\" + \" style=\\\"\" + (styles.$join(\" \")) + \"\\\"\"\n        }; return nil; })();\n        result['$<<'](\"\" + \"<table\" + (id_attribute) + (class_attribute) + (style_attribute) + \">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<caption class=\\\"title\\\">\" + (node.$captioned_title()) + \"</caption>\")};\n        if ($truthy($rb_gt(node.$attr(\"rowcount\"), 0))) {\n          \n          slash = self.void_element_slash;\n          result['$<<'](\"<colgroup>\");\n          if ($truthy(autowidth)) {\n            result = $rb_plus(result, $$($nesting, 'Array').$new(node.$columns().$size(), \"\" + \"<col\" + (slash) + \">\"))\n          } else {\n            $send(node.$columns(), 'each', [], ($$40 = function(col){var self = $$40.$$s || this;\n\n            \n              \n              if (col == null) {\n                col = nil;\n              };\n              return result['$<<']((function() {if ($truthy(col['$option?'](\"autowidth\"))) {\n                return \"\" + \"<col\" + (slash) + \">\"\n              } else {\n                return \"\" + \"<col style=\\\"width: \" + (col.$attr(\"colpcwidth\")) + \"%;\\\"\" + (slash) + \">\"\n              }; return nil; })());}, $$40.$$s = self, $$40.$$arity = 1, $$40))\n          };\n          result['$<<'](\"</colgroup>\");\n          $send(node.$rows().$to_h(), 'each', [], ($$41 = function(tsec, rows){var self = $$41.$$s || this, $$42;\n\n          \n            \n            if (tsec == null) {\n              tsec = nil;\n            };\n            \n            if (rows == null) {\n              rows = nil;\n            };\n            if ($truthy(rows['$empty?']())) {\n              return nil;};\n            result['$<<'](\"\" + \"<t\" + (tsec) + \">\");\n            $send(rows, 'each', [], ($$42 = function(row){var self = $$42.$$s || this, $$43;\n\n            \n              \n              if (row == null) {\n                row = nil;\n              };\n              result['$<<'](\"<tr>\");\n              $send(row, 'each', [], ($$43 = function(cell){var self = $$43.$$s || this, $b, cell_content = nil, $case = nil, cell_tag_name = nil, cell_class_attribute = nil, cell_colspan_attribute = nil, cell_rowspan_attribute = nil, cell_style_attribute = nil;\n\n              \n                \n                if (cell == null) {\n                  cell = nil;\n                };\n                if (tsec['$=='](\"head\")) {\n                  cell_content = cell.$text()\n                } else {\n                  $case = cell.$style();\n                  if (\"asciidoc\"['$===']($case)) {cell_content = \"\" + \"<div class=\\\"content\\\">\" + (cell.$content()) + \"</div>\"}\n                  else if (\"literal\"['$===']($case)) {cell_content = \"\" + \"<div class=\\\"literal\\\"><pre>\" + (cell.$text()) + \"</pre></div>\"}\n                  else {cell_content = (function() {if ($truthy((cell_content = cell.$content())['$empty?']())) {\n                    return \"\"\n                  } else {\n                    return \"\" + \"<p class=\\\"tableblock\\\">\" + (cell_content.$join(\"\" + \"</p>\\n\" + \"<p class=\\\"tableblock\\\">\")) + \"</p>\"\n                  }; return nil; })()}\n                };\n                cell_tag_name = (function() {if ($truthy(($truthy($b = tsec['$=='](\"head\")) ? $b : cell.$style()['$=='](\"header\")))) {\n                  return \"th\"\n                } else {\n                  return \"td\"\n                }; return nil; })();\n                cell_class_attribute = \"\" + \" class=\\\"tableblock halign-\" + (cell.$attr(\"halign\")) + \" valign-\" + (cell.$attr(\"valign\")) + \"\\\"\";\n                cell_colspan_attribute = (function() {if ($truthy(cell.$colspan())) {\n                  return \"\" + \" colspan=\\\"\" + (cell.$colspan()) + \"\\\"\"\n                } else {\n                  return \"\"\n                }; return nil; })();\n                cell_rowspan_attribute = (function() {if ($truthy(cell.$rowspan())) {\n                  return \"\" + \" rowspan=\\\"\" + (cell.$rowspan()) + \"\\\"\"\n                } else {\n                  return \"\"\n                }; return nil; })();\n                cell_style_attribute = (function() {if ($truthy(node.$document()['$attr?'](\"cellbgcolor\"))) {\n                  return \"\" + \" style=\\\"background-color: \" + (node.$document().$attr(\"cellbgcolor\")) + \";\\\"\"\n                } else {\n                  return \"\"\n                }; return nil; })();\n                return result['$<<'](\"\" + \"<\" + (cell_tag_name) + (cell_class_attribute) + (cell_colspan_attribute) + (cell_rowspan_attribute) + (cell_style_attribute) + \">\" + (cell_content) + \"</\" + (cell_tag_name) + \">\");}, $$43.$$s = self, $$43.$$arity = 1, $$43));\n              return result['$<<'](\"</tr>\");}, $$42.$$s = self, $$42.$$arity = 1, $$42));\n            return result['$<<'](\"\" + \"</t\" + (tsec) + \">\");}, $$41.$$s = self, $$41.$$arity = 2, $$41));};\n        result['$<<'](\"</table>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_table$39.$$arity = 1);\n      \n      Opal.def(self, '$convert_toc', $Html5Converter_convert_toc$44 = function $$convert_toc(node) {\n        var $a, $b, self = this, doc = nil, id_attr = nil, title_id_attr = nil, title = nil, levels = nil, role = nil;\n\n        \n        if ($truthy(($truthy($a = ($truthy($b = (doc = node.$document())['$attr?'](\"toc-placement\", \"macro\")) ? doc['$sections?']() : $b)) ? doc['$attr?'](\"toc\") : $a))) {\n        } else {\n          return \"<!-- toc disabled -->\"\n        };\n        if ($truthy(node.$id())) {\n          \n          id_attr = \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\";\n          title_id_attr = \"\" + \" id=\\\"\" + (node.$id()) + \"title\\\"\";\n        } else {\n          \n          id_attr = \" id=\\\"toc\\\"\";\n          title_id_attr = \" id=\\\"toctitle\\\"\";\n        };\n        title = (function() {if ($truthy(node['$title?']())) {\n          return node.$title()\n        } else {\n          \n          return doc.$attr(\"toc-title\");\n        }; return nil; })();\n        levels = (function() {if ($truthy(node['$attr?'](\"levels\"))) {\n          return node.$attr(\"levels\").$to_i()\n        } else {\n          return nil\n        }; return nil; })();\n        role = (function() {if ($truthy(node['$role?']())) {\n          return node.$role()\n        } else {\n          \n          return doc.$attr(\"toc-class\", \"toc\");\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attr) + \" class=\\\"\" + (role) + \"\\\">\\n\" + \"<div\" + (title_id_attr) + \" class=\\\"title\\\">\" + (title) + \"</div>\\n\" + (self.$convert_outline(doc, $hash2([\"toclevels\"], {\"toclevels\": levels}))) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_toc$44.$$arity = 1);\n      \n      Opal.def(self, '$convert_ulist', $Html5Converter_convert_ulist$45 = function $$convert_ulist(node) {\n        var $$46, self = this, result = nil, id_attribute = nil, div_classes = nil, marker_checked = nil, marker_unchecked = nil, checklist = nil, ul_class_attribute = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        div_classes = [\"ulist\", node.$style(), node.$role()].$compact();\n        marker_checked = (marker_unchecked = \"\");\n        if ($truthy((checklist = node['$option?'](\"checklist\")))) {\n          \n          div_classes.$unshift(div_classes.$shift(), \"checklist\");\n          ul_class_attribute = \" class=\\\"checklist\\\"\";\n          if ($truthy(node['$option?'](\"interactive\"))) {\n            if ($truthy(self.xml_mode)) {\n              \n              marker_checked = \"<input type=\\\"checkbox\\\" data-item-complete=\\\"1\\\" checked=\\\"checked\\\"/> \";\n              marker_unchecked = \"<input type=\\\"checkbox\\\" data-item-complete=\\\"0\\\"/> \";\n            } else {\n              \n              marker_checked = \"<input type=\\\"checkbox\\\" data-item-complete=\\\"1\\\" checked> \";\n              marker_unchecked = \"<input type=\\\"checkbox\\\" data-item-complete=\\\"0\\\"> \";\n            }\n          } else if ($truthy(node.$document()['$attr?'](\"icons\", \"font\"))) {\n            \n            marker_checked = \"<i class=\\\"fa fa-check-square-o\\\"></i> \";\n            marker_unchecked = \"<i class=\\\"fa fa-square-o\\\"></i> \";\n          } else {\n            \n            marker_checked = \"&#10003; \";\n            marker_unchecked = \"&#10063; \";\n          };\n        } else {\n          ul_class_attribute = (function() {if ($truthy(node.$style())) {\n            return \"\" + \" class=\\\"\" + (node.$style()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })()\n        };\n        result['$<<'](\"\" + \"<div\" + (id_attribute) + \" class=\\\"\" + (div_classes.$join(\" \")) + \"\\\">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\")};\n        result['$<<'](\"\" + \"<ul\" + (ul_class_attribute) + \">\");\n        $send(node.$items(), 'each', [], ($$46 = function(item){var self = $$46.$$s || this, $a;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          if ($truthy(item.$id())) {\n            result['$<<'](\"\" + \"<li id=\\\"\" + (item.$id()) + \"\\\"\" + ((function() {if ($truthy(item.$role())) {\n              return \"\" + \" class=\\\"\" + (item.$role()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \">\")\n          } else if ($truthy(item.$role())) {\n            result['$<<'](\"\" + \"<li class=\\\"\" + (item.$role()) + \"\\\">\")\n          } else {\n            result['$<<'](\"<li>\")\n          };\n          if ($truthy(($truthy($a = checklist) ? item['$attr?'](\"checkbox\") : $a))) {\n            result['$<<'](\"\" + \"<p>\" + ((function() {if ($truthy(item['$attr?'](\"checked\"))) {\n              return marker_checked\n            } else {\n              return marker_unchecked\n            }; return nil; })()) + (item.$text()) + \"</p>\")\n          } else {\n            result['$<<'](\"\" + \"<p>\" + (item.$text()) + \"</p>\")\n          };\n          if ($truthy(item['$blocks?']())) {\n            result['$<<'](item.$content())};\n          return result['$<<'](\"</li>\");}, $$46.$$s = self, $$46.$$arity = 1, $$46));\n        result['$<<'](\"</ul>\");\n        result['$<<'](\"</div>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_ulist$45.$$arity = 1);\n      \n      Opal.def(self, '$convert_verse', $Html5Converter_convert_verse$47 = function $$convert_verse(node) {\n        var $a, self = this, id_attribute = nil, classes = nil, class_attribute = nil, title_element = nil, attribution = nil, citetitle = nil, cite_element = nil, attribution_text = nil, attribution_element = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"verseblock\", node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"\\n<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        attribution = (function() {if ($truthy(node['$attr?'](\"attribution\"))) {\n          \n          return node.$attr(\"attribution\");\n        } else {\n          return nil\n        }; return nil; })();\n        citetitle = (function() {if ($truthy(node['$attr?'](\"citetitle\"))) {\n          \n          return node.$attr(\"citetitle\");\n        } else {\n          return nil\n        }; return nil; })();\n        if ($truthy(($truthy($a = attribution) ? $a : citetitle))) {\n          \n          cite_element = (function() {if ($truthy(citetitle)) {\n            return \"\" + \"<cite>\" + (citetitle) + \"</cite>\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          attribution_text = (function() {if ($truthy(attribution)) {\n            return \"\" + \"&#8212; \" + (attribution) + ((function() {if ($truthy(citetitle)) {\n              return \"\" + \"<br\" + (self.void_element_slash) + \">\\n\"\n            } else {\n              return \"\"\n            }; return nil; })())\n          } else {\n            return \"\"\n          }; return nil; })();\n          attribution_element = \"\" + \"\\n<div class=\\\"attribution\\\">\\n\" + (attribution_text) + (cite_element) + \"\\n</div>\";\n        } else {\n          attribution_element = \"\"\n        };\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<pre class=\\\"content\\\">\" + (node.$content()) + \"</pre>\" + (attribution_element) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_verse$47.$$arity = 1);\n      \n      Opal.def(self, '$convert_video', $Html5Converter_convert_video$48 = function $$convert_video(node) {\n        var $a, $b, self = this, xml = nil, id_attribute = nil, classes = nil, class_attribute = nil, title_element = nil, width_attribute = nil, height_attribute = nil, $case = nil, asset_uri_scheme = nil, start_anchor = nil, delimiter = nil, autoplay_param = nil, loop_param = nil, muted_param = nil, rel_param_val = nil, start_param = nil, end_param = nil, has_loop_param = nil, mute_param = nil, controls_param = nil, fs_param = nil, fs_attribute = nil, modest_param = nil, theme_param = nil, hl_param = nil, target = nil, list = nil, list_param = nil, playlist = nil, poster_attribute = nil, val = nil, preload_attribute = nil, start_t = nil, end_t = nil, time_anchor = nil;\n\n        \n        xml = self.xml_mode;\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"videoblock\"];\n        if ($truthy(node['$attr?'](\"float\"))) {\n          classes['$<<'](node.$attr(\"float\"))};\n        if ($truthy(node['$attr?'](\"align\"))) {\n          classes['$<<'](\"\" + \"text-\" + (node.$attr(\"align\")))};\n        if ($truthy(node.$role())) {\n          classes['$<<'](node.$role())};\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"\\n<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        width_attribute = (function() {if ($truthy(node['$attr?'](\"width\"))) {\n          return \"\" + \" width=\\\"\" + (node.$attr(\"width\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        height_attribute = (function() {if ($truthy(node['$attr?'](\"height\"))) {\n          return \"\" + \" height=\\\"\" + (node.$attr(\"height\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return (function() {$case = node.$attr(\"poster\");\n        if (\"vimeo\"['$===']($case)) {\n        if ($truthy((asset_uri_scheme = node.$document().$attr(\"asset-uri-scheme\", \"https\"))['$empty?']())) {\n        } else {\n          asset_uri_scheme = \"\" + (asset_uri_scheme) + \":\"\n        };\n        start_anchor = (function() {if ($truthy(node['$attr?'](\"start\"))) {\n          return \"\" + \"#at=\" + (node.$attr(\"start\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        delimiter = [\"?\"];\n        autoplay_param = (function() {if ($truthy(node['$option?'](\"autoplay\"))) {\n          return \"\" + (($truthy($a = delimiter.$pop()) ? $a : \"&amp;\")) + \"autoplay=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        loop_param = (function() {if ($truthy(node['$option?'](\"loop\"))) {\n          return \"\" + (($truthy($a = delimiter.$pop()) ? $a : \"&amp;\")) + \"loop=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        muted_param = (function() {if ($truthy(node['$option?'](\"muted\"))) {\n          return \"\" + (($truthy($a = delimiter.$pop()) ? $a : \"&amp;\")) + \"muted=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<div class=\\\"content\\\">\\n\" + \"<iframe\" + (width_attribute) + (height_attribute) + \" src=\\\"\" + (asset_uri_scheme) + \"//player.vimeo.com/video/\" + (node.$attr(\"target\")) + (autoplay_param) + (loop_param) + (muted_param) + (start_anchor) + \"\\\" frameborder=\\\"0\\\"\" + ((function() {if ($truthy(node['$option?'](\"nofullscreen\"))) {\n          return \"\"\n        } else {\n          \n          return self.$append_boolean_attribute(\"allowfullscreen\", xml);\n        }; return nil; })()) + \"></iframe>\\n\" + \"</div>\\n\" + \"</div>\";}\n        else if (\"youtube\"['$===']($case)) {\n        if ($truthy((asset_uri_scheme = node.$document().$attr(\"asset-uri-scheme\", \"https\"))['$empty?']())) {\n        } else {\n          asset_uri_scheme = \"\" + (asset_uri_scheme) + \":\"\n        };\n        rel_param_val = (function() {if ($truthy(node['$option?'](\"related\"))) {\n          return 1\n        } else {\n          return 0\n        }; return nil; })();\n        start_param = (function() {if ($truthy(node['$attr?'](\"start\"))) {\n          return \"\" + \"&amp;start=\" + (node.$attr(\"start\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        end_param = (function() {if ($truthy(node['$attr?'](\"end\"))) {\n          return \"\" + \"&amp;end=\" + (node.$attr(\"end\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        autoplay_param = (function() {if ($truthy(node['$option?'](\"autoplay\"))) {\n          return \"&amp;autoplay=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        loop_param = (function() {if ($truthy((has_loop_param = node['$option?'](\"loop\")))) {\n          return \"&amp;loop=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        mute_param = (function() {if ($truthy(node['$option?'](\"muted\"))) {\n          return \"&amp;mute=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        controls_param = (function() {if ($truthy(node['$option?'](\"nocontrols\"))) {\n          return \"&amp;controls=0\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ($truthy(node['$option?'](\"nofullscreen\"))) {\n          \n          fs_param = \"&amp;fs=0\";\n          fs_attribute = \"\";\n        } else {\n          \n          fs_param = \"\";\n          fs_attribute = self.$append_boolean_attribute(\"allowfullscreen\", xml);\n        };\n        modest_param = (function() {if ($truthy(node['$option?'](\"modest\"))) {\n          return \"&amp;modestbranding=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        theme_param = (function() {if ($truthy(node['$attr?'](\"theme\"))) {\n          return \"\" + \"&amp;theme=\" + (node.$attr(\"theme\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        hl_param = (function() {if ($truthy(node['$attr?'](\"lang\"))) {\n          return \"\" + \"&amp;hl=\" + (node.$attr(\"lang\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        $b = node.$attr(\"target\").$split(\"/\", 2), $a = Opal.to_ary($b), (target = ($a[0] == null ? nil : $a[0])), (list = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy((list = ($truthy($a = list) ? $a : node.$attr(\"list\"))))) {\n          list_param = \"\" + \"&amp;list=\" + (list)\n        } else {\n          \n          $b = target.$split(\",\", 2), $a = Opal.to_ary($b), (target = ($a[0] == null ? nil : $a[0])), (playlist = ($a[1] == null ? nil : $a[1])), $b;\n          if ($truthy((playlist = ($truthy($a = playlist) ? $a : node.$attr(\"playlist\"))))) {\n            list_param = \"\" + \"&amp;playlist=\" + (playlist)\n          } else {\n            list_param = (function() {if ($truthy(has_loop_param)) {\n              return \"\" + \"&amp;playlist=\" + (target)\n            } else {\n              return \"\"\n            }; return nil; })()\n          };\n        };\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<div class=\\\"content\\\">\\n\" + \"<iframe\" + (width_attribute) + (height_attribute) + \" src=\\\"\" + (asset_uri_scheme) + \"//www.youtube.com/embed/\" + (target) + \"?rel=\" + (rel_param_val) + (start_param) + (end_param) + (autoplay_param) + (loop_param) + (mute_param) + (controls_param) + (list_param) + (fs_param) + (modest_param) + (theme_param) + (hl_param) + \"\\\" frameborder=\\\"0\\\"\" + (fs_attribute) + \"></iframe>\\n\" + \"</div>\\n\" + \"</div>\";}\n        else {\n        poster_attribute = (function() {if ($truthy((val = node.$attr(\"poster\"))['$nil_or_empty?']())) {\n          return \"\"\n        } else {\n          return \"\" + \" poster=\\\"\" + (node.$media_uri(val)) + \"\\\"\"\n        }; return nil; })();\n        preload_attribute = (function() {if ($truthy((val = node.$attr(\"preload\"))['$nil_or_empty?']())) {\n          return \"\"\n        } else {\n          return \"\" + \" preload=\\\"\" + (val) + \"\\\"\"\n        }; return nil; })();\n        start_t = node.$attr(\"start\");\n        end_t = node.$attr(\"end\");\n        time_anchor = (function() {if ($truthy(($truthy($a = start_t) ? $a : end_t))) {\n          return \"\" + \"#t=\" + (($truthy($a = start_t) ? $a : \"\")) + ((function() {if ($truthy(end_t)) {\n            return \"\" + \",\" + (end_t)\n          } else {\n            return \"\"\n          }; return nil; })())\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<div class=\\\"content\\\">\\n\" + \"<video src=\\\"\" + (node.$media_uri(node.$attr(\"target\"))) + (time_anchor) + \"\\\"\" + (width_attribute) + (height_attribute) + (poster_attribute) + ((function() {if ($truthy(node['$option?'](\"autoplay\"))) {\n          \n          return self.$append_boolean_attribute(\"autoplay\", xml);\n        } else {\n          return \"\"\n        }; return nil; })()) + ((function() {if ($truthy(node['$option?'](\"nocontrols\"))) {\n          return \"\"\n        } else {\n          \n          return self.$append_boolean_attribute(\"controls\", xml);\n        }; return nil; })()) + ((function() {if ($truthy(node['$option?'](\"loop\"))) {\n          \n          return self.$append_boolean_attribute(\"loop\", xml);\n        } else {\n          return \"\"\n        }; return nil; })()) + (preload_attribute) + \">\\n\" + \"Your browser does not support the video tag.\\n\" + \"</video>\\n\" + \"</div>\\n\" + \"</div>\";}})();\n      }, $Html5Converter_convert_video$48.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_anchor', $Html5Converter_convert_inline_anchor$49 = function $$convert_inline_anchor(node) {\n        var $a, self = this, $case = nil, path = nil, attrs = nil, text = nil, refid = nil, ref = nil;\n\n        return (function() {$case = node.$type();\n        if (\"xref\"['$===']($case)) {\n        if ($truthy((path = node.$attributes()['$[]'](\"path\")))) {\n          \n          attrs = self.$append_link_constraint_attrs(node, (function() {if ($truthy(node.$role())) {\n            return [\"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\"]\n          } else {\n            return []\n          }; return nil; })()).$join();\n          text = ($truthy($a = node.$text()) ? $a : path);\n        } else {\n          \n          attrs = (function() {if ($truthy(node.$role())) {\n            return \"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          if ($truthy((text = node.$text()))) {\n          } else {\n            \n            refid = node.$attributes()['$[]'](\"refid\");\n            if ($truthy($$($nesting, 'AbstractNode')['$===']((ref = (self.refs = ($truthy($a = self.refs) ? $a : node.$document().$catalog()['$[]'](\"refs\")))['$[]'](refid))))) {\n              text = ($truthy($a = ref.$xreftext(node.$attr(\"xrefstyle\", nil, true))) ? $a : \"\" + \"[\" + (refid) + \"]\")\n            } else {\n              text = \"\" + \"[\" + (refid) + \"]\"\n            };\n          };\n        };\n        return \"\" + \"<a href=\\\"\" + (node.$target()) + \"\\\"\" + (attrs) + \">\" + (text) + \"</a>\";}\n        else if (\"ref\"['$===']($case)) {return \"\" + \"<a id=\\\"\" + (node.$id()) + \"\\\"></a>\"}\n        else if (\"link\"['$===']($case)) {\n        attrs = (function() {if ($truthy(node.$id())) {\n          return [\"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"]\n        } else {\n          return []\n        }; return nil; })();\n        if ($truthy(node.$role())) {\n          attrs['$<<'](\"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\")};\n        if ($truthy(node['$attr?'](\"title\"))) {\n          attrs['$<<'](\"\" + \" title=\\\"\" + (node.$attr(\"title\")) + \"\\\"\")};\n        return \"\" + \"<a href=\\\"\" + (node.$target()) + \"\\\"\" + (self.$append_link_constraint_attrs(node, attrs).$join()) + \">\" + (node.$text()) + \"</a>\";}\n        else if (\"bibref\"['$===']($case)) {return \"\" + \"<a id=\\\"\" + (node.$id()) + \"\\\"></a>[\" + (($truthy($a = node.$reftext()) ? $a : node.$id())) + \"]\"}\n        else {\n        self.$logger().$warn(\"\" + \"unknown anchor type: \" + (node.$type().$inspect()));\n        return nil;}})()\n      }, $Html5Converter_convert_inline_anchor$49.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_break', $Html5Converter_convert_inline_break$50 = function $$convert_inline_break(node) {\n        var self = this;\n\n        return \"\" + (node.$text()) + \"<br\" + (self.void_element_slash) + \">\"\n      }, $Html5Converter_convert_inline_break$50.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_button', $Html5Converter_convert_inline_button$51 = function $$convert_inline_button(node) {\n        var self = this;\n\n        return \"\" + \"<b class=\\\"button\\\">\" + (node.$text()) + \"</b>\"\n      }, $Html5Converter_convert_inline_button$51.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_callout', $Html5Converter_convert_inline_callout$52 = function $$convert_inline_callout(node) {\n        var self = this, src = nil;\n\n        if ($truthy(node.$document()['$attr?'](\"icons\", \"font\"))) {\n          return \"\" + \"<i class=\\\"conum\\\" data-value=\\\"\" + (node.$text()) + \"\\\"></i><b>(\" + (node.$text()) + \")</b>\"\n        } else if ($truthy(node.$document()['$attr?'](\"icons\"))) {\n          \n          src = node.$icon_uri(\"\" + \"callouts/\" + (node.$text()));\n          return \"\" + \"<img src=\\\"\" + (src) + \"\\\" alt=\\\"\" + (node.$text()) + \"\\\"\" + (self.void_element_slash) + \">\";\n        } else {\n          return \"\" + (node.$attributes()['$[]'](\"guard\")) + \"<b class=\\\"conum\\\">(\" + (node.$text()) + \")</b>\"\n        }\n      }, $Html5Converter_convert_inline_callout$52.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_footnote', $Html5Converter_convert_inline_footnote$53 = function $$convert_inline_footnote(node) {\n        var self = this, index = nil, id_attr = nil;\n\n        if ($truthy((index = node.$attr(\"index\")))) {\n          if (node.$type()['$=='](\"xref\")) {\n            return \"\" + \"<sup class=\\\"footnoteref\\\">[<a class=\\\"footnote\\\" href=\\\"#_footnotedef_\" + (index) + \"\\\" title=\\\"View footnote.\\\">\" + (index) + \"</a>]</sup>\"\n          } else {\n            \n            id_attr = (function() {if ($truthy(node.$id())) {\n              return \"\" + \" id=\\\"_footnote_\" + (node.$id()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })();\n            return \"\" + \"<sup class=\\\"footnote\\\"\" + (id_attr) + \">[<a id=\\\"_footnoteref_\" + (index) + \"\\\" class=\\\"footnote\\\" href=\\\"#_footnotedef_\" + (index) + \"\\\" title=\\\"View footnote.\\\">\" + (index) + \"</a>]</sup>\";\n          }\n        } else if (node.$type()['$=='](\"xref\")) {\n          return \"\" + \"<sup class=\\\"footnoteref red\\\" title=\\\"Unresolved footnote reference.\\\">[\" + (node.$text()) + \"]</sup>\"\n        } else {\n          return nil\n        }\n      }, $Html5Converter_convert_inline_footnote$53.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_image', $Html5Converter_convert_inline_image$54 = function $$convert_inline_image(node) {\n        var $a, $b, $$55, $$56, $c, $d, self = this, type = nil, class_attr_val = nil, title_attr = nil, img = nil, target = nil, attrs = nil, svg = nil, obj = nil, fallback = nil, role = nil;\n\n        \n        if ($truthy((($a = (type = ($truthy($b = node.$type()) ? $b : \"image\"))['$=='](\"icon\")) ? node.$document()['$attr?'](\"icons\", \"font\") : (type = ($truthy($b = node.$type()) ? $b : \"image\"))['$=='](\"icon\")))) {\n          \n          class_attr_val = \"\" + \"fa fa-\" + (node.$target());\n          $send($hash2([\"size\", \"rotate\", \"flip\"], {\"size\": \"fa-\", \"rotate\": \"fa-rotate-\", \"flip\": \"fa-flip-\"}), 'each', [], ($$55 = function(key, prefix){var self = $$55.$$s || this;\n\n          \n            \n            if (key == null) {\n              key = nil;\n            };\n            \n            if (prefix == null) {\n              prefix = nil;\n            };\n            if ($truthy(node['$attr?'](key))) {\n              return (class_attr_val = \"\" + (class_attr_val) + \" \" + (prefix) + (node.$attr(key)))\n            } else {\n              return nil\n            };}, $$55.$$s = self, $$55.$$arity = 2, $$55));\n          title_attr = (function() {if ($truthy(node['$attr?'](\"title\"))) {\n            return \"\" + \" title=\\\"\" + (node.$attr(\"title\")) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          img = \"\" + \"<i class=\\\"\" + (class_attr_val) + \"\\\"\" + (title_attr) + \"></i>\";\n        } else if ($truthy((($a = type['$=='](\"icon\")) ? node.$document()['$attr?'](\"icons\")['$!']() : type['$=='](\"icon\")))) {\n          img = \"\" + \"[\" + (node.$alt()) + \"]\"\n        } else {\n          \n          target = node.$target();\n          attrs = $send([\"width\", \"height\", \"title\"], 'map', [], ($$56 = function(name){var self = $$56.$$s || this;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            if ($truthy(node['$attr?'](name))) {\n              return \"\" + \" \" + (name) + \"=\\\"\" + (node.$attr(name)) + \"\\\"\"\n            } else {\n              return \"\"\n            };}, $$56.$$s = self, $$56.$$arity = 1, $$56)).$join();\n          if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = type['$!='](\"icon\")) ? ($truthy($d = node['$attr?'](\"format\", \"svg\")) ? $d : target['$include?'](\".svg\")) : $c)) ? $rb_lt(node.$document().$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')) : $b)) ? ($truthy($b = (svg = node['$option?'](\"inline\"))) ? $b : (obj = node['$option?'](\"interactive\"))) : $a))) {\n            if ($truthy(svg)) {\n              img = ($truthy($a = self.$read_svg_contents(node, target)) ? $a : \"\" + \"<span class=\\\"alt\\\">\" + (node.$alt()) + \"</span>\")\n            } else if ($truthy(obj)) {\n              \n              fallback = (function() {if ($truthy(node['$attr?'](\"fallback\"))) {\n                return \"\" + \"<img src=\\\"\" + (node.$image_uri(node.$attr(\"fallback\"))) + \"\\\" alt=\\\"\" + (self.$encode_attribute_value(node.$alt())) + \"\\\"\" + (attrs) + (self.void_element_slash) + \">\"\n              } else {\n                return \"\" + \"<span class=\\\"alt\\\">\" + (node.$alt()) + \"</span>\"\n              }; return nil; })();\n              img = \"\" + \"<object type=\\\"image/svg+xml\\\" data=\\\"\" + (node.$image_uri(target)) + \"\\\"\" + (attrs) + \">\" + (fallback) + \"</object>\";}};\n          img = ($truthy($a = img) ? $a : \"\" + \"<img src=\\\"\" + ((function() {if (type['$=='](\"icon\")) {\n            \n            return node.$icon_uri(target);\n          } else {\n            \n            return node.$image_uri(target);\n          }; return nil; })()) + \"\\\" alt=\\\"\" + (self.$encode_attribute_value(node.$alt())) + \"\\\"\" + (attrs) + (self.void_element_slash) + \">\");\n        };\n        if ($truthy(node['$attr?'](\"link\"))) {\n          img = \"\" + \"<a class=\\\"image\\\" href=\\\"\" + (node.$attr(\"link\")) + \"\\\"\" + (self.$append_link_constraint_attrs(node).$join()) + \">\" + (img) + \"</a>\"};\n        if ($truthy((role = node.$role()))) {\n          if ($truthy(node['$attr?'](\"float\"))) {\n            class_attr_val = \"\" + (type) + \" \" + (node.$attr(\"float\")) + \" \" + (role)\n          } else {\n            class_attr_val = \"\" + (type) + \" \" + (role)\n          }\n        } else if ($truthy(node['$attr?'](\"float\"))) {\n          class_attr_val = \"\" + (type) + \" \" + (node.$attr(\"float\"))\n        } else {\n          class_attr_val = type\n        };\n        return \"\" + \"<span class=\\\"\" + (class_attr_val) + \"\\\">\" + (img) + \"</span>\";\n      }, $Html5Converter_convert_inline_image$54.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_indexterm', $Html5Converter_convert_inline_indexterm$57 = function $$convert_inline_indexterm(node) {\n        var self = this;\n\n        if (node.$type()['$=='](\"visible\")) {\n          return node.$text()\n        } else {\n          return \"\"\n        }\n      }, $Html5Converter_convert_inline_indexterm$57.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_kbd', $Html5Converter_convert_inline_kbd$58 = function $$convert_inline_kbd(node) {\n        var self = this, keys = nil;\n\n        if ((keys = node.$attr(\"keys\")).$size()['$=='](1)) {\n          return \"\" + \"<kbd>\" + (keys['$[]'](0)) + \"</kbd>\"\n        } else {\n          return \"\" + \"<span class=\\\"keyseq\\\"><kbd>\" + (keys.$join(\"</kbd>+<kbd>\")) + \"</kbd></span>\"\n        }\n      }, $Html5Converter_convert_inline_kbd$58.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_menu', $Html5Converter_convert_inline_menu$59 = function $$convert_inline_menu(node) {\n        var self = this, caret = nil, submenu_joiner = nil, menu = nil, submenus = nil, menuitem = nil;\n\n        \n        caret = (function() {if ($truthy(node.$document()['$attr?'](\"icons\", \"font\"))) {\n          return \"&#160;<i class=\\\"fa fa-angle-right caret\\\"></i> \"\n        } else {\n          return \"&#160;<b class=\\\"caret\\\">&#8250;</b> \"\n        }; return nil; })();\n        submenu_joiner = \"\" + \"</b>\" + (caret) + \"<b class=\\\"submenu\\\">\";\n        menu = node.$attr(\"menu\");\n        if ($truthy((submenus = node.$attr(\"submenus\"))['$empty?']())) {\n          if ($truthy((menuitem = node.$attr(\"menuitem\")))) {\n            return \"\" + \"<span class=\\\"menuseq\\\"><b class=\\\"menu\\\">\" + (menu) + \"</b>\" + (caret) + \"<b class=\\\"menuitem\\\">\" + (menuitem) + \"</b></span>\"\n          } else {\n            return \"\" + \"<b class=\\\"menuref\\\">\" + (menu) + \"</b>\"\n          }\n        } else {\n          return \"\" + \"<span class=\\\"menuseq\\\"><b class=\\\"menu\\\">\" + (menu) + \"</b>\" + (caret) + \"<b class=\\\"submenu\\\">\" + (submenus.$join(submenu_joiner)) + \"</b>\" + (caret) + \"<b class=\\\"menuitem\\\">\" + (node.$attr(\"menuitem\")) + \"</b></span>\"\n        };\n      }, $Html5Converter_convert_inline_menu$59.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_quoted', $Html5Converter_convert_inline_quoted$60 = function $$convert_inline_quoted(node) {\n        var $a, $b, self = this, open = nil, close = nil, tag = nil, class_attr = nil;\n\n        \n        $b = $$($nesting, 'QUOTE_TAGS')['$[]'](node.$type()), $a = Opal.to_ary($b), (open = ($a[0] == null ? nil : $a[0])), (close = ($a[1] == null ? nil : $a[1])), (tag = ($a[2] == null ? nil : $a[2])), $b;\n        if ($truthy(node.$id())) {\n          \n          class_attr = (function() {if ($truthy(node.$role())) {\n            return \"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          if ($truthy(tag)) {\n            return \"\" + (open.$chop()) + \" id=\\\"\" + (node.$id()) + \"\\\"\" + (class_attr) + \">\" + (node.$text()) + (close)\n          } else {\n            return \"\" + \"<span id=\\\"\" + (node.$id()) + \"\\\"\" + (class_attr) + \">\" + (open) + (node.$text()) + (close) + \"</span>\"\n          };\n        } else if ($truthy(node.$role())) {\n          if ($truthy(tag)) {\n            return \"\" + (open.$chop()) + \" class=\\\"\" + (node.$role()) + \"\\\">\" + (node.$text()) + (close)\n          } else {\n            return \"\" + \"<span class=\\\"\" + (node.$role()) + \"\\\">\" + (open) + (node.$text()) + (close) + \"</span>\"\n          }\n        } else {\n          return \"\" + (open) + (node.$text()) + (close)\n        };\n      }, $Html5Converter_convert_inline_quoted$60.$$arity = 1);\n      \n      Opal.def(self, '$read_svg_contents', $Html5Converter_read_svg_contents$61 = function $$read_svg_contents(node, target) {\n        var $$62, self = this, svg = nil, old_start_tag = nil, new_start_tag = nil;\n\n        \n        if ($truthy((svg = node.$read_contents(target, $hash2([\"start\", \"normalize\", \"label\"], {\"start\": node.$document().$attr(\"imagesdir\"), \"normalize\": true, \"label\": \"SVG\"}))))) {\n          \n          if ($truthy(svg['$start_with?'](\"<svg\"))) {\n          } else {\n            svg = svg.$sub($$($nesting, 'SvgPreambleRx'), \"\")\n          };\n          old_start_tag = (new_start_tag = nil);\n          $send([\"width\", \"height\"], 'each', [], ($$62 = function(dim){var self = $$62.$$s || this;\n\n          \n            \n            if (dim == null) {\n              dim = nil;\n            };\n            if ($truthy(node['$attr?'](dim))) {\n              \n              if ($truthy(new_start_tag)) {\n              } else {\n                new_start_tag = (old_start_tag = svg.$match($$($nesting, 'SvgStartTagRx'))['$[]'](0)).$gsub($$($nesting, 'DimensionAttributeRx'), \"\")\n              };\n              return (new_start_tag = \"\" + (new_start_tag.$chop()) + \" \" + (dim) + \"=\\\"\" + (node.$attr(dim)) + \"px\\\">\");\n            } else {\n              return nil\n            };}, $$62.$$s = self, $$62.$$arity = 1, $$62));\n          if ($truthy(new_start_tag)) {\n            svg = \"\" + (new_start_tag) + (svg['$[]'](Opal.Range.$new(old_start_tag.$length(), -1, false)))};};\n        return svg;\n      }, $Html5Converter_read_svg_contents$61.$$arity = 2);\n      self.$private();\n      \n      Opal.def(self, '$append_boolean_attribute', $Html5Converter_append_boolean_attribute$63 = function $$append_boolean_attribute(name, xml) {\n        var self = this;\n\n        if ($truthy(xml)) {\n          return \"\" + \" \" + (name) + \"=\\\"\" + (name) + \"\\\"\"\n        } else {\n          return \"\" + \" \" + (name)\n        }\n      }, $Html5Converter_append_boolean_attribute$63.$$arity = 2);\n      \n      Opal.def(self, '$append_link_constraint_attrs', $Html5Converter_append_link_constraint_attrs$64 = function $$append_link_constraint_attrs(node, attrs) {\n        var $a, self = this, rel = nil, window = nil;\n\n        \n        \n        if (attrs == null) {\n          attrs = [];\n        };\n        if ($truthy(node['$option?'](\"nofollow\"))) {\n          rel = \"nofollow\"};\n        if ($truthy((window = node.$attributes()['$[]'](\"window\")))) {\n          \n          attrs['$<<'](\"\" + \" target=\\\"\" + (window) + \"\\\"\");\n          if ($truthy(($truthy($a = window['$=='](\"_blank\")) ? $a : node['$option?'](\"noopener\")))) {\n            attrs['$<<']((function() {if ($truthy(rel)) {\n              return \"\" + \" rel=\\\"\" + (rel) + \" noopener\\\"\"\n            } else {\n              return \" rel=\\\"noopener\\\"\"\n            }; return nil; })())};\n        } else if ($truthy(rel)) {\n          attrs['$<<'](\"\" + \" rel=\\\"\" + (rel) + \"\\\"\")};\n        return attrs;\n      }, $Html5Converter_append_link_constraint_attrs$64.$$arity = -2);\n      \n      Opal.def(self, '$encode_attribute_value', $Html5Converter_encode_attribute_value$65 = function $$encode_attribute_value(val) {\n        var self = this;\n\n        if ($truthy(val['$include?'](\"\\\"\"))) {\n          \n          return val.$gsub(\"\\\"\", \"&quot;\");\n        } else {\n          return val\n        }\n      }, $Html5Converter_encode_attribute_value$65.$$arity = 1);\n      \n      Opal.def(self, '$generate_manname_section', $Html5Converter_generate_manname_section$66 = function $$generate_manname_section(node) {\n        var $a, self = this, manname_title = nil, next_section = nil, next_section_title = nil, manname_id_attr = nil, manname_id = nil;\n\n        \n        manname_title = node.$attr(\"manname-title\", \"Name\");\n        if ($truthy(($truthy($a = (next_section = node.$sections()['$[]'](0))) ? (next_section_title = next_section.$title())['$=='](next_section_title.$upcase()) : $a))) {\n          manname_title = manname_title.$upcase()};\n        manname_id_attr = (function() {if ($truthy((manname_id = node.$attr(\"manname-id\")))) {\n          return \"\" + \" id=\\\"\" + (manname_id) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<h2\" + (manname_id_attr) + \">\" + (manname_title) + \"</h2>\\n\" + \"<div class=\\\"sectionbody\\\">\\n\" + \"<p>\" + (node.$attr(\"manname\")) + \" - \" + (node.$attr(\"manpurpose\")) + \"</p>\\n\" + \"</div>\";\n      }, $Html5Converter_generate_manname_section$66.$$arity = 1);\n      return (Opal.def(self, '$method_missing', $Html5Converter_method_missing$67 = function $$method_missing(id, $a) {\n        var $post_args, params, $b, $iter = $Html5Converter_method_missing$67.$$p, $yield = $iter || nil, self = this, name = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Html5Converter_method_missing$67.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        $post_args = Opal.slice.call(arguments, 1, arguments.length);\n        \n        params = $post_args;;\n        if ($truthy(($truthy($b = (name = id.$to_s())['$start_with?'](\"convert_\")['$!']()) ? self['$handles?'](name) : $b))) {\n          \n          return $send(self, 'send', [\"\" + \"convert_\" + (name)].concat(Opal.to_a(params)));\n        } else {\n          return $send(self, Opal.find_super_dispatcher(self, 'method_missing', $Html5Converter_method_missing$67, false), $zuper, $iter)\n        };\n      }, $Html5Converter_method_missing$67.$$arity = -2), nil) && 'method_missing';\n    })($$($nesting, 'Converter'), $$$($$($nesting, 'Converter'), 'Base'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/extensions\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $send = Opal.send, $hash = Opal.hash;\n\n  Opal.add_stubs(['$==', '$[]=', '$config', '$-', '$const_defined?', '$singleton_class?', '$include', '$const_get', '$extend', '$attr_reader', '$merge', '$class', '$update', '$raise', '$document', '$doctype', '$[]', '$+', '$level', '$delete', '$>', '$casecmp', '$new', '$title=', '$sectname=', '$special=', '$fetch', '$numbered=', '$!', '$key?', '$attr?', '$special', '$numbered', '$generate_id', '$title', '$id=', '$update_attributes', '$tr', '$basename', '$create_block', '$assign_caption', '$===', '$parse_blocks', '$empty?', '$include?', '$sub_attributes', '$parse', '$each', '$define_method', '$unshift', '$shift', '$send', '$size', '$binding', '$receiver', '$define_singleton_method', '$instance_exec', '$to_proc', '$call', '$option', '$flatten', '$respond_to?', '$to_s', '$partition', '$to_i', '$<<', '$compact', '$inspect', '$attr_accessor', '$to_set', '$match?', '$resolve_regexp', '$method', '$register', '$values', '$groups', '$arity', '$activate', '$add_document_processor', '$any?', '$select', '$add_syntax_processor', '$to_sym', '$instance_variable_get', '$kind', '$private', '$join', '$map', '$split', '$capitalize', '$instance_variable_set', '$resolve_args', '$enable_dsl', '$singleton_class', '$process_block_given?', '$source_location', '$freeze', '$resolve_class', '$<', '$update_config', '$as_symbol', '$name', '$name=', '$pop', '$-@', '$next_auto_id', '$generate_name']);\n  \n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n  } else {\n    nil\n  };\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Extensions');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      \n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Processor');\n\n        var $nesting = [self].concat($parent_nesting), $Processor_initialize$4, $Processor_update_config$5, $Processor_process$6, $Processor_create_section$7, $Processor_create_block$8, $Processor_create_list$9, $Processor_create_list_item$10, $Processor_create_image_block$11, $Processor_create_inline$12, $Processor_parse_content$13, $Processor_parse_attributes$14, $Processor$15;\n\n        self.$$prototype.config = nil;\n        \n        (function(self, $parent_nesting) {\n          var $nesting = [self].concat($parent_nesting), $config$1, $option$2, $enable_dsl$3;\n\n          \n          \n          Opal.def(self, '$config', $config$1 = function $$config() {\n            var $a, self = this;\n            if (self.config == null) self.config = nil;\n\n            return (self.config = ($truthy($a = self.config) ? $a : $hash2([], {})))\n          }, $config$1.$$arity = 0);\n          \n          Opal.def(self, '$option', $option$2 = function $$option(key, default_value) {\n            var self = this, $writer = nil;\n\n            \n            $writer = [key, default_value];\n            $send(self.$config(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];\n          }, $option$2.$$arity = 2);\n          \n          Opal.def(self, '$enable_dsl', $enable_dsl$3 = function $$enable_dsl() {\n            var self = this;\n\n            if ($truthy(self['$const_defined?'](\"DSL\"))) {\n              if ($truthy(self['$singleton_class?']())) {\n                return self.$include(self.$const_get(\"DSL\"))\n              } else {\n                return self.$extend(self.$const_get(\"DSL\"))\n              }\n            } else {\n              return nil\n            }\n          }, $enable_dsl$3.$$arity = 0);\n          return Opal.alias(self, \"use_dsl\", \"enable_dsl\");\n        })(Opal.get_singleton_class(self), $nesting);\n        self.$attr_reader(\"config\");\n        \n        Opal.def(self, '$initialize', $Processor_initialize$4 = function $$initialize(config) {\n          var self = this;\n\n          \n          \n          if (config == null) {\n            config = $hash2([], {});\n          };\n          return (self.config = self.$class().$config().$merge(config));\n        }, $Processor_initialize$4.$$arity = -1);\n        \n        Opal.def(self, '$update_config', $Processor_update_config$5 = function $$update_config(config) {\n          var self = this;\n\n          return self.config.$update(config)\n        }, $Processor_update_config$5.$$arity = 1);\n        \n        Opal.def(self, '$process', $Processor_process$6 = function $$process($a) {\n          var $post_args, args, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Processor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\");\n        }, $Processor_process$6.$$arity = -1);\n        \n        Opal.def(self, '$create_section', $Processor_create_section$7 = function $$create_section(parent, title, attrs, opts) {\n          var $a, self = this, doc = nil, book = nil, doctype = nil, level = nil, style = nil, sectname = nil, special = nil, sect = nil, $writer = nil, id = nil;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          doc = parent.$document();\n          book = (doctype = doc.$doctype())['$=='](\"book\");\n          level = ($truthy($a = opts['$[]'](\"level\")) ? $a : $rb_plus(parent.$level(), 1));\n          if ($truthy((style = attrs.$delete(\"style\")))) {\n            if ($truthy(($truthy($a = book) ? style['$=='](\"abstract\") : $a))) {\n              $a = [\"chapter\", 1], (sectname = $a[0]), (level = $a[1]), $a\n            } else {\n              \n              $a = [style, true], (sectname = $a[0]), (special = $a[1]), $a;\n              if (level['$=='](0)) {\n                level = 1};\n            }\n          } else if ($truthy(book)) {\n            sectname = (function() {if (level['$=='](0)) {\n              return \"part\"\n            } else {\n              \n              if ($truthy($rb_gt(level, 1))) {\n                return \"section\"\n              } else {\n                return \"chapter\"\n              };\n            }; return nil; })()\n          } else if ($truthy((($a = doctype['$=='](\"manpage\")) ? title.$casecmp(\"synopsis\")['$=='](0) : doctype['$=='](\"manpage\")))) {\n            $a = [\"synopsis\", true], (sectname = $a[0]), (special = $a[1]), $a\n          } else {\n            sectname = \"section\"\n          };\n          sect = $$($nesting, 'Section').$new(parent, level);\n          $a = [title, sectname], sect['$title=']($a[0]), sect['$sectname=']($a[1]), $a;\n          if ($truthy(special)) {\n            \n            \n            $writer = [true];\n            $send(sect, 'special=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy(opts.$fetch(\"numbered\", style['$=='](\"appendix\")))) {\n              \n              $writer = [true];\n              $send(sect, 'numbered=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else if ($truthy(($truthy($a = opts['$key?'](\"numbered\")['$!']()) ? doc['$attr?'](\"sectnums\", \"all\") : $a))) {\n              \n              $writer = [(function() {if ($truthy(($truthy($a = book) ? level['$=='](1) : $a))) {\n                return \"chapter\"\n              } else {\n                return true\n              }; return nil; })()];\n              $send(sect, 'numbered=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n          } else if ($truthy($rb_gt(level, 0))) {\n            if ($truthy(opts.$fetch(\"numbered\", doc['$attr?'](\"sectnums\")))) {\n              \n              $writer = [(function() {if ($truthy(sect.$special())) {\n                return ($truthy($a = parent.$numbered()) ? true : $a)\n              } else {\n                return true\n              }; return nil; })()];\n              $send(sect, 'numbered=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];}\n          } else if ($truthy(opts.$fetch(\"numbered\", ($truthy($a = book) ? doc['$attr?'](\"partnums\") : $a)))) {\n            \n            $writer = [true];\n            $send(sect, 'numbered=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ((id = attrs['$[]'](\"id\"))['$=='](false)) {\n            attrs.$delete(\"id\")\n          } else {\n            \n            $writer = [(($writer = [\"id\", ($truthy($a = id) ? $a : (function() {if ($truthy(doc['$attr?'](\"sectids\"))) {\n              \n              return $$($nesting, 'Section').$generate_id(sect.$title(), doc);\n            } else {\n              return nil\n            }; return nil; })())]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])];\n            $send(sect, 'id=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          sect.$update_attributes(attrs);\n          return sect;\n        }, $Processor_create_section$7.$$arity = -4);\n        \n        Opal.def(self, '$create_block', $Processor_create_block$8 = function $$create_block(parent, context, source, attrs, opts) {\n          var self = this;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          return $$($nesting, 'Block').$new(parent, context, $hash2([\"source\", \"attributes\"], {\"source\": source, \"attributes\": attrs}).$merge(opts));\n        }, $Processor_create_block$8.$$arity = -5);\n        \n        Opal.def(self, '$create_list', $Processor_create_list$9 = function $$create_list(parent, context, attrs) {\n          var self = this, list = nil;\n\n          \n          \n          if (attrs == null) {\n            attrs = nil;\n          };\n          list = $$($nesting, 'List').$new(parent, context);\n          if ($truthy(attrs)) {\n            list.$update_attributes(attrs)};\n          return list;\n        }, $Processor_create_list$9.$$arity = -3);\n        \n        Opal.def(self, '$create_list_item', $Processor_create_list_item$10 = function $$create_list_item(parent, text) {\n          var self = this;\n\n          \n          \n          if (text == null) {\n            text = nil;\n          };\n          return $$($nesting, 'ListItem').$new(parent, text);\n        }, $Processor_create_list_item$10.$$arity = -2);\n        \n        Opal.def(self, '$create_image_block', $Processor_create_image_block$11 = function $$create_image_block(parent, attrs, opts) {\n          var $a, self = this, target = nil, $writer = nil, title = nil, block = nil;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy((target = attrs['$[]'](\"target\")))) {\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"Unable to create an image block, target attribute is required\")\n          };\n          ($truthy($a = attrs['$[]'](\"alt\")) ? $a : (($writer = [\"alt\", (($writer = [\"default-alt\", $$($nesting, 'Helpers').$basename(target, true).$tr(\"_-\", \" \")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          title = (function() {if ($truthy(attrs['$key?'](\"title\"))) {\n            \n            return attrs.$delete(\"title\");\n          } else {\n            return nil\n          }; return nil; })();\n          block = self.$create_block(parent, \"image\", nil, attrs, opts);\n          if ($truthy(title)) {\n            \n            \n            $writer = [title];\n            $send(block, 'title=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            block.$assign_caption(attrs.$delete(\"caption\"), \"figure\");};\n          return block;\n        }, $Processor_create_image_block$11.$$arity = -3);\n        \n        Opal.def(self, '$create_inline', $Processor_create_inline$12 = function $$create_inline(parent, context, text, opts) {\n          var self = this;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          return $$($nesting, 'Inline').$new(parent, context, text, (function() {if (context['$=='](\"quoted\")) {\n            \n            return $hash2([\"type\"], {\"type\": \"unquoted\"}).$merge(opts);\n          } else {\n            return opts\n          }; return nil; })());\n        }, $Processor_create_inline$12.$$arity = -4);\n        \n        Opal.def(self, '$parse_content', $Processor_parse_content$13 = function $$parse_content(parent, content, attributes) {\n          var self = this, reader = nil;\n\n          \n          \n          if (attributes == null) {\n            attributes = nil;\n          };\n          reader = (function() {if ($truthy($$($nesting, 'Reader')['$==='](content))) {\n            return content\n          } else {\n            \n            return $$($nesting, 'Reader').$new(content);\n          }; return nil; })();\n          $$($nesting, 'Parser').$parse_blocks(reader, parent, attributes);\n          return parent;\n        }, $Processor_parse_content$13.$$arity = -3);\n        \n        Opal.def(self, '$parse_attributes', $Processor_parse_attributes$14 = function $$parse_attributes(block, attrlist, opts) {\n          var $a, self = this;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy((function() {if ($truthy(attrlist)) {\n            return attrlist['$empty?']()\n          } else {\n            return true\n          }; return nil; })())) {\n            return $hash2([], {})};\n          if ($truthy(($truthy($a = opts['$[]'](\"sub_attributes\")) ? attrlist['$include?']($$($nesting, 'ATTR_REF_HEAD')) : $a))) {\n            attrlist = block.$sub_attributes(attrlist)};\n          return $$($nesting, 'AttributeList').$new(attrlist).$parse(($truthy($a = opts['$[]'](\"positional_attributes\")) ? $a : []));\n        }, $Processor_parse_attributes$14.$$arity = -3);\n        return $send([[\"create_paragraph\", \"create_block\", \"paragraph\"], [\"create_open_block\", \"create_block\", \"open\"], [\"create_example_block\", \"create_block\", \"example\"], [\"create_pass_block\", \"create_block\", \"pass\"], [\"create_listing_block\", \"create_block\", \"listing\"], [\"create_literal_block\", \"create_block\", \"literal\"], [\"create_anchor\", \"create_inline\", \"anchor\"], [\"create_inline_pass\", \"create_inline\", \"quoted\"]], 'each', [], ($Processor$15 = function(method_name, delegate_method_name, context){var self = $Processor$15.$$s || this, $$16;\n\n        \n          \n          if (method_name == null) {\n            method_name = nil;\n          };\n          \n          if (delegate_method_name == null) {\n            delegate_method_name = nil;\n          };\n          \n          if (context == null) {\n            context = nil;\n          };\n          return $send(self, 'define_method', [method_name], ($$16 = function($a){var self = $$16.$$s || this, $post_args, args;\n\n          \n            \n            $post_args = Opal.slice.call(arguments, 0, arguments.length);\n            \n            args = $post_args;;\n            args.$unshift(args.$shift(), context);\n            return $send(self, 'send', [delegate_method_name].concat(Opal.to_a(args)));}, $$16.$$s = self, $$16.$$arity = -1, $$16));}, $Processor$15.$$s = self, $Processor$15.$$arity = 3, $Processor$15));\n      })($nesting[0], null, $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'ProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $ProcessorDsl_option$17, $ProcessorDsl_process$18, $ProcessorDsl_process_block_given$ques$20;\n\n        \n        \n        Opal.def(self, '$option', $ProcessorDsl_option$17 = function $$option(key, value) {\n          var self = this, $writer = nil;\n\n          \n          $writer = [key, value];\n          $send(self.$config(), '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        }, $ProcessorDsl_option$17.$$arity = 2);\n        \n        Opal.def(self, '$process', $ProcessorDsl_process$18 = function $$process($a) {\n          var $iter = $ProcessorDsl_process$18.$$p, block = $iter || nil, $post_args, args, $b, $$19, self = this, context = nil;\n          if (self.process_block == null) self.process_block = nil;\n\n          if ($iter) $ProcessorDsl_process$18.$$p = null;\n          \n          \n          if ($iter) $ProcessorDsl_process$18.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          if ((block !== nil)) {\n            \n            if ($truthy(args['$empty?']())) {\n            } else {\n              self.$raise($$$('::', 'ArgumentError'), \"\" + \"wrong number of arguments (given \" + (args.$size()) + \", expected 0)\")\n            };\n            if ($truthy(($truthy($b = block.$binding()) ? self['$=='](block.$binding().$receiver()) : $b))) {\n            } else {\n              \n              context = self;\n              $send(block, 'define_singleton_method', [\"call\"], ($$19 = function($c){var self = $$19.$$s || this, $post_args, m_args;\n\n              \n                \n                $post_args = Opal.slice.call(arguments, 0, arguments.length);\n                \n                m_args = $post_args;;\n                return $send(context, 'instance_exec', Opal.to_a(m_args), block.$to_proc());}, $$19.$$s = self, $$19.$$arity = -1, $$19));\n            };\n            return (self.process_block = block);\n          } else if ($truthy((($b = self['process_block'], $b != null && $b !== nil) ? 'instance-variable' : nil))) {\n            return $send(self.process_block, 'call', Opal.to_a(args))\n          } else {\n            return self.$raise($$$('::', 'NotImplementedError'), \"\" + (self.$class()) + \" #\" + (\"process\") + \" method called before being registered\")\n          };\n        }, $ProcessorDsl_process$18.$$arity = -1);\n        \n        Opal.def(self, '$process_block_given?', $ProcessorDsl_process_block_given$ques$20 = function() {\n          var $a, self = this;\n\n          return (($a = self['process_block'], $a != null && $a !== nil) ? 'instance-variable' : nil)\n        }, $ProcessorDsl_process_block_given$ques$20.$$arity = 0);\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'DocumentProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $DocumentProcessorDsl_prefer$21;\n\n        \n        self.$include($$($nesting, 'ProcessorDsl'));\n        \n        Opal.def(self, '$prefer', $DocumentProcessorDsl_prefer$21 = function $$prefer() {\n          var self = this;\n\n          return self.$option(\"position\", \">>\")\n        }, $DocumentProcessorDsl_prefer$21.$$arity = 0);\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'SyntaxProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $SyntaxProcessorDsl_named$22, $SyntaxProcessorDsl_content_model$23, $SyntaxProcessorDsl_positional_attributes$24, $SyntaxProcessorDsl_default_attributes$25, $SyntaxProcessorDsl_resolve_attributes$26;\n\n        \n        self.$include($$($nesting, 'ProcessorDsl'));\n        \n        Opal.def(self, '$named', $SyntaxProcessorDsl_named$22 = function $$named(value) {\n          var self = this;\n\n          if ($truthy($$($nesting, 'Processor')['$==='](self))) {\n            return (self.name = value)\n          } else {\n            return self.$option(\"name\", value)\n          }\n        }, $SyntaxProcessorDsl_named$22.$$arity = 1);\n        \n        Opal.def(self, '$content_model', $SyntaxProcessorDsl_content_model$23 = function $$content_model(value) {\n          var self = this;\n\n          return self.$option(\"content_model\", value)\n        }, $SyntaxProcessorDsl_content_model$23.$$arity = 1);\n        Opal.alias(self, \"parse_content_as\", \"content_model\");\n        \n        Opal.def(self, '$positional_attributes', $SyntaxProcessorDsl_positional_attributes$24 = function $$positional_attributes($a) {\n          var $post_args, value, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          return self.$option(\"positional_attrs\", value.$flatten());\n        }, $SyntaxProcessorDsl_positional_attributes$24.$$arity = -1);\n        Opal.alias(self, \"name_positional_attributes\", \"positional_attributes\");\n        Opal.alias(self, \"positional_attrs\", \"positional_attributes\");\n        \n        Opal.def(self, '$default_attributes', $SyntaxProcessorDsl_default_attributes$25 = function $$default_attributes(value) {\n          var self = this;\n\n          return self.$option(\"default_attrs\", value)\n        }, $SyntaxProcessorDsl_default_attributes$25.$$arity = 1);\n        Opal.alias(self, \"default_attrs\", \"default_attributes\");\n        \n        Opal.def(self, '$resolve_attributes', $SyntaxProcessorDsl_resolve_attributes$26 = function $$resolve_attributes($a) {\n          var $post_args, args, $b, $$27, $$28, self = this, $case = nil, names = nil, defaults = nil;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy($rb_gt(args.$size(), 1))) {\n          } else if ($truthy((args = args.$fetch(0, true))['$respond_to?'](\"to_sym\"))) {\n            args = [args]};\n          return (function() {$case = args;\n          if (true['$===']($case)) {\n          self.$option(\"positional_attrs\", []);\n          return self.$option(\"default_attrs\", $hash2([], {}));}\n          else if ($$$('::', 'Array')['$===']($case)) {\n          $b = [[], $hash2([], {})], (names = $b[0]), (defaults = $b[1]), $b;\n          $send(args, 'each', [], ($$27 = function(arg){var self = $$27.$$s || this, $c, $d, name = nil, _ = nil, value = nil, idx = nil, $writer = nil;\n\n          \n            \n            if (arg == null) {\n              arg = nil;\n            };\n            if ($truthy((arg = arg.$to_s())['$include?'](\"=\"))) {\n              \n              $d = arg.$partition(\"=\"), $c = Opal.to_ary($d), (name = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (value = ($c[2] == null ? nil : $c[2])), $d;\n              if ($truthy(name['$include?'](\":\"))) {\n                \n                $d = name.$partition(\":\"), $c = Opal.to_ary($d), (idx = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (name = ($c[2] == null ? nil : $c[2])), $d;\n                idx = (function() {if (idx['$=='](\"@\")) {\n                  return names.$size()\n                } else {\n                  return idx.$to_i()\n                }; return nil; })();\n                \n                $writer = [idx, name];\n                $send(names, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;};\n              \n              $writer = [name, value];\n              $send(defaults, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else if ($truthy(arg['$include?'](\":\"))) {\n              \n              $d = arg.$partition(\":\"), $c = Opal.to_ary($d), (idx = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (name = ($c[2] == null ? nil : $c[2])), $d;\n              idx = (function() {if (idx['$=='](\"@\")) {\n                return names.$size()\n              } else {\n                return idx.$to_i()\n              }; return nil; })();\n              \n              $writer = [idx, name];\n              $send(names, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else {\n              return names['$<<'](arg)\n            };}, $$27.$$s = self, $$27.$$arity = 1, $$27));\n          self.$option(\"positional_attrs\", names.$compact());\n          return self.$option(\"default_attrs\", defaults);}\n          else if ($$$('::', 'Hash')['$===']($case)) {\n          $b = [[], $hash2([], {})], (names = $b[0]), (defaults = $b[1]), $b;\n          $send(args, 'each', [], ($$28 = function(key, val){var self = $$28.$$s || this, $c, $d, name = nil, idx = nil, _ = nil, $writer = nil;\n\n          \n            \n            if (key == null) {\n              key = nil;\n            };\n            \n            if (val == null) {\n              val = nil;\n            };\n            if ($truthy((name = key.$to_s())['$include?'](\":\"))) {\n              \n              $d = name.$partition(\":\"), $c = Opal.to_ary($d), (idx = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (name = ($c[2] == null ? nil : $c[2])), $d;\n              idx = (function() {if (idx['$=='](\"@\")) {\n                return names.$size()\n              } else {\n                return idx.$to_i()\n              }; return nil; })();\n              \n              $writer = [idx, name];\n              $send(names, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n            if ($truthy(val)) {\n              \n              $writer = [name, val];\n              $send(defaults, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              return nil\n            };}, $$28.$$s = self, $$28.$$arity = 2, $$28));\n          self.$option(\"positional_attrs\", names.$compact());\n          return self.$option(\"default_attrs\", defaults);}\n          else {return self.$raise($$$('::', 'ArgumentError'), \"\" + \"unsupported attributes specification for macro: \" + (args.$inspect()))}})();\n        }, $SyntaxProcessorDsl_resolve_attributes$26.$$arity = -1);\n        Opal.alias(self, \"resolves_attributes\", \"resolve_attributes\");\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Preprocessor');\n\n        var $nesting = [self].concat($parent_nesting), $Preprocessor_process$29;\n\n        return (Opal.def(self, '$process', $Preprocessor_process$29 = function $$process(document, reader) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Preprocessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $Preprocessor_process$29.$$arity = 2), nil) && 'process'\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      Opal.const_set($$($nesting, 'Preprocessor'), 'DSL', $$($nesting, 'DocumentProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'TreeProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $TreeProcessor_process$30;\n\n        return (Opal.def(self, '$process', $TreeProcessor_process$30 = function $$process(document) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'TreeProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $TreeProcessor_process$30.$$arity = 1), nil) && 'process'\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      Opal.const_set($$($nesting, 'TreeProcessor'), 'DSL', $$($nesting, 'DocumentProcessorDsl'));\n      Opal.const_set($nesting[0], 'Treeprocessor', $$($nesting, 'TreeProcessor'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Postprocessor');\n\n        var $nesting = [self].concat($parent_nesting), $Postprocessor_process$31;\n\n        return (Opal.def(self, '$process', $Postprocessor_process$31 = function $$process(document, output) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Postprocessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $Postprocessor_process$31.$$arity = 2), nil) && 'process'\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      Opal.const_set($$($nesting, 'Postprocessor'), 'DSL', $$($nesting, 'DocumentProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'IncludeProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $IncludeProcessor_process$32, $IncludeProcessor_handles$ques$33;\n\n        \n        \n        Opal.def(self, '$process', $IncludeProcessor_process$32 = function $$process(document, reader, target, attributes) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'IncludeProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $IncludeProcessor_process$32.$$arity = 4);\n        return (Opal.def(self, '$handles?', $IncludeProcessor_handles$ques$33 = function(target) {\n          var self = this;\n\n          return true\n        }, $IncludeProcessor_handles$ques$33.$$arity = 1), nil) && 'handles?';\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'IncludeProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $IncludeProcessorDsl_handles$ques$34;\n\n        \n        self.$include($$($nesting, 'DocumentProcessorDsl'));\n        \n        Opal.def(self, '$handles?', $IncludeProcessorDsl_handles$ques$34 = function($a) {\n          var $iter = $IncludeProcessorDsl_handles$ques$34.$$p, block = $iter || nil, $post_args, args, $b, self = this;\n          if (self.handles_block == null) self.handles_block = nil;\n\n          if ($iter) $IncludeProcessorDsl_handles$ques$34.$$p = null;\n          \n          \n          if ($iter) $IncludeProcessorDsl_handles$ques$34.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          if ((block !== nil)) {\n            \n            if ($truthy(args['$empty?']())) {\n            } else {\n              self.$raise($$$('::', 'ArgumentError'), \"\" + \"wrong number of arguments (given \" + (args.$size()) + \", expected 0)\")\n            };\n            return (self.handles_block = block);\n          } else if ($truthy((($b = self['handles_block'], $b != null && $b !== nil) ? 'instance-variable' : nil))) {\n            return self.handles_block.$call(args['$[]'](0))\n          } else {\n            return true\n          };\n        }, $IncludeProcessorDsl_handles$ques$34.$$arity = -1);\n      })($nesting[0], $nesting);\n      Opal.const_set($$($nesting, 'IncludeProcessor'), 'DSL', $$($nesting, 'IncludeProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'DocinfoProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $DocinfoProcessor_initialize$35, $DocinfoProcessor_process$36;\n\n        self.$$prototype.config = nil;\n        \n        \n        Opal.def(self, '$initialize', $DocinfoProcessor_initialize$35 = function $$initialize(config) {\n          var $a, $iter = $DocinfoProcessor_initialize$35.$$p, $yield = $iter || nil, self = this, $writer = nil;\n\n          if ($iter) $DocinfoProcessor_initialize$35.$$p = null;\n          \n          \n          if (config == null) {\n            config = $hash2([], {});\n          };\n          $send(self, Opal.find_super_dispatcher(self, 'initialize', $DocinfoProcessor_initialize$35, false), [config], null);\n          return ($truthy($a = self.config['$[]'](\"location\")) ? $a : (($writer = [\"location\", \"head\"]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        }, $DocinfoProcessor_initialize$35.$$arity = -1);\n        return (Opal.def(self, '$process', $DocinfoProcessor_process$36 = function $$process(document) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'DocinfoProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $DocinfoProcessor_process$36.$$arity = 1), nil) && 'process';\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'DocinfoProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $DocinfoProcessorDsl_at_location$37;\n\n        \n        self.$include($$($nesting, 'DocumentProcessorDsl'));\n        \n        Opal.def(self, '$at_location', $DocinfoProcessorDsl_at_location$37 = function $$at_location(value) {\n          var self = this;\n\n          return self.$option(\"location\", value)\n        }, $DocinfoProcessorDsl_at_location$37.$$arity = 1);\n      })($nesting[0], $nesting);\n      Opal.const_set($$($nesting, 'DocinfoProcessor'), 'DSL', $$($nesting, 'DocinfoProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'BlockProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $BlockProcessor_initialize$38, $BlockProcessor_process$39;\n\n        self.$$prototype.config = nil;\n        \n        self.$attr_accessor(\"name\");\n        \n        Opal.def(self, '$initialize', $BlockProcessor_initialize$38 = function $$initialize(name, config) {\n          var $a, $iter = $BlockProcessor_initialize$38.$$p, $yield = $iter || nil, self = this, $case = nil, $writer = nil;\n\n          if ($iter) $BlockProcessor_initialize$38.$$p = null;\n          \n          \n          if (name == null) {\n            name = nil;\n          };\n          \n          if (config == null) {\n            config = $hash2([], {});\n          };\n          $send(self, Opal.find_super_dispatcher(self, 'initialize', $BlockProcessor_initialize$38, false), [config], null);\n          self.name = ($truthy($a = name) ? $a : self.config['$[]'](\"name\"));\n          $case = self.config['$[]'](\"contexts\");\n          if ($$$('::', 'NilClass')['$===']($case)) {($truthy($a = self.config['$[]'](\"contexts\")) ? $a : (($writer = [\"contexts\", [\"open\", \"paragraph\"].$to_set()]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))}\n          else if ($$$('::', 'Symbol')['$===']($case)) {\n          $writer = [\"contexts\", [self.config['$[]'](\"contexts\")].$to_set()];\n          $send(self.config, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];}\n          else {\n          $writer = [\"contexts\", self.config['$[]'](\"contexts\").$to_set()];\n          $send(self.config, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n          return ($truthy($a = self.config['$[]'](\"content_model\")) ? $a : (($writer = [\"content_model\", \"compound\"]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        }, $BlockProcessor_initialize$38.$$arity = -1);\n        return (Opal.def(self, '$process', $BlockProcessor_process$39 = function $$process(parent, reader, attributes) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'BlockProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $BlockProcessor_process$39.$$arity = 3), nil) && 'process';\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'BlockProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $BlockProcessorDsl_contexts$40;\n\n        \n        self.$include($$($nesting, 'SyntaxProcessorDsl'));\n        \n        Opal.def(self, '$contexts', $BlockProcessorDsl_contexts$40 = function $$contexts($a) {\n          var $post_args, value, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          return self.$option(\"contexts\", value.$flatten().$to_set());\n        }, $BlockProcessorDsl_contexts$40.$$arity = -1);\n        Opal.alias(self, \"on_contexts\", \"contexts\");\n        Opal.alias(self, \"on_context\", \"contexts\");\n        Opal.alias(self, \"bind_to\", \"contexts\");\n      })($nesting[0], $nesting);\n      Opal.const_set($$($nesting, 'BlockProcessor'), 'DSL', $$($nesting, 'BlockProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'MacroProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $MacroProcessor_initialize$41, $MacroProcessor_process$42;\n\n        self.$$prototype.config = nil;\n        \n        self.$attr_accessor(\"name\");\n        \n        Opal.def(self, '$initialize', $MacroProcessor_initialize$41 = function $$initialize(name, config) {\n          var $a, $iter = $MacroProcessor_initialize$41.$$p, $yield = $iter || nil, self = this, $writer = nil;\n\n          if ($iter) $MacroProcessor_initialize$41.$$p = null;\n          \n          \n          if (name == null) {\n            name = nil;\n          };\n          \n          if (config == null) {\n            config = $hash2([], {});\n          };\n          $send(self, Opal.find_super_dispatcher(self, 'initialize', $MacroProcessor_initialize$41, false), [config], null);\n          self.name = ($truthy($a = name) ? $a : self.config['$[]'](\"name\"));\n          return ($truthy($a = self.config['$[]'](\"content_model\")) ? $a : (($writer = [\"content_model\", \"attributes\"]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        }, $MacroProcessor_initialize$41.$$arity = -1);\n        return (Opal.def(self, '$process', $MacroProcessor_process$42 = function $$process(parent, target, attributes) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'MacroProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $MacroProcessor_process$42.$$arity = 3), nil) && 'process';\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'MacroProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $MacroProcessorDsl_resolve_attributes$43;\n\n        \n        self.$include($$($nesting, 'SyntaxProcessorDsl'));\n        \n        Opal.def(self, '$resolve_attributes', $MacroProcessorDsl_resolve_attributes$43 = function $$resolve_attributes($a) {\n          var $post_args, args, $b, $iter = $MacroProcessorDsl_resolve_attributes$43.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n          if ($iter) $MacroProcessorDsl_resolve_attributes$43.$$p = null;\n          // Prepare super implicit arguments\n          for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n            $zuper[$zuper_i] = arguments[$zuper_i];\n          }\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy((($b = args.$size()['$=='](1)) ? args['$[]'](0)['$!']() : args.$size()['$=='](1)))) {\n            return self.$option(\"content_model\", \"text\")\n          } else {\n            \n            $send(self, Opal.find_super_dispatcher(self, 'resolve_attributes', $MacroProcessorDsl_resolve_attributes$43, false), $zuper, $iter);\n            return self.$option(\"content_model\", \"attributes\");\n          };\n        }, $MacroProcessorDsl_resolve_attributes$43.$$arity = -1);\n        Opal.alias(self, \"resolves_attributes\", \"resolve_attributes\");\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'BlockMacroProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $BlockMacroProcessor_name$44;\n\n        self.$$prototype.name = nil;\n        return (Opal.def(self, '$name', $BlockMacroProcessor_name$44 = function $$name() {\n          var self = this;\n\n          \n          if ($truthy($$($nesting, 'MacroNameRx')['$match?'](self.name.$to_s()))) {\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"\" + \"invalid name for block macro: \" + (self.name))\n          };\n          return self.name;\n        }, $BlockMacroProcessor_name$44.$$arity = 0), nil) && 'name'\n      })($nesting[0], $$($nesting, 'MacroProcessor'), $nesting);\n      Opal.const_set($$($nesting, 'BlockMacroProcessor'), 'DSL', $$($nesting, 'MacroProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'InlineMacroProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $InlineMacroProcessor_regexp$45, $InlineMacroProcessor_resolve_regexp$46;\n\n        self.$$prototype.config = self.$$prototype.name = nil;\n        \n        (Opal.class_variable_set($nesting[0], '@@rx_cache', $hash2([], {})));\n        \n        Opal.def(self, '$regexp', $InlineMacroProcessor_regexp$45 = function $$regexp() {\n          var $a, self = this, $writer = nil;\n\n          return ($truthy($a = self.config['$[]'](\"regexp\")) ? $a : (($writer = [\"regexp\", self.$resolve_regexp(self.name.$to_s(), self.config['$[]'](\"format\"))]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n        }, $InlineMacroProcessor_regexp$45.$$arity = 0);\n        return (Opal.def(self, '$resolve_regexp', $InlineMacroProcessor_resolve_regexp$46 = function $$resolve_regexp(name, format) {\n          var $a, $b, self = this, $writer = nil;\n\n          \n          if ($truthy($$($nesting, 'MacroNameRx')['$match?'](name))) {\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"\" + \"invalid name for inline macro: \" + (name))\n          };\n          return ($truthy($a = (($b = $nesting[0].$$cvars['@@rx_cache']) == null ? nil : $b)['$[]']([name, format])) ? $a : (($writer = [[name, format], new RegExp(\"\" + \"\\\\\\\\?\" + (name) + \":\" + ((function() {if (format['$=='](\"short\")) {\n            return \"(){0}\"\n          } else {\n            return \"(\\\\S+?)\"\n          }; return nil; })()) + \"\\\\[(|\" + ($$($nesting, 'CC_ANY')) + \"*?[^\\\\\\\\])\\\\]\")]), $send((($b = $nesting[0].$$cvars['@@rx_cache']) == null ? nil : $b), '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        }, $InlineMacroProcessor_resolve_regexp$46.$$arity = 2), nil) && 'resolve_regexp';\n      })($nesting[0], $$($nesting, 'MacroProcessor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'InlineMacroProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $InlineMacroProcessorDsl_format$47, $InlineMacroProcessorDsl_match$48;\n\n        \n        self.$include($$($nesting, 'MacroProcessorDsl'));\n        \n        Opal.def(self, '$format', $InlineMacroProcessorDsl_format$47 = function $$format(value) {\n          var self = this;\n\n          return self.$option(\"format\", value)\n        }, $InlineMacroProcessorDsl_format$47.$$arity = 1);\n        Opal.alias(self, \"match_format\", \"format\");\n        Opal.alias(self, \"using_format\", \"format\");\n        \n        Opal.def(self, '$match', $InlineMacroProcessorDsl_match$48 = function $$match(value) {\n          var self = this;\n\n          return self.$option(\"regexp\", value)\n        }, $InlineMacroProcessorDsl_match$48.$$arity = 1);\n      })($nesting[0], $nesting);\n      Opal.const_set($$($nesting, 'InlineMacroProcessor'), 'DSL', $$($nesting, 'InlineMacroProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Extension');\n\n        var $nesting = [self].concat($parent_nesting), $Extension_initialize$49;\n\n        \n        self.$attr_reader(\"kind\");\n        self.$attr_reader(\"config\");\n        self.$attr_reader(\"instance\");\n        return (Opal.def(self, '$initialize', $Extension_initialize$49 = function $$initialize(kind, instance, config) {\n          var self = this;\n\n          \n          self.kind = kind;\n          self.instance = instance;\n          return (self.config = config);\n        }, $Extension_initialize$49.$$arity = 3), nil) && 'initialize';\n      })($nesting[0], null, $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'ProcessorExtension');\n\n        var $nesting = [self].concat($parent_nesting), $ProcessorExtension_initialize$50;\n\n        \n        self.$attr_reader(\"process_method\");\n        return (Opal.def(self, '$initialize', $ProcessorExtension_initialize$50 = function $$initialize(kind, instance, process_method) {\n          var $a, $iter = $ProcessorExtension_initialize$50.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $ProcessorExtension_initialize$50.$$p = null;\n          \n          \n          if (process_method == null) {\n            process_method = nil;\n          };\n          $send(self, Opal.find_super_dispatcher(self, 'initialize', $ProcessorExtension_initialize$50, false), [kind, instance, instance.$config()], null);\n          return (self.process_method = ($truthy($a = process_method) ? $a : instance.$method(\"process\")));\n        }, $ProcessorExtension_initialize$50.$$arity = -3), nil) && 'initialize';\n      })($nesting[0], $$($nesting, 'Extension'), $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Group');\n\n        var $nesting = [self].concat($parent_nesting), $Group_activate$52;\n\n        \n        (function(self, $parent_nesting) {\n          var $nesting = [self].concat($parent_nesting), $register$51;\n\n          return (Opal.def(self, '$register', $register$51 = function $$register(name) {\n            var self = this;\n\n            \n            \n            if (name == null) {\n              name = nil;\n            };\n            return $$($nesting, 'Extensions').$register(name, self);\n          }, $register$51.$$arity = -1), nil) && 'register'\n        })(Opal.get_singleton_class(self), $nesting);\n        return (Opal.def(self, '$activate', $Group_activate$52 = function $$activate(registry) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'))\n        }, $Group_activate$52.$$arity = 1), nil) && 'activate';\n      })($nesting[0], null, $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Registry');\n\n        var $nesting = [self].concat($parent_nesting), $Registry_initialize$53, $Registry_activate$54, $Registry_preprocessor$56, $Registry_preprocessors$ques$57, $Registry_preprocessors$58, $Registry_tree_processor$59, $Registry_tree_processors$ques$60, $Registry_tree_processors$61, $Registry_postprocessor$62, $Registry_postprocessors$ques$63, $Registry_postprocessors$64, $Registry_include_processor$65, $Registry_include_processors$ques$66, $Registry_include_processors$67, $Registry_docinfo_processor$68, $Registry_docinfo_processors$ques$69, $Registry_docinfo_processors$71, $Registry_block$73, $Registry_blocks$ques$74, $Registry_registered_for_block$ques$75, $Registry_find_block_extension$76, $Registry_block_macro$77, $Registry_block_macros$ques$78, $Registry_registered_for_block_macro$ques$79, $Registry_find_block_macro_extension$80, $Registry_inline_macro$81, $Registry_inline_macros$ques$82, $Registry_registered_for_inline_macro$ques$83, $Registry_find_inline_macro_extension$84, $Registry_inline_macros$85, $Registry_prefer$86, $Registry_add_document_processor$87, $Registry_add_syntax_processor$89, $Registry_resolve_args$91, $Registry_as_symbol$92;\n\n        self.$$prototype.groups = self.$$prototype.preprocessor_extensions = self.$$prototype.tree_processor_extensions = self.$$prototype.postprocessor_extensions = self.$$prototype.include_processor_extensions = self.$$prototype.docinfo_processor_extensions = self.$$prototype.block_extensions = self.$$prototype.block_macro_extensions = self.$$prototype.inline_macro_extensions = nil;\n        \n        self.$attr_reader(\"document\");\n        self.$attr_reader(\"groups\");\n        \n        Opal.def(self, '$initialize', $Registry_initialize$53 = function $$initialize(groups) {\n          var self = this;\n\n          \n          \n          if (groups == null) {\n            groups = $hash2([], {});\n          };\n          self.groups = groups;\n          self.preprocessor_extensions = (self.tree_processor_extensions = (self.postprocessor_extensions = (self.include_processor_extensions = (self.docinfo_processor_extensions = (self.block_extensions = (self.block_macro_extensions = (self.inline_macro_extensions = nil)))))));\n          return (self.document = nil);\n        }, $Registry_initialize$53.$$arity = -1);\n        \n        Opal.def(self, '$activate', $Registry_activate$54 = function $$activate(document) {\n          var $$55, self = this, ext_groups = nil;\n\n          \n          self.document = document;\n          if ($truthy((ext_groups = $rb_plus($$($nesting, 'Extensions').$groups().$values(), self.groups.$values()))['$empty?']())) {\n          } else {\n            $send(ext_groups, 'each', [], ($$55 = function(group){var self = $$55.$$s || this, $case = nil;\n\n            \n              \n              if (group == null) {\n                group = nil;\n              };\n              return (function() {$case = group;\n              if ($$$('::', 'Proc')['$===']($case)) {return (function() {$case = group.$arity();\n              if ((0)['$===']($case) || (-1)['$===']($case)) {return $send(self, 'instance_exec', [], group.$to_proc())}\n              else if ((1)['$===']($case)) {return group.$call(self)}\n              else { return nil }})()}\n              else if ($$$('::', 'Class')['$===']($case)) {return group.$new().$activate(self)}\n              else {return group.$activate(self)}})();}, $$55.$$s = self, $$55.$$arity = 1, $$55))\n          };\n          return self;\n        }, $Registry_activate$54.$$arity = 1);\n        \n        Opal.def(self, '$preprocessor', $Registry_preprocessor$56 = function $$preprocessor($a) {\n          var $iter = $Registry_preprocessor$56.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_preprocessor$56.$$p = null;\n          \n          \n          if ($iter) $Registry_preprocessor$56.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"preprocessor\", args], block.$to_proc());\n        }, $Registry_preprocessor$56.$$arity = -1);\n        \n        Opal.def(self, '$preprocessors?', $Registry_preprocessors$ques$57 = function() {\n          var self = this;\n\n          return self.preprocessor_extensions['$!']()['$!']()\n        }, $Registry_preprocessors$ques$57.$$arity = 0);\n        \n        Opal.def(self, '$preprocessors', $Registry_preprocessors$58 = function $$preprocessors() {\n          var self = this;\n\n          return self.preprocessor_extensions\n        }, $Registry_preprocessors$58.$$arity = 0);\n        \n        Opal.def(self, '$tree_processor', $Registry_tree_processor$59 = function $$tree_processor($a) {\n          var $iter = $Registry_tree_processor$59.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_tree_processor$59.$$p = null;\n          \n          \n          if ($iter) $Registry_tree_processor$59.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"tree_processor\", args], block.$to_proc());\n        }, $Registry_tree_processor$59.$$arity = -1);\n        \n        Opal.def(self, '$tree_processors?', $Registry_tree_processors$ques$60 = function() {\n          var self = this;\n\n          return self.tree_processor_extensions['$!']()['$!']()\n        }, $Registry_tree_processors$ques$60.$$arity = 0);\n        \n        Opal.def(self, '$tree_processors', $Registry_tree_processors$61 = function $$tree_processors() {\n          var self = this;\n\n          return self.tree_processor_extensions\n        }, $Registry_tree_processors$61.$$arity = 0);\n        Opal.alias(self, \"treeprocessor\", \"tree_processor\");\n        Opal.alias(self, \"treeprocessors?\", \"tree_processors?\");\n        Opal.alias(self, \"treeprocessors\", \"tree_processors\");\n        \n        Opal.def(self, '$postprocessor', $Registry_postprocessor$62 = function $$postprocessor($a) {\n          var $iter = $Registry_postprocessor$62.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_postprocessor$62.$$p = null;\n          \n          \n          if ($iter) $Registry_postprocessor$62.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"postprocessor\", args], block.$to_proc());\n        }, $Registry_postprocessor$62.$$arity = -1);\n        \n        Opal.def(self, '$postprocessors?', $Registry_postprocessors$ques$63 = function() {\n          var self = this;\n\n          return self.postprocessor_extensions['$!']()['$!']()\n        }, $Registry_postprocessors$ques$63.$$arity = 0);\n        \n        Opal.def(self, '$postprocessors', $Registry_postprocessors$64 = function $$postprocessors() {\n          var self = this;\n\n          return self.postprocessor_extensions\n        }, $Registry_postprocessors$64.$$arity = 0);\n        \n        Opal.def(self, '$include_processor', $Registry_include_processor$65 = function $$include_processor($a) {\n          var $iter = $Registry_include_processor$65.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_include_processor$65.$$p = null;\n          \n          \n          if ($iter) $Registry_include_processor$65.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"include_processor\", args], block.$to_proc());\n        }, $Registry_include_processor$65.$$arity = -1);\n        \n        Opal.def(self, '$include_processors?', $Registry_include_processors$ques$66 = function() {\n          var self = this;\n\n          return self.include_processor_extensions['$!']()['$!']()\n        }, $Registry_include_processors$ques$66.$$arity = 0);\n        \n        Opal.def(self, '$include_processors', $Registry_include_processors$67 = function $$include_processors() {\n          var self = this;\n\n          return self.include_processor_extensions\n        }, $Registry_include_processors$67.$$arity = 0);\n        \n        Opal.def(self, '$docinfo_processor', $Registry_docinfo_processor$68 = function $$docinfo_processor($a) {\n          var $iter = $Registry_docinfo_processor$68.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_docinfo_processor$68.$$p = null;\n          \n          \n          if ($iter) $Registry_docinfo_processor$68.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"docinfo_processor\", args], block.$to_proc());\n        }, $Registry_docinfo_processor$68.$$arity = -1);\n        \n        Opal.def(self, '$docinfo_processors?', $Registry_docinfo_processors$ques$69 = function(location) {\n          var $$70, self = this;\n\n          \n          \n          if (location == null) {\n            location = nil;\n          };\n          if ($truthy(self.docinfo_processor_extensions)) {\n            if ($truthy(location)) {\n              return $send(self.docinfo_processor_extensions, 'any?', [], ($$70 = function(ext){var self = $$70.$$s || this;\n\n              \n                \n                if (ext == null) {\n                  ext = nil;\n                };\n                return ext.$config()['$[]'](\"location\")['$=='](location);}, $$70.$$s = self, $$70.$$arity = 1, $$70))\n            } else {\n              return true\n            }\n          } else {\n            return false\n          };\n        }, $Registry_docinfo_processors$ques$69.$$arity = -1);\n        \n        Opal.def(self, '$docinfo_processors', $Registry_docinfo_processors$71 = function $$docinfo_processors(location) {\n          var $$72, self = this;\n\n          \n          \n          if (location == null) {\n            location = nil;\n          };\n          if ($truthy(self.docinfo_processor_extensions)) {\n            if ($truthy(location)) {\n              return $send(self.docinfo_processor_extensions, 'select', [], ($$72 = function(ext){var self = $$72.$$s || this;\n\n              \n                \n                if (ext == null) {\n                  ext = nil;\n                };\n                return ext.$config()['$[]'](\"location\")['$=='](location);}, $$72.$$s = self, $$72.$$arity = 1, $$72))\n            } else {\n              return self.docinfo_processor_extensions\n            }\n          } else {\n            return nil\n          };\n        }, $Registry_docinfo_processors$71.$$arity = -1);\n        \n        Opal.def(self, '$block', $Registry_block$73 = function $$block($a) {\n          var $iter = $Registry_block$73.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_block$73.$$p = null;\n          \n          \n          if ($iter) $Registry_block$73.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_syntax_processor', [\"block\", args], block.$to_proc());\n        }, $Registry_block$73.$$arity = -1);\n        \n        Opal.def(self, '$blocks?', $Registry_blocks$ques$74 = function() {\n          var self = this;\n\n          return self.block_extensions['$!']()['$!']()\n        }, $Registry_blocks$ques$74.$$arity = 0);\n        \n        Opal.def(self, '$registered_for_block?', $Registry_registered_for_block$ques$75 = function(name, context) {\n          var self = this, ext = nil;\n\n          if ($truthy((ext = self.block_extensions['$[]'](name.$to_sym())))) {\n            if ($truthy(ext.$config()['$[]'](\"contexts\")['$include?'](context))) {\n              return ext\n            } else {\n              return false\n            }\n          } else {\n            return false\n          }\n        }, $Registry_registered_for_block$ques$75.$$arity = 2);\n        \n        Opal.def(self, '$find_block_extension', $Registry_find_block_extension$76 = function $$find_block_extension(name) {\n          var self = this;\n\n          return self.block_extensions['$[]'](name.$to_sym())\n        }, $Registry_find_block_extension$76.$$arity = 1);\n        \n        Opal.def(self, '$block_macro', $Registry_block_macro$77 = function $$block_macro($a) {\n          var $iter = $Registry_block_macro$77.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_block_macro$77.$$p = null;\n          \n          \n          if ($iter) $Registry_block_macro$77.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_syntax_processor', [\"block_macro\", args], block.$to_proc());\n        }, $Registry_block_macro$77.$$arity = -1);\n        \n        Opal.def(self, '$block_macros?', $Registry_block_macros$ques$78 = function() {\n          var self = this;\n\n          return self.block_macro_extensions['$!']()['$!']()\n        }, $Registry_block_macros$ques$78.$$arity = 0);\n        \n        Opal.def(self, '$registered_for_block_macro?', $Registry_registered_for_block_macro$ques$79 = function(name) {\n          var self = this, ext = nil;\n\n          if ($truthy((ext = self.block_macro_extensions['$[]'](name.$to_sym())))) {\n            return ext\n          } else {\n            return false\n          }\n        }, $Registry_registered_for_block_macro$ques$79.$$arity = 1);\n        \n        Opal.def(self, '$find_block_macro_extension', $Registry_find_block_macro_extension$80 = function $$find_block_macro_extension(name) {\n          var self = this;\n\n          return self.block_macro_extensions['$[]'](name.$to_sym())\n        }, $Registry_find_block_macro_extension$80.$$arity = 1);\n        \n        Opal.def(self, '$inline_macro', $Registry_inline_macro$81 = function $$inline_macro($a) {\n          var $iter = $Registry_inline_macro$81.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_inline_macro$81.$$p = null;\n          \n          \n          if ($iter) $Registry_inline_macro$81.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_syntax_processor', [\"inline_macro\", args], block.$to_proc());\n        }, $Registry_inline_macro$81.$$arity = -1);\n        \n        Opal.def(self, '$inline_macros?', $Registry_inline_macros$ques$82 = function() {\n          var self = this;\n\n          return self.inline_macro_extensions['$!']()['$!']()\n        }, $Registry_inline_macros$ques$82.$$arity = 0);\n        \n        Opal.def(self, '$registered_for_inline_macro?', $Registry_registered_for_inline_macro$ques$83 = function(name) {\n          var self = this, ext = nil;\n\n          if ($truthy((ext = self.inline_macro_extensions['$[]'](name.$to_sym())))) {\n            return ext\n          } else {\n            return false\n          }\n        }, $Registry_registered_for_inline_macro$ques$83.$$arity = 1);\n        \n        Opal.def(self, '$find_inline_macro_extension', $Registry_find_inline_macro_extension$84 = function $$find_inline_macro_extension(name) {\n          var self = this;\n\n          return self.inline_macro_extensions['$[]'](name.$to_sym())\n        }, $Registry_find_inline_macro_extension$84.$$arity = 1);\n        \n        Opal.def(self, '$inline_macros', $Registry_inline_macros$85 = function $$inline_macros() {\n          var self = this;\n\n          return self.inline_macro_extensions.$values()\n        }, $Registry_inline_macros$85.$$arity = 0);\n        \n        Opal.def(self, '$prefer', $Registry_prefer$86 = function $$prefer($a) {\n          var $iter = $Registry_prefer$86.$$p, block = $iter || nil, $post_args, args, self = this, extension = nil, arg0 = nil, extensions_store = nil;\n\n          if ($iter) $Registry_prefer$86.$$p = null;\n          \n          \n          if ($iter) $Registry_prefer$86.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          extension = (function() {if ($truthy($$($nesting, 'ProcessorExtension')['$===']((arg0 = args.$shift())))) {\n            return arg0\n          } else {\n            \n            return $send(self, 'send', [arg0].concat(Opal.to_a(args)), block.$to_proc());\n          }; return nil; })();\n          extensions_store = self.$instance_variable_get((((\"\" + \"@\") + (extension.$kind())) + \"_extensions\").$to_sym());\n          extensions_store.$unshift(extensions_store.$delete(extension));\n          return extension;\n        }, $Registry_prefer$86.$$arity = -1);\n        self.$private();\n        \n        Opal.def(self, '$add_document_processor', $Registry_add_document_processor$87 = function $$add_document_processor(kind, args) {\n          var $iter = $Registry_add_document_processor$87.$$p, block = $iter || nil, $$88, $a, $b, $c, self = this, kind_name = nil, kind_class_symbol = nil, kind_class = nil, kind_java_class = nil, kind_store = nil, extension = nil, config = nil, processor = nil, processor_class = nil, processor_instance = nil;\n\n          if ($iter) $Registry_add_document_processor$87.$$p = null;\n          \n          \n          if ($iter) $Registry_add_document_processor$87.$$p = null;;\n          kind_name = kind.$to_s().$tr(\"_\", \" \");\n          kind_class_symbol = $send(kind_name.$split(), 'map', [], ($$88 = function(it){var self = $$88.$$s || this;\n\n          \n            \n            if (it == null) {\n              it = nil;\n            };\n            return it.$capitalize();}, $$88.$$s = self, $$88.$$arity = 1, $$88)).$join().$to_sym();\n          kind_class = $$($nesting, 'Extensions').$const_get(kind_class_symbol, false);\n          kind_java_class = (function() {if ($truthy((($a = $$$('::', 'AsciidoctorJ', 'skip_raise')) ? 'constant' : nil))) {\n            \n            return $$$($$$('::', 'AsciidoctorJ'), 'Extensions').$const_get(kind_class_symbol, false);\n          } else {\n            return nil\n          }; return nil; })();\n          kind_store = ($truthy($b = self.$instance_variable_get((((\"\" + \"@\") + (kind)) + \"_extensions\").$to_sym())) ? $b : self.$instance_variable_set((((\"\" + \"@\") + (kind)) + \"_extensions\").$to_sym(), []));\n          extension = (function() {if ((block !== nil)) {\n            \n            config = self.$resolve_args(args, 1);\n            (processor = kind_class.$new(config)).$singleton_class().$enable_dsl();\n            if (block.$arity()['$=='](0)) {\n              $send(processor, 'instance_exec', [], block.$to_proc())\n            } else {\n              Opal.yield1(block, processor)\n            };\n            if ($truthy(processor['$process_block_given?']())) {\n            } else {\n              self.$raise($$$('::', 'ArgumentError'), \"\" + \"No block specified to process \" + (kind_name) + \" extension at \" + (block.$source_location()))\n            };\n            processor.$freeze();\n            return $$($nesting, 'ProcessorExtension').$new(kind, processor);\n          } else {\n            \n            $c = self.$resolve_args(args, 2), $b = Opal.to_ary($c), (processor = ($b[0] == null ? nil : $b[0])), (config = ($b[1] == null ? nil : $b[1])), $c;\n            if ($truthy((processor_class = $$($nesting, 'Helpers').$resolve_class(processor)))) {\n              \n              if ($truthy(($truthy($b = $rb_lt(processor_class, kind_class)) ? $b : ($truthy($c = kind_java_class) ? $rb_lt(processor_class, kind_java_class) : $c)))) {\n              } else {\n                self.$raise($$$('::', 'ArgumentError'), \"\" + \"Invalid type for \" + (kind_name) + \" extension: \" + (processor))\n              };\n              processor_instance = processor_class.$new(config);\n              processor_instance.$freeze();\n              return $$($nesting, 'ProcessorExtension').$new(kind, processor_instance);\n            } else if ($truthy(($truthy($b = kind_class['$==='](processor)) ? $b : ($truthy($c = kind_java_class) ? kind_java_class['$==='](processor) : $c)))) {\n              \n              processor.$update_config(config);\n              processor.$freeze();\n              return $$($nesting, 'ProcessorExtension').$new(kind, processor);\n            } else {\n              return self.$raise($$$('::', 'ArgumentError'), \"\" + \"Invalid arguments specified for registering \" + (kind_name) + \" extension: \" + (args))\n            };\n          }; return nil; })();\n          if (extension.$config()['$[]'](\"position\")['$=='](\">>\")) {\n            \n            kind_store.$unshift(extension);\n          } else {\n            \n            kind_store['$<<'](extension);\n          };\n          return extension;\n        }, $Registry_add_document_processor$87.$$arity = 2);\n        \n        Opal.def(self, '$add_syntax_processor', $Registry_add_syntax_processor$89 = function $$add_syntax_processor(kind, args) {\n          var $iter = $Registry_add_syntax_processor$89.$$p, block = $iter || nil, $$90, $a, $b, $c, self = this, kind_name = nil, kind_class_symbol = nil, kind_class = nil, kind_java_class = nil, kind_store = nil, name = nil, config = nil, processor = nil, $writer = nil, processor_class = nil, processor_instance = nil;\n\n          if ($iter) $Registry_add_syntax_processor$89.$$p = null;\n          \n          \n          if ($iter) $Registry_add_syntax_processor$89.$$p = null;;\n          kind_name = kind.$to_s().$tr(\"_\", \" \");\n          kind_class_symbol = $send(kind_name.$split(), 'map', [], ($$90 = function(it){var self = $$90.$$s || this;\n\n          \n            \n            if (it == null) {\n              it = nil;\n            };\n            return it.$capitalize();}, $$90.$$s = self, $$90.$$arity = 1, $$90))['$<<'](\"Processor\").$join().$to_sym();\n          kind_class = $$($nesting, 'Extensions').$const_get(kind_class_symbol, false);\n          kind_java_class = (function() {if ($truthy((($a = $$$('::', 'AsciidoctorJ', 'skip_raise')) ? 'constant' : nil))) {\n            \n            return $$$($$$('::', 'AsciidoctorJ'), 'Extensions').$const_get(kind_class_symbol, false);\n          } else {\n            return nil\n          }; return nil; })();\n          kind_store = ($truthy($b = self.$instance_variable_get((((\"\" + \"@\") + (kind)) + \"_extensions\").$to_sym())) ? $b : self.$instance_variable_set((((\"\" + \"@\") + (kind)) + \"_extensions\").$to_sym(), $hash2([], {})));\n          if ((block !== nil)) {\n            \n            $c = self.$resolve_args(args, 2), $b = Opal.to_ary($c), (name = ($b[0] == null ? nil : $b[0])), (config = ($b[1] == null ? nil : $b[1])), $c;\n            (processor = kind_class.$new(self.$as_symbol(name), config)).$singleton_class().$enable_dsl();\n            if (block.$arity()['$=='](0)) {\n              $send(processor, 'instance_exec', [], block.$to_proc())\n            } else {\n              Opal.yield1(block, processor)\n            };\n            if ($truthy((name = self.$as_symbol(processor.$name())))) {\n            } else {\n              self.$raise($$$('::', 'ArgumentError'), \"\" + \"No name specified for \" + (kind_name) + \" extension at \" + (block.$source_location()))\n            };\n            if ($truthy(processor['$process_block_given?']())) {\n            } else {\n              self.$raise($$$('::', 'NoMethodError'), \"\" + \"No block specified to process \" + (kind_name) + \" extension at \" + (block.$source_location()))\n            };\n            processor.$freeze();\n            \n            $writer = [name, $$($nesting, 'ProcessorExtension').$new(kind, processor)];\n            $send(kind_store, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            \n            $c = self.$resolve_args(args, 3), $b = Opal.to_ary($c), (processor = ($b[0] == null ? nil : $b[0])), (name = ($b[1] == null ? nil : $b[1])), (config = ($b[2] == null ? nil : $b[2])), $c;\n            if ($truthy((processor_class = $$($nesting, 'Helpers').$resolve_class(processor)))) {\n              \n              if ($truthy(($truthy($b = $rb_lt(processor_class, kind_class)) ? $b : ($truthy($c = kind_java_class) ? $rb_lt(processor_class, kind_java_class) : $c)))) {\n              } else {\n                self.$raise($$$('::', 'ArgumentError'), \"\" + \"Class specified for \" + (kind_name) + \" extension does not inherit from \" + (kind_class) + \": \" + (processor))\n              };\n              processor_instance = processor_class.$new(self.$as_symbol(name), config);\n              if ($truthy((name = self.$as_symbol(processor_instance.$name())))) {\n              } else {\n                self.$raise($$$('::', 'ArgumentError'), \"\" + \"No name specified for \" + (kind_name) + \" extension: \" + (processor))\n              };\n              processor_instance.$freeze();\n              \n              $writer = [name, $$($nesting, 'ProcessorExtension').$new(kind, processor_instance)];\n              $send(kind_store, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else if ($truthy(($truthy($b = kind_class['$==='](processor)) ? $b : ($truthy($c = kind_java_class) ? kind_java_class['$==='](processor) : $c)))) {\n              \n              processor.$update_config(config);\n              if ($truthy((name = (function() {if ($truthy(name)) {\n                \n                \n                $writer = [self.$as_symbol(name)];\n                $send(processor, 'name=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];;\n              } else {\n                \n                return self.$as_symbol(processor.$name());\n              }; return nil; })()))) {\n              } else {\n                self.$raise($$$('::', 'ArgumentError'), \"\" + \"No name specified for \" + (kind_name) + \" extension: \" + (processor))\n              };\n              processor.$freeze();\n              \n              $writer = [name, $$($nesting, 'ProcessorExtension').$new(kind, processor)];\n              $send(kind_store, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else {\n              return self.$raise($$$('::', 'ArgumentError'), \"\" + \"Invalid arguments specified for registering \" + (kind_name) + \" extension: \" + (args))\n            };\n          };\n        }, $Registry_add_syntax_processor$89.$$arity = 2);\n        \n        Opal.def(self, '$resolve_args', $Registry_resolve_args$91 = function $$resolve_args(args, expect) {\n          var self = this, opts = nil, missing = nil;\n\n          \n          opts = (function() {if ($truthy($$$('::', 'Hash')['$==='](args['$[]'](-1)))) {\n            return args.$pop()\n          } else {\n            return $hash2([], {})\n          }; return nil; })();\n          if (expect['$=='](1)) {\n            return opts};\n          if ($truthy($rb_gt((missing = $rb_minus($rb_minus(expect, 1), args.$size())), 0))) {\n            args = $rb_plus(args, $$$('::', 'Array').$new(missing))\n          } else if ($truthy($rb_lt(missing, 0))) {\n            args.$pop(missing['$-@']())};\n          args['$<<'](opts);\n          return args;\n        }, $Registry_resolve_args$91.$$arity = 2);\n        return (Opal.def(self, '$as_symbol', $Registry_as_symbol$92 = function $$as_symbol(name) {\n          var self = this;\n\n          if ($truthy(name)) {\n            return name.$to_sym()\n          } else {\n            return nil\n          }\n        }, $Registry_as_symbol$92.$$arity = 1), nil) && 'as_symbol';\n      })($nesting[0], null, $nesting);\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $generate_name$93, $next_auto_id$94, $groups$95, $create$96, $register$97, $unregister_all$98, $unregister$99;\n\n        \n        \n        Opal.def(self, '$generate_name', $generate_name$93 = function $$generate_name() {\n          var self = this;\n\n          return \"\" + \"extgrp\" + (self.$next_auto_id())\n        }, $generate_name$93.$$arity = 0);\n        \n        Opal.def(self, '$next_auto_id', $next_auto_id$94 = function $$next_auto_id() {\n          var $a, self = this;\n          if (self.auto_id == null) self.auto_id = nil;\n\n          \n          self.auto_id = ($truthy($a = self.auto_id) ? $a : -1);\n          return (self.auto_id = $rb_plus(self.auto_id, 1));\n        }, $next_auto_id$94.$$arity = 0);\n        \n        Opal.def(self, '$groups', $groups$95 = function $$groups() {\n          var $a, self = this;\n          if (self.groups == null) self.groups = nil;\n\n          return (self.groups = ($truthy($a = self.groups) ? $a : $hash2([], {})))\n        }, $groups$95.$$arity = 0);\n        \n        Opal.def(self, '$create', $create$96 = function $$create(name) {\n          var $iter = $create$96.$$p, block = $iter || nil, $a, self = this;\n\n          if ($iter) $create$96.$$p = null;\n          \n          \n          if ($iter) $create$96.$$p = null;;\n          \n          if (name == null) {\n            name = nil;\n          };\n          if ((block !== nil)) {\n            return $$($nesting, 'Registry').$new($hash(($truthy($a = name) ? $a : self.$generate_name()), block))\n          } else {\n            return $$($nesting, 'Registry').$new()\n          };\n        }, $create$96.$$arity = -1);\n        \n        Opal.def(self, '$register', $register$97 = function $$register($a) {\n          var $iter = $register$97.$$p, block = $iter || nil, $post_args, args, $b, self = this, argc = nil, resolved_group = nil, group = nil, name = nil, $writer = nil;\n\n          if ($iter) $register$97.$$p = null;\n          \n          \n          if ($iter) $register$97.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          argc = args.$size();\n          if ((block !== nil)) {\n            resolved_group = block\n          } else if ($truthy((group = args.$pop()))) {\n            resolved_group = ($truthy($b = $$($nesting, 'Helpers').$resolve_class(group)) ? $b : group)\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"Extension group to register not specified\")\n          };\n          name = ($truthy($b = args.$pop()) ? $b : self.$generate_name());\n          if ($truthy(args['$empty?']())) {\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"\" + \"Wrong number of arguments (\" + (argc) + \" for 1..2)\")\n          };\n          \n          $writer = [name.$to_sym(), resolved_group];\n          $send(self.$groups(), '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];;\n        }, $register$97.$$arity = -1);\n        \n        Opal.def(self, '$unregister_all', $unregister_all$98 = function $$unregister_all() {\n          var self = this;\n\n          \n          self.groups = $hash2([], {});\n          return nil;\n        }, $unregister_all$98.$$arity = 0);\n        return (Opal.def(self, '$unregister', $unregister$99 = function $$unregister($a) {\n          var $post_args, names, $$100, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          names = $post_args;;\n          $send(names, 'each', [], ($$100 = function(group){var self = $$100.$$s || this;\n            if (self.groups == null) self.groups = nil;\n\n          \n            \n            if (group == null) {\n              group = nil;\n            };\n            return self.groups.$delete(group.$to_sym());}, $$100.$$s = self, $$100.$$arity = 1, $$100));\n          return nil;\n        }, $unregister$99.$$arity = -1), nil) && 'unregister';\n      })(Opal.get_singleton_class(self), $nesting);\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/stylesheet\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$rstrip', '$read', '$join']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Stylesheets');\n\n      var $nesting = [self].concat($parent_nesting), $Stylesheets_primary_stylesheet_data$1;\n\n      self.$$prototype.primary_stylesheet_data = nil;\n      return (Opal.def(self, '$primary_stylesheet_data', $Stylesheets_primary_stylesheet_data$1 = function $$primary_stylesheet_data() {\n        var $a, self = this;\n\n        return (self.primary_stylesheet_data = ($truthy($a = self.primary_stylesheet_data) ? $a : $$$('::', 'IO').$read($$$('::', 'File').$join(\"css\", \"asciidoctor.css\")).$rstrip()))\n      }, $Stylesheets_primary_stylesheet_data$1.$$arity = 0), nil) && 'primary_stylesheet_data'\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/document\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Document');\n\n      var $nesting = [self].concat($parent_nesting), $Document_fill_datetime_attributes$1;\n\n      return (Opal.def(self, '$fill_datetime_attributes', $Document_fill_datetime_attributes$1 = function $$fill_datetime_attributes(attrs, input_mtime) {\n        var self = this;\n\n        \n      var $truthy = Opal.truthy\n      var $falsy = Opal.falsy\n      var nil = Opal.nil\n      var utc_offset\n      var source_date_epoch\n\n      var getYear = function (time, utc_offset) {\n        return utc_offset === 0 ? time.getUTCFullYear() : time.getFullYear()\n      }\n      var getMonth = function (time, utc_offset) {\n        return utc_offset === 0 ? time.getUTCMonth() : time.getMonth()\n      }\n      var getDay = function (time, utc_offset) {\n        return utc_offset === 0 ? time.getUTCDate() : time.getDate()\n      }\n      var getHours = function (time, utc_offset) {\n        return utc_offset === 0 ? time.getUTCHours() : time.getHours()\n      }\n\n      var now = new Date()\n      // See https://reproducible-builds.org/specs/source-date-epoch/\n      if (Opal.const_get_qualified('::', 'ENV')['$key?']('SOURCE_DATE_EPOCH')) {\n        now.setTime(parseInt(Opal.const_get_qualified('::', 'ENV')['$[]']('SOURCE_DATE_EPOCH')) * 1000)\n        source_date_epoch = now\n        utc_offset = 0  // utc\n      } else {\n        utc_offset = -now.getTimezoneOffset() / 60 // local date\n      }\n      // localdate and localyear\n      if ($truthy((localdate = attrs['$[]']('localdate')))) {\n        if ($falsy(localyear = attrs['$[]']('localyear'))) {\n          localyear = localdate.indexOf('-') === 4 ? localdate.substring(0, 4) : nil\n          attrs['$[]=']('localyear', localyear)\n        }\n      } else {\n        var now_year = getYear(now, utc_offset).toString()\n        var now_month = ('0' + (getMonth(now, utc_offset) + 1)).slice(-2)\n        var now_day = ('0' + getDay(now, utc_offset)).slice(-2)\n        localdate = now_year + '-' + now_month + '-' + now_day\n        attrs['$[]=']('localdate', localdate)\n        localyear = now_year\n        attrs['$[]=']('localyear', now_year)\n      }\n      // localtime\n      if ($falsy((localtime = attrs['$[]']('localtime')))) {\n        var hours = ('0' + (getHours(now, utc_offset))).slice(-2)\n        var minutes = ('0' + (now.getMinutes())).slice(-2)\n        var seconds = ('0' + (now.getSeconds())).slice(-2)\n        var utc_offset_format\n        if (utc_offset === 0) {\n          utc_offset_format = 'UTC'\n        } else if (utc_offset > 0) {\n          utc_offset_format = ('+0' + (utc_offset * 100)).slice(-5)\n        } else {\n          utc_offset_format = ('-0' + (-utc_offset * 100)).slice(-5)\n        }\n        localtime = hours + ':' + minutes + ':' + seconds + ' ' + utc_offset_format\n        attrs['$[]=']('localtime', localtime)\n      }\n      // localdatetime\n      if ($falsy((localdatetime = attrs['$[]']('localdatetime')))) {\n        localdatetime = localdate + ' ' + localtime\n        attrs['$[]=']('localdatetime', localdatetime)\n      }\n\n      // docdate, doctime and docdatetime should default to localdate, localtime and localdatetime if not otherwise set\n      if ($truthy(source_date_epoch)) {\n        input_mtime = source_date_epoch\n      } else if ($truthy(input_mtime)) {\n        utc_offset = -input_mtime.getTimezoneOffset() / 60\n      } else {\n        input_mtime = now\n      }\n\n      // docdate and docyear\n      if ($truthy(docdate = attrs['$[]']('docdate'))) {\n        attrs['$[]=']('docyear', docdate.indexOf('-') === 4 ? docdate.substring(0, 4) : nil)\n      } else {\n        var mtime_year = getYear(input_mtime, utc_offset).toString()\n        var mtime_month = ('0' + (getMonth(input_mtime, utc_offset) + 1)).slice(-2)\n        var mtime_day = ('0' + (getDay(input_mtime, utc_offset))).slice(-2)\n        docdate = mtime_year + '-' + mtime_month + '-' + mtime_day\n        attrs['$[]=']('docdate', docdate)\n        if ($falsy(attrs['$[]']('docyear'))) {\n          attrs['$[]=']('docyear', mtime_year)\n        }\n      }\n      // doctime\n      if ($falsy(doctime = attrs['$[]']('doctime'))) {\n        var mtime_hours = ('0' + (getHours(input_mtime, utc_offset))).slice(-2)\n        var mtime_minutes = ('0' + (input_mtime.getMinutes())).slice(-2)\n        var mtime_seconds = ('0' + (input_mtime.getSeconds())).slice(-2)\n        if (utc_offset === 0) {\n          utc_offset_format = 'UTC'\n        } else if (utc_offset > 0) {\n          utc_offset_format = ('+0' + (utc_offset * 100)).slice(-5)\n        } else {\n          utc_offset_format = ('-0' + (-utc_offset * 100)).slice(-5)\n        }\n        doctime = mtime_hours + ':' + mtime_minutes + ':' + mtime_seconds + ' ' + utc_offset_format\n        attrs['$[]=']('doctime', doctime)\n      }\n      // docdatetime\n      if ($falsy(attrs['$[]']('docdatetime'))) {\n        attrs['$[]=']('docdatetime', docdate + ' ' + doctime)\n      }\n      return nil\n    \n      }, $Document_fill_datetime_attributes$1.$$arity = 2), nil) && 'fill_datetime_attributes'\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/substitutors\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Substitutors');\n\n      var $nesting = [self].concat($parent_nesting), $Substitutors_sub_placeholder$1;\n\n      \n      Opal.def(self, '$sub_placeholder', $Substitutors_sub_placeholder$1 = function $$sub_placeholder(format_string, replacement) {\n        var self = this;\n\n        return format_string.replace('%s', replacement);\n      }, $Substitutors_sub_placeholder$1.$$arity = 2)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/parser\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Parser');\n\n      var $nesting = [self].concat($parent_nesting), $Parser_uniform$ques$1, $Parser_uniform$ques$2;\n\n      if ($truthy(String.prototype.repeat)) {\n        return (Opal.defs(self, '$uniform?', $Parser_uniform$ques$1 = function(str, chr, len) {\n          var self = this;\n\n          return chr.repeat(len) === str;\n        }, $Parser_uniform$ques$1.$$arity = 3), nil) && 'uniform?'\n      } else {\n        return (Opal.defs(self, '$uniform?', $Parser_uniform$ques$2 = function(str, chr, len) {\n          var self = this;\n\n          return Array.apply(null, { length: len }).map(function () { return chr }).join('') === str;\n        }, $Parser_uniform$ques$2.$$arity = 3), nil) && 'uniform?'\n      }\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/syntax_highlighter\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$key?', '$registry', '$[]', '$include?', '$include', '$empty?', '$debug', '$logger', '$join', '$keys']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'SyntaxHighlighter');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Factory');\n\n        var $nesting = [self].concat($parent_nesting), $Factory_for$1;\n\n        \n        Opal.def(self, '$for', $Factory_for$1 = function(name) {\n          var self = this;\n\n          if ($truthy(self.$registry()['$key?'](name))) {\n            return self.$registry()['$[]'](name)\n          } else {\n            \n            if ($truthy(self['$include?']($$($nesting, 'Logging')))) {\n            } else {\n              self.$include($$($nesting, 'Logging'))\n            };\n            if ($truthy(self.$registry()['$empty?']())) {\n              self.$logger().$debug(\"no syntax highlighter available, functionality disabled.\")\n            } else {\n              self.$logger().$debug(\"\" + \"syntax highlighter named '\" + (name) + \"' is not available, must be one of: '\" + (self.$registry().$keys().$join(\"', '\")) + \"'.\")\n            };\n            return nil;\n          }\n        }, $Factory_for$1.$$arity = 1)\n      })($nesting[0], $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"asciidoctor/js/asciidoctor_ext/stylesheet\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext/document\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext/substitutors\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext/parser\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext/syntax_highlighter\");\n  \n// Load specific runtime\nself.$require(\"asciidoctor/js/asciidoctor_ext/browser\");\n;\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/logger\"] = function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$chr', '$rjust', '$message_as_string', '$<', '$write', '$call', '$[]']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Logger');\n\n    var $nesting = [self].concat($parent_nesting), $Logger_add$2;\n\n    self.$$prototype.level = self.$$prototype.progname = self.$$prototype.pipe = self.$$prototype.formatter = nil;\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Formatter');\n\n      var $nesting = [self].concat($parent_nesting), $Formatter_call$1;\n\n      return (Opal.def(self, '$call', $Formatter_call$1 = function $$call(severity, time, progname, msg) {\n        var self = this, time_format = nil;\n\n        \n        time_format = time.getFullYear() + '-' + ('0'+(time.getMonth()+1)).slice(-2) + '-' + ('0'+time.getDate()).slice(-2) + 'T' + ('0'+time.getHours()).slice(-2) + ':' + ('0'+time.getMinutes()).slice(-2) + ':' + ('0'+time.getSeconds()).slice(-2) + '.' + ('00' + new Date().getMilliseconds() * 1000).slice(-6);\n        return \"\" + (severity.$chr()) + \", [\" + (time_format) + \"] \" + (severity.$rjust(5)) + \" -- \" + (progname) + \": \" + (self.$message_as_string(msg));\n      }, $Formatter_call$1.$$arity = 4), nil) && 'call'\n    })($nesting[0], null, $nesting);\n    return (Opal.def(self, '$add', $Logger_add$2 = function $$add(severity, message, progname) {\n      var $iter = $Logger_add$2.$$p, block = $iter || nil, $a, self = this;\n\n      if ($iter) $Logger_add$2.$$p = null;\n      \n      \n      if ($iter) $Logger_add$2.$$p = null;;\n      \n      if (message == null) {\n        message = nil;\n      };\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      if ($truthy($rb_lt((severity = ($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), self.level))) {\n        return true};\n      progname = ($truthy($a = progname) ? $a : self.progname);\n      if ($truthy(message)) {\n      } else if ((block !== nil)) {\n        message = Opal.yieldX(block, [])\n      } else {\n        \n        message = progname;\n        progname = self.progname;\n      };\n      self.pipe.$write(self.formatter.$call(($truthy($a = $$($nesting, 'SEVERITY_LABELS')['$[]'](severity)) ? $a : \"ANY\"), new Date(), progname, message));\n      return true;\n    }, $Logger_add$2.$$arity = -2), nil) && 'add';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/postscript\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"asciidoctor/converter/composite\");\n  self.$require(\"asciidoctor/converter/html5\");\n  self.$require(\"asciidoctor/extensions\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext\");\n  return self.$require(\"asciidoctor/js/opal_ext/logger\");\n};\n\n/* Generated by Opal 0.11.99.dev */\n(function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $send = Opal.send, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$require', '$==', '$tap', '$each', '$constants', '$const_get', '$downcase', '$to_s', '$[]=', '$-', '$upcase', '$[]', '$values', '$new', '$attr_reader', '$instance_variable_set', '$send', '$singleton_class', '$<<', '$define', '$dirname', '$absolute_path', '$__dir__', '$join', '$home', '$pwd', '$to_set', '$chr', '$each_key', '$slice', '$length', '$merge', '$default=', '$drop', '$insert']);\n  \n  self.$require(\"set\");\n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    self.$require(\"asciidoctor/js\")\n  } else {\n    nil\n  };\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting), $a, $b, $Asciidoctor$7, $Asciidoctor$9, $Asciidoctor$11, $Asciidoctor$13, $writer = nil;\n\n    \n    Opal.const_set($nesting[0], 'RUBY_ENGINE_OPAL', Opal.const_set($nesting[0], 'RUBY_ENGINE', $$$('::', 'RUBY_ENGINE'))['$=='](\"opal\"));\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'SafeMode');\n\n      var $nesting = [self].concat($parent_nesting), $SafeMode$1, $SafeMode_value_for_name$3, $SafeMode_name_for_value$4, $SafeMode_names$5;\n\n      \n      Opal.const_set($nesting[0], 'UNSAFE', 0);\n      Opal.const_set($nesting[0], 'SAFE', 1);\n      Opal.const_set($nesting[0], 'SERVER', 10);\n      Opal.const_set($nesting[0], 'SECURE', 20);\n      self.names_by_value = $send($hash2([], {}), 'tap', [], ($SafeMode$1 = function(accum){var self = $SafeMode$1.$$s || this, $$2;\n\n      \n        \n        if (accum == null) {\n          accum = nil;\n        };\n        return $send(self.$constants(false), 'each', [], ($$2 = function(sym){var self = $$2.$$s || this, $writer = nil;\n\n        \n          \n          if (sym == null) {\n            sym = nil;\n          };\n          $writer = [self.$const_get(sym, false), sym.$to_s().$downcase()];\n          $send(accum, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$2.$$s = self, $$2.$$arity = 1, $$2));}, $SafeMode$1.$$s = self, $SafeMode$1.$$arity = 1, $SafeMode$1));\n      Opal.defs(self, '$value_for_name', $SafeMode_value_for_name$3 = function $$value_for_name(name) {\n        var self = this;\n\n        return self.$const_get(name.$upcase(), false)\n      }, $SafeMode_value_for_name$3.$$arity = 1);\n      Opal.defs(self, '$name_for_value', $SafeMode_name_for_value$4 = function $$name_for_value(value) {\n        var self = this;\n        if (self.names_by_value == null) self.names_by_value = nil;\n\n        return self.names_by_value['$[]'](value)\n      }, $SafeMode_name_for_value$4.$$arity = 1);\n      Opal.defs(self, '$names', $SafeMode_names$5 = function $$names() {\n        var self = this;\n        if (self.names_by_value == null) self.names_by_value = nil;\n\n        return self.names_by_value.$values()\n      }, $SafeMode_names$5.$$arity = 0);\n    })($nesting[0], $nesting);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Compliance');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      \n      self.keys = $$$('::', 'Set').$new();\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $define$6;\n\n        \n        self.$attr_reader(\"keys\");\n        return (Opal.def(self, '$define', $define$6 = function $$define(key, value) {\n          var self = this;\n          if (self.keys == null) self.keys = nil;\n\n          \n          self.$instance_variable_set(\"\" + \"@\" + (key), value);\n          self.$singleton_class().$send(\"attr_accessor\", key);\n          self.keys['$<<'](key);\n          return nil;\n        }, $define$6.$$arity = 2), nil) && 'define';\n      })(Opal.get_singleton_class(self), $nesting);\n      self.$define(\"block_terminates_paragraph\", true);\n      self.$define(\"strict_verbatim_paragraphs\", true);\n      self.$define(\"underline_style_section_titles\", true);\n      self.$define(\"unwrap_standalone_preamble\", true);\n      self.$define(\"attribute_missing\", \"skip\");\n      self.$define(\"attribute_undefined\", \"drop-line\");\n      self.$define(\"shorthand_property_syntax\", true);\n      self.$define(\"natural_xrefs\", true);\n      self.$define(\"unique_id_start_index\", 2);\n      self.$define(\"markdown_syntax\", true);\n    })($nesting[0], $nesting);\n    if ($truthy((($a = $$($nesting, 'ROOT_DIR', 'skip_raise')) ? 'constant' : nil))) {\n    } else {\n      Opal.const_set($nesting[0], 'ROOT_DIR', $$$('::', 'File').$dirname($$$('::', 'File').$absolute_path(self.$__dir__())))\n    };\n    Opal.const_set($nesting[0], 'LIB_DIR', $$$('::', 'File').$join($$($nesting, 'ROOT_DIR'), \"lib\"));\n    Opal.const_set($nesting[0], 'DATA_DIR', $$$('::', 'File').$join($$($nesting, 'ROOT_DIR'), \"data\"));\n    Opal.const_set($nesting[0], 'USER_HOME', (function() { try {\n      return $$$('::', 'Dir').$home()\n    } catch ($err) {\n      if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n        try {\n          \n          return ($truthy($b = $$$('::', 'ENV')['$[]'](\"HOME\")) ? $b : $$$('::', 'Dir').$pwd());\n        } finally { Opal.pop_exception() }\n      } else { throw $err; }\n    }})());\n    Opal.const_set($nesting[0], 'LF', \"\\n\");\n    Opal.const_set($nesting[0], 'NULL', \"\\u0000\");\n    Opal.const_set($nesting[0], 'TAB', \"\\t\");\n    Opal.const_set($nesting[0], 'MAX_INT', 9007199254740991);\n    Opal.const_set($nesting[0], 'UTF_8', $$$($$$('::', 'Encoding'), 'UTF_8'));\n    Opal.const_set($nesting[0], 'BOM_BYTES_UTF_8', [239, 187, 191]);\n    Opal.const_set($nesting[0], 'BOM_BYTES_UTF_16LE', [255, 254]);\n    Opal.const_set($nesting[0], 'BOM_BYTES_UTF_16BE', [254, 255]);\n    Opal.const_set($nesting[0], 'FILE_READ_MODE', (function() {if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL'))) {\n      return \"r\"\n    } else {\n      return \"rb:utf-8:utf-8\"\n    }; return nil; })());\n    Opal.const_set($nesting[0], 'URI_READ_MODE', $$($nesting, 'FILE_READ_MODE'));\n    Opal.const_set($nesting[0], 'FILE_WRITE_MODE', (function() {if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL'))) {\n      return \"w\"\n    } else {\n      return \"w:utf-8\"\n    }; return nil; })());\n    Opal.const_set($nesting[0], 'DEFAULT_DOCTYPE', \"article\");\n    Opal.const_set($nesting[0], 'DEFAULT_BACKEND', \"html5\");\n    Opal.const_set($nesting[0], 'DEFAULT_STYLESHEET_KEYS', [\"\", \"DEFAULT\"].$to_set());\n    Opal.const_set($nesting[0], 'DEFAULT_STYLESHEET_NAME', \"asciidoctor.css\");\n    Opal.const_set($nesting[0], 'BACKEND_ALIASES', $hash2([\"html\", \"docbook\"], {\"html\": \"html5\", \"docbook\": \"docbook5\"}));\n    Opal.const_set($nesting[0], 'DEFAULT_PAGE_WIDTHS', $hash2([\"docbook\"], {\"docbook\": 425}));\n    Opal.const_set($nesting[0], 'DEFAULT_EXTENSIONS', $hash2([\"html\", \"docbook\", \"pdf\", \"epub\", \"manpage\", \"asciidoc\"], {\"html\": \".html\", \"docbook\": \".xml\", \"pdf\": \".pdf\", \"epub\": \".epub\", \"manpage\": \".man\", \"asciidoc\": \".adoc\"}));\n    Opal.const_set($nesting[0], 'ASCIIDOC_EXTENSIONS', $hash2([\".adoc\", \".asciidoc\", \".asc\", \".ad\", \".txt\"], {\".adoc\": true, \".asciidoc\": true, \".asc\": true, \".ad\": true, \".txt\": true}));\n    Opal.const_set($nesting[0], 'SETEXT_SECTION_LEVELS', $hash2([\"=\", \"-\", \"~\", \"^\", \"+\"], {\"=\": 0, \"-\": 1, \"~\": 2, \"^\": 3, \"+\": 4}));\n    Opal.const_set($nesting[0], 'ADMONITION_STYLES', [\"NOTE\", \"TIP\", \"IMPORTANT\", \"WARNING\", \"CAUTION\"].$to_set());\n    Opal.const_set($nesting[0], 'ADMONITION_STYLE_HEADS', $send($$$('::', 'Set').$new(), 'tap', [], ($Asciidoctor$7 = function(accum){var self = $Asciidoctor$7.$$s || this, $$8;\n\n    \n      \n      if (accum == null) {\n        accum = nil;\n      };\n      return $send($$($nesting, 'ADMONITION_STYLES'), 'each', [], ($$8 = function(s){var self = $$8.$$s || this;\n\n      \n        \n        if (s == null) {\n          s = nil;\n        };\n        return accum['$<<'](s.$chr());}, $$8.$$s = self, $$8.$$arity = 1, $$8));}, $Asciidoctor$7.$$s = self, $Asciidoctor$7.$$arity = 1, $Asciidoctor$7)));\n    Opal.const_set($nesting[0], 'PARAGRAPH_STYLES', [\"comment\", \"example\", \"literal\", \"listing\", \"normal\", \"open\", \"pass\", \"quote\", \"sidebar\", \"source\", \"verse\", \"abstract\", \"partintro\"].$to_set());\n    Opal.const_set($nesting[0], 'VERBATIM_STYLES', [\"literal\", \"listing\", \"source\", \"verse\"].$to_set());\n    Opal.const_set($nesting[0], 'DELIMITED_BLOCKS', $hash2([\"--\", \"----\", \"....\", \"====\", \"****\", \"____\", \"++++\", \"|===\", \",===\", \":===\", \"!===\", \"////\", \"```\"], {\"--\": [\"open\", [\"comment\", \"example\", \"literal\", \"listing\", \"pass\", \"quote\", \"sidebar\", \"source\", \"verse\", \"admonition\", \"abstract\", \"partintro\"].$to_set()], \"----\": [\"listing\", [\"literal\", \"source\"].$to_set()], \"....\": [\"literal\", [\"listing\", \"source\"].$to_set()], \"====\": [\"example\", [\"admonition\"].$to_set()], \"****\": [\"sidebar\", $$$('::', 'Set').$new()], \"____\": [\"quote\", [\"verse\"].$to_set()], \"++++\": [\"pass\", [\"stem\", \"latexmath\", \"asciimath\"].$to_set()], \"|===\": [\"table\", $$$('::', 'Set').$new()], \",===\": [\"table\", $$$('::', 'Set').$new()], \":===\": [\"table\", $$$('::', 'Set').$new()], \"!===\": [\"table\", $$$('::', 'Set').$new()], \"////\": [\"comment\", $$$('::', 'Set').$new()], \"```\": [\"fenced_code\", $$$('::', 'Set').$new()]}));\n    Opal.const_set($nesting[0], 'DELIMITED_BLOCK_HEADS', $send($hash2([], {}), 'tap', [], ($Asciidoctor$9 = function(accum){var self = $Asciidoctor$9.$$s || this, $$10;\n\n    \n      \n      if (accum == null) {\n        accum = nil;\n      };\n      return $send($$($nesting, 'DELIMITED_BLOCKS'), 'each_key', [], ($$10 = function(k){var self = $$10.$$s || this, $writer = nil;\n\n      \n        \n        if (k == null) {\n          k = nil;\n        };\n        $writer = [k.$slice(0, 2), true];\n        $send(accum, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];}, $$10.$$s = self, $$10.$$arity = 1, $$10));}, $Asciidoctor$9.$$s = self, $Asciidoctor$9.$$arity = 1, $Asciidoctor$9)));\n    Opal.const_set($nesting[0], 'DELIMITED_BLOCK_TAILS', $send($hash2([], {}), 'tap', [], ($Asciidoctor$11 = function(accum){var self = $Asciidoctor$11.$$s || this, $$12;\n\n    \n      \n      if (accum == null) {\n        accum = nil;\n      };\n      return $send($$($nesting, 'DELIMITED_BLOCKS'), 'each_key', [], ($$12 = function(k){var self = $$12.$$s || this, $writer = nil;\n\n      \n        \n        if (k == null) {\n          k = nil;\n        };\n        if (k.$length()['$=='](4)) {\n          \n          $writer = [k, k['$[]']($rb_minus(k.$length(), 1))];\n          $send(accum, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        } else {\n          return nil\n        };}, $$12.$$s = self, $$12.$$arity = 1, $$12));}, $Asciidoctor$11.$$s = self, $Asciidoctor$11.$$arity = 1, $Asciidoctor$11)));\n    Opal.const_set($nesting[0], 'CAPTION_ATTR_NAMES', $hash2([\"example\", \"figure\", \"listing\", \"table\"], {\"example\": \"example-caption\", \"figure\": \"figure-caption\", \"listing\": \"listing-caption\", \"table\": \"table-caption\"}));\n    Opal.const_set($nesting[0], 'LAYOUT_BREAK_CHARS', $hash2([\"'\", \"<\"], {\"'\": \"thematic_break\", \"<\": \"page_break\"}));\n    Opal.const_set($nesting[0], 'MARKDOWN_THEMATIC_BREAK_CHARS', $hash2([\"-\", \"*\", \"_\"], {\"-\": \"thematic_break\", \"*\": \"thematic_break\", \"_\": \"thematic_break\"}));\n    Opal.const_set($nesting[0], 'HYBRID_LAYOUT_BREAK_CHARS', $$($nesting, 'LAYOUT_BREAK_CHARS').$merge($$($nesting, 'MARKDOWN_THEMATIC_BREAK_CHARS')));\n    Opal.const_set($nesting[0], 'NESTABLE_LIST_CONTEXTS', [\"ulist\", \"olist\", \"dlist\"]);\n    Opal.const_set($nesting[0], 'ORDERED_LIST_STYLES', [\"arabic\", \"loweralpha\", \"lowerroman\", \"upperalpha\", \"upperroman\"]);\n    Opal.const_set($nesting[0], 'ORDERED_LIST_KEYWORDS', $hash2([\"loweralpha\", \"lowerroman\", \"upperalpha\", \"upperroman\"], {\"loweralpha\": \"a\", \"lowerroman\": \"i\", \"upperalpha\": \"A\", \"upperroman\": \"I\"}));\n    Opal.const_set($nesting[0], 'ATTR_REF_HEAD', \"{\");\n    Opal.const_set($nesting[0], 'LIST_CONTINUATION', \"+\");\n    Opal.const_set($nesting[0], 'HARD_LINE_BREAK', \" +\");\n    Opal.const_set($nesting[0], 'LINE_CONTINUATION', \" \\\\\");\n    Opal.const_set($nesting[0], 'LINE_CONTINUATION_LEGACY', \" +\");\n    Opal.const_set($nesting[0], 'BLOCK_MATH_DELIMITERS', $hash2([\"asciimath\", \"latexmath\"], {\"asciimath\": [\"\\\\$\", \"\\\\$\"], \"latexmath\": [\"\\\\[\", \"\\\\]\"]}));\n    Opal.const_set($nesting[0], 'INLINE_MATH_DELIMITERS', $hash2([\"asciimath\", \"latexmath\"], {\"asciimath\": [\"\\\\$\", \"\\\\$\"], \"latexmath\": [\"\\\\(\", \"\\\\)\"]}));\n    \n    $writer = [\"asciimath\"];\n    $send(Opal.const_set($nesting[0], 'STEM_TYPE_ALIASES', $hash2([\"latexmath\", \"latex\", \"tex\"], {\"latexmath\": \"latexmath\", \"latex\": \"latexmath\", \"tex\": \"latexmath\"})), 'default=', Opal.to_a($writer));\n    $writer[$rb_minus($writer[\"length\"], 1)];;\n    Opal.const_set($nesting[0], 'FONT_AWESOME_VERSION', \"4.7.0\");\n    Opal.const_set($nesting[0], 'HIGHLIGHT_JS_VERSION', \"9.15.6\");\n    Opal.const_set($nesting[0], 'MATHJAX_VERSION', \"2.7.5\");\n    Opal.const_set($nesting[0], 'FLEXIBLE_ATTRIBUTES', [\"sectnums\"]);\n    Opal.const_set($nesting[0], 'INTRINSIC_ATTRIBUTES', $hash2([\"startsb\", \"endsb\", \"vbar\", \"caret\", \"asterisk\", \"tilde\", \"plus\", \"backslash\", \"backtick\", \"blank\", \"empty\", \"sp\", \"two-colons\", \"two-semicolons\", \"nbsp\", \"deg\", \"zwsp\", \"quot\", \"apos\", \"lsquo\", \"rsquo\", \"ldquo\", \"rdquo\", \"wj\", \"brvbar\", \"pp\", \"cpp\", \"amp\", \"lt\", \"gt\"], {\"startsb\": \"[\", \"endsb\": \"]\", \"vbar\": \"|\", \"caret\": \"^\", \"asterisk\": \"*\", \"tilde\": \"~\", \"plus\": \"&#43;\", \"backslash\": \"\\\\\", \"backtick\": \"`\", \"blank\": \"\", \"empty\": \"\", \"sp\": \" \", \"two-colons\": \"::\", \"two-semicolons\": \";;\", \"nbsp\": \"&#160;\", \"deg\": \"&#176;\", \"zwsp\": \"&#8203;\", \"quot\": \"&#34;\", \"apos\": \"&#39;\", \"lsquo\": \"&#8216;\", \"rsquo\": \"&#8217;\", \"ldquo\": \"&#8220;\", \"rdquo\": \"&#8221;\", \"wj\": \"&#8288;\", \"brvbar\": \"&#166;\", \"pp\": \"&#43;&#43;\", \"cpp\": \"C&#43;&#43;\", \"amp\": \"&\", \"lt\": \"<\", \"gt\": \">\"}));\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    } else {\n      nil\n    };\n    Opal.const_set($nesting[0], 'QUOTE_SUBS', $send($hash2([], {}), 'tap', [], ($Asciidoctor$13 = function(accum){var self = $Asciidoctor$13.$$s || this, normal = nil, compat = nil;\n\n    \n      \n      if (accum == null) {\n        accum = nil;\n      };\n      \n      $writer = [false, (normal = [[\"strong\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?\\\\*\\\\*(\" + ($$($nesting, 'CC_ALL')) + \"+?)\\\\*\\\\*\", 'm')], [\"strong\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?\\\\*(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\*(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"double\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?\\\"`(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)`\\\"(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"single\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:`}])(?:\\\\[([^\\\\]]+)\\\\])?'`(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)`'(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"monospaced\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?``(\" + ($$($nesting, 'CC_ALL')) + \"+?)``\", 'm')], [\"monospaced\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:\\\"'`}])(?:\\\\[([^\\\\]]+)\\\\])?`(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)`(?![\" + ($$($nesting, 'CC_WORD')) + \"\\\"'`])\", 'm')], [\"emphasis\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?__(\" + ($$($nesting, 'CC_ALL')) + \"+?)__\", 'm')], [\"emphasis\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?_(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)_(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"mark\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?##(\" + ($$($nesting, 'CC_ALL')) + \"+?)##\", 'm')], [\"mark\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \"&;:}])(?:\\\\[([^\\\\]]+)\\\\])?#(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)#(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"superscript\", \"unconstrained\", /\\\\?(?:\\[([^\\]]+)\\])?\\^(\\S+?)\\^/], [\"subscript\", \"unconstrained\", /\\\\?(?:\\[([^\\]]+)\\])?~(\\S+?)~/]])];\n      $send(accum, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [true, (compat = normal.$drop(0))];\n      $send(accum, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [2, [\"double\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?``(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)''(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')]];\n      $send(compat, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [3, [\"single\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?`(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)'(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')]];\n      $send(compat, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [4, [\"monospaced\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?\\\\+\\\\+(\" + ($$($nesting, 'CC_ALL')) + \"+?)\\\\+\\\\+\", 'm')]];\n      $send(compat, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [5, [\"monospaced\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?\\\\+(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\+(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')]];\n      $send(compat, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      return compat.$insert(3, [\"emphasis\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?'(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)'(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')]);}, $Asciidoctor$13.$$s = self, $Asciidoctor$13.$$arity = 1, $Asciidoctor$13)));\n    Opal.const_set($nesting[0], 'REPLACEMENTS', [[/\\\\?\\(C\\)/, \"&#169;\", \"none\"], [/\\\\?\\(R\\)/, \"&#174;\", \"none\"], [/\\\\?\\(TM\\)/, \"&#8482;\", \"none\"], [/(?: |\\n|^|\\\\)--(?: |\\n|$)/, \"&#8201;&#8212;&#8201;\", \"none\"], [new RegExp(\"\" + \"(\" + ($$($nesting, 'CG_WORD')) + \")\\\\\\\\?--(?=\" + ($$($nesting, 'CG_WORD')) + \")\"), \"&#8212;&#8203;\", \"leading\"], [/\\\\?\\.\\.\\./, \"&#8230;&#8203;\", \"none\"], [/\\\\?`'/, \"&#8217;\", \"none\"], [new RegExp(\"\" + \"(\" + ($$($nesting, 'CG_ALNUM')) + \")\\\\\\\\?'(?=\" + ($$($nesting, 'CG_ALPHA')) + \")\"), \"&#8217;\", \"leading\"], [/\\\\?-&gt;/, \"&#8594;\", \"none\"], [/\\\\?=&gt;/, \"&#8658;\", \"none\"], [/\\\\?&lt;-/, \"&#8592;\", \"none\"], [/\\\\?&lt;=/, \"&#8656;\", \"none\"], [/\\\\?(&)amp;((?:[a-zA-Z][a-zA-Z]+\\d{0,2}|#\\d\\d\\d{0,4}|#x[\\da-fA-F][\\da-fA-F][\\da-fA-F]{0,3});)/, \"\", \"bounding\"]]);\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    } else {\n      nil\n    };\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    } else {\n      nil\n    };\n  })($nesting[0], $nesting);\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/core_ext\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/helpers\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/logging\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/rx\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/substitutors\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/version\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/abstract_node\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/abstract_block\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/attribute_list\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/block\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/callouts\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/converter\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/document\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/inline\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/list\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/parser\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/path_resolver\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/reader\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/section\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/stylesheets\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/table\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/writer\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/load\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/convert\");\n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    \n    self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/syntax_highlighter\");\n    self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/timings\");\n    return self.$require(\"asciidoctor/js/postscript\");\n  } else {\n    return nil\n  };\n})(Opal);\n\n\n/* global Opal */\n\n/**\n * Convert a JSON to an (Opal) Hash.\n * @private\n */\nvar toHash = function (object) {\n  return object && !object.$$is_hash ? Opal.hash2(Object.keys(object), object) : object\n}\n\n/**\n * Convert an (Opal) Hash to JSON.\n * @private\n */\nvar fromHash = function (hash) {\n  var object = {}\n  var data = hash.$$smap\n  for (var key in data) {\n    object[key] = data[key]\n  }\n  return object\n}\n\nvar fromHashKeys = function (hash) {\n  var object = {}\n  var data = hash.$$keys\n  for (var key in data) {\n    object[key.toString()] = data[key].value\n  }\n  return object\n}\n\n/**\n * @private\n */\nvar prepareOptions = function (options) {\n  options = toHash(options)\n  if (options) {\n    var attrs = options['$[]']('attributes')\n    if (attrs && typeof attrs === 'object' && attrs.constructor.name === 'Object') {\n      options = options.$dup()\n      options['$[]=']('attributes', toHash(attrs))\n    }\n  }\n  return options\n}\n\nfunction initializeClass (superClass, className, functions, defaultFunctions, argProxyFunctions) {\n  var scope = Opal.klass(Opal.Object, superClass, className, function () {})\n  var postConstructFunction\n  var initializeFunction\n  var constructorFunction\n  var defaultFunctionsOverridden = {}\n  for (var functionName in functions) {\n    if (functions.hasOwnProperty(functionName)) {\n      (function (functionName) {\n        var userFunction = functions[functionName]\n        if (functionName === 'postConstruct') {\n          postConstructFunction = userFunction\n        } else if (functionName === 'initialize') {\n          initializeFunction = userFunction\n        } else if (functionName === 'constructor') {\n          constructorFunction = userFunction\n        } else {\n          if (defaultFunctions && defaultFunctions.hasOwnProperty(functionName)) {\n            defaultFunctionsOverridden[functionName] = true\n          }\n          Opal.def(scope, '$' + functionName, function () {\n            var args\n            if (argProxyFunctions && argProxyFunctions.hasOwnProperty(functionName)) {\n              args = argProxyFunctions[functionName](arguments)\n            } else {\n              args = arguments\n            }\n            return userFunction.apply(this, args)\n          })\n        }\n      }(functionName))\n    }\n  }\n  var initialize\n  if (typeof constructorFunction === 'function') {\n    initialize = function () {\n      var args = Array.from(arguments)\n      for (var i = 0; i < args.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof args[i] === 'object' && '$$smap' in args[i]) {\n          args[i] = fromHash(args[i])\n        }\n      }\n      args.unshift(null)\n      var result = new (Function.prototype.bind.apply(constructorFunction, args)) // eslint-disable-line\n      Object.assign(this, result)\n      if (typeof postConstructFunction === 'function') {\n        postConstructFunction.bind(this)()\n      }\n    }\n  } else if (typeof initializeFunction === 'function') {\n    initialize = function () {\n      var args = Array.from(arguments)\n      for (var i = 0; i < args.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof args[i] === 'object' && '$$smap' in args[i]) {\n          args[i] = fromHash(args[i])\n        }\n      }\n      initializeFunction.apply(this, args)\n      if (typeof postConstructFunction === 'function') {\n        postConstructFunction.bind(this)()\n      }\n    }\n  } else {\n    initialize = function () {\n      Opal.send(this, Opal.find_super_dispatcher(this, 'initialize', initialize))\n      if (typeof postConstructFunction === 'function') {\n        postConstructFunction.bind(this)()\n      }\n    }\n  }\n  Opal.def(scope, '$initialize', initialize)\n  Opal.def(scope, 'super', function (func) {\n    if (typeof func === 'function') {\n      Opal.send(this, Opal.find_super_dispatcher(this, func.name, func))\n    } else {\n      // Bind the initialize function to super();\n      var argumentsList = Array.from(arguments)\n      for (var i = 0; i < argumentsList.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof argumentsList[i] === 'object') {\n          argumentsList[i] = toHash(argumentsList[i])\n        }\n      }\n      Opal.send(this, Opal.find_super_dispatcher(this, 'initialize', initialize), argumentsList)\n    }\n  })\n  if (defaultFunctions) {\n    for (var defaultFunctionName in defaultFunctions) {\n      if (defaultFunctions.hasOwnProperty(defaultFunctionName) && !defaultFunctionsOverridden.hasOwnProperty(defaultFunctionName)) {\n        (function (defaultFunctionName) {\n          var defaultFunction = defaultFunctions[defaultFunctionName]\n          Opal.def(scope, '$' + defaultFunctionName, function () {\n            return defaultFunction.apply(this, arguments)\n          })\n        }(defaultFunctionName))\n      }\n    }\n  }\n  return scope\n}\n\n// Asciidoctor API\n\n/**\n * @namespace\n * @description\n * The main application interface (API) for Asciidoctor.\n * This API provides methods to parse AsciiDoc content and convert it to various output formats using built-in or third-party converters.\n *\n * An AsciiDoc document can be as simple as a single line of content,\n * though it more commonly starts with a document header that declares the document title and document attribute definitions.\n * The document header is then followed by zero or more section titles, optionally nested, to organize the paragraphs, blocks, lists, etc. of the document.\n *\n * By default, the processor converts the AsciiDoc document to HTML 5 using a built-in converter.\n * However, this behavior can be changed by specifying a different backend (e.g., +docbook+).\n * A backend is a keyword for an output format (e.g., DocBook).\n * That keyword, in turn, is used to select a converter, which carries out the request to convert the document to that format.\n *\n * @example\n * asciidoctor.convertFile('document.adoc', { 'safe': 'safe' }) // Convert an AsciiDoc file\n *\n * asciidoctor.convert(\"I'm using *Asciidoctor* version {asciidoctor-version}.\", { 'safe': 'safe' }) // Convert an AsciiDoc string\n *\n * const doc = asciidoctor.loadFile('document.adoc', { 'safe': 'safe' }) // Parse an AsciiDoc file into a document object\n *\n * const doc = asciidoctor.load(\"= Document Title\\n\\nfirst paragraph\\n\\nsecond paragraph\", { 'safe': 'safe' }) // Parse an AsciiDoc string into a document object\n */\nvar Asciidoctor = Opal.Asciidoctor['$$class']\n\n/**\n * Get Asciidoctor core version number.\n *\n * @returns {string} - the version number of Asciidoctor core.\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.getCoreVersion = function () {\n  return this.$$const.VERSION\n}\n\n/**\n * Get Asciidoctor.js runtime environment information.\n *\n * @returns {Object} - the runtime environment including the ioModule, the platform, the engine and the framework.\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.getRuntime = function () {\n  return {\n    ioModule: Opal.const_get_qualified('::', 'JAVASCRIPT_IO_MODULE'),\n    platform: Opal.const_get_qualified('::', 'JAVASCRIPT_PLATFORM'),\n    engine: Opal.const_get_qualified('::', 'JAVASCRIPT_ENGINE'),\n    framework: Opal.const_get_qualified('::', 'JAVASCRIPT_FRAMEWORK')\n  }\n}\n\n/**\n * Parse the AsciiDoc source input into an {@link Document} and convert it to the specified backend format.\n *\n * Accepts input as a Buffer or String.\n *\n * @param {string|Buffer} input - AsciiDoc input as String or Buffer\n * @param {Object} options - a JSON of options to control processing (default: {})\n * @returns {string|Document} - the {@link Document} object if the converted String is written to a file,\n * otherwise the converted String\n * @example\n * var input = '= Hello, AsciiDoc!\\n' +\n *   'Guillaume Grossetie <ggrossetie@example.com>\\n\\n' +\n *   'An introduction to http://asciidoc.org[AsciiDoc].\\n\\n' +\n *   '== First Section\\n\\n' +\n *   '* item 1\\n' +\n *   '* item 2\\n';\n *\n * var html = asciidoctor.convert(input);\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.convert = function (input, options) {\n  if (typeof input === 'object' && input.constructor.name === 'Buffer') {\n    input = input.toString('utf8')\n  }\n  var result = this.$convert(input, prepareOptions(options))\n  return result === Opal.nil ? '' : result\n}\n\n/**\n * Parse the AsciiDoc source input into an {@link Document} and convert it to the specified backend format.\n *\n * @param {string} filename - source filename\n * @param {Object} options - a JSON of options to control processing (default: {})\n * @returns {string|Document} - the {@link Document} object if the converted String is written to a file,\n * otherwise the converted String\n * @example\n * var html = asciidoctor.convertFile('./document.adoc');\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.convertFile = function (filename, options) {\n  return this.$convert_file(filename, prepareOptions(options))\n}\n\n/**\n * Parse the AsciiDoc source input into an {@link Document}\n *\n * Accepts input as a Buffer or String.\n *\n * @param {string|Buffer} input - AsciiDoc input as String or Buffer\n * @param {Object} options - a JSON of options to control processing (default: {})\n * @returns {Document} - the {@link Document} object\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.load = function (input, options) {\n  if (typeof input === 'object' && input.constructor.name === 'Buffer') {\n    input = input.toString('utf8')\n  }\n  return this.$load(input, prepareOptions(options))\n}\n\n/**\n * Parse the contents of the AsciiDoc source file into an {@link Document}\n *\n * @param {string} filename - source filename\n * @param {Object} options - a JSON of options to control processing (default: {})\n * @returns {Document} - the {@link Document} object\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.loadFile = function (filename, options) {\n  return this.$load_file(filename, prepareOptions(options))\n}\n\n// AbstractBlock API\n\n/**\n * @namespace\n * @extends AbstractNode\n */\nvar AbstractBlock = Opal.Asciidoctor.AbstractBlock\n\n/**\n * Append a block to this block's list of child blocks.\n * @param {AbstractBlock} block - the block to append\n * @returns {AbstractBlock} - the parent block to which this block was appended.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.append = function (block) {\n  this.$append(block)\n  return this\n}\n\n/**\n * Get the String title of this Block with title substitions applied\n *\n * The following substitutions are applied to block and section titles:\n *\n * <code>specialcharacters</code>, <code>quotes</code>, <code>replacements</code>, <code>macros</code>, <code>attributes</code> and <code>post_replacements</code>\n *\n * @returns {string} - the converted String title for this Block, or undefined if the title is not set.\n * @example\n * block.title // \"Foo 3^ # {two-colons} Bar(1)\"\n * block.getTitle(); // \"Foo 3^ # :: Bar(1)\"\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getTitle = function () {\n  var title = this.$title()\n  return title === Opal.nil ? undefined : title\n}\n\n/**\n * Set the String block title.\n *\n * @param {string} title - The block title\n * @returns {string} - the new String title assigned to this Block.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.setTitle = function (title) {\n  return this['$title='](title)\n}\n\n/**\n * Convenience method that returns the interpreted title of the Block\n * with the caption prepended.\n * Concatenates the value of this Block's caption instance variable and the\n * return value of this Block's title method. No space is added between the\n * two values. If the Block does not have a caption, the interpreted title is\n * returned.\n *\n * @returns {string} - the converted String title prefixed with the caption, or just the converted String title if no caption is set\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getCaptionedTitle = function () {\n  return this.$captioned_title()\n}\n\n/**\n * Get the style (block type qualifier) for this block.\n *\n * @returns {string} - the style for this block\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getStyle = function () {\n  var style = this.style\n  return style === Opal.nil ? undefined : style\n}\n\n/**\n * Set the style for this block.\n *\n * @param {string} style - Style\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.setStyle = function (style) {\n  this.style = style\n}\n\n/**\n * Get the location in the AsciiDoc source where this block begins.\n *\n * @returns {string} - the style for this block\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getSourceLocation = function () {\n  var sourceLocation = this.source_location\n  if (sourceLocation === Opal.nil) {\n    return undefined\n  }\n  sourceLocation['getFile'] = function () {\n    var file = this.file\n    return file === Opal.nil ? undefined : file\n  }\n  sourceLocation['getDirectory'] = function () {\n    var dir = this.dir\n    return dir === Opal.nil ? undefined : dir\n  }\n  sourceLocation['getPath'] = function () {\n    var path = this.path\n    return path === Opal.nil ? undefined : path\n  }\n  sourceLocation['getLineNumber'] = function () {\n    var lineno = this.lineno\n    return lineno === Opal.nil ? undefined : lineno\n  }\n  return sourceLocation\n}\n\n/**\n * Get the caption for this block.\n *\n * @returns {string} - the caption for this block\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getCaption = function () {\n  var caption = this.$caption()\n  return caption === Opal.nil ? undefined : caption\n}\n\n/**\n * Set the caption for this block.\n *\n * @param {string} caption - Caption\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.setCaption = function (caption) {\n  this.caption = caption\n}\n\n/**\n * Get the level of this section or the section level in which this block resides.\n *\n * @returns {number} - the level (Integer) of this section\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getLevel = function () {\n  var level = this.level\n  return level === Opal.nil ? undefined : level\n}\n\n/**\n * Get the substitution keywords to be applied to the contents of this block.\n *\n * @returns {Array<string>} - the list of {string} substitution keywords associated with this block.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getSubstitutions = function () {\n  return this.subs\n}\n\n/**\n * Check whether a given substitution keyword is present in the substitutions for this block.\n *\n * @returns {boolean} - whether the substitution is present on this block.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.hasSubstitution = function (substitution) {\n  return this['$sub?'](substitution)\n}\n\n/**\n * Remove the specified substitution keyword from the list of substitutions for this block.\n *\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.removeSubstitution = function (substitution) {\n  this.$remove_sub(substitution)\n}\n\n/**\n * Checks if the {@link AbstractBlock} contains any child blocks.\n *\n * @returns {boolean} - whether the {@link AbstractBlock} has child blocks.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.hasBlocks = function () {\n  return this.blocks.length > 0\n}\n\n/**\n * Get the list of {@link AbstractBlock} sub-blocks for this block.\n *\n * @returns {Array<AbstractBlock>} - a list of {@link AbstractBlock} sub-blocks\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getBlocks = function () {\n  return this.blocks\n}\n\n/**\n * Get the converted result of the child blocks by converting the children appropriate to content model that this block supports.\n *\n * @returns {string} - the converted result of the child blocks\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getContent = function () {\n  return this.$content()\n}\n\n/**\n * Get the converted content for this block.\n * If the block has child blocks, the content method should cause them to be converted\n * and returned as content that can be included in the parent block's template.\n *\n * @returns {string} - the converted String content for this block\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.convert = function () {\n  return this.$convert()\n}\n\n/**\n * Query for all descendant block-level nodes in the document tree\n * that match the specified selector (context, style, id, and/or role).\n * If a function block is given, it's used as an additional filter.\n * If no selector or function block is supplied, all block-level nodes in the tree are returned.\n * @param {Object} [selector]\n * @param {function} [block]\n * @example\n * doc.findBy({'context': 'section'});\n * // => { level: 0, title: \"Hello, AsciiDoc!\", blocks: 0 }\n * // => { level: 1, title: \"First Section\", blocks: 1 }\n *\n * doc.findBy({'context': 'section'}, function (section) { return section.getLevel() === 1; });\n * // => { level: 1, title: \"First Section\", blocks: 1 }\n *\n * doc.findBy({'context': 'listing', 'style': 'source'});\n * // => { context: :listing, content_model: :verbatim, style: \"source\", lines: 1 }\n *\n * @returns {Array<AbstractBlock>} - a list of block-level nodes that match the filter or an empty list if no matches are found\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.findBy = function (selector, block) {\n  if (typeof block === 'undefined' && typeof selector === 'function') {\n    return Opal.send(this, 'find_by', null, selector)\n  } else if (typeof block === 'function') {\n    return Opal.send(this, 'find_by', [toHash(selector)], block)\n  } else {\n    return this.$find_by(toHash(selector))\n  }\n}\n\n/**\n * Get the source line number where this block started.\n * @returns {number} - the source line number where this block started\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getLineNumber = function () {\n  var lineno = this.$lineno()\n  return lineno === Opal.nil ? undefined : lineno\n}\n\n/**\n * Check whether this block has any child Section objects.\n * Only applies to Document and Section instances.\n * @returns {boolean} - true if this block has child Section objects, otherwise false\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.hasSections = function () {\n  return this['$sections?']()\n}\n\n/**\n * Get the Array of child Section objects.\n * Only applies to Document and Section instances.\n * @memberof AbstractBlock\n * @returns {Array<Section>} - an {Array} of {@link Section} objects\n */\nAbstractBlock.prototype.getSections = function () {\n  return this.$sections()\n}\n\n/**\n * Get the numeral of this block (if section, relative to parent, otherwise absolute).\n * Only assigned to section if automatic section numbering is enabled.\n * Only assigned to formal block (block with title) if corresponding caption attribute is present.\n * If the section is an appendix, the numeral is a letter (starting with A).\n * @returns {string} - the numeral\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getNumeral = function () {\n  return this.$numeral()\n}\n\n/**\n * Set the numeral of this block.\n * @param {string} value - The numeral value\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.setNumeral = function (value) {\n  this['$numeral='](value)\n}\n\n/**\n * A convenience method that checks whether the title of this block is defined.\n *\n * @returns {boolean} - a {boolean} indicating whether this block has a title.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.hasTitle = function () {\n  return this['$title?']()\n}\n\n// Section API\n\n/**\n * @description\n * Methods for managing sections of AsciiDoc content in a document.\n *\n * @example\n * <pre>\n *   section = asciidoctor.Section.create()\n *   section.setTitle('Section 1')\n *   section.setId('sect1')\n *   section.getBlocks().length // 0\n *   section.getId() // \"sect1\"\n *   section.append(newBlock)\n *   section.getBlocks().length // 1\n * </pre>\n * @namespace\n * @extends AbstractBlock\n */\nvar Section = Opal.Asciidoctor.Section\n\n/**\n * Create a {Section} object.\n * @param {AbstractBlock} [parent] - The parent AbstractBlock. If set, must be a Document or Section object (default: undefined)\n * @param {number} [level] - The Integer level of this section (default: 1 more than parent level or 1 if parent not defined)\n * @param {boolean} [numbered] - A Boolean indicating whether numbering is enabled for this Section (default: false)\n * @param {Object} [opts] - An optional JSON of options (default: {})\n * @returns {Section} - a new {Section} object\n * @memberof Section\n */\nSection.create = function (parent, level, numbered, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$new(parent, level, numbered, toHash(opts))\n}\n\n/**\n * Set the level of this section or the section level in which this block resides.\n * @param {number} level - Level (Integer)\n * @memberof AbstractBlock\n */\nSection.prototype.setLevel = function (level) {\n  this.level = level\n}\n\n/**\n * Get the 0-based index order of this section within the parent block.\n * @returns {number}\n * @memberof Section\n */\nSection.prototype.getIndex = function () {\n  return this.index\n}\n\n/**\n * Set the 0-based index order of this section within the parent block.\n * @param {string} index - The index order of this section\n * @memberof Section\n */\nSection.prototype.setIndex = function (index) {\n  this.index = index\n}\n\n/**\n * Get the section name of this section.\n * @returns {string|undefined}\n * @memberof Section\n */\nSection.prototype.getSectionName = function () {\n  var sectname = this.sectname\n  return sectname === Opal.nil ? undefined : sectname\n}\n\n/**\n * Set the section name of this section.\n * @param {string} value - The section name\n * @memberof Section\n */\nSection.prototype.setSectionName = function (value) {\n  this.sectname = value\n}\n\n/**\n * Get the flag to indicate whether this is a special section or a child of one.\n * @returns {boolean}\n * @memberof Section\n */\nSection.prototype.isSpecial = function () {\n  return this.special\n}\n\n/**\n * Set the flag to indicate whether this is a special section or a child of one.\n * @param {boolean} value - A flag to indicated if this is a special section\n * @memberof Section\n */\nSection.prototype.setSpecial = function (value) {\n  this.special = value\n}\n\n/**\n * Get the state of the numbered attribute at this section (need to preserve for creating TOC).\n * @returns {boolean}\n * @memberof Section\n */\nSection.prototype.isNumbered = function () {\n  return this.numbered\n}\n\n/**\n * Get the caption for this section (only relevant for appendices).\n * @returns {string}\n * @memberof Section\n */\nSection.prototype.getCaption = function () {\n  var value = this.caption\n  return value === Opal.nil ? undefined : value\n}\n\n/**\n * Get the name of the Section (title)\n * @returns {string}\n * @see {@link AbstractBlock#getTitle}\n * @memberof Section\n */\nSection.prototype.getName = function () {\n  return this.getTitle()\n}\n\n/**\n * @description\n * Methods for managing AsciiDoc content blocks.\n *\n * @example\n * block = Asciidoctor::Block.new(parent, :paragraph, source: '_This_ is a <test>')\n * block.content\n * => \"<em>This</em> is a &lt;test&gt;\"\n *\n * @namespace\n * @extends AbstractBlock\n */\nvar Block = Opal.Asciidoctor.Block\n\n/**\n * Create a {Block} object.\n * @param {AbstractBlock} parent - The parent {AbstractBlock} with a compound content model to which this {Block} will be appended.\n * @param {string} context - The context name for the type of content (e.g., \"paragraph\").\n * @param {Object} [opts] - a JSON of options to customize block initialization: (default: {})\n * @param {string} opts.content_model - indicates whether blocks can be nested in this {Block} (\"compound\"),\n * otherwise how the lines should be processed (\"simple\", \"verbatim\", \"raw\", \"empty\"). (default: \"simple\")\n * @param {Object} opts.attributes - a JSON of attributes (key/value pairs) to assign to this {Block}. (default: {})\n * @param {string|Array<string>} opts.source - a String or {Array} of raw source for this {Block}. (default: undefined)\n *\n * IMPORTANT: If you don't specify the `subs` option, you must explicitly call the `commit_subs` method to resolve and assign the substitutions\n * to this block (which are resolved from the `subs` attribute, if specified, or the default substitutions based on this block's context).\n * If you want to use the default subs for a block, pass the option `subs: \"default\"`.\n * You can override the default subs using the `default_subs` option.\n *\n * @returns {Block} - a new {Block} object\n * @memberof Block\n */\nBlock.create = function (parent, context, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$new(parent, context, toHash(opts))\n}\n\n/**\n * Get the source of this block.\n * @returns {string} - the String source of this block.\n * @memberof Block\n */\nBlock.prototype.getSource = function () {\n  return this.$source()\n}\n\n/**\n * Get the source lines of this block.\n * @returns {Array<string>} - the String {Array} of source lines for this block.\n * @memberof Block\n */\nBlock.prototype.getSourceLines = function () {\n  return this.lines\n}\n\n// AbstractNode API\n\n/**\n * @namespace\n * @description\n * An abstract base class that provides state and methods for managing a node of AsciiDoc content.\n * The state and methods on this class are common to all content segments in an AsciiDoc document.\n */\nvar AbstractNode = Opal.Asciidoctor.AbstractNode\n\n/**\n * Apply the specified substitutions to the text.\n * If no substitutions are specified, the following substitutions are applied:\n * <code>specialcharacters</code>, <code>quotes</code>, <code>attributes</code>, <code>replacements</code>, <code>macros</code>, and <code>post_replacements</code>.\n *\n * @param {string|Array<string>} text - The String or String Array of text to process; must not be undefined.\n * @param {Array<string>} [subs] - The substitutions to perform; must be an Array or undefined.\n * @returns {string|Array<string>} - a String or String Array to match the type of the text argument with substitutions applied.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.applySubstitutions = function (text, subs) {\n  return this.$apply_subs(text, subs)\n}\n\n/**\n * @returns {string} - the String name of this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getNodeName = function () {\n  return this.node_name\n}\n\n/**\n * @returns {Object} - the JSON of attributes for this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getAttributes = function () {\n  return fromHash(this.attributes)\n}\n\n/**\n * Get the value of the specified attribute.\n * If the attribute is not found on this node, fallback_name is set, and this node is not the Document node, get the value of the specified attribute from the Document node.\n *\n * Look for the specified attribute in the attributes on this node and return the value of the attribute, if found.\n * Otherwise, if fallback_name is set (default: same as name) and this node is not the Document node, look for that attribute on the Document node and return its value, if found.\n * Otherwise, return the default value (default: undefined).\n *\n * @param {string} name - The String of the attribute to resolve.\n * @param {*} [defaultValue] - The {Object} value to return if the attribute is not found (default: undefined).\n * @param {string} [fallbackName] - The String of the attribute to resolve on the Document if the attribute is not found on this node (default: same as name).\n *\n * @returns {*} - the {Object} value (typically a String) of the attribute or defaultValue if the attribute is not found.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getAttribute = function (name, defaultValue, fallbackName) {\n  var value = this.$attr(name, defaultValue, fallbackName)\n  return value === Opal.nil ? undefined : value\n}\n\n/**\n * Check whether the specified attribute is present on this node.\n *\n * @param {string} name - The String of the attribute to resolve.\n * @returns {boolean} - true if the attribute is present, otherwise false\n * @memberof AbstractNode\n */\nAbstractNode.prototype.hasAttribute = function (name) {\n  return name in this.attributes.$$smap\n}\n\n/**\n * Check if the specified attribute is defined using the same logic as {AbstractNode#getAttribute}, optionally performing acomparison with the expected value if specified.\n *\n * Look for the specified attribute in the attributes on this node.\n * If not found, fallback_name is specified (default: same as name), and this node is not the Document node, look for that attribute on the Document node.\n * In either case, if the attribute is found, and the comparison value is truthy, return whether the two values match.\n * Otherwise, return whether the attribute was found.\n *\n * @param {string} name - The String name of the attribute to resolve.\n * @param {*} [expectedValue] - The expected Object value of the attribute (default: undefined).\n * @param {string} fallbackName - The String of the attribute to resolve on the Document if the attribute is not found on this node (default: same as name).\n *\n * @returns {boolean} - a Boolean indicating whether the attribute exists and, if a truthy comparison value is specified, whether the value of the attribute matches the comparison value.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isAttribute = function (name, expectedValue, fallbackName) {\n  var result = this['$attr?'](name, expectedValue, fallbackName)\n  return result === Opal.nil ? false : result\n}\n\n/**\n * Assign the value to the attribute name for the current node.\n *\n * @param {string} name - The String attribute name to assign\n * @param {*} value - The Object value to assign to the attribute (default: '')\n * @param {boolean} overwrite - A Boolean indicating whether to assign the attribute if currently present in the attributes JSON (default: true)\n *\n * @returns {boolean} - a Boolean indicating whether the assignment was performed\n * @memberof AbstractNode\n */\nAbstractNode.prototype.setAttribute = function (name, value, overwrite) {\n  if (typeof overwrite === 'undefined') overwrite = true\n  return this.$set_attr(name, value, overwrite)\n}\n\n/**\n * Remove the attribute from the current node.\n * @param {string} name - The String attribute name to remove\n * @returns {string} - the previous {string} value, or undefined if the attribute was not present.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.removeAttribute = function (name) {\n  var value = this.$remove_attr(name)\n  return value === Opal.nil ? undefined : value\n}\n\n/**\n * Get the {@link Document} to which this node belongs.\n *\n * @returns {Document} - the {@link Document} object to which this node belongs.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getDocument = function () {\n  return this.document\n}\n\n/**\n * Get the {@link AbstractNode} to which this node is attached.\n *\n * @memberof AbstractNode\n * @returns {AbstractNode} - the {@link AbstractNode} object to which this node is attached,\n * or undefined if this node has no parent.\n */\nAbstractNode.prototype.getParent = function () {\n  var parent = this.parent\n  return parent === Opal.nil ? undefined : parent\n}\n\n/**\n * @returns {boolean} - true if this {AbstractNode} is an instance of {Inline}\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isInline = function () {\n  return this['$inline?']()\n}\n\n/**\n * @returns {boolean} - true if this {AbstractNode} is an instance of {Block}\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isBlock = function () {\n  return this['$block?']()\n}\n\n/**\n * Checks if the role attribute is set on this node and, if an expected value is given, whether the space-separated role matches that value.\n *\n * @param {string} expectedValue - The expected String value of the role (optional, default: undefined)\n *\n * @returns {boolean} - a Boolean indicating whether the role attribute is set on this node and, if an expected value is given, whether the space-separated role matches that value.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isRole = function (expectedValue) {\n  return this['$role?'](expectedValue)\n}\n\n/**\n * Retrieves the space-separated String role for this node.\n *\n * @returns {string} - the role as a space-separated String.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getRole = function () {\n  return this.$role()\n}\n\n/**\n * Checks if the specified role is present in the list of roles for this node.\n *\n * @param {string} name - The String name of the role to find.\n *\n * @returns {boolean} - a Boolean indicating whether this node has the specified role.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.hasRole = function (name) {\n  return this['$has_role?'](name)\n}\n\n/**\n * Retrieves the String role names for this node as an Array.\n *\n * @returns {Array<string>} - the role names as a String {Array}, which is empty if the role attribute is absent on this node.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getRoles = function () {\n  return this.$roles()\n}\n\n/**\n * Adds the given role directly to this node.\n *\n * @param {string} name - The name of the role to add\n *\n * @returns {boolean} - a Boolean indicating whether the role was added.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.addRole = function (name) {\n  return this.$add_role(name)\n}\n\n/**\n * Public: Removes the given role directly from this node.\n *\n * @param {string} name - The name of the role to remove\n *\n * @returns {boolean} - a Boolean indicating whether the role was removed.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.removeRole = function (name) {\n  return this.$remove_role(name)\n}\n\n/**\n * A convenience method that checks if the reftext attribute is defined.\n * @returns {boolean} - A Boolean indicating whether the reftext attribute is defined\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isReftext = function () {\n  return this['$reftext?']()\n}\n\n/**\n * A convenience method that returns the value of the reftext attribute with substitutions applied.\n * @returns {string|undefined} - the value of the reftext attribute with substitutions applied.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getReftext = function () {\n  var reftext = this.$reftext()\n  return reftext === Opal.nil ? undefined : reftext\n}\n\n/**\n * @returns {string} - Get the context name for this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getContext = function () {\n  var context = this.context\n  // Automatically convert Opal pseudo-symbol to String\n  return typeof context === 'string' ? context : context.toString()\n}\n\n/**\n * @returns {string} - the String id of this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getId = function () {\n  var id = this.id\n  return id === Opal.nil ? undefined : id\n}\n\n/**\n * @param {string} id - the String id of this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.setId = function (id) {\n  this.id = id\n}\n\n/**\n * A convenience method to check if the specified option attribute is enabled on the current node.\n * Check if the option is enabled. This method simply checks to see if the <name>-option attribute is defined on the current node.\n *\n * @param {string} name - the String name of the option\n *\n * @return {boolean} - a Boolean indicating whether the option has been specified\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isOption = function (name) {\n  return this['$option?'](name)\n}\n\n/**\n * Set the specified option on this node.\n * This method sets the specified option on this node by setting the <name>-option attribute.\n *\n * @param {string} name - the String name of the option\n *\n * @memberof AbstractNode\n */\nAbstractNode.prototype.setOption = function (name) {\n  return this.$set_option(name)\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getIconUri = function (name) {\n  return this.$icon_uri(name)\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getMediaUri = function (target, assetDirKey) {\n  return this.$media_uri(target, assetDirKey)\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getImageUri = function (targetImage, assetDirKey) {\n  return this.$image_uri(targetImage, assetDirKey)\n}\n\n/**\n * Get the {Converter} instance being used to convert the current {Document}.\n * @returns {Object}\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getConverter = function () {\n  return this.$converter()\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.readContents = function (target, options) {\n  return this.$read_contents(target, toHash(options))\n}\n\n/**\n * Read the contents of the file at the specified path.\n * This method assumes that the path is safe to read.\n * It checks that the file is readable before attempting to read it.\n *\n * @param path - the {string} path from which to read the contents\n * @param {Object} options - a JSON {Object} of options to control processing (default: {})\n * @param {boolean} options.warn_on_failure - a {boolean} that controls whether a warning is issued if the file cannot be read (default: false)\n * @param {boolean} options.normalize - a {boolean} that controls whether the lines are normalized and coerced to UTF-8 (default: false)\n *\n * @returns {string} - the String content of the file at the specified path, or undefined if the file does not exist.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.readAsset = function (path, options) {\n  var result = this.$read_asset(path, toHash(options))\n  return result === Opal.nil ? undefined : result\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.normalizeWebPath = function (target, start, preserveTargetUri) {\n  return this.$normalize_web_path(target, start, preserveTargetUri)\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.normalizeSystemPath = function (target, start, jail, options) {\n  return this.$normalize_system_path(target, start, jail, toHash(options))\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.normalizeAssetPath = function (assetRef, assetName, autoCorrect) {\n  return this.$normalize_asset_path(assetRef, assetName, autoCorrect)\n}\n\n// Document API\n\n/**\n * The {@link Document} class represents a parsed AsciiDoc document.\n *\n * Document is the root node of a parsed AsciiDoc document.<br/>\n * It provides an abstract syntax tree (AST) that represents the structure of the AsciiDoc document\n * from which the Document object was parsed.\n *\n * Although the constructor can be used to create an empty document object,\n * more commonly, you'll load the document object from AsciiDoc source\n * using the primary API methods on {@link Asciidoctor}.\n * When using one of these APIs, you almost always want to set the safe mode to 'safe' (or 'unsafe')\n * to enable all of Asciidoctor's features.\n *\n * <pre>\n *   var doc = Asciidoctor.load('= Hello, AsciiDoc!', { 'safe': 'safe' })\n *   // => Asciidoctor::Document { doctype: \"article\", doctitle: \"Hello, AsciiDoc!\", blocks: 0 }\n * </pre>\n *\n * Instances of this class can be used to extract information from the document or alter its structure.\n * As such, the Document object is most often used in extensions and by integrations.\n *\n * The most basic usage of the Document object is to retrieve the document's title.\n *\n * <pre>\n *  var source = '= Document Title'\n *  var doc = asciidoctor.load(source, { 'safe': 'safe' })\n *  console.log(doc.getTitle()) // 'Document Title'\n * </pre>\n *\n * You can also use the Document object to access document attributes defined in the header, such as the author and doctype.\n * @namespace\n * @extends AbstractBlock\n */\nvar Document = Opal.Asciidoctor.Document\n\n/**\n * Returns a JSON {Object} of references captured by the processor.\n *\n * @returns {Object} - a JSON {Object} of {AbstractNode} in the document.\n * @memberof Document\n */\nDocument.prototype.getRefs = function () {\n  return fromHash(this.catalog.$$smap.refs)\n}\n\n/**\n * Returns an {Array} of {Document/ImageReference} captured by the processor.\n *\n * @returns {Array<ImageReference>} - an {Array} of {Document/ImageReference} in the document.\n * Will return an empty array if the option \"catalog_assets: true\" was not defined on the processor.\n * @memberof Document\n */\nDocument.prototype.getImages = function () {\n  return this.catalog.$$smap.images\n}\n\n/**\n * Returns an {Array} of links captured by the processor.\n *\n * @returns {Array<string>} - an {Array} of links in the document.\n * Will return an empty array if:\n * - the function was called before the document was converted\n * - the option \"catalog_assets: true\" was not defined on the processor\n * @memberof Document\n */\nDocument.prototype.getLinks = function () {\n  return this.catalog.$$smap.links\n}\n\n/**\n * @returns {boolean} - true if the document has footnotes otherwise false\n * @memberof Document\n */\nDocument.prototype.hasFootnotes = function () {\n  return this['$footnotes?']()\n}\n\n/**\n * Returns an {Array} of {Document/Footnote} captured by the processor.\n *\n * @returns {Array<Footnote>} - an {Array} of {Document/Footnote} in the document.\n * Will return an empty array if the function was called before the document was converted.\n * @memberof Document\n */\nDocument.prototype.getFootnotes = function () {\n  return this.$footnotes()\n}\n\n/**\n * Returns the level-0 {Section} (i.e. the document title).\n * Only stores the title, not the header attributes.\n *\n * @returns {string} - the level-0 {Section}.\n * @memberof Document\n */\nDocument.prototype.getHeader = function () {\n  return this.header\n}\n\n/**\n * @memberof Document\n */\nDocument.prototype.setAttribute = function (name, value) {\n  return this.$set_attribute(name, value)\n}\n\n/**\n\n * @memberof Document\n */\nDocument.prototype.removeAttribute = function (name) {\n  this.attributes.$delete(name)\n  this.attribute_overrides.$delete(name)\n}\n\n/**\n * Convert the AsciiDoc document using the templates loaded by the Converter.\n * If a \"template_dir\" is not specified, or a template is missing, the converter will fall back to using the appropriate built-in template.\n *\n * @param {Object} [options] - a JSON of options to control processing (default: {})\n *\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.convert = function (options) {\n  var result = this.$convert(toHash(options))\n  return result === Opal.nil ? '' : result\n}\n\n/**\n * Write the output to the specified file.\n *\n * If the converter responds to \"write\", delegate the work of writing the file to that method.\n * Otherwise, write the output the specified file.\n *\n * @param {string} output\n * @param {string} target\n *\n * @memberof Document\n */\nDocument.prototype.write = function (output, target) {\n  return this.$write(output, target)\n}\n\n/**\n * @returns {string} - the full name of the author as a String\n * @memberof Document\n */\nDocument.prototype.getAuthor = function () {\n  return this.$author()\n}\n\n/**\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getSource = function () {\n  return this.$source()\n}\n\n/**\n * @returns {Array<string>}\n * @memberof Document\n */\nDocument.prototype.getSourceLines = function () {\n  return this.$source_lines()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.isNested = function () {\n  return this['$nested?']()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.isEmbedded = function () {\n  return this['$embedded?']()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.hasExtensions = function () {\n  return this['$extensions?']()\n}\n\n/**\n * Get the value of the doctype attribute for this document.\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getDoctype = function () {\n  return this.doctype\n}\n\n/**\n * Get the value of the backend attribute for this document.\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getBackend = function () {\n  return this.backend\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.isBasebackend = function (base) {\n  return this['$basebackend?'](base)\n}\n\n/**\n * Get the title explicitly defined in the document attributes.\n * @returns {string}\n * @see {@link AbstractNode#getAttributes}\n * @memberof Document\n */\nDocument.prototype.getTitle = function () {\n  var title = this.$title()\n  return title === Opal.nil ? undefined : title\n}\n\n/**\n * Set the title on the document header\n *\n * Set the title of the document header to the specified value.\n * If the header does not exist, it is first created.\n *\n * @param {string} title - the String title to assign as the title of the document header\n *\n * @returns {string} - the new String title assigned to the document header\n * @memberof Document\n */\nDocument.prototype.setTitle = function (title) {\n  return this['$title='](title)\n}\n\n/**\n * @returns {Document/Title} - a {@link Document/Title}\n * @memberof Document\n */\nDocument.prototype.getDocumentTitle = function (options) {\n  var doctitle = this.$doctitle(toHash(options))\n  return doctitle === Opal.nil ? undefined : doctitle\n}\n\n/**\n * @see {@link Document#getDocumentTitle}\n * @memberof Document\n */\nDocument.prototype.getDoctitle = Document.prototype.getDocumentTitle\n\n/**\n * Get the document catalog JSON object.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getCatalog = function () {\n  return fromHash(this.catalog)\n}\n\n/**\n *\n * @returns {Object}\n * @see Document#getCatalog\n * @memberof Document\n */\nDocument.prototype.getReferences = Document.prototype.getCatalog\n\n/**\n * Get the document revision date from document header (document attribute <code>revdate</code>).\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getRevisionDate = function () {\n  return this.getAttribute('revdate')\n}\n\n/**\n * @see Document#getRevisionDate\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getRevdate = function () {\n  return this.getRevisionDate()\n}\n\n/**\n * Get the document revision number from document header (document attribute <code>revnumber</code>).\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getRevisionNumber = function () {\n  return this.getAttribute('revnumber')\n}\n\n/**\n * Get the document revision remark from document header (document attribute <code>revremark</code>).\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getRevisionRemark = function () {\n  return this.getAttribute('revremark')\n}\n\n/**\n *  Assign a value to the specified attribute in the document header.\n *\n *  The assignment will be visible when the header attributes are restored,\n *  typically between processor phases (e.g., between parse and convert).\n *\n * @param {string} name - The {string} attribute name to assign\n * @param {Object} value - The {Object} value to assign to the attribute (default: '')\n * @param {boolean} overwrite - A {boolean} indicating whether to assign the attribute\n * if already present in the attributes Hash (default: true)\n *\n * @returns {boolean} - true if the assignment was performed otherwise false\n * @memberof Document\n */\nDocument.prototype.setHeaderAttribute = function (name, value, overwrite) {\n  if (typeof overwrite === 'undefined') overwrite = true\n  if (typeof value === 'undefined') value = ''\n  return this.$set_header_attribute(name, value, overwrite)\n}\n\n/**\n * Convenience method to retrieve the authors of this document as an {Array} of {Document/Author} objects.\n *\n * This method is backed by the author-related attributes on the document.\n *\n * @returns {Array<Author>} - an {Array} of {Document/Author} objects.\n * @memberof Document\n */\nDocument.prototype.getAuthors = function () {\n  return this.$authors()\n}\n\n// Document.Footnote API\n\n/**\n * @namespace\n * @module Document/Footnote\n */\nvar Footnote = Document.Footnote\n\n/**\n * @returns {number} - the footnote's index\n * @memberof Document/Footnote\n */\nFootnote.prototype.getIndex = function () {\n  var index = this.$$data.index\n  return index === Opal.nil ? undefined : index\n}\n\n/**\n * @returns {number} - the footnote's id\n * @memberof Document/Footnote\n */\nFootnote.prototype.getId = function () {\n  var id = this.$$data.id\n  return id === Opal.nil ? undefined : id\n}\n\n/**\n * @returns {string} - the footnote's text\n * @memberof Document/Footnote\n */\nFootnote.prototype.getText = function () {\n  var text = this.$$data.text\n  return text === Opal.nil ? undefined : text\n}\n\n// Document.ImageReference API\n\n/**\n * @class\n * @module Document/ImageReference\n */\nvar ImageReference = Document.ImageReference\n\n/**\n * @returns {string} - the image's target\n * @memberof Document/ImageReference\n */\nImageReference.prototype.getTarget = function () {\n  return this.$$data.target\n}\n\n/**\n * @returns {string} - the image's directory (imagesdir attribute)\n * @memberof Document/ImageReference\n */\nImageReference.prototype.getImagesDirectory = function () {\n  var value = this.$$data.imagesdir\n  return value === Opal.nil ? undefined : value\n}\n\n// Document.Author API\n\n/**\n * The Author class represents information about an author extracted from document attributes.\n * @namespace\n * @module Document/Author\n */\nvar Author = Document.Author\n\n/**\n * @returns {string} - the author's full name\n * @memberof Document/Author\n */\nAuthor.prototype.getName = function () {\n  var name = this.$$data.name\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @returns {string} - the author's first name\n * @memberof Document/Author\n */\nAuthor.prototype.getFirstName = function () {\n  var firstName = this.$$data.firstname\n  return firstName === Opal.nil ? undefined : firstName\n}\n\n/**\n * @returns {string} - the author's middle name (or undefined if the author has no middle name)\n * @memberof Document/Author\n */\nAuthor.prototype.getMiddleName = function () {\n  var middleName = this.$$data.middlename\n  return middleName === Opal.nil ? undefined : middleName\n}\n\n/**\n * @returns {string} - the author's last name\n * @memberof Document/Author\n */\nAuthor.prototype.getLastName = function () {\n  var lastName = this.$$data.lastname\n  return lastName === Opal.nil ? undefined : lastName\n}\n\n/**\n * @returns {string} - the author's initials (by default based on the author's name)\n * @memberof Document/Author\n */\nAuthor.prototype.getInitials = function () {\n  var initials = this.$$data.initials\n  return initials === Opal.nil ? undefined : initials\n}\n\n/**\n * @returns {string} - the author's email\n * @memberof Document/Author\n */\nAuthor.prototype.getEmail = function () {\n  var email = this.$$data.email\n  return email === Opal.nil ? undefined : email\n}\n\n// private constructor\nDocument.RevisionInfo = function (date, number, remark) {\n  this.date = date\n  this.number = number\n  this.remark = remark\n}\n\n/**\n * @class\n * @namespace\n * @module Document/RevisionInfo\n */\nvar RevisionInfo = Document.RevisionInfo\n\n/**\n * Get the document revision date from document header (document attribute <code>revdate</code>).\n * @returns {string}\n * @memberof Document/RevisionInfo\n */\nRevisionInfo.prototype.getDate = function () {\n  return this.date\n}\n\n/**\n * Get the document revision number from document header (document attribute <code>revnumber</code>).\n * @returns {string}\n * @memberof Document/RevisionInfo\n */\nRevisionInfo.prototype.getNumber = function () {\n  return this.number\n}\n\n/**\n * Get the document revision remark from document header (document attribute <code>revremark</code>).\n * A short summary of changes in this document revision.\n * @returns {string}\n * @memberof Document/RevisionInfo\n */\nRevisionInfo.prototype.getRemark = function () {\n  return this.remark\n}\n\n/**\n * @returns {boolean} - true if the revision info is empty (ie. not defined), otherwise false\n * @memberof Document/RevisionInfo\n */\nRevisionInfo.prototype.isEmpty = function () {\n  return this.date === undefined && this.number === undefined && this.remark === undefined\n}\n\n// SafeMode API\n\n/**\n * @namespace\n */\nvar SafeMode = Opal.Asciidoctor.SafeMode\n\n/**\n * @param {string} name - the name of the security level\n * @returns {number} - the integer value of the corresponding security level\n */\nSafeMode.getValueForName = function (name) {\n  return this.$value_for_name(name)\n}\n\n/**\n * @param {number} value - the integer value of the security level\n * @returns {string} - the name of the corresponding security level\n */\nSafeMode.getNameForValue = function (value) {\n  var name = this.$name_for_value(value)\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @returns {Array<string>} - the String {Array} of security levels\n */\nSafeMode.getNames = function () {\n  return this.$names()\n}\n\n// Callouts API\n\n/**\n * Maintains a catalog of callouts and their associations.\n * @namespace\n */\nvar Callouts = Opal.Asciidoctor.Callouts\n\n/**\n * Create a new Callouts.\n * @returns {Callouts} - a new Callouts\n * @memberof Callouts\n */\nCallouts.create = function () {\n  return this.$new()\n}\n\n/**\n * Register a new callout for the given list item ordinal.\n * Generates a unique id for this callout based on the index of the next callout list in the document and the index of this callout since the end of the last callout list.\n *\n * @param {number} ordinal - the Integer ordinal (1-based) of the list item to which this callout is to be associated\n * @returns {string} - The unique String id of this callout\n * @example\n *  callouts = asciidoctor.Callouts.create()\n *  callouts.register(1)\n *  // => \"CO1-1\"\n *  callouts.nextList()\n *  callouts.register(2)\n *  // => \"CO2-1\"\n * @memberof Callouts\n */\n\nCallouts.prototype.register = function (ordinal) {\n  return this.$register(ordinal)\n}\n/**\n * Get the next callout index in the document.\n *\n * Reads the next callout index in the document and advances the pointer.\n * This method is used during conversion to retrieve the unique id of the callout that was generated during parsing.\n *\n * @returns {string} - The unique String id of the next callout in the document\n * @memberof Callouts\n */\nCallouts.prototype.readNextId = function () {\n  return this.$read_next_id()\n}\n\n/**\n * et a space-separated list of callout ids for the specified list item.\n * @param {number} ordinal - the Integer ordinal (1-based) of the list item for which to retrieve the callouts\n * @returns {string} - a space-separated String of callout ids associated with the specified list item\n * @memberof Callouts\n */\nCallouts.prototype.getCalloutIds = function (ordinal) {\n  return this.$callout_ids(ordinal)\n}\n\n/**\n * @memberof Callouts\n */\nCallouts.prototype.getLists = function () {\n  var lists = this.lists\n  if (lists && lists.length > 0) {\n    for (var i = 0; i < lists.length; i++) {\n      var list = lists[i]\n      if (list && list.length > 0) {\n        for (var j = 0; j < list.length; j++) {\n          if (typeof list[j] === 'object' && '$$smap' in list[j]) {\n            list[j] = fromHash(list[j])\n          }\n        }\n      }\n    }\n  }\n  return lists\n}\n\n/**\n * @memberof Callouts\n */\nCallouts.prototype.getListIndex = function () {\n  return this.list_index\n}\n\n/**\n * The current list for which callouts are being collected.\n * @returns {Array} - The Array of callouts at the position of the list index pointer\n * @memberof Callouts\n */\nCallouts.prototype.getCurrentList = function () {\n  const currentList = this.$current_list()\n  if (currentList && currentList.length > 0) {\n    for (var i = 0; i < currentList.length; i++) {\n      if (typeof currentList[i] === 'object' && '$$smap' in currentList[i]) {\n        currentList[i] = fromHash(currentList[i])\n      }\n    }\n  }\n  return currentList\n}\n\n/**\n * Advance to the next callout list in the document.\n * @memberof Callouts\n */\nCallouts.prototype.nextList = function () {\n  return this.$nextList()\n}\n\n/**\n * Rewind the list index pointer, intended to be used when switching from the parsing to conversion phase.\n * @memberof Callouts\n */\nCallouts.prototype.rewind = function () {\n  return this.$rewind()\n}\n\n/**\n * @returns {Document/RevisionInfo} - a {@link Document/RevisionInfo}\n * @memberof Document\n */\nDocument.prototype.getRevisionInfo = function () {\n  return new Document.RevisionInfo(this.getRevisionDate(), this.getRevisionNumber(), this.getRevisionRemark())\n}\n\n/**\n * @returns {boolean} - true if the document contains revision info, otherwise false\n * @memberof Document\n */\nDocument.prototype.hasRevisionInfo = function () {\n  var revisionInfo = this.getRevisionInfo()\n  return !revisionInfo.isEmpty()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getNotitle = function () {\n  return this.$notitle()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getNoheader = function () {\n  return this.$noheader()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getNofooter = function () {\n  return this.$nofooter()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.hasHeader = function () {\n  return this['$header?']()\n}\n\n/**\n * Delete the specified attribute from the document if the name is not locked.\n * If the attribute is locked, false is returned.\n * Otherwise, the attribute is deleted.\n *\n * @param {string} name - the String attribute name\n *\n * @returns {boolean} - true if the attribute was deleted, false if it was not because it's locked\n * @memberof Document\n */\nDocument.prototype.deleteAttribute = function (name) {\n  return this.$delete_attribute(name)\n}\n\n/**\n * Determine if the attribute has been locked by being assigned in document options.\n *\n * @param {string} key - The attribute key to check\n *\n * @returns {boolean} - true if the attribute is locked, false otherwise\n * @memberof Document\n */\nDocument.prototype.isAttributeLocked = function (key) {\n  return this['$attribute_locked?'](key)\n}\n\n/**\n * Parse the AsciiDoc source stored in the {Reader} into an abstract syntax tree.\n *\n * If the data parameter is not nil, create a new {PreprocessorReader} and assigned it to the reader property of this object.\n * Otherwise, continue with the reader that was created when the {Document} was instantiated.\n * Pass the reader to {Parser.parse} to parse the source data into an abstract syntax tree.\n *\n * If parsing has already been performed, this method returns without performing any processing.\n *\n * @param {string|Array<string>} [data] - The optional replacement AsciiDoc source data as a String or String Array. (default: undefined)\n *\n * @returns {Document} - this {Document}\n * @memberof Document\n */\nDocument.prototype.parse = function (data) {\n  return this.$parse(data)\n}\n\n/**\n * @memberof Document\n */\nDocument.prototype.getDocinfo = function (docinfoLocation, suffix) {\n  return this.$docinfo(docinfoLocation, suffix)\n}\n\n/**\n * @param {string} [docinfoLocation] - A {string} for checking docinfo extensions at a given location (head or footer) (default: head)\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.hasDocinfoProcessors = function (docinfoLocation) {\n  return this['$docinfo_processors?'](docinfoLocation)\n}\n\n/**\n * Increment the specified counter and store it in the block's attributes.\n *\n * @param {string} counterName - the String name of the counter attribute\n * @param {Block} block - the {Block} on which to save the counter\n *\n * @returns {number} - the next number in the sequence for the specified counter\n * @memberof Document\n */\nDocument.prototype.incrementAndStoreCounter = function (counterName, block) {\n  return this.$increment_and_store_counter(counterName, block)\n}\n\n/**\n * @deprecated Please use {Document#incrementAndStoreCounter} method.\n * @memberof Document\n */\nDocument.prototype.counterIncrement = Document.prototype.incrementAndStoreCounter\n\n/**\n * Get the named counter and take the next number in the sequence.\n *\n * @param {string} name - the String name of the counter\n * @param {string|number} seed - the initial value as a String or Integer\n *\n * @returns {number} the next number in the sequence for the specified counter\n * @memberof Document\n */\nDocument.prototype.counter = function (name, seed) {\n  return this.$counter(name, seed)\n}\n\n/**\n * A read-only integer value indicating the level of security that should be enforced while processing this document.\n * The value must be set in the Document constructor using the \"safe\" option.\n *\n * A value of 0 (UNSAFE) disables any of the security features enforced by Asciidoctor.\n *\n * A value of 1 (SAFE) closely parallels safe mode in AsciiDoc.\n * In particular, it prevents access to files which reside outside of the parent directory of the source file and disables any macro other than the include directive.\n *\n * A value of 10 (SERVER) disallows the document from setting attributes that would affect the conversion of the document,\n * in addition to all the security features of SafeMode.SAFE.\n * For instance, this level forbids changing the backend or source-highlighter using an attribute defined in the source document header.\n * This is the most fundamental level of security for server deployments (hence the name).\n *\n * A value of 20 (SECURE) disallows the document from attempting to read files from the file system and including the contents of them into the document,\n * in addition to all the security features of SafeMode.SECURE.\n * In particular, it disallows use of the include::[] directive and the embedding of binary content (data uri), stylesheets and JavaScripts referenced by the document.\n * (Asciidoctor and trusted extensions may still be allowed to embed trusted content into the document).\n *\n * Since Asciidoctor is aiming for wide adoption, 20 (SECURE) is the default value and is recommended for server deployments.\n *\n * A value of 100 (PARANOID) is planned to disallow the use of passthrough macros and prevents the document from setting any known attributes,\n * in addition to all the security features of SafeMode.SECURE.\n * Please note that this level is not currently implemented (and therefore not enforced)!\n *\n * @returns {number} - An integer value indicating the level of security\n * @memberof Document\n */\nDocument.prototype.getSafe = function () {\n  return this.safe\n}\n\n/**\n * Get the Boolean AsciiDoc compatibility mode.\n * Enabling this attribute activates the following syntax changes:\n *\n *   * single quotes as constrained emphasis formatting marks\n *   * single backticks parsed as inline literal, formatted as monospace\n *   * single plus parsed as constrained, monospaced inline formatting\n *   * double plus parsed as constrained, monospaced inline formatting\n *\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getCompatMode = function () {\n  return this.compat_mode\n}\n\n/**\n * Get the Boolean flag that indicates whether source map information should be tracked by the parser.\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getSourcemap = function () {\n  var sourcemap = this.sourcemap\n  return sourcemap === Opal.nil ? false : sourcemap\n}\n\n/**\n * Set the Boolean flag that indicates whether source map information should be tracked by the parser.\n * @param {boolean} value\n * @memberof Document\n */\nDocument.prototype.setSourcemap = function (value) {\n  this.sourcemap = value\n}\n\n/**\n * Get the JSON of document counters.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getCounters = function () {\n  return fromHash(this.counters)\n}\n\n/**\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getCallouts = function () {\n  return this.$callouts()\n}\n\n/**\n * Get the String base directory for converting this document.\n *\n * Defaults to directory of the source file.\n * If the source is a string, defaults to the current directory.\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getBaseDir = function () {\n  return this.base_dir\n}\n\n/**\n * Get the JSON of resolved options used to initialize this {Document}.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getOptions = function () {\n  return fromHash(this.options)\n}\n\n/**\n * Get the outfilesuffix defined at the end of the header.\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getOutfilesuffix = function () {\n  return this.outfilesuffix\n}\n\n/**\n * Get a reference to the parent Document of this nested document.\n * @returns {Document|undefined}\n * @memberof Document\n */\nDocument.prototype.getParentDocument = function () {\n  var parentDocument = this.parent_document\n  return parentDocument === Opal.nil ? undefined : parentDocument\n}\n\n/**\n * Get the {Reader} associated with this document.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getReader = function () {\n  return this.reader\n}\n\n/**\n * Get the {Converter} instance being used to convert the current {Document}.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getConverter = function () {\n  return this.converter\n}\n\n/**\n * Get the activated {Extensions.Registry} associated with this document.\n * @returns {Extensions/Registry}\n * @memberof Document\n */\nDocument.prototype.getExtensions = function () {\n  var extensions = this.extensions\n  return extensions === Opal.nil ? undefined : extensions\n}\n\n// Document.Title API\n\n/**\n * A partitioned title (i.e., title & subtitle).\n * @namespace\n * @module Document/Title\n */\nvar Title = Document.Title\n\n/**\n * @returns {string}\n * @memberof Document/Title\n */\nTitle.prototype.getMain = function () {\n  return this.main\n}\n\n/**\n * @returns {string}\n * @memberof Document/Title\n */\nTitle.prototype.getCombined = function () {\n  return this.combined\n}\n\n/**\n * @returns {string}\n * @memberof Document/Title\n */\nTitle.prototype.getSubtitle = function () {\n  var subtitle = this.subtitle\n  return subtitle === Opal.nil ? undefined : subtitle\n}\n\n/**\n * @returns {boolean}\n * @memberof Document/Title\n */\nTitle.prototype.isSanitized = function () {\n  var sanitized = this['$sanitized?']()\n  return sanitized === Opal.nil ? false : sanitized\n}\n\n/**\n * @returns {boolean}\n * @memberof Document/Title\n */\nTitle.prototype.hasSubtitle = function () {\n  return this['$subtitle?']()\n}\n\n// Inline API\n\n/**\n * Methods for managing inline elements in AsciiDoc block.\n * @namespace\n * @extends AbstractNode\n */\nvar Inline = Opal.Asciidoctor.Inline\n\n/**\n * Create a new Inline element.\n * @param {AbstractBlock} parent\n * @param {string} context\n * @param {string|undefined} text\n * @param {Object|undefined} opts\n * @returns {Inline} - a new Inline element\n * @memberof Inline\n */\nInline.create = function (parent, context, text, opts) {\n  return this.$new(parent, context, text, toHash(opts))\n}\n\n/**\n * Get the converted content for this inline node.\n *\n * @returns {string} - the converted String content for this inline node\n * @memberof Inline\n */\nInline.prototype.convert = function () {\n  return this.$convert()\n}\n\n/**\n * Get the converted String text of this Inline node, if applicable.\n *\n * @returns {string|undefined} - the converted String text for this Inline node, or undefined if not applicable for this node.\n * @memberof Inline\n */\nInline.prototype.getText = function () {\n  var text = this.$text()\n  return text === Opal.nil ? undefined : text\n}\n\n/**\n * Get the String sub-type (aka qualifier) of this Inline node.\n *\n * This value is used to distinguish different variations of the same node\n * category, such as different types of anchors.\n *\n * @returns {string} - the string sub-type of this Inline node.\n * @memberof Inline\n */\nInline.prototype.getType = function () {\n  return this.$type()\n}\n\n/**\n * Get the primary String target of this Inline node.\n *\n * @returns {string|undefined} - the string target of this Inline node.\n * @memberof Inline\n */\nInline.prototype.getTarget = function () {\n  var target = this.$target()\n  return target === Opal.nil ? undefined : target\n}\n\n// List API\n\n/**\n * Methods for managing AsciiDoc lists (ordered, unordered and description lists).\n * @namespace\n * @extends AbstractBlock\n */\nvar List = Opal.Asciidoctor.List\n\n/**\n * Checks if the {@link List} contains any child {@link ListItem}.\n *\n * @memberof List\n * @returns {boolean} - whether the {@link List} has child {@link ListItem}.\n */\nList.prototype.hasItems = function () {\n  return this['$items?']()\n}\n\n/**\n * Get the Array of {@link ListItem} nodes for this {@link List}.\n *\n * @returns {Array<ListItem>} - an Array of {@link ListItem} nodes.\n * @memberof List\n */\nList.prototype.getItems = function () {\n  return this.blocks\n}\n\n// ListItem API\n\n/**\n * Methods for managing items for AsciiDoc olists, ulist, and dlists.\n *\n * In a description list (dlist), each item is a tuple that consists of a 2-item Array of ListItem terms and a ListItem description (i.e., [[term, term, ...], desc].\n * If a description is not set, then the second entry in the tuple is nil.\n * @namespace\n * @extends AbstractBlock\n */\nvar ListItem = Opal.Asciidoctor.ListItem\n\n/**\n * Get the converted String text of this {@link ListItem} node.\n *\n * @returns {string} - the converted String text for this {@link ListItem} node.\n * @memberof ListItem\n */\nListItem.prototype.getText = function () {\n  return this.$text()\n}\n\n/**\n * Set the String source text of this {@link ListItem} node.\n *\n * @returns {string} - the new String text assigned to this {@link ListItem}\n * @memberof ListItem\n */\nListItem.prototype.setText = function (text) {\n  return this['$text='](text)\n}\n\n/**\n * A convenience method that checks whether the text of this {@link ListItem} is not blank (i.e. not undefined or empty string).\n *\n * @returns {boolean} - whether the text is not blank\n * @memberof ListItem\n */\nListItem.prototype.hasText = function () {\n  return this['$text?']()\n}\n\n/**\n * Get the {string} used to mark this {@link ListItem}.\n *\n * @returns {string}\n * @memberof ListItem\n */\nListItem.prototype.getMarker = function () {\n  return this.marker\n}\n\n/**\n * Set the {string} used to mark this {@link ListItem}.\n *\n * @param {string} marker - the {string} used to mark this {@link ListItem}\n * @memberof ListItem\n */\nListItem.prototype.setMarker = function (marker) {\n  this.marker = marker\n}\n\n/**\n * Get the {@link List} to which this {@link ListItem} is attached.\n *\n * @returns {List} - the {@link List} object to which this {@link ListItem} is attached,\n * or undefined if this node has no parent.\n * @memberof ListItem\n */\nListItem.prototype.getList = function () {\n  return this.$list()\n}\n\n/**\n * @see {@link ListItem#getList}\n * @memberof ListItem\n */\nListItem.prototype.getParent = ListItem.prototype.getList\n\n// Reader API\n\n/** @namespace */\nvar Reader = Opal.Asciidoctor.Reader\n\n/**\n * Push source onto the front of the reader and switch the context based on the file, document-relative path and line information given.\n *\n * This method is typically used in an IncludeProcessor to add source read from the target specified.\n *\n * @param {string} data\n * @param {string|undefined} file\n * @param {string|undefined} path\n * @param {number} lineno - The line number\n * @param {Object} attributes - a JSON of attributes\n * @returns {Reader} - this {Reader} object.\n * @memberof Reader\n */\nReader.prototype.pushInclude = function (data, file, path, lineno, attributes) {\n  return this.$push_include(data, file, path, lineno, toHash(attributes))\n}\n\n/**\n * Get the current location of the reader's cursor, which encapsulates the file, dir, path, and lineno of the file being read.\n *\n * @returns {Cursor}\n * @memberof Reader\n */\nReader.prototype.getCursor = function () {\n  return this.$cursor()\n}\n\n/**\n * Get the remaining unprocessed lines, without consuming them, as an {Array} of {string}.\n *\n * Lines will not be consumed from the Reader (ie. you will be able to read these lines again).\n *\n * @returns {Array<string>} - the remaining unprocessed lines as an {Array} of {string}.\n * @memberof Reader\n */\nReader.prototype.getLines = function () {\n  return this.$lines()\n}\n\n/**\n * Get the remaining unprocessed lines, without consuming them, as a {string}.\n *\n * Lines will not be consumed from the Reader (ie. you will be able to read these lines again).\n *\n * @returns {string} - the remaining unprocessed lines as a {string} (joined by linefeed characters).\n * @memberof Reader\n */\nReader.prototype.getString = function () {\n  return this.$string()\n}\n\n/**\n * Check whether there are any lines left to read.\n * If a previous call to this method resulted in a value of false, immediately returned the cached value.\n * Otherwise, delegate to peekLine to determine if there is a next line available.\n *\n * @returns {boolean} - true if there are more lines, false if there are not.\n * @memberof Reader\n */\nReader.prototype.hasMoreLines = function () {\n  return this['$has_more_lines?']()\n}\n\n/**\n * Check whether this reader is empty (contains no lines).\n *\n * @returns {boolean} - true if there are no more lines to peek, otherwise false.\n * @memberof Reader\n */\nReader.prototype.isEmpty = function () {\n  return this['$empty?']()\n}\n\n/**\n * Peek at the next line.\n * Processes the line if not already marked as processed, but does not consume it (ie. you will be able to read this line again).\n *\n * This method will probe the reader for more lines.\n * If there is a next line that has not previously been visited, the line is passed to the Reader#processLine method to be initialized.\n * This call gives sub-classes the opportunity to do preprocessing.\n * If the return value of the Reader#processLine is undefined, the data is assumed to be changed and Reader#peekLine is invoked again to perform further processing.\n *\n * If hasMoreLines is called immediately before peekLine, the direct flag is implicitly true (since the line is flagged as visited).\n *\n * @param {boolean} direct - A {boolean} flag to bypasses the check for more lines and immediately returns the first element of the internal lines {Array}. (default: false)\n * @returns {string} - the next line as a {string} if there are lines remaining.\n * @memberof Reader\n */\nReader.prototype.peekLine = function (direct) {\n  direct = direct || false\n  var line = this['$peek_line'](direct)\n  return line === Opal.nil ? undefined : line\n}\n\n/**\n * Consume, preprocess, and return the next line.\n *\n * Line will be consumed from the Reader (ie. you won't be able to read this line again).\n *\n * @returns {string} - the next line as a {string} if data is present.\n * @memberof Reader\n */\nReader.prototype.readLine = function () {\n  var line = this['$read_line']()\n  return line === Opal.nil ? undefined : line\n}\n\n/**\n * Consume, preprocess, and return the remaining lines.\n *\n * This method calls Reader#readLine repeatedly until all lines are consumed and returns the lines as an {Array} of {string}.\n * This method differs from Reader#getLines in that it processes each line in turn, hence triggering any preprocessors implemented in sub-classes.\n *\n * Lines will be consumed from the Reader (ie. you won't be able to read these lines again).\n *\n * @returns {Array<string>} - the lines read as an {Array} of {string}.\n * @memberof Reader\n */\nReader.prototype.readLines = function () {\n  return this['$read_lines']()\n}\n\n/**\n * Consume, preprocess, and return the remaining lines joined as a {string}.\n *\n * Delegates to Reader#readLines, then joins the result.\n *\n * Lines will be consumed from the Reader (ie. you won't be able to read these lines again).\n *\n * @returns {string} - the lines read joined as a {string}\n * @memberof Reader\n */\nReader.prototype.read = function () {\n  return this['$read']()\n}\n\n/**\n * Advance to the next line by discarding the line at the front of the stack.\n *\n * @returns {boolean} - a Boolean indicating whether there was a line to discard.\n * @memberof Reader\n */\nReader.prototype.advance = function () {\n  return this['$advance']()\n}\n\n// Cursor API\n\n/** @namespace */\nvar Cursor = Opal.Asciidoctor.Reader.Cursor\n\n/**\n * Get the file associated to the cursor.\n * @returns {string|undefined}\n * @memberof Cursor\n */\nCursor.prototype.getFile = function () {\n  var file = this.file\n  return file === Opal.nil ? undefined : file\n}\n\n/**\n * Get the directory associated to the cursor.\n * @returns {string|undefined} - the directory associated to the cursor\n * @memberof Cursor\n */\nCursor.prototype.getDirectory = function () {\n  var dir = this.dir\n  return dir === Opal.nil ? undefined : dir\n}\n\n/**\n * Get the path associated to the cursor.\n * @returns {string|undefined} - the path associated to the cursor (or '<stdin>')\n * @memberof Cursor\n */\nCursor.prototype.getPath = function () {\n  var path = this.path\n  return path === Opal.nil ? undefined : path\n}\n\n/**\n * Get the line number of the cursor.\n * @returns {number|undefined} - the line number of the cursor\n * @memberof Cursor\n */\nCursor.prototype.getLineNumber = function () {\n  return this.lineno\n}\n\n// Logger API (available in Asciidoctor 1.5.7+)\n\nfunction initializeLoggerFormatterClass (className, functions) {\n  var superclass = Opal.const_get_qualified(Opal.Logger, 'Formatter')\n  return initializeClass(superclass, className, functions, {}, {\n    'call': function (args) {\n      for (var i = 0; i < args.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof args[i] === 'object' && '$$smap' in args[i]) {\n          args[i] = fromHash(args[i])\n        }\n      }\n      return args\n    }\n  })\n}\n\nfunction initializeLoggerClass (className, functions) {\n  var superClass = Opal.const_get_qualified(Opal.Asciidoctor, 'Logger')\n  return initializeClass(superClass, className, functions, {}, {\n    'add': function (args) {\n      if (args.length >= 2 && typeof args[2] === 'object' && '$$smap' in args[2]) {\n        var message = args[2]\n        var messageObject = fromHash(message)\n        messageObject.getText = function () {\n          return this['text']\n        }\n        messageObject.getSourceLocation = function () {\n          return this['source_location']\n        }\n        messageObject['$inspect'] = function () {\n          var sourceLocation = this.getSourceLocation()\n          if (sourceLocation) {\n            return sourceLocation.getPath() + ': line ' + sourceLocation.getLineNumber() + ': ' + this.getText()\n          } else {\n            return this.getText()\n          }\n        }\n        args[2] = messageObject\n      }\n      if (args.length >= 1) {\n        args[1] = args[1] === Opal.nil ? undefined : args[1]\n      }\n      return args\n    }\n  })\n}\n\n/**\n * @namespace\n */\nvar LoggerManager = Opal.const_get_qualified(Opal.Asciidoctor, 'LoggerManager', true)\n\n// Alias\nOpal.Asciidoctor.LoggerManager = LoggerManager\n\n/**\n * @memberof LoggerManager\n */\nLoggerManager.getLogger = function () {\n  return this.$logger()\n}\n\n/**\n * @memberof LoggerManager\n */\nLoggerManager.setLogger = function (logger) {\n  this.logger = logger\n}\n\n/**\n * @memberof LoggerManager\n */\nLoggerManager.newLogger = function (name, functions) {\n  return initializeLoggerClass(name, functions).$new()\n}\n\n/**\n * @memberof LoggerManager\n */\nLoggerManager.newFormatter = function (name, functions) {\n  return initializeLoggerFormatterClass(name, functions).$new()\n}\n\n/**\n * @namespace\n */\nvar LoggerSeverity = Opal.const_get_qualified(Opal.Logger, 'Severity', true)\n\n// Alias\nOpal.Asciidoctor.LoggerSeverity = LoggerSeverity\n\n/**\n * @memberof LoggerSeverity\n */\nLoggerSeverity.get = function (severity) {\n  return LoggerSeverity.$constants()[severity]\n}\n\n/**\n * @namespace\n */\nvar LoggerFormatter = Opal.const_get_qualified(Opal.Logger, 'Formatter', true)\n\n// Alias\nOpal.Asciidoctor.LoggerFormatter = LoggerFormatter\n\n/**\n * @memberof LoggerFormatter\n */\nLoggerFormatter.prototype.call = function (severity, time, programName, message) {\n  return this.$call(LoggerSeverity.get(severity), time, programName, message)\n}\n\n/**\n * @namespace\n */\nvar MemoryLogger = Opal.const_get_qualified(Opal.Asciidoctor, 'MemoryLogger', true)\n\n// Alias\nOpal.Asciidoctor.MemoryLogger = MemoryLogger\n\n/**\n * Create a new MemoryLogger.\n * @returns {MemoryLogger} - a MemoryLogger\n * @memberof MemoryLogger\n */\nMemoryLogger.create = function () {\n  return this.$new()\n}\n\n/**\n * @returns {Array<Object>} - a list of messages\n * @memberof MemoryLogger\n */\nMemoryLogger.prototype.getMessages = function () {\n  var messages = this.messages\n  var result = []\n  for (var i = 0; i < messages.length; i++) {\n    var message = messages[i]\n    var messageObject = fromHash(message)\n    if (typeof messageObject.message === 'string') {\n      messageObject.getText = function () {\n        return this.message\n      }\n    } else {\n      // also convert the message attribute\n      messageObject.message = fromHash(messageObject.message)\n      messageObject.getText = function () {\n        return this.message['text']\n      }\n    }\n    messageObject.getSeverity = function () {\n      return this.severity.toString()\n    }\n    messageObject.getSourceLocation = function () {\n      return this.message['source_location']\n    }\n    result.push(messageObject)\n  }\n  return result\n}\n\nvar Logging = Opal.const_get_qualified(Opal.Asciidoctor, 'Logging', true)\n\nOpal.Asciidoctor.Logging = Logging\n\nLogging.getLogger = function () {\n  return LoggerManager.$logger()\n}\n\nLogging.createLogMessage = function (text, context) {\n  return Logging.prototype.$message_with_context(text, toHash(context))\n}\n\n// alias\n\n/**\n * @memberof Reader\n */\nReader.prototype.getLogger = Logging.getLogger\n/**\n * @memberof Reader\n */\nReader.prototype.createLogMessage = Logging.createLogMessage\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getLogger = Logging.getLogger\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.createLogMessage = Logging.createLogMessage\n\n/**\n * @namespace\n */\nvar Logger = Opal.const_get_qualified(Opal.Asciidoctor, 'Logger', true)\n\n// Alias\nOpal.Asciidoctor.Logger = Logger\n\n/**\n * @returns {number|undefined} - the maximum severity\n * @memberof Logger\n */\nLogger.prototype.getMaxSeverity = function () {\n  var result = this.max_severity\n  return result === Opal.nil ? undefined : result\n}\n/**\n * @returns {LoggerFormatter} - the formatter\n * @memberof Logger\n */\nLogger.prototype.getFormatter = function () {\n  return this.formatter\n}\n/**\n * @param {LoggerFormatter} formatter - the formatter\n * @memberof Logger\n */\nLogger.prototype.setFormatter = function (formatter) {\n  this.formatter = formatter\n}\n/**\n * @returns {number} - the logging severity threshold\n * @memberof Logger\n */\nLogger.prototype.getLevel = function () {\n  return this.level\n}\n/**\n * @param {number} level - the logging severity threshold\n * @memberof Logger\n */\nLogger.prototype.setLevel = function (level) {\n  this.level = level\n}\n/**\n * @returns {string} - the program name\n * @memberof Logger\n */\nLogger.prototype.getProgramName = function () {\n  return this.progname\n}\n/**\n * @param {string} programName - the program name\n * @memberof Logger\n */\nLogger.prototype.setProgramName = function (programName) {\n  this.progname = programName\n}\n\nvar RubyLogger = Opal.const_get_qualified('::', 'Logger')\n\nvar log = function (logger, level, message) {\n  logger['$' + level](message)\n}\nRubyLogger.prototype.add = function (severity, message, programName) {\n  var severityValue = typeof severity === 'string' ? LoggerSeverity[severity.toUpperCase()] : severity\n  this['$add'](severityValue, message, programName)\n}\nRubyLogger.prototype.log = RubyLogger.prototype.add\nRubyLogger.prototype.debug = function (message) {\n  log(this, 'debug', message)\n}\nRubyLogger.prototype.info = function (message) {\n  log(this, 'info', message)\n}\nRubyLogger.prototype.warn = function (message) {\n  log(this, 'warn', message)\n}\nRubyLogger.prototype.error = function (message) {\n  log(this, 'error', message)\n}\nRubyLogger.prototype.fatal = function (message) {\n  log(this, 'fatal', message)\n}\nRubyLogger.prototype.isDebugEnabled = function () {\n  return this['$debug?']()\n}\nRubyLogger.prototype.isInfoEnabled = function () {\n  return this['$info?']()\n}\nRubyLogger.prototype.isWarnEnabled = function () {\n  return this['$warn?']()\n}\nRubyLogger.prototype.isErrorEnabled = function () {\n  return this['$error?']()\n}\nRubyLogger.prototype.isFatalEnabled = function () {\n  return this['$fatal?']()\n}\n\n/**\n * @namespace\n */\nvar NullLogger = Opal.const_get_qualified(Opal.Asciidoctor, 'NullLogger', true)\n\n// Alias\nOpal.Asciidoctor.NullLogger = NullLogger\n\n/**\n * Create a new NullLogger.\n * @returns {NullLogger} - a NullLogger\n * @memberof NullLogger\n */\nNullLogger.create = function () {\n  return this.$new()\n}\n\n/**\n * @returns {number|undefined} - the maximum severity\n * @memberof NullLogger\n */\nNullLogger.prototype.getMaxSeverity = function () {\n  return this.max_severity\n}\n\n// Alias\nOpal.Asciidoctor.StopIteration = Opal.StopIteration\n\n/**\n * @namespace\n */\nvar Timings = Opal.const_get_qualified(Opal.Asciidoctor, 'Timings', true)\n\n// Alias\nOpal.Asciidoctor.Timings = Timings\n\n/**\n * Create a new Timings.\n * @returns {Timings} - a Timings\n * @memberof Timings\n */\nTimings.create = function () {\n  return this.$new()\n}\n\n/**\n * Print a report to the specified output.\n * The report will include:\n * - the time to read and parse source\n * - the time to convert document\n * - the total time (read, parse and convert)\n * @param {RubyLogger|console|Object} [to] - an optional output (by default stdout)\n * @param {string} [subject] - an optional subject (usually the file name)\n * @memberof Timings\n */\nTimings.prototype.printReport = function (to, subject) {\n  var outputFunction\n  if (to) {\n    if (typeof to['$add'] === 'function') {\n      outputFunction = function (message) {\n        to['$add'](1, message)\n      }\n    } else if (typeof to.log === 'function') {\n      outputFunction = to.log\n    } else if (typeof to.write === 'function') {\n      outputFunction = function (message) {\n        to.write(message, 'utf-8')\n      }\n    } else {\n      throw new Error('The output should be a Stream (with a write function), an object with a log function or a Ruby Logger (with a add function)')\n    }\n  } else {\n    outputFunction = function (message) {\n      Opal.gvars.stdout['$write'](message)\n    }\n  }\n  if (subject) {\n    outputFunction('Input file: ' + subject)\n  }\n  outputFunction(' Time to read and parse source: ' + this.$read_parse().toFixed(2))\n  outputFunction(' Time to convert document: ' + this.$convert().toFixed(2))\n  outputFunction(' Total time (read, parse and convert): ' + this.$read_parse_convert().toFixed(2))\n}\n\n/**\n * @namespace\n * @description\n * This API is experimental and subject to change.\n *\n * A pluggable adapter for integrating a syntax (aka code) highlighter into AsciiDoc processing.\n *\n * There are two types of syntax highlighter adapters. The first performs syntax highlighting during the convert phase.\n * This adapter type must define a \"handlesHighlighting\" method that returns true.\n * The companion \"highlight\" method will then be called to handle the \"specialcharacters\" substitution for source blocks.\n *\n * The second assumes syntax highlighting is performed on the client (e.g., when the HTML document is loaded).\n * This adapter type must define a \"hasDocinfo\" method that returns true.\n * The companion \"docinfo\" method will then be called to insert markup into the output document.\n * The docinfo functionality is available to both adapter types.\n *\n * Asciidoctor.js provides several a built-in adapter for highlight.js.\n * Additional adapters can be registered using SyntaxHighlighter.register.\n */\nvar SyntaxHighlighter = Opal.const_get_qualified(Opal.Asciidoctor, 'SyntaxHighlighter', true)\n\n// Alias\nOpal.Asciidoctor.SyntaxHighlighter = SyntaxHighlighter\n\n/**\n * Associates the syntax highlighter class or object with the specified names.\n *\n * @description This API is experimental and subject to change.\n *\n * @param {string|Array} names - A {string} name or an {Array} of {string} names\n * @param functions - A list of functions representing a {SyntaxHighlighter} or a {SyntaxHighlighter} class to instantiate\n * @memberof SyntaxHighlighter\n */\nSyntaxHighlighter.register = function (names, functions) {\n  var name = typeof names === 'string' ? names : names[0]\n  if (typeof functions === 'function') {\n    var classObject = functions\n    var prototype = classObject.prototype\n    var properties = Object.getOwnPropertyNames(prototype)\n    functions = {}\n    for (var propertyIdx in properties) {\n      var propertyName = properties[propertyIdx]\n      functions[propertyName] = prototype[propertyName]\n    }\n  }\n  var scope = initializeClass(SyntaxHighlighterBase, name, functions, {}, {\n    'format': function (args) {\n      if (args.length >= 2 && typeof args[2] === 'object' && '$$smap' in args[2]) {\n        args[2] = fromHash(args[2])\n      }\n      if (args.length >= 1) {\n        args[1] = args[1] === Opal.nil ? undefined : args[1]\n      }\n      return args\n    },\n    'highlight': function (args) {\n      if (args.length >= 3 && typeof args[3] === 'object' && '$$smap' in args[3]) {\n        var opts = args[3]\n        opts = fromHash(opts)\n        for (var key in opts) {\n          var value = opts[key]\n          if (key === 'callouts') {\n            var callouts = fromHashKeys(value)\n            for (var idx in callouts) {\n              var callout = callouts[idx]\n              for (var i = 0; i < callout.length; i++) {\n                var items = callout[i]\n                for (var j = 0; j < items.length; j++) {\n                  items[j] = items[j] === Opal.nil ? undefined : items[j]\n                }\n              }\n            }\n            opts[key] = callouts\n          } else {\n            opts[key] = value === Opal.nil ? undefined : value\n          }\n        }\n        args[3] = opts\n      }\n      if (args.length >= 2) {\n        args[2] = args[2] === Opal.nil ? undefined : args[2]\n      }\n      return args\n    }\n  })\n  for (var functionName in functions) {\n    if (functions.hasOwnProperty(functionName)) {\n      (function (functionName) {\n        var userFunction = functions[functionName]\n        if (functionName === 'handlesHighlighting') {\n          Opal.def(scope, '$highlight?', function () {\n            return userFunction.call()\n          })\n        } else if (functionName === 'hasDocinfo') {\n          Opal.def(scope, '$docinfo?', function (location) {\n            return userFunction.apply(this, [location])\n          })\n        }\n      }(functionName))\n    }\n  }\n  Opal.def(scope, '$name', function () {\n    return name\n  })\n  SyntaxHighlighter['$register'](scope, names)\n  return scope\n}\n\n/**\n * Retrieves the syntax highlighter class or object registered for the specified name.\n *\n * @description This API is experimental and subject to change.\n *\n * @param {string} name - The {string} name of the syntax highlighter to retrieve.\n * @returns {SyntaxHighlighter} - the {SyntaxHighlighter} registered for this name.\n * @memberof SyntaxHighlighter\n */\nSyntaxHighlighter.get = function (name) {\n  var result = SyntaxHighlighter.$for(name)\n  return result === Opal.nil ? undefined : result\n}\n\n/**\n * @deprecated Please use {SyntaxHighlighter#get} method as \"for\" is a reserved keyword.\n */\nSyntaxHighlighter.for = SyntaxHighlighter.get\n\n/**\n * @namespace\n */\nvar SyntaxHighlighterBase = Opal.const_get_qualified(SyntaxHighlighter, 'Base', true)\n\n// Alias\nOpal.Asciidoctor.SyntaxHighlighterBase = SyntaxHighlighterBase\n\n/**\n * Statically register the current class in the registry for the specified names.\n *\n * @description This API is experimental and subject to change.\n *\n * @param {string|Array<string>} names - A {string} name or an {Array} of {string} names\n * @memberof SyntaxHighlighterBase\n */\nSyntaxHighlighterBase.prototype.registerFor = function (names) {\n  SyntaxHighlighter['$register'](this, names)\n}\n\n/* global Opal, fromHash, toHash, initializeClass */\n// Extensions API\n\n/**\n * @private\n */\nvar toBlock = function (block) {\n  // arity is a mandatory field\n  block.$$arity = block.length\n  return block\n}\n\nvar registerExtension = function (registry, type, processor, name) {\n  if (typeof processor === 'object' || processor.$$is_class) {\n    // processor is an instance or a class\n    return registry['$' + type](processor, name)\n  } else {\n    // processor is a function/lambda\n    return Opal.send(registry, type, name && [name], toBlock(processor))\n  }\n}\n\n/**\n * @namespace\n * @description\n * Extensions provide a way to participate in the parsing and converting\n * phases of the AsciiDoc processor or extend the AsciiDoc syntax.\n *\n * The various extensions participate in AsciiDoc processing as follows:\n *\n * 1. After the source lines are normalized, {{@link Extensions/Preprocessor}}s modify or replace\n *    the source lines before parsing begins. {{@link Extensions/IncludeProcessor}}s are used to\n *    process include directives for targets which they claim to handle.\n * 2. The Parser parses the block-level content into an abstract syntax tree.\n *    Custom blocks and block macros are processed by associated {{@link Extensions/BlockProcessor}}s\n *    and {{@link Extensions/BlockMacroProcessor}}s, respectively.\n * 3. {{@link Extensions/TreeProcessor}}s are run on the abstract syntax tree.\n * 4. Conversion of the document begins, at which point inline markup is processed\n *    and converted. Custom inline macros are processed by associated {InlineMacroProcessor}s.\n * 5. {{@link Extensions/Postprocessor}}s modify or replace the converted document.\n * 6. The output is written to the output stream.\n *\n * Extensions may be registered globally using the {Extensions.register} method\n * or added to a custom {Registry} instance and passed as an option to a single\n * Asciidoctor processor.\n *\n * @example\n * asciidoctor.Extensions.register(function () {\n *   this.block(function () {\n *     var self = this;\n *     self.named('shout');\n *     self.onContext('paragraph');\n *     self.process(function (parent, reader) {\n *       var lines = reader.getLines().map(function (l) { return l.toUpperCase(); });\n *       return self.createBlock(parent, 'paragraph', lines);\n *     });\n *   });\n * });\n */\nvar Extensions = Opal.const_get_qualified(Opal.Asciidoctor, 'Extensions')\n\n// Alias\nOpal.Asciidoctor.Extensions = Extensions\n\n/**\n * Create a new {@link Extensions/Registry}.\n * @param {string} name\n * @param {function} block\n * @memberof Extensions\n * @returns {Extensions/Registry} - returns a {@link Extensions/Registry}\n */\nExtensions.create = function (name, block) {\n  if (typeof name === 'function' && typeof block === 'undefined') {\n    return Opal.send(this, 'create', null, toBlock(name))\n  } else if (typeof block === 'function') {\n    return Opal.send(this, 'create', [name], toBlock(block))\n  } else {\n    return this.$create()\n  }\n}\n\n/**\n * @memberof Extensions\n */\nExtensions.register = function (name, block) {\n  if (typeof name === 'function' && typeof block === 'undefined') {\n    return Opal.send(this, 'register', null, toBlock(name))\n  } else {\n    return Opal.send(this, 'register', [name], toBlock(block))\n  }\n}\n\n/**\n * Get statically-registered extension groups.\n * @memberof Extensions\n */\nExtensions.getGroups = function () {\n  return fromHash(this.$groups())\n}\n\n/**\n * Unregister all statically-registered extension groups.\n * @memberof Extensions\n */\nExtensions.unregisterAll = function () {\n  this.$unregister_all()\n}\n\n/**\n * Unregister the specified statically-registered extension groups.\n *\n * NOTE Opal cannot delete an entry from a Hash that is indexed by symbol, so\n * we have to resort to using low-level operations in this method.\n *\n * @memberof Extensions\n */\nExtensions.unregister = function () {\n  var names = Array.prototype.concat.apply([], arguments)\n  var groups = this.$groups()\n  var groupNameIdx = {}\n  for (var i = 0, groupSymbolNames = groups.$$keys; i < groupSymbolNames.length; i++) {\n    var groupSymbolName = groupSymbolNames[i]\n    groupNameIdx[groupSymbolName.toString()] = groupSymbolName\n  }\n  for (var j = 0; j < names.length; j++) {\n    var groupStringName = names[j]\n    if (groupStringName in groupNameIdx) Opal.hash_delete(groups, groupNameIdx[groupStringName])\n  }\n}\n\n/**\n * @namespace\n * @module Extensions/Registry\n */\nvar Registry = Extensions.Registry\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.getGroups = Extensions.getGroups\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.unregisterAll = function () {\n  this.groups = Opal.hash()\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.unregister = Extensions.unregister\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.prefer = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  if (typeof processor === 'object' || processor.$$is_class) {\n    // processor is an instance or a class\n    return this['$prefer'](name, processor)\n  } else {\n    // processor is a function/lambda\n    return Opal.send(this, 'prefer', name && [name], toBlock(processor))\n  }\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.block = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'block', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.inlineMacro = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'inline_macro', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.includeProcessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'include_processor', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.blockMacro = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'block_macro', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.treeProcessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'tree_processor', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.postprocessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'postprocessor', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.preprocessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'preprocessor', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.docinfoProcessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'docinfo_processor', processor, name)\n}\n\n/**\n * Checks whether any {{@link Extensions/Preprocessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/Preprocessor}} extensions are registered.\n */\nRegistry.prototype.hasPreprocessors = function () {\n  return this['$preprocessors?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/TreeProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/TreeProcessor}} extensions are registered.\n */\nRegistry.prototype.hasTreeProcessors = function () {\n  return this['$tree_processors?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/IncludeProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/IncludeProcessor}} extensions are registered.\n */\nRegistry.prototype.hasIncludeProcessors = function () {\n  return this['$include_processors?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/Postprocessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/Postprocessor}} extensions are registered.\n */\nRegistry.prototype.hasPostprocessors = function () {\n  return this['$postprocessors?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/DocinfoProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @param location - A {string} for selecting docinfo extensions at a given location (head or footer) (default: undefined)\n * @returns a {boolean} indicating whether any {{@link Extensions/DocinfoProcessor}} extensions are registered.\n */\nRegistry.prototype.hasDocinfoProcessors = function (location) {\n  return this['$docinfo_processors?'](location)\n}\n\n/**\n * Checks whether any {{@link Extensions/BlockProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/BlockProcessor}} extensions are registered.\n */\nRegistry.prototype.hasBlocks = function () {\n  return this['$blocks?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/BlockMacroProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/BlockMacroProcessor}} extensions are registered.\n */\nRegistry.prototype.hasBlockMacros = function () {\n  return this['$block_macros?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/InlineMacroProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/InlineMacroProcessor}} extensions are registered.\n */\nRegistry.prototype.hasInlineMacros = function () {\n  return this['$inline_macros?']()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/Preprocessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getPreprocessors = function () {\n  return this['$preprocessors']()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/TreeProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getTreeProcessors = function () {\n  return this['$tree_processors']()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/IncludeProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getIncludeProcessors = function () {\n  return this['$include_processors']()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/Postprocessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getPostprocessors = function () {\n  return this['$postprocessors']()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/DocinfoProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @param location - A {string} for selecting docinfo extensions at a given location (head or footer) (default: undefined)\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getDocinfoProcessors = function (location) {\n  return this['$docinfo_processors'](location)\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/BlockProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getBlocks = function () {\n  return this.block_extensions['$values']()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/BlockMacroProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getBlockMacros = function () {\n  return this.block_macro_extensions['$values']()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/InlineMacroProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getInlineMacros = function () {\n  return this['$inline_macros']()\n}\n\n/**\n * Get any {{@link Extensions/InlineMacroProcessor}} extensions are registered to handle the specified inline macro name.\n *\n * @param name - the {string} inline macro name\n * @memberof Extensions/Registry\n * @returns the Extension proxy object for the {{@link Extensions/InlineMacroProcessor}} that matches the inline macro name or undefined if no match is found.\n */\nRegistry.prototype.getInlineMacroFor = function (name) {\n  var result = this['$registered_for_inline_macro?'](name)\n  return result === false ? undefined : result\n}\n\n/**\n * Get any {{@link Extensions/BlockProcessor}} extensions are registered to handle the specified block name appearing on the specified context.\n * @param name - the {string} block name\n * @param context - the context of the block: paragraph, open... (optional)\n * @memberof Extensions/Registry\n * @returns the Extension proxy object for the {{@link Extensions/BlockProcessor}} that matches the block name and context or undefined if no match is found.\n */\nRegistry.prototype.getBlockFor = function (name, context) {\n  if (typeof context === 'undefined') {\n    var ext = this['$find_block_extension'](name)\n    return ext === Opal.nil ? undefined : ext\n  }\n  var result = this['$registered_for_block?'](name, context)\n  return result === false ? undefined : result\n}\n\n/**\n * Get any {{@link Extensions/BlockMacroProcessor}} extensions are registered to handle the specified macro name.\n *\n * @param name - the {string} macro name\n * @memberof Extensions/Registry\n * @returns the Extension proxy object for the {{@link Extensions/BlockMacroProcessor}} that matches the macro name or undefined if no match is found.\n */\nRegistry.prototype.getBlockMacroFor = function (name) {\n  var result = this['$registered_for_block_macro?'](name)\n  return result === false ? undefined : result\n}\n\n/**\n * @namespace\n * @module Extensions/Processor\n */\nvar Processor = Extensions.Processor\n\n/**\n * The extension will be added to the beginning of the list for that extension type. (default is append).\n * @memberof Extensions/Processor\n * @deprecated Please use the <code>prefer</pre> function on the {@link Extensions/Registry},\n * the {@link Extensions/IncludeProcessor},\n * the {@link Extensions/TreeProcessor},\n * the {@link Extensions/Postprocessor},\n * the {@link Extensions/Preprocessor}\n * or the {@link Extensions/DocinfoProcessor}\n */\nProcessor.prototype.prepend = function () {\n  this.$option('position', '>>')\n}\n\n/**\n * @memberof Extensions/Processor\n */\nProcessor.prototype.process = function (block) {\n  var handler = {\n    apply: function (target, thisArg, argumentsList) {\n      for (var i = 0; i < argumentsList.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof argumentsList[i] === 'object' && '$$smap' in argumentsList[i]) {\n          argumentsList[i] = fromHash(argumentsList[i])\n        }\n      }\n      return target.apply(thisArg, argumentsList)\n    }\n  }\n  var blockProxy = new Proxy(block, handler)\n  return Opal.send(this, 'process', null, toBlock(blockProxy))\n}\n\n/**\n * @param {string} name\n * @memberof Extensions/Processor\n */\nProcessor.prototype.named = function (name) {\n  return this.$named(name)\n}\n\n/**\n * Creates a block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string} context\n * @param {string|Array<string>} source\n * @param {Object|undefined} attrs - A JSON of attributes\n * @param {Object|undefined} opts - A JSON of options\n * @return {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createBlock = function (parent, context, source, attrs, opts) {\n  return this.$create_block(parent, context, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a list block node and links it to the specified parent.\n *\n * @param parent - The parent Block (Block, Section, or Document) of this new list block.\n * @param {string} context - The list context (e.g., ulist, olist, colist, dlist)\n * @param {Object} attrs - An object of attributes to set on this list block\n * @returns {List}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createList = function (parent, context, attrs) {\n  return this.$create_list(parent, context, toHash(attrs))\n}\n\n/**\n * Creates a list item node and links it to the specified parent.\n *\n * @param {List} parent - The parent {List} of this new list item block.\n * @param {string} text - The text of the list item.\n * @returns {ListItem}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createListItem = function (parent, text) {\n  return this.$create_list_item(parent, text)\n}\n\n/**\n * Creates an image block node and links it to the specified parent.\n * @param {Block|Section|Document} parent - The parent Block of this new image block.\n * @param {Object} attrs - A JSON of attributes\n * @param {string} attrs.target - the target attribute to set the source of the image.\n * @param {string} attrs.alt - the alt attribute to specify an alternative text for the image.\n * @param {Object} opts - A JSON of options\n * @returns {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createImageBlock = function (parent, attrs, opts) {\n  return this.$create_image_block(parent, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a paragraph block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - a paragraph {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createParagraph = function (parent, source, attrs, opts) {\n  return this.$create_paragraph(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates an open block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - an open {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createOpenBlock = function (parent, source, attrs, opts) {\n  return this.$create_open_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates an example block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - an example {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createExampleBlock = function (parent, source, attrs, opts) {\n  return this.$create_example_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a literal block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - a literal {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createPassBlock = function (parent, source, attrs, opts) {\n  return this.$create_pass_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a listing block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - a listing {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createListingBlock = function (parent, source, attrs, opts) {\n  return this.$create_listing_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a literal block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - a literal {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createLiteralBlock = function (parent, source, attrs, opts) {\n  return this.$create_literal_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates an inline anchor and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string} text - The text\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Inline} - an {Inline} anchor\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createAnchor = function (parent, text, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$create_anchor(parent, text, toHash(opts))\n}\n\n/**\n * Creates an inline pass and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string} text - The text\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Inline} - an {Inline} pass\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createInlinePass = function (parent, text, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$create_inline_pass(parent, text, toHash(opts))\n}\n\n/**\n * Creates an inline node and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block of this new inline node.\n * @param {string} context - The context name\n * @param {string} text - The text\n * @param {Object|undefined} opts - A JSON of options\n * @returns {Inline} - an {Inline} node\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createInline = function (parent, context, text, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$create_inline(parent, context, text, toHash(opts))\n}\n\n/**\n * Parses blocks in the content and attaches the block to the parent.\n * @param {AbstractBlock} parent - the parent block\n * @param {string|Array<string>} content - the content\n * @param {Object|undefined} attrs - an object of attributes\n * @returns {AbstractNode} - The parent node into which the blocks are parsed.\n * @memberof Extensions/Processor\n */\nProcessor.prototype.parseContent = function (parent, content, attrs) {\n  return this.$parse_content(parent, content, attrs)\n}\n\n/**\n *  Parses the attrlist String into a JSON of attributes\n * @param {AbstractBlock} block - the current AbstractBlock or the parent AbstractBlock if there is no current block (used for applying subs)\n * @param {string} attrlist - the list of attributes as a String\n * @param {Object|undefined} opts - an optional JSON of options to control processing:\n * - positional_attributes: an Array of attribute names to map positional arguments to (optional, default: [])\n * - sub_attributes: enables attribute substitution on the attrlist argument (optional, default: false)\n *\n * @returns - a JSON of parsed attributes\n * @memberof Extensions/Processor\n */\nProcessor.prototype.parseAttributes = function (block, attrlist, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return fromHash(this.$parse_attributes(block, attrlist, toHash(opts)))\n}\n\n/**\n * @param {string|Array<string>} value - Name of a positional attribute or an Array of positional attribute names\n * @memberof Extensions/Processor\n */\nProcessor.prototype.positionalAttributes = function (value) {\n  return this.$positional_attrs(value)\n}\n\n/**\n * Specify how to resolve attributes.\n *\n * @param {string|Array<string>|Object|boolean} [value] - A specification to resolve attributes.\n * @memberof Extensions/Processor\n */\nProcessor.prototype.resolveAttributes = function (value) {\n  if (typeof value === 'object' && !Array.isArray(value)) {\n    return this.$resolves_attributes(toHash(value))\n  }\n  if (arguments.length > 1) {\n    return this.$resolves_attributes(Array.prototype.slice.call(arguments))\n  }\n  if (typeof value === 'undefined') {\n    // Convert to nil otherwise an exception is thrown at:\n    // https://github.com/asciidoctor/asciidoctor/blob/0bcb4addc17b307f62975aad203fb556a1bcd8a5/lib/asciidoctor/extensions.rb#L583\n    //\n    // if args.size == 1 && !args[0]\n    //\n    // In the above Ruby code, args[0] is undefined and Opal will try to call the function \"!\" on an undefined object.\n    return this.$resolves_attributes(Opal.nil)\n  }\n  return this.$resolves_attributes(value)\n}\n\n/**\n * @deprecated Please use the <code>resolveAttributes</pre> function on the {@link Extensions/Processor}.\n * @memberof Extensions/Processor\n * @see {Processor#resolveAttributes}\n */\nProcessor.prototype.resolvesAttributes = Processor.prototype.resolveAttributes\n\n/**\n * Get the configuration JSON for this processor instance.\n * @memberof Extensions/Processor\n */\nProcessor.prototype.getConfig = function () {\n  return fromHash(this.config)\n}\n\n/**\n * @memberof Extensions/Processor\n */\nProcessor.prototype.option = function (key, value) {\n  this.$option(key, value)\n}\n\n/**\n * @namespace\n * @module Extensions/BlockProcessor\n */\nvar BlockProcessor = Extensions.BlockProcessor\n\n/**\n * @param {Object} value - a JSON of default values for attributes\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.defaultAttributes = function (value) {\n  this.$default_attributes(toHash(value))\n}\n\n/**\n * @param {string} context - A context name\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.onContext = function (context) {\n  return this.$on_context(context)\n}\n\n/**\n * @param {...string} contexts - A list of context names\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.onContexts = function (contexts) {\n  return this.$on_contexts(Array.prototype.slice.call(arguments))\n}\n\n/**\n * @returns {string}\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.getName = function () {\n  var name = this.name\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @param {string} value\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.parseContentAs = function (value) {\n  this.$parse_content_as(value)\n}\n\n/**\n * @namespace\n * @module Extensions/BlockMacroProcessor\n */\nvar BlockMacroProcessor = Extensions.BlockMacroProcessor\n\n/**\n * @param {Object} value - a JSON of default values for attributes\n * @memberof Extensions/BlockMacroProcessor\n */\nBlockMacroProcessor.prototype.defaultAttributes = function (value) {\n  this.$default_attributes(toHash(value))\n}\n\n/**\n * @returns {string} - the block macro name\n * @memberof Extensions/BlockMacroProcessor\n */\nBlockMacroProcessor.prototype.getName = function () {\n  var name = this.name\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @param {string} value\n * @memberof Extensions/BlockMacroProcessor\n */\nBlockMacroProcessor.prototype.parseContentAs = function (value) {\n  this.$parse_content_as(value)\n}\n\n/**\n * @namespace\n * @module Extensions/InlineMacroProcessor\n */\nvar InlineMacroProcessor = Extensions.InlineMacroProcessor\n\n/**\n * @param {Object} value - a JSON of default values for attributes\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.defaultAttributes = function (value) {\n  this.$default_attributes(toHash(value))\n}\n\n/**\n * @returns {string} - the inline macro name\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.getName = function () {\n  var name = this.name\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @param {string} value\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.parseContentAs = function (value) {\n  this.$parse_content_as(value)\n}\n\n/**\n * @param {string} value\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.matchFormat = function (value) {\n  this.$match_format(value)\n}\n\n/**\n * @param {RegExp} value\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.match = function (value) {\n  this.$match(value)\n}\n\n/**\n * @namespace\n * @module Extensions/IncludeProcessor\n */\nvar IncludeProcessor = Extensions.IncludeProcessor\n\n/**\n * @memberof Extensions/IncludeProcessor\n */\nIncludeProcessor.prototype.handles = function (block) {\n  return Opal.send(this, 'handles?', null, toBlock(block))\n}\n\n/**\n * @memberof Extensions/IncludeProcessor\n */\nIncludeProcessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @namespace\n * @module Extensions/TreeProcessor\n */\nvar TreeProcessor = Extensions.TreeProcessor\n\n/**\n * @memberof Extensions/TreeProcessor\n */\nTreeProcessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @namespace\n * @module Extensions/Postprocessor\n */\nvar Postprocessor = Extensions.Postprocessor\n\n/**\n * @memberof Extensions/Postprocessor\n */\nPostprocessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @namespace\n * @module Extensions/Preprocessor\n */\nvar Preprocessor = Extensions.Preprocessor\n\n/**\n * @memberof Extensions/Preprocessor\n */\nPreprocessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @namespace\n * @module Extensions/DocinfoProcessor\n */\nvar DocinfoProcessor = Extensions.DocinfoProcessor\n\n/**\n * @memberof Extensions/DocinfoProcessor\n */\nDocinfoProcessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @param {string} value - The docinfo location (\"head\", \"header\" or \"footer\")\n * @memberof Extensions/DocinfoProcessor\n */\nDocinfoProcessor.prototype.atLocation = function (value) {\n  this.$at_location(value)\n}\n\nfunction initializeProcessorClass (superclassName, className, functions) {\n  var superClass = Opal.const_get_qualified(Extensions, superclassName)\n  return initializeClass(superClass, className, functions, {\n    'handles?': function () {\n      return true\n    }\n  })\n}\n\n// Postprocessor\n\n/**\n * Create a postprocessor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createPostprocessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('Postprocessor', name, functions)\n}\n\n/**\n * Create and instantiate a postprocessor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newPostprocessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createPostprocessor(name, functions).$new()\n}\n\n// Preprocessor\n\n/**\n * Create a preprocessor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createPreprocessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('Preprocessor', name, functions)\n}\n\n/**\n * Create and instantiate a preprocessor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newPreprocessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createPreprocessor(name, functions).$new()\n}\n\n// Tree Processor\n\n/**\n * Create a tree processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createTreeProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('TreeProcessor', name, functions)\n}\n\n/**\n * Create and instantiate a tree processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newTreeProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createTreeProcessor(name, functions).$new()\n}\n\n// Include Processor\n\n/**\n * Create an include processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createIncludeProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('IncludeProcessor', name, functions)\n}\n\n/**\n * Create and instantiate an include processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newIncludeProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createIncludeProcessor(name, functions).$new()\n}\n\n// Docinfo Processor\n\n/**\n * Create a Docinfo processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createDocinfoProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('DocinfoProcessor', name, functions)\n}\n\n/**\n * Create and instantiate a Docinfo processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newDocinfoProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createDocinfoProcessor(name, functions).$new()\n}\n\n// Block Processor\n\n/**\n * Create a block processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createBlockProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('BlockProcessor', name, functions)\n}\n\n/**\n * Create and instantiate a block processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newBlockProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createBlockProcessor(name, functions).$new()\n}\n\n// Inline Macro Processor\n\n/**\n * Create an inline macro processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createInlineMacroProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('InlineMacroProcessor', name, functions)\n}\n\n/**\n * Create and instantiate an inline macro processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newInlineMacroProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createInlineMacroProcessor(name, functions).$new()\n}\n\n// Block Macro Processor\n\n/**\n * Create a block macro processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createBlockMacroProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('BlockMacroProcessor', name, functions)\n}\n\n/**\n * Create and instantiate a block macro processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newBlockMacroProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createBlockMacroProcessor(name, functions).$new()\n}\n\n// Converter API\n\n/**\n * @namespace\n * @module Converter\n */\nvar Converter = Opal.const_get_qualified(Opal.Asciidoctor, 'Converter')\n\n// Alias\nOpal.Asciidoctor.Converter = Converter\n\n/**\n * Convert the specified node.\n *\n * @param {AbstractNode} node - the AbstractNode to convert\n * @param {string} transform - an optional String transform that hints at\n * which transformation should be applied to this node.\n * @param {Object} opts - a JSON of options that provide additional hints about how to convert the node (default: {})\n * @returns the {Object} result of the conversion, typically a {string}.\n * @memberof Converter\n */\nConverter.prototype.convert = function (node, transform, opts) {\n  return this.$convert(node, transform, toHash(opts))\n}\n\n/**\n * Create an instance of the converter bound to the specified backend.\n *\n * @param {string} backend - look for a converter bound to this keyword.\n * @param {Object} opts - a JSON of options to pass to the converter (default: {})\n * @returns {Converter} - a converter instance for converting nodes in an Asciidoctor AST.\n * @memberof Converter\n */\nConverter.create = function (backend, opts) {\n  return this.$create(backend, toHash(opts))\n}\n\n// Converter Factory API\n\n/**\n * @namespace\n * @module Converter/Factory\n */\nvar ConverterFactory = Opal.Asciidoctor.Converter.Factory\n\nvar ConverterBase = Opal.Asciidoctor.Converter.Base\n\n// Alias\nOpal.Asciidoctor.ConverterFactory = ConverterFactory\n\nvar ConverterBackendTraits = Opal.Asciidoctor.Converter.BackendTraits\n\n// Alias\nOpal.Asciidoctor.ConverterBackendTraits = ConverterBackendTraits\n\n/**\n * Register a custom converter in the global converter factory to handle conversion to the specified backends.\n * If the backend value is an asterisk, the converter is used to handle any backend that does not have an explicit converter.\n *\n * @param converter - The Converter instance to register\n * @param backends {Array} - A {string} {Array} of backend names that this converter should be registered to handle (optional, default: ['*'])\n * @return {*} - Returns nothing\n * @memberof Converter/Factory\n */\nConverterFactory.register = function (converter, backends) {\n  var object\n  var buildBackendTraitsFromInstance = instance => {\n    return Object.assign({},\n      instance.basebackend ? { basebackend: instance.basebackend } : {},\n      instance.outfilesuffix ? { outfilesuffix: instance.outfilesuffix } : {},\n      instance.filetype ? { filetype: instance.filetype } : {},\n      instance.htmlsyntax ? { htmlsyntax: instance.htmlsyntax } : {},\n      instance.supports_templates ? { supports_templates: instance.supports_templates } : {}\n    )\n  }\n  if (typeof converter === 'function') {\n    // Class\n    object = initializeClass(ConverterBase, converter.constructor.name, {\n      'initialize': function (backend, opts) {\n        var self = this\n        var result = new converter(backend, opts) // eslint-disable-line\n        Object.assign(this, result)\n        if (result.backend_traits) {\n          self.backend_traits = toHash(result.backend_traits)\n        } else if (result.backendTraits) {\n          self.backend_traits = toHash(result.backendTraits)\n        } else if (result.basebackend || result.outfilesuffix || result.filetype || result.htmlsyntax || result.supports_templates) {\n          self.$init_backend_traits(toHash(buildBackendTraitsFromInstance(result)))\n        }\n        var propertyNames = Object.getOwnPropertyNames(converter.prototype)\n        for (var i = 0; i < propertyNames.length; i++) {\n          var propertyName = propertyNames[i]\n          if (propertyName !== 'constructor') {\n            self[propertyName] = result[propertyName]\n          }\n        }\n        if (typeof result.$convert === 'undefined' && typeof result.convert === 'function') {\n          self.$convert = result.convert\n        }\n        self.super(backend, opts)\n      }\n    })\n    object.$extend(ConverterBackendTraits)\n  } else if (typeof converter === 'object') {\n    // Instance\n    if (typeof converter.$convert === 'undefined' && typeof converter.convert === 'function') {\n      converter.$convert = converter.convert\n    }\n    if (converter.basebackend || converter.outfilesuffix || converter.filetype || converter.htmlsyntax || converter.supports_templates) {\n      // \"extends\" ConverterBackendTraits\n      converter.backend_traits = toHash(buildBackendTraitsFromInstance(converter))\n      var converterBackendTraitsFunctionNames = [\n        'basebackend',\n        'filetype',\n        'htmlsyntax',\n        'outfilesuffix',\n        'supports_templates',\n        'supports_templates?',\n        'init_backend_traits',\n        'backend_traits'\n      ]\n      for (var functionName of converterBackendTraitsFunctionNames) {\n        converter['$' + functionName] = ConverterBackendTraits.prototype['$' + functionName]\n      }\n      converter.$$meta = ConverterBackendTraits\n    }\n    object = converter\n  }\n  var args = [object].concat(backends)\n  return Converter.$register.apply(Converter, args)\n}\n\n/**\n * Retrieves the singleton instance of the converter factory.\n *\n * @param {boolean} initialize - instantiate the singleton if it has not yet\n * been instantiated. If this value is false and the singleton has not yet been\n * instantiated, this method returns a fresh instance.\n * @returns {Converter/Factory} an instance of the converter factory.\n * @memberof Converter/Factory\n */\nConverterFactory.getDefault = function (initialize) {\n  return this.$default(initialize)\n}\n\n/**\n * Create an instance of the converter bound to the specified backend.\n *\n * @param {string} backend - look for a converter bound to this keyword.\n * @param {Object} opts - a JSON of options to pass to the converter (default: {})\n * @returns {Converter} - a converter instance for converting nodes in an Asciidoctor AST.\n * @memberof Converter/Factory\n */\nConverterFactory.prototype.create = function (backend, opts) {\n  return this.$create(backend, toHash(opts))\n}\n\n// Built-in converter\n\n/**\n * @namespace\n * @module Converter/Html5Converter\n */\nvar Html5Converter = Opal.Asciidoctor.Converter.Html5Converter\n\n// Alias\nOpal.Asciidoctor.Html5Converter = Html5Converter\n\n/**\n * Create a new Html5Converter.\n * @returns {Html5Converter} - a Html5Converter\n * @memberof Converter/Html5Converter\n */\nHtml5Converter.create = function () {\n  return this.$new()\n}\n\n/**\n * Converts an {AbstractNode} using the given transform.\n * This method must be implemented by a concrete converter class.\n *\n * @param {AbstractNode} node - The concrete instance of AbstractNode to convert.\n * @param {string} [transform] - An optional String transform that hints at which transformation should be applied to this node.\n * If a transform is not given, the transform is often derived from the value of the {AbstractNode#getNodeName} property. (optional, default: undefined)\n * @param {Object} [opts]- An optional JSON of options hints about how to convert the node. (optional, default: undefined)\n *\n * @returns {string} - the String result.\n * @memberof Converter/Html5Converter\n */\nHtml5Converter.prototype.convert = function (node, transform, opts) {\n  return this.$convert(node, transform, opts)\n}\n\n\nvar ASCIIDOCTOR_JS_VERSION = '2.1.1';\n\n  /**\n   * Get Asciidoctor.js version number.\n   *\n   * @memberof Asciidoctor\n   * @returns {string} - returns the version number of Asciidoctor.js.\n   */\n  Opal.Asciidoctor.prototype.getVersion = function () {\n    return ASCIIDOCTOR_JS_VERSION\n  }\n  return Opal.Asciidoctor\n}))\n","module.exports = require('@asciidoctor/core')\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}